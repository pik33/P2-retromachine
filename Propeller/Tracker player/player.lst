00000                 | 
00000                 | #line 1 "D:/programowanie/20211226-P2-retromachine/Propeller/Tracker player/player.p2asm"
00000                 | con
00000                 | 	_clkfreq = 319215686
00000                 | dat
00000 000 00 00 00 00 | 	nop
00004 001 01 EC 63 FD | 	cogid	pa
00008 002 02 00 00 FF 
0000c 003 04 EC E7 FC | 	coginit	pa,##$404
00010                 | 	orgh	$10
00010     00 00 00 00 | 	long	0	'reserved
00014     00 00 00 00 | 	long	0 ' clock frequency: will default to 319215798
00018     00 00 00 00 | 	long	0 ' clock mode: will default to $1cb2dfb
0001c     00 00 00 00 
      ...             
003f8     00 00 00 00 
003fc     00 00 00 00 | 	orgh	$400
00400     00 28 06 06 |  _ret_	mov	result1, #0
00404 000             | 	org	0
00404 000             | entry
00404 000 00 F0 0F F2 | 	cmp	ptra, #0 wz
00408 001 0C 02 90 5D |  if_ne	jmp	#spininit
0040c 002 07 F1 03 F6 | 	mov	ptra, objptr
00410 003 04 00 00 FF 
00414 004 68 F0 07 F1 | 	add	ptra, ##2152
00418 005 14 EC 0F FB | 	rdlong	pa, #20 wz
0041c 006 E4 01 90 5D |  if_ne	jmp	#skip_clock_set_
00420 007 00 00 64 FD | 	hubset	#0
00424 008 96 E5 80 FF 
00428 009 00 F0 67 FD | 	hubset	##30092792
0042c 00a 86 01 80 FF 
00430 00b 1F 80 66 FD | 	waitx	##200000
00434 00c 96 E5 00 FF 
00438 00d FB ED 07 F6 | 	mov	pa, ##30092795
0043c 00e 00 EC 63 FD | 	hubset	pa
00440 00f 18 EC 67 FC | 	wrlong	pa, #24
00444 010 6C 83 89 FF 
00448 011 14 6C 6D FC | 	wrlong	##319215798, #20
0044c 012 B4 01 90 FD | 	jmp	#skip_clock_set_
00450 013 00 00 00 00 
      ...             
005fc 07e 00 00 00 00 
00600 07f 00 00 00 00 | 	orgf	128
00604 080             | skip_clock_set_
00604 080 60 08 A0 FD | 	call	#_program
00608 081             | cogexit
00608 081 38 01 80 FF 
0060c 082 1F 00 66 FD | 	waitx	##160000
00610 083 01 5A 62 FD | 	cogid	arg01
00614 084 03 5A 62 FD | 	cogstop	arg01
00618 085             | spininit
00618 085 00 0F 06 FB | 	rdlong	objptr, ptra
0061c 086 04 F0 07 F1 | 	add	ptra, #4
00620 087 00 29 06 FB | 	rdlong	result1, ptra
00624 088 04 F0 07 F1 | 	add	ptra, #4
00628 089 00 5B 06 FB | 	rdlong	arg01, ptra
0062c 08a 04 F0 07 F1 | 	add	ptra, #4
00630 08b 00 5D 06 FB | 	rdlong	arg02, ptra
00634 08c 04 F0 07 F1 | 	add	ptra, #4
00638 08d 00 5F 06 FB | 	rdlong	arg03, ptra
0063c 08e 04 F0 07 F1 | 	add	ptra, #4
00640 08f 00 61 06 FB | 	rdlong	arg04, ptra
00644 090 10 F0 87 F1 | 	sub	ptra, #16
00648 091 2D 28 62 FD | 	call	result1
0064c 092 B8 FF 9F FD | 	jmp	#cogexit
00650 093             | FCACHE_LOAD_
00650 093 2B 3E 61 FD |     pop	fcache_tmpb_
00654 094 F6 3F 01 F1 |     add	fcache_tmpb_, pa
00658 095 2A 3E 61 FD |     push	fcache_tmpb_
0065c 096 F6 3F 81 F1 |     sub	fcache_tmpb_, pa
00660 097 02 EC 47 F0 |     shr	pa, #2
00664 098 00 EC 8F F9 |     altd	pa
00668 099 9E 00 00 F6 |     mov	 0-0, ret_instr_
0066c 09a 01 EC 87 F1 |     sub	pa, #1
00670 09b 28 EC 63 FD |     setq	pa
00674 09c 9F 00 00 FB |     rdlong	$0, fcache_tmpb_
00678 09d 00 00 80 FD |     jmp	#\$0 ' jmp to cache
0067c 09e             | ret_instr_
0067c 09e 2D 00 64 FD |     ret
00680 09f             | fcache_tmpb_
00680 09f 00 00 00 00 |     long 0
00684 0a0             | builtin_bytefill_
00684 0a0 01 5E 56 F0 |         shr	arg03, #1 wc
00688 0a1 2D 5D 42 CC |  if_c   wrbyte	arg02, arg01
0068c 0a2 01 5A 06 C1 |  if_c   add	arg01, #1
00690 0a3 00 5C FE F9 |         movbyts	arg02, #0
00694 0a4             | builtin_wordfill_
00694 0a4 01 5E 56 F0 |         shr	arg03, #1 wc
00698 0a5 2D 5D 52 CC |  if_c   wrword	arg02, arg01
0069c 0a6 02 5A 06 C1 |  if_c   add	arg01, #2
006a0 0a7 2E 5D 2A F9 |         setword	arg02, arg02, #1
006a4 0a8             | builtin_longfill_
006a4 0a8 2D 01 88 FC |         wrfast	#0,arg01
006a8 0a9 00 5E 0E F2 |         cmp	arg03, #0 wz
006ac 0aa 2F 03 D8 5C |  if_nz  rep	#1, arg03
006b0 0ab 17 5C 62 5D |  if_nz  wflong	arg02
006b4 0ac 2D 00 64 FD |         ret
006b8 0ad             | COUNT_
006b8 0ad 00 00 00 00 |     long 0
006bc 0ae             | RETADDR_
006bc 0ae 00 00 00 00 |     long 0
006c0 0af             | fp
006c0 0af 00 00 00 00 |     long 0
006c4 0b0             | pushregs_
006c4 0b0 2B EC 63 FD |     pop  pa
006c8 0b1 2B 5C 61 FD |     pop  RETADDR_
006cc 0b2 04 5A 95 FB |     tjz  COUNT_, #pushregs_done_
006d0 0b3 01 5A 85 F1 |     sub  COUNT_, #1
006d4 0b4 28 5A 61 FD |     setq COUNT_
006d8 0b5 00 69 66 FC |     wrlong local01, ptra
006dc 0b6 01 5A 05 F1 |     add  COUNT_, #1
006e0 0b7             | pushregs_done_
006e0 0b7 02 5A 65 F0 |     shl  COUNT_, #2
006e4 0b8 AD F0 03 F1 |     add  ptra, COUNT_
006e8 0b9 02 5A 45 F0 |     shr  COUNT_, #2
006ec 0ba 28 04 64 FD |     setq #2 ' push 3 registers starting at COUNT_
006f0 0bb 00 5B 65 FC |     wrlong COUNT_, ptra
006f4 0bc 0C F0 07 F1 |     add    ptra, #12
006f8 0bd F8 5F 01 F6 |     mov    fp, ptra
006fc 0be 2C EC 63 FD |     jmp  pa
00700 0bf             |  popregs_
00700 0bf 2B EC 63 FD |     pop    pa
00704 0c0 0C F0 87 F1 |     sub    ptra, #12
00708 0c1 28 04 64 FD |     setq   #2
0070c 0c2 00 5B 05 FB |     rdlong COUNT_, ptra
00710 0c3 06 5A 95 FB |     tjz    COUNT_, #popregs__ret
00714 0c4 02 5A 65 F0 |     shl    COUNT_, #2
00718 0c5 AD F0 83 F1 |     sub    ptra, COUNT_
0071c 0c6 02 5A 45 F0 |     shr    COUNT_, #2
00720 0c7 01 5A 85 F1 |     sub    COUNT_, #1
00724 0c8 28 5A 61 FD |     setq   COUNT_
00728 0c9 00 69 06 FB |     rdlong local01, ptra
0072c 0ca             | popregs__ret
0072c 0ca 2A 5C 61 FD |     push   RETADDR_
00730 0cb 2C EC 63 FD |     jmp    pa
00734 0cc             | 
00734 0cc             | unsdivide_
00734 0cc 28 00 64 FD |        setq    #0
00738 0cd 85 09 13 FD |        qdiv    muldiva_, muldivb_
0073c 0ce 18 0A 63 FD |        getqx   muldivb_
00740 0cf 19 08 63 0D |  _ret_ getqy   muldiva_
00744 0d0             | 
00744 0d0             | divide_
00744 0d0 84 09 53 F6 |        abs     muldiva_,muldiva_     wc       'abs(x)
00748 0d1 03 0C 86 F5 |        muxc    itmp2_,#%11                    'store sign of x
0074c 0d2 85 0B 5B F6 |        abs     muldivb_,muldivb_     wcz      'abs(y)
00750 0d3 02 0C 66 C5 |  if_c  xor     itmp2_,#%10                    'store sign of y
00754 0d4 2D 00 64 AD |  if_z  ret
00758 0d5 D8 FF BF FD |        call    #unsdivide_
0075c 0d6 01 0C D6 F7 |        test    itmp2_,#1        wc       'restore sign, remainder
00760 0d7 84 09 83 F6 |        negc    muldiva_,muldiva_ 
00764 0d8 02 0C D6 F7 |        test    itmp2_,#%10      wc       'restore sign, division result
00768 0d9 85 0B 83 06 |  _ret_ negc    muldivb_,muldivb_
0076c 0da             | __pc long 0
0076c 0da 00 00 00 00 
00770 0db             | __setjmp
00770 0db 2B B4 61 FD |     pop __pc
00774 0dc 00 28 06 F6 |     mov result1, #0
00778 0dd 00 2A 06 F6 |     mov result2, #0
0077c 0de 2D 07 02 F6 |     mov abortchain, arg01
00780 0df 2D 5F 61 FC |     wrlong fp, arg01
00784 0e0 04 5A 06 F1 |     add arg01, #4
00788 0e1 2D F1 63 FC |     wrlong ptra, arg01
0078c 0e2 04 5A 06 F1 |     add arg01, #4
00790 0e3 2D 0F 62 FC |     wrlong objptr, arg01
00794 0e4 04 5A 06 F1 |     add arg01, #4
00798 0e5 2D B5 61 FC |     wrlong __pc, arg01
0079c 0e6 2C B4 61 FD |     jmp __pc
007a0 0e7             | __unwind_pc long 0
007a0 0e7 00 00 00 00 
007a4 0e8             | __unwind_stack
007a4 0e8 2B CE 61 FD |    pop  __unwind_pc
007a8 0e9             | __unwind_loop
007a8 0e9 2E 5B 0A F2 |    cmp  arg01, arg02 wz
007ac 0ea 10 00 90 AD |   if_z jmp #__unwind_stack_ret
007b0 0eb 2D F1 03 F6 |    mov   ptra, arg01
007b4 0ec 48 FF BF FD |    call  #popregs_
007b8 0ed AF 5A 02 F6 |    mov   arg01, fp
007bc 0ee E8 FF 9F FD |    jmp   #__unwind_loop
007c0 0ef             | __unwind_stack_ret
007c0 0ef 2C CE 61 FD |    jmp  __unwind_pc
007c4 0f0             | __longjmp
007c4 0f0 2B B4 61 FD |     pop __pc
007c8 0f1 00 5A 0E F2 |     cmp    arg01, #0 wz
007cc 0f2 30 00 90 AD |  if_z jmp #nocatch
007d0 0f3 2E 29 02 F6 |     mov result1, arg02
007d4 0f4 01 2A 06 F6 |     mov result2, #1
007d8 0f5 2D 5D 02 FB |     rdlong arg02, arg01
007dc 0f6 04 5A 06 F1 |     add arg01, #4
007e0 0f7 2D F1 03 FB |     rdlong ptra, arg01
007e4 0f8 04 5A 06 F1 |     add arg01, #4
007e8 0f9 2D 0F 02 FB |     rdlong objptr, arg01
007ec 0fa 04 5A 06 F1 |     add arg01, #4
007f0 0fb 2D B5 01 FB |     rdlong __pc, arg01
007f4 0fc AF 5A 02 F6 |     mov arg01, fp
007f8 0fd A8 FF BF FD |     call #__unwind_stack
007fc 0fe             | __longjmp_ret
007fc 0fe 2C B4 61 FD |     jmp  __pc
00800 0ff             | nocatch
00800 0ff 00 5E 0E F2 |     cmp arg03, #0 wz
00804 100 00 FE 9F AD |  if_z jmp #cogexit
00808 101 F0 FF 9F FD |     jmp #__longjmp_ret
0080c 102             | 
0080c 102             | __heap_ptr
0080c 102 B4 66 02 00 | 	long	@__heap_base
00810 103             | abortchain
00810 103 00 00 00 00 | 	long	0
00814 104             | entryptr__
00814 104 04 04 00 00 | 	long	@entry
00818 105             | itmp1_
00818 105 00 00 00 00 | 	long	0
0081c 106             | itmp2_
0081c 106 00 00 00 00 | 	long	0
00820 107             | objptr
00820 107 BC 76 02 00 | 	long	@objmem
00824 108             | ptr___struct___bas_wrap_sender_tx_
00824 108 84 67 00 00 | 	long	@__struct___bas_wrap_sender_tx
00828 109             | ptr___system__dat__
00828 109 54 64 02 00 | 	long	@__system__dat_
0082c 10a             | ptr__audio008_spin2_dat__
0082c 10a 70 55 02 00 | 	long	@_audio008_spin2_dat_
00830 10b             | ptr__dat__
00830 10b 10 68 00 00 | 	long	@_dat_
00834 10c             | ptr__hng030rm_spin2_dat__
00834 10c E0 1F 02 00 | 	long	@_hng030rm_spin2_dat_
00838 10d             | ptr__hng030rm_spin2_putchar_
00838 10d D4 16 00 00 | 	long	@_hng030rm_spin2_putchar
0083c 10e             | ptr__hng030rm_spin2_putpixel1_
0083c 10e 94 13 00 00 | 	long	@_hng030rm_spin2_putpixel1
00840 10f             | ptr__hng030rm_spin2_putpixel2_
00840 10f 7C 14 00 00 | 	long	@_hng030rm_spin2_putpixel2
00844 110             | ptr__hng030rm_spin2_putpixel4_
00844 110 54 15 00 00 | 	long	@_hng030rm_spin2_putpixel4
00848 111             | ptr__hng030rm_spin2_putpixel8_
00848 111 2C 16 00 00 | 	long	@_hng030rm_spin2_putpixel8
0084c 112             | ptr__retrocog_spin2_serialcog_
0084c 112 6C 23 00 00 | 	long	@_retrocog_spin2_serialcog
00850 113             | ptr__trackerplayer_spin2_dat__
00850 113 44 44 02 00 | 	long	@_trackerplayer_spin2_dat_
00854 114             | result1
00854 114 00 00 00 00 | 	long	0
00858 115             | result2
00858 115 00 00 00 00 | 	long	0
0085c 116             | result3
0085c 116 00 00 00 00 | 	long	0
00860 117             | COG_BSS_START
00860 117             | 	fit	480
00860                 | 	orgh
00860                 | hubentry
00860                 | 
00860                 | _program
00860     1A 5A 05 F6 | 	mov	COUNT_, #26
00864     B0 00 A0 FD | 	call	#pushregs_
00868     40 68 06 F6 | 	mov	local01, #64
0086c     2C 0E 06 F1 | 	add	objptr, #44
00870     07 6B 02 F6 | 	mov	local02, objptr
00874                 | ' 
00874                 | ' ' initialize pointers and variables
00874                 | ' 
00874                 | ' border_ptr:=@bordercolor
00874     24 0E 86 F1 | 	sub	objptr, #36
00878     07 6B 62 FC | 	wrlong	local02, objptr
0087c     08 00 00 FF 
00880     00 18 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##4096
00884                 | ' font_ptr:=@st_font
00884     04 0E 86 F1 | 	sub	objptr, #4
00888     07 19 62 FC | 	wrlong	ptr__hng030rm_spin2_dat__, objptr
0088c                 | ' hdmibase:=base
0088c     20 0E 06 F1 | 	add	objptr, #32
00890     07 01 68 FC | 	wrlong	#0, objptr
00894     24 0E 86 F1 | 	sub	objptr, #36
00898     0E 5D 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_putpixel1_
0089c                 | ' p1:=@putpixel1
0089c     07 5B 02 F6 | 	mov	arg01, objptr
008a0     08 00 00 FF 
008a4     00 18 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##4096
008a8     38 46 B0 FD | 	call	#__system___make_methodptr
008ac     14 6D 02 F6 | 	mov	local03, result1
008b0     DC 0E 06 F1 | 	add	objptr, #220
008b4     07 6D 62 FC | 	wrlong	local03, objptr
008b8     DC 0E 86 F1 | 	sub	objptr, #220
008bc     0F 5D 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_putpixel2_
008c0                 | ' p2:=@putpixel2
008c0     07 5B 02 F6 | 	mov	arg01, objptr
008c4     1C 46 B0 FD | 	call	#__system___make_methodptr
008c8     14 6D 02 F6 | 	mov	local03, result1
008cc     E0 0E 06 F1 | 	add	objptr, #224
008d0     07 6D 62 FC | 	wrlong	local03, objptr
008d4     E0 0E 86 F1 | 	sub	objptr, #224
008d8     10 5D 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_putpixel4_
008dc                 | ' p4:=@putpixel4
008dc     07 5B 02 F6 | 	mov	arg01, objptr
008e0     00 46 B0 FD | 	call	#__system___make_methodptr
008e4     14 6D 02 F6 | 	mov	local03, result1
008e8     E4 0E 06 F1 | 	add	objptr, #228
008ec     07 6D 62 FC | 	wrlong	local03, objptr
008f0     E4 0E 86 F1 | 	sub	objptr, #228
008f4     11 5D 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_putpixel8_
008f8                 | ' p8:=@putpixel8
008f8     07 5B 02 F6 | 	mov	arg01, objptr
008fc     E4 45 B0 FD | 	call	#__system___make_methodptr
00900     14 6D 02 F6 | 	mov	local03, result1
00904     E8 0E 06 F1 | 	add	objptr, #232
00908     07 6D 62 FC | 	wrlong	local03, objptr
0090c     E8 0E 86 F1 | 	sub	objptr, #232
00910                 | ' 
00910                 | ' 
00910                 | ' ' the mode has to be set here to enable computing the buffer length
00910                 | ' 
00910                 | ' setmode(mode)
00910     40 5A 06 F6 | 	mov	arg01, #64
00914     14 10 B0 FD | 	call	#_hng030rm_spin2_setmode
00918     40 0E 06 F1 | 	add	objptr, #64
0091c     07 6F 02 F6 | 	mov	local04, objptr
00920                 | ' 
00920                 | ' vblank_ptr:=@vblank
00920     34 0E 86 F1 | 	sub	objptr, #52
00924     07 6F 62 FC | 	wrlong	local04, objptr
00928     28 0E 06 F1 | 	add	objptr, #40
0092c     07 71 02 F6 | 	mov	local05, objptr
00930                 | ' cursor_ptr:=@cursor_x
00930     24 0E 86 F1 | 	sub	objptr, #36
00934     07 71 62 FC | 	wrlong	local05, objptr
00938     88 0E 06 F1 | 	add	objptr, #136
0093c     07 73 02 F6 | 	mov	local06, objptr
00940                 | ' 
00940                 | ' fontnum_ptr:=@fontnum
00940     78 0E 86 F1 | 	sub	objptr, #120
00944     07 73 62 FC | 	wrlong	local06, objptr
00948                 | ' 
00948                 | ' fontnum:=0  ' PC type font ' TODO: font# in buffer byte #1
00948     78 0E 06 F1 | 	add	objptr, #120
0094c     07 01 68 FC | 	wrlong	#0, objptr
00950     1C 0E 06 F1 | 	add	objptr, #28
00954     07 5B 02 F6 | 	mov	arg01, objptr
00958     B4 0E 86 F1 | 	sub	objptr, #180
0095c     0F 00 00 FF 
00960     58 18 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7768
00964     0C 5D 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_dat__
00968     0F 00 00 FF 
0096c     58 18 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7768
00970                 | ' bytemove(@colors,@vgacolors,16)
00970     10 5E 06 F6 | 	mov	arg03, #16
00974     44 44 B0 FD | 	call	#__system____builtin_memmove
00978                 | ' 
00978                 | ' ' initialize a cursor
00978                 | ' 
00978                 | ' cursor_x:=0
00978     34 0E 06 F1 | 	add	objptr, #52
0097c     07 01 48 FC | 	wrbyte	#0, objptr
00980                 | ' cursor_y:=0
00980     01 0E 06 F1 | 	add	objptr, #1
00984     07 01 48 FC | 	wrbyte	#0, objptr
00988                 | ' cursor_sh:=14
00988     01 0E 06 F1 | 	add	objptr, #1
0098c     07 1D 48 FC | 	wrbyte	#14, objptr
00990     36 0E 86 F1 | 	sub	objptr, #54
00994                 | ' 
00994                 | ' 
00994                 | ' ' start the cog
00994                 | ' 
00994                 | ' cog:=coginit(16,@hdmi, @buf_ptr)
00994     0F 00 00 FF 
00998     68 18 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7784
0099c     0C 5D 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_dat__
009a0     0F 00 00 FF 
009a4     68 18 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7784
009a8     07 5F 02 F6 | 	mov	arg03, objptr
009ac     10 5A 06 F6 | 	mov	arg01, #16
009b0     28 5E 62 FD | 	setq	arg03
009b4     2E 5B F2 FC | 	coginit	arg01, arg02 wc
009b8     01 5A 66 C6 |  if_b	neg	arg01, #1
009bc     2D 29 02 F6 | 	mov	result1, arg01
009c0     14 75 02 F6 | 	mov	local07, result1
009c4     28 0E 06 F1 | 	add	objptr, #40
009c8     07 75 62 FC | 	wrlong	local07, objptr
009cc     28 0E 86 F1 | 	sub	objptr, #40
009d0                 | ' waitms(20)
009d0     14 5A 06 F6 | 	mov	arg01, #20
009d4     68 46 B0 FD | 	call	#__system___waitms
009d8                 | ' 
009d8                 | ' ' clear the screen and set the colors to green on black
009d8                 | ' 
009d8                 | ' cls(c_green,c_black)
009d8                 | ' 
009d8                 | ' if (graphmode<512)
009d8     C4 0E 06 F1 | 	add	objptr, #196
009dc     07 77 02 FB | 	rdlong	local08, objptr
009e0     C4 0E 86 F1 | 	sub	objptr, #196
009e4     01 00 00 FF 
009e8     00 76 5E F2 | 	cmps	local08, ##512 wcz
009ec     28 00 90 3D |  if_ae	jmp	#LR__0001
009f0     FF 7F 1C FF 
009f4     E0 79 66 F6 | 	neg	local09, ##956301280
009f8                 | '   c:=fc<<24+bc<<16+$20
009f8                 | '   longfill(buf_ptr,c,buflen)
009f8     07 5B 02 FB | 	rdlong	arg01, objptr
009fc     30 0E 06 F1 | 	add	objptr, #48
00a00     07 5F 02 FB | 	rdlong	arg03, objptr
00a04     30 0E 86 F1 | 	sub	objptr, #48
00a08     00 80 63 FF 
00a0c     20 5C 06 F6 | 	mov	arg02, ##-956301280
00a10     A8 00 A0 FD | 	call	#\builtin_longfill_
00a14                 | ' else
00a14     70 00 90 FD | 	jmp	#LR__0004
00a18                 | LR__0001
00a18                 | '   if (graphmode & 48) ==48
00a18     C4 0E 06 F1 | 	add	objptr, #196
00a1c     07 77 02 FB | 	rdlong	local08, objptr
00a20     C4 0E 86 F1 | 	sub	objptr, #196
00a24     30 76 06 F5 | 	and	local08, #48
00a28     30 76 0E F2 | 	cmp	local08, #48 wz
00a2c                 | '     c:=bc
00a2c     00 78 06 A6 |  if_e	mov	local09, #0
00a30     38 00 90 AD |  if_e	jmp	#LR__0003
00a34                 | '   elseif (graphmode & 48) ==32
00a34     C4 0E 06 F1 | 	add	objptr, #196
00a38     07 77 02 FB | 	rdlong	local08, objptr
00a3c     C4 0E 86 F1 | 	sub	objptr, #196
00a40     30 76 06 F5 | 	and	local08, #48
00a44     20 76 0E F2 | 	cmp	local08, #32 wz
00a48     00 78 06 A6 |  if_e	mov	local09, #0
00a4c                 | '     c:=bc<<4+bc
00a4c     1C 00 90 AD |  if_e	jmp	#LR__0002
00a50                 | '   elseif (graphmode & 48) ==16
00a50     C4 0E 06 F1 | 	add	objptr, #196
00a54     07 77 02 FB | 	rdlong	local08, objptr
00a58     C4 0E 86 F1 | 	sub	objptr, #196
00a5c     30 76 06 F5 | 	and	local08, #48
00a60     10 76 0E F2 | 	cmp	local08, #16 wz
00a64     00 78 06 A6 |  if_e	mov	local09, #0
00a68                 | '     c:=bc<<6+bc<<4+bc<<2+bc
00a68                 | '   else
00a68                 | '     if bc==1
00a68                 | '       c:=255
00a68                 | '     else
00a68                 | '       c:=0
00a68     00 78 06 56 |  if_ne	mov	local09, #0
00a6c                 | LR__0002
00a6c                 | LR__0003
00a6c     30 0E 06 F1 | 	add	objptr, #48
00a70     07 5F 02 FB | 	rdlong	arg03, objptr
00a74     30 0E 86 F1 | 	sub	objptr, #48
00a78     02 5E 66 F0 | 	shl	arg03, #2
00a7c                 | '   bytefill(buf_ptr,c,buflen*4)
00a7c     07 5B 02 FB | 	rdlong	arg01, objptr
00a80     3C 5D 02 F6 | 	mov	arg02, local09
00a84     A0 00 A0 FD | 	call	#\builtin_bytefill_
00a88                 | LR__0004
00a88                 | ' setwritecolors(fc,bc)
00a88     00 5C 06 F6 | 	mov	arg02, #0
00a8c                 | ' 
00a8c                 | ' 
00a8c                 | ' write_color:=ff
00a8c     38 0E 06 F1 | 	add	objptr, #56
00a90     07 8F 69 FC | 	wrlong	#199, objptr
00a94                 | ' write_background:=bb
00a94     04 0E 06 F1 | 	add	objptr, #4
00a98     07 01 68 FC | 	wrlong	#0, objptr
00a9c                 | ' cursor_x:=0
00a9c     08 0E 86 F1 | 	sub	objptr, #8
00aa0     07 01 48 FC | 	wrbyte	#0, objptr
00aa4                 | ' cursor_y:=0
00aa4     01 0E 06 F1 | 	add	objptr, #1
00aa8     07 01 48 FC | 	wrbyte	#0, objptr
00aac     35 0E 86 F1 | 	sub	objptr, #53
00ab0     3C 29 02 F6 | 	mov	result1, local09
00ab4                 | ' setbordercolor(0,0,128)
00ab4     00 5A 06 F6 | 	mov	arg01, #0
00ab8     80 5E 06 F6 | 	mov	arg03, #128
00abc     F0 0B B0 FD | 	call	#_hng030rm_spin2_setbordercolor
00ac0                 | ' setwritecolors(c_green,c_black)
00ac0     00 5C 06 F6 | 	mov	arg02, #0
00ac4                 | ' 
00ac4                 | ' 
00ac4                 | ' write_color:=ff
00ac4     38 0E 06 F1 | 	add	objptr, #56
00ac8     07 8F 69 FC | 	wrlong	#199, objptr
00acc                 | ' write_background:=bb
00acc     04 0E 06 F1 | 	add	objptr, #4
00ad0     07 01 68 FC | 	wrlong	#0, objptr
00ad4                 | ' 
00ad4                 | ' return cog
00ad4     14 0E 86 F1 | 	sub	objptr, #20
00ad8     07 29 02 FB | 	rdlong	result1, objptr
00adc     28 0E 86 F1 | 	sub	objptr, #40
00ae0     00 5A 06 F6 | 	mov	arg01, #0
00ae4     00 5E 06 F6 | 	mov	arg03, #0
00ae8     C4 0B B0 FD | 	call	#_hng030rm_spin2_setbordercolor
00aec                 | ' v030.start(mode,pin)
00aec                 | ' v030.setbordercolor(0,0,0)
00aec                 | ' open SendRecvDevice(@v030.putchar, nil, nil) as #0
00aec     07 5B 02 F6 | 	mov	arg01, objptr
00af0     0D 5D 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_putchar_
00af4     EC 43 B0 FD | 	call	#__system___make_methodptr
00af8     00 2C 06 F6 | 	mov	result3, #0
00afc     00 2A 06 F6 | 	mov	result2, #0
00b00     14 5D 02 F6 | 	mov	arg02, result1
00b04     00 5E 06 F6 | 	mov	arg03, #0
00b08     00 60 06 F6 | 	mov	arg04, #0
00b0c     00 5A 06 F6 | 	mov	arg01, #0
00b10     FC 45 B0 FD | 	call	#__system___basic_open
00b14     EC 0E 06 F1 | 	add	objptr, #236
00b18                 | ' 
00b18                 | ' cog:=cogspin(16,serialcog(),@serialstack)
00b18     07 7B 02 F6 | 	mov	local10, objptr
00b1c     01 00 00 FF 
00b20     40 0F 06 F1 | 	add	objptr, ##832
00b24     07 7D 02 F6 | 	mov	local11, objptr
00b28     3E 7B 62 FC | 	wrlong	local10, local11
00b2c     04 7C 06 F1 | 	add	local11, #4
00b30     3E 25 62 FC | 	wrlong	ptr__retrocog_spin2_serialcog_, local11
00b34     04 5D 02 F6 | 	mov	arg02, entryptr__
00b38     10 5A 06 F6 | 	mov	arg01, #16
00b3c     28 0E 62 FD | 	setq	objptr
00b40     2E 5B F2 FC | 	coginit	arg01, arg02 wc
00b44     01 5A 66 C6 |  if_b	neg	arg01, #1
00b48     2D 29 02 F6 | 	mov	result1, arg01
00b4c                 | ' return cog
00b4c     14 7E 06 FB | 	rdlong	local12, #20
00b50     01 5E 06 F6 | 	mov	arg03, #1
00b54     00 61 06 F6 | 	mov	arg04, #256
00b58     00 63 06 F6 | 	mov	arg05, #256
00b5c     00 0F 06 F1 | 	add	objptr, #256
00b60     01 80 0E F6 | 	mov	local13, #1 wz
00b64     00 83 06 F6 | 	mov	local14, #256
00b68     00 85 06 F6 | 	mov	local15, #256
00b6c                 | ' 
00b6c                 | '   systemClock := sysClock
00b6c     07 7F 62 FC | 	wrlong	local12, objptr
00b70                 | '   mainVolume  := mVolume
00b70     04 0E 06 F1 | 	add	objptr, #4
00b74     07 01 5A FC | 	wrword	#256, objptr
00b78     04 0E 86 F1 | 	sub	objptr, #4
00b7c                 | ' 
00b7c                 | '   if reSoundHqMode
00b7c     07 09 03 FB | 	rdlong	muldiva_, objptr
00b80     55 00 00 FF 
00b84     E0 0B 07 F6 | 	mov	muldivb_, ##44000
00b88     D0 00 A0 FD | 	call	#divide_
00b8c     7F 00 00 FF 
00b90     00 0B 07 F5 | 	and	muldivb_, ##65280
00b94     07 09 03 FB | 	rdlong	muldiva_, objptr
00b98     D0 00 A0 FD | 	call	#divide_
00b9c                 | '     mixingFrequency := systemClock / ((systemClock / mixingFrequency) & $FF00)
00b9c     85 87 02 F6 | 	mov	local16, muldivb_
00ba0     04 26 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, #4
00ba4     13 89 02 F6 | 	mov	local17, ptr__trackerplayer_spin2_dat__
00ba8     71 8A 06 F6 | 	mov	local18, #113
00bac     04 26 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, #4
00bb0                 | LR__0005
00bb0                 | '     frequencyLut[i - MINIMUM_PERIOD] := calculateAccumulatorFrequency(mixingFrequency, i)
00bb0     43 5B 02 F6 | 	mov	arg01, local16
00bb4     45 5D 02 F6 | 	mov	arg02, local18
00bb8     4C 40 B0 FD | 	call	#_trackerplayer_spin2_calculateAccumulatorFrequency
00bbc     44 29 62 FC | 	wrlong	result1, local17
00bc0     01 8A 06 F1 | 	add	local18, #1
00bc4     04 88 06 F1 | 	add	local17, #4
00bc8     01 00 00 FF 
00bcc     59 8B 5E F2 | 	cmps	local18, ##857 wcz
00bd0     DC FF 9F CD |  if_b	jmp	#LR__0005
00bd4                 | ' 
00bd4                 | '   panningLut[0]  :=   stereoSeparation
00bd4     05 00 00 FF 
00bd8     A4 27 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##2980
00bdc     13 01 5A FC | 	wrword	#256, ptr__trackerplayer_spin2_dat__
00be0     01 8D 06 F6 | 	mov	local19, #257
00be4                 | '   panningLut[1]  := -(stereoSeparation + 1)
00be4     01 8F 06 F6 | 	mov	local20, #257
00be8     47 8F 62 F6 | 	neg	local20, local20
00bec     02 26 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, #2
00bf0     13 8F 52 FC | 	wrword	local20, ptr__trackerplayer_spin2_dat__
00bf4                 | '   panningLut[2]  := -(stereoSeparation + 1)
00bf4     46 8D 62 F6 | 	neg	local19, local19
00bf8     02 26 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, #2
00bfc     13 8D 52 FC | 	wrword	local19, ptr__trackerplayer_spin2_dat__
00c00                 | '   panningLut[3]  :=   stereoSeparation
00c00     02 26 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, #2
00c04     13 01 5A FC | 	wrword	#256, ptr__trackerplayer_spin2_dat__
00c08     05 00 00 FF 
00c0c     AA 27 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##2986
00c10                 | ' 
00c10                 | '   ticksPerMinute := 50 * 60
00c10     A7 0F 06 F1 | 	add	objptr, #423
00c14     05 00 80 FF 
00c18     07 71 6B FC | 	wrlong	##3000, objptr
00c1c     A7 0F 86 F1 | 	sub	objptr, #423
00c20     07 09 03 FB | 	rdlong	muldiva_, objptr
00c24     32 0A 07 F6 | 	mov	muldivb_, #50
00c28     D0 00 A0 FD | 	call	#divide_
00c2c                 | '   cyclesToWait   := systemClock / 50
00c2c     AB 0F 06 F1 | 	add	objptr, #427
00c30     07 0B 63 FC | 	wrlong	muldivb_, objptr
00c34     AB 0F 86 F1 | 	sub	objptr, #427
00c38     0B 5B 02 F6 | 	mov	arg01, ptr__dat__
00c3c     00 5C 06 F6 | 	mov	arg02, #0
00c40     D0 1D B0 FD | 	call	#_trackerplayer_spin2_initModule
00c44     02 00 00 FF 
00c48     2C 0F 86 F1 | 	sub	objptr, ##1324
00c4c     F4 5B 06 F6 | 	mov	arg01, #500
00c50     EC 43 B0 FD | 	call	#__system___waitms
00c54     03 00 00 FF 
00c58     28 0F 06 F1 | 	add	objptr, ##1832
00c5c     03 00 00 FF 
00c60     CC 14 06 F1 | 	add	ptr__audio008_spin2_dat__, ##1740
00c64                 | ' 
00c64                 | ' 
00c64                 | ' channel1[0]:=@null
00c64     07 15 62 FC | 	wrlong	ptr__audio008_spin2_dat__, objptr
00c68                 | ' channel1[1]:=0
00c68     04 0E 06 F1 | 	add	objptr, #4
00c6c     07 01 68 FC | 	wrlong	#0, objptr
00c70                 | ' channel1[2]:=0
00c70     04 0E 06 F1 | 	add	objptr, #4
00c74     07 01 68 FC | 	wrlong	#0, objptr
00c78                 | ' channel1[3]:=2
00c78     04 0E 06 F1 | 	add	objptr, #4
00c7c     07 05 68 FC | 	wrlong	#2, objptr
00c80                 | ' channel1[4]:=0
00c80     04 0E 06 F1 | 	add	objptr, #4
00c84     07 01 68 FC | 	wrlong	#0, objptr
00c88                 | ' channel1[5]:=8192
00c88     04 0E 06 F1 | 	add	objptr, #4
00c8c     10 00 80 FF 
00c90     07 01 68 FC | 	wrlong	##8192, objptr
00c94                 | ' channel1[6]:=1010
00c94     04 0E 06 F1 | 	add	objptr, #4
00c98     01 00 80 FF 
00c9c     07 E5 6B FC | 	wrlong	##1010, objptr
00ca0                 | ' channel1[7]:=2
00ca0     04 0E 06 F1 | 	add	objptr, #4
00ca4     07 05 68 FC | 	wrlong	#2, objptr
00ca8                 | ' 
00ca8                 | ' channel2[0]:=@null
00ca8     08 0E 06 F1 | 	add	objptr, #8
00cac     07 15 62 FC | 	wrlong	ptr__audio008_spin2_dat__, objptr
00cb0                 | ' channel2[1]:=0
00cb0     04 0E 06 F1 | 	add	objptr, #4
00cb4     07 01 68 FC | 	wrlong	#0, objptr
00cb8                 | ' channel2[2]:=0
00cb8     04 0E 06 F1 | 	add	objptr, #4
00cbc     07 01 68 FC | 	wrlong	#0, objptr
00cc0                 | ' channel2[3]:=2
00cc0     04 0E 06 F1 | 	add	objptr, #4
00cc4     07 05 68 FC | 	wrlong	#2, objptr
00cc8                 | ' channel2[4]:=0
00cc8     04 0E 06 F1 | 	add	objptr, #4
00ccc     07 01 68 FC | 	wrlong	#0, objptr
00cd0                 | ' channel2[5]:=8192
00cd0     04 0E 06 F1 | 	add	objptr, #4
00cd4     10 00 80 FF 
00cd8     07 01 68 FC | 	wrlong	##8192, objptr
00cdc                 | ' channel2[6]:=1030
00cdc     04 0E 06 F1 | 	add	objptr, #4
00ce0     02 00 80 FF 
00ce4     07 0D 68 FC | 	wrlong	##1030, objptr
00ce8                 | ' channel2[7]:=2
00ce8     04 0E 06 F1 | 	add	objptr, #4
00cec     07 05 68 FC | 	wrlong	#2, objptr
00cf0                 | ' 
00cf0                 | ' channel3[0]:=@null
00cf0     08 0E 06 F1 | 	add	objptr, #8
00cf4     07 15 62 FC | 	wrlong	ptr__audio008_spin2_dat__, objptr
00cf8                 | ' channel3[1]:=0
00cf8     04 0E 06 F1 | 	add	objptr, #4
00cfc     07 01 68 FC | 	wrlong	#0, objptr
00d00                 | ' channel3[2]:=0
00d00     04 0E 06 F1 | 	add	objptr, #4
00d04     07 01 68 FC | 	wrlong	#0, objptr
00d08                 | ' channel3[3]:=2
00d08     04 0E 06 F1 | 	add	objptr, #4
00d0c     07 05 68 FC | 	wrlong	#2, objptr
00d10                 | ' channel3[4]:=0
00d10     04 0E 06 F1 | 	add	objptr, #4
00d14     07 01 68 FC | 	wrlong	#0, objptr
00d18                 | ' channel3[5]:=8192
00d18     04 0E 06 F1 | 	add	objptr, #4
00d1c     10 00 80 FF 
00d20     07 01 68 FC | 	wrlong	##8192, objptr
00d24                 | ' channel3[6]:=1070'
00d24     04 0E 06 F1 | 	add	objptr, #4
00d28     02 00 80 FF 
00d2c     07 5D 68 FC | 	wrlong	##1070, objptr
00d30                 | ' channel3[7]:=2
00d30     04 0E 06 F1 | 	add	objptr, #4
00d34     07 05 68 FC | 	wrlong	#2, objptr
00d38                 | ' 
00d38                 | ' channel4[0]:=@null
00d38     08 0E 06 F1 | 	add	objptr, #8
00d3c     07 15 62 FC | 	wrlong	ptr__audio008_spin2_dat__, objptr
00d40                 | ' channel4[1]:=0
00d40     04 0E 06 F1 | 	add	objptr, #4
00d44     07 01 68 FC | 	wrlong	#0, objptr
00d48                 | ' channel4[2]:=0
00d48     04 0E 06 F1 | 	add	objptr, #4
00d4c     07 01 68 FC | 	wrlong	#0, objptr
00d50                 | ' channel4[3]:=2
00d50     04 0E 06 F1 | 	add	objptr, #4
00d54     07 05 68 FC | 	wrlong	#2, objptr
00d58                 | ' channel4[4]:=0
00d58     04 0E 06 F1 | 	add	objptr, #4
00d5c     07 01 68 FC | 	wrlong	#0, objptr
00d60                 | ' channel4[5]:=8192
00d60     04 0E 06 F1 | 	add	objptr, #4
00d64     10 00 80 FF 
00d68     07 01 68 FC | 	wrlong	##8192, objptr
00d6c                 | ' channel4[6]:=1090
00d6c     04 0E 06 F1 | 	add	objptr, #4
00d70     02 00 80 FF 
00d74     07 85 68 FC | 	wrlong	##1090, objptr
00d78                 | ' channel4[7]:=2
00d78     04 0E 06 F1 | 	add	objptr, #4
00d7c     07 05 68 FC | 	wrlong	#2, objptr
00d80                 | ' channel4[8]:=1
00d80     04 0E 06 F1 | 	add	objptr, #4
00d84     07 03 68 FC | 	wrlong	#1, objptr
00d88                 | ' 
00d88                 | ' channel5[0]:=@null
00d88     04 0E 06 F1 | 	add	objptr, #4
00d8c     07 15 62 FC | 	wrlong	ptr__audio008_spin2_dat__, objptr
00d90                 | ' channel5[1]:=0
00d90     04 0E 06 F1 | 	add	objptr, #4
00d94     07 01 68 FC | 	wrlong	#0, objptr
00d98                 | ' channel5[2]:=0
00d98     04 0E 06 F1 | 	add	objptr, #4
00d9c     07 01 68 FC | 	wrlong	#0, objptr
00da0                 | ' channel5[3]:=2
00da0     04 0E 06 F1 | 	add	objptr, #4
00da4     07 05 68 FC | 	wrlong	#2, objptr
00da8                 | ' channel5[4]:=0
00da8     04 0E 06 F1 | 	add	objptr, #4
00dac     07 01 68 FC | 	wrlong	#0, objptr
00db0                 | ' channel5[5]:=8192
00db0     04 0E 06 F1 | 	add	objptr, #4
00db4     10 00 80 FF 
00db8     07 01 68 FC | 	wrlong	##8192, objptr
00dbc                 | ' channel5[6]:=1130
00dbc     04 0E 06 F1 | 	add	objptr, #4
00dc0     02 00 80 FF 
00dc4     07 D5 68 FC | 	wrlong	##1130, objptr
00dc8                 | ' channel5[7]:=2
00dc8     04 0E 06 F1 | 	add	objptr, #4
00dcc     07 05 68 FC | 	wrlong	#2, objptr
00dd0                 | ' 
00dd0                 | ' channel6[0]:=@null
00dd0     08 0E 06 F1 | 	add	objptr, #8
00dd4     07 15 62 FC | 	wrlong	ptr__audio008_spin2_dat__, objptr
00dd8                 | ' channel6[1]:=0
00dd8     04 0E 06 F1 | 	add	objptr, #4
00ddc     07 01 68 FC | 	wrlong	#0, objptr
00de0                 | ' channel6[2]:=0
00de0     04 0E 06 F1 | 	add	objptr, #4
00de4     07 01 68 FC | 	wrlong	#0, objptr
00de8                 | ' channel6[3]:=2
00de8     04 0E 06 F1 | 	add	objptr, #4
00dec     07 05 68 FC | 	wrlong	#2, objptr
00df0                 | ' channel6[4]:=0
00df0     04 0E 06 F1 | 	add	objptr, #4
00df4     07 01 68 FC | 	wrlong	#0, objptr
00df8                 | ' channel6[5]:=8192
00df8     04 0E 06 F1 | 	add	objptr, #4
00dfc     10 00 80 FF 
00e00     07 01 68 FC | 	wrlong	##8192, objptr
00e04                 | ' channel6[6]:=1270
00e04     04 0E 06 F1 | 	add	objptr, #4
00e08     02 00 80 FF 
00e0c     07 ED 69 FC | 	wrlong	##1270, objptr
00e10                 | ' channel6[7]:=2
00e10     04 0E 06 F1 | 	add	objptr, #4
00e14     07 05 68 FC | 	wrlong	#2, objptr
00e18                 | ' 
00e18                 | ' channel7[0]:=@null
00e18     08 0E 06 F1 | 	add	objptr, #8
00e1c     07 15 62 FC | 	wrlong	ptr__audio008_spin2_dat__, objptr
00e20                 | ' channel7[1]:=0
00e20     04 0E 06 F1 | 	add	objptr, #4
00e24     07 01 68 FC | 	wrlong	#0, objptr
00e28                 | ' channel7[2]:=0
00e28     04 0E 06 F1 | 	add	objptr, #4
00e2c     07 01 68 FC | 	wrlong	#0, objptr
00e30                 | ' channel7[3]:=2
00e30     04 0E 06 F1 | 	add	objptr, #4
00e34     07 05 68 FC | 	wrlong	#2, objptr
00e38                 | ' channel7[4]:=0
00e38     04 0E 06 F1 | 	add	objptr, #4
00e3c     07 01 68 FC | 	wrlong	#0, objptr
00e40                 | ' channel7[5]:=8192
00e40     04 0E 06 F1 | 	add	objptr, #4
00e44     10 00 80 FF 
00e48     07 01 68 FC | 	wrlong	##8192, objptr
00e4c                 | ' channel7[6]:=1310
00e4c     04 0E 06 F1 | 	add	objptr, #4
00e50     02 00 80 FF 
00e54     07 3D 6A FC | 	wrlong	##1310, objptr
00e58                 | ' channel7[7]:=2
00e58     04 0E 06 F1 | 	add	objptr, #4
00e5c     07 05 68 FC | 	wrlong	#2, objptr
00e60                 | ' 
00e60                 | ' channel8[0]:=@null
00e60     08 0E 06 F1 | 	add	objptr, #8
00e64     07 15 62 FC | 	wrlong	ptr__audio008_spin2_dat__, objptr
00e68                 | ' channel8[1]:=0
00e68     04 0E 06 F1 | 	add	objptr, #4
00e6c     07 01 68 FC | 	wrlong	#0, objptr
00e70                 | ' channel8[2]:=0
00e70     04 0E 06 F1 | 	add	objptr, #4
00e74     07 01 68 FC | 	wrlong	#0, objptr
00e78                 | ' channel8[3]:=2
00e78     04 0E 06 F1 | 	add	objptr, #4
00e7c     07 05 68 FC | 	wrlong	#2, objptr
00e80                 | ' channel8[4]:=0
00e80     04 0E 06 F1 | 	add	objptr, #4
00e84     07 01 68 FC | 	wrlong	#0, objptr
00e88                 | ' channel8[5]:=8192
00e88     04 0E 06 F1 | 	add	objptr, #4
00e8c     10 00 80 FF 
00e90     07 01 68 FC | 	wrlong	##8192, objptr
00e94                 | ' channel8[6]:=1370
00e94     04 0E 06 F1 | 	add	objptr, #4
00e98     02 00 80 FF 
00e9c     07 B5 6A FC | 	wrlong	##1370, objptr
00ea0                 | ' channel8[7]:=2
00ea0     04 0E 06 F1 | 	add	objptr, #4
00ea4     07 05 68 FC | 	wrlong	#2, objptr
00ea8                 | ' 
00ea8                 | ' channel1[8]:=1
00ea8     F8 0E 86 F1 | 	sub	objptr, #248
00eac     07 03 68 FC | 	wrlong	#1, objptr
00eb0                 | ' channel2[8]:=1
00eb0     24 0E 06 F1 | 	add	objptr, #36
00eb4     07 03 68 FC | 	wrlong	#1, objptr
00eb8                 | ' channel3[8]:=1
00eb8     24 0E 06 F1 | 	add	objptr, #36
00ebc     07 03 68 FC | 	wrlong	#1, objptr
00ec0                 | ' channel4[8]:=1
00ec0     24 0E 06 F1 | 	add	objptr, #36
00ec4     07 03 68 FC | 	wrlong	#1, objptr
00ec8                 | ' channel5[8]:=1
00ec8     24 0E 06 F1 | 	add	objptr, #36
00ecc     07 03 68 FC | 	wrlong	#1, objptr
00ed0                 | ' channel6[8]:=1
00ed0     24 0E 06 F1 | 	add	objptr, #36
00ed4     07 03 68 FC | 	wrlong	#1, objptr
00ed8                 | ' channel7[8]:=1
00ed8     24 0E 06 F1 | 	add	objptr, #36
00edc     07 03 68 FC | 	wrlong	#1, objptr
00ee0                 | ' channel8[8]:=1
00ee0     24 0E 06 F1 | 	add	objptr, #36
00ee4     07 03 68 FC | 	wrlong	#1, objptr
00ee8     1C 0F 86 F1 | 	sub	objptr, #284
00eec                 | ' 
00eec                 | ' cog:=coginit(16,@audio,@channel1)
00eec     03 00 00 FF 
00ef0     CC 14 86 F1 | 	sub	ptr__audio008_spin2_dat__, ##1740
00ef4     0A 5D 02 F6 | 	mov	arg02, ptr__audio008_spin2_dat__
00ef8     07 5F 02 F6 | 	mov	arg03, objptr
00efc     10 5A 06 F6 | 	mov	arg01, #16
00f00     28 5E 62 FD | 	setq	arg03
00f04     2E 5B F2 FC | 	coginit	arg01, arg02 wc
00f08     01 5A 66 C6 |  if_b	neg	arg01, #1
00f0c     2D 29 02 F6 | 	mov	result1, arg01
00f10                 | ' return cog
00f10     00 90 06 F6 | 	mov	local21, #0
00f14     20 0F 06 F1 | 	add	objptr, #288
00f18     07 01 68 FC | 	wrlong	#0, objptr
00f1c     04 0E 06 F1 | 	add	objptr, #4
00f20     07 01 68 FC | 	wrlong	#0, objptr
00f24     04 0E 06 F1 | 	add	objptr, #4
00f28     07 01 68 FC | 	wrlong	#0, objptr
00f2c     04 0E 06 F1 | 	add	objptr, #4
00f30     07 01 68 FC | 	wrlong	#0, objptr
00f34     04 0E 06 F1 | 	add	objptr, #4
00f38     07 01 68 FC | 	wrlong	#0, objptr
00f3c     04 0E 06 F1 | 	add	objptr, #4
00f40     07 01 68 FC | 	wrlong	#0, objptr
00f44     04 0E 06 F1 | 	add	objptr, #4
00f48     07 01 68 FC | 	wrlong	#0, objptr
00f4c     04 0E 06 F1 | 	add	objptr, #4
00f50     07 01 68 FC | 	wrlong	#0, objptr
00f54     04 00 00 FF 
00f58     64 0E 86 F1 | 	sub	objptr, ##2148
00f5c                 | ' 
00f5c                 | ' tracker.init(clkfreq,44000,1,256,256)
00f5c                 | ' tracker.initmodule(@module,0)
00f5c                 | ' waitms(500)
00f5c                 | ' 
00f5c                 | ' paula.start
00f5c                 | ' old1=0 : old2=0 :old3=0 : old4=0
00f5c                 | ' old11=0 : old12=0 :old13=0 : old14=0
00f5c                 | ' do
00f5c                 | LR__0006
00f5c     01 5A 06 F6 | 	mov	arg01, #1
00f60                 | ' 
00f60                 | ' ''---------- Wait for start of vblank. Amount=delay in frames
00f60                 | ' 
00f60                 | ' repeat i from 1 to amount
00f60     01 92 06 F6 | 	mov	local22, #1
00f64     01 94 66 F6 | 	neg	local23, #1
00f68     00 96 06 F6 | 	mov	local24, #0
00f6c                 | LR__0007
00f6c                 | '   repeat until vblank==0
00f6c                 | LR__0008
00f6c     40 0E 06 F1 | 	add	objptr, #64
00f70     07 99 0A FB | 	rdlong	local25, objptr wz
00f74     40 0E 86 F1 | 	sub	objptr, #64
00f78     0C 00 90 AD |  if_e	jmp	#LR__0009
00f7c                 | '     waitus(100)
00f7c     64 5A 06 F6 | 	mov	arg01, #100
00f80     38 41 B0 FD | 	call	#__system___waitus
00f84     E4 FF 9F FD | 	jmp	#LR__0008
00f88                 | LR__0009
00f88                 | '   repeat until vblank==1
00f88                 | LR__0010
00f88     40 0E 06 F1 | 	add	objptr, #64
00f8c     07 99 02 FB | 	rdlong	local25, objptr
00f90     40 0E 86 F1 | 	sub	objptr, #64
00f94     01 98 0E F2 | 	cmp	local25, #1 wz
00f98     0C 00 90 AD |  if_e	jmp	#LR__0011
00f9c                 | '     waitus(100)
00f9c     64 5A 06 F6 | 	mov	arg01, #100
00fa0     18 41 B0 FD | 	call	#__system___waitus
00fa4     E0 FF 9F FD | 	jmp	#LR__0010
00fa8                 | LR__0011
00fa8     F0 93 6E FB | 	djnz	local22, #LR__0007
00fac     02 00 00 FF 
00fb0     2C 0F 06 F1 | 	add	objptr, ##1324
00fb4     38 21 B0 FD | 	call	#_trackerplayer_spin2_tick
00fb8     FC 0F 06 F1 | 	add	objptr, #508
00fbc     07 91 02 FB | 	rdlong	local21, objptr
00fc0     30 0F 06 F1 | 	add	objptr, #304
00fc4     07 91 62 FC | 	wrlong	local21, objptr
00fc8     01 00 00 FF 
00fcc     85 0E 86 F1 | 	sub	objptr, ##645
00fd0     07 91 02 FB | 	rdlong	local21, objptr
00fd4     55 0F 06 F1 | 	add	objptr, #341
00fd8     07 91 62 FC | 	wrlong	local21, objptr
00fdc     04 0E 06 F1 | 	add	objptr, #4
00fe0     07 03 68 FC | 	wrlong	#1, objptr
00fe4     45 0F 86 F1 | 	sub	objptr, #325
00fe8     07 91 E2 FA | 	rdword	local21, objptr
00fec     08 0E 06 F1 | 	add	objptr, #8
00ff0     07 9B 02 FB | 	rdlong	local26, objptr
00ff4     4D 91 82 F1 | 	sub	local21, local26
00ff8     41 0F 06 F1 | 	add	objptr, #321
00ffc     07 91 62 FC | 	wrlong	local21, objptr
01000     49 0F 86 F1 | 	sub	objptr, #329
01004     07 91 E2 FA | 	rdword	local21, objptr
01008     4D 0F 06 F1 | 	add	objptr, #333
0100c     07 91 62 FC | 	wrlong	local21, objptr
01010     09 0F 86 F1 | 	sub	objptr, #265
01014     07 91 02 FB | 	rdlong	local21, objptr
01018     07 90 66 F0 | 	shl	local21, #7
0101c     0D 0F 06 F1 | 	add	objptr, #269
01020     07 91 62 FC | 	wrlong	local21, objptr
01024     04 0E 06 F1 | 	add	objptr, #4
01028     08 00 80 FF 
0102c     07 01 68 FC | 	wrlong	##4096, objptr
01030     31 0F 86 F1 | 	sub	objptr, #305
01034     07 91 02 FB | 	rdlong	local21, objptr
01038     35 0F 06 F1 | 	add	objptr, #309
0103c     07 91 62 FC | 	wrlong	local21, objptr
01040     04 0E 06 F1 | 	add	objptr, #4
01044     07 03 68 FC | 	wrlong	#1, objptr
01048                 | '     v030.waitvbl(1)
01048                 | '   tracker.tick
01048                 | '    
01048                 | ' 
01048                 | '  '   print tracker.currSamplePtr(0);" ";tracker.currSampleLength(0);" ";tracker.currRepeatPoint(0);" ";tracker.currrepeatLength(0); " - ";
01048                 | '  '   print tracker.currSamplePtr(1);" ";tracker.currSampleLength(1);" ";tracker.currRepeatPoint(1);" ";tracker.currrepeatLength(1); " - ";
01048                 | '   '  print tracker.currSamplePtr(2);" ";tracker.currSampleLength(2);" ";tracker.currRepeatPoint(2);" ";tracker.currrepeatLength(2); " - ";
01048                 | '  '   print tracker.currSamplePtr(3);" ";tracker.currSampleLength(3);" ";tracker.currRepeatPoint(3);" ";tracker.currrepeatLength(3)
01048                 | ' 
01048                 | '     
01048                 | '     old11=paula.channel1(0)
01048                 | ' 	paula.channel1(0)=tracker.currSamplePtr(0)
01048                 | ' 	paula.channel1(1)=1
01048                 | ' 	paula.channel1(2)=tracker.currsamplelength(0)-tracker.currrepeatLength(0)
01048                 | ' 	paula.channel1(3)=tracker.currsamplelength(0)
01048                 | ' 	paula.channel1(4)=tracker.currVolume(0)*128
01048                 | ' 	paula.channel1(5)=4096
01048                 | ' 	paula.channel1(6)=tracker.currPeriod(0)
01048                 | ' 	paula.channel1(7)=1
01048                 | ' '     if paula.channel1(0) <> old11 then paula.channel1(8)=0 :waitus(100) : paula.channel1(8)=1
01048                 | '       if tracker.trigger(0) <> old1 then paula.channel1(8)=0 :waitus(100) : paula.channel1(8)=1 :old1=tracker.trigger(0)
01048     22 0E 86 F1 | 	sub	objptr, #34
0104c     07 91 C2 FA | 	rdbyte	local21, objptr
01050     26 0F 06 F1 | 	add	objptr, #294
01054     07 9B 02 FB | 	rdlong	local26, objptr
01058     04 00 00 FF 
0105c     48 0E 86 F1 | 	sub	objptr, ##2120
01060     4D 91 0A F2 | 	cmp	local21, local26 wz
01064     40 00 90 AD |  if_e	jmp	#LR__0012
01068     03 00 00 FF 
0106c     48 0F 06 F1 | 	add	objptr, ##1864
01070     07 01 68 FC | 	wrlong	#0, objptr
01074     03 00 00 FF 
01078     48 0F 86 F1 | 	sub	objptr, ##1864
0107c     64 5A 06 F6 | 	mov	arg01, #100
01080     38 40 B0 FD | 	call	#__system___waitus
01084     03 00 00 FF 
01088     48 0F 06 F1 | 	add	objptr, ##1864
0108c     07 03 68 FC | 	wrlong	#1, objptr
01090     26 0E 86 F1 | 	sub	objptr, #38
01094     07 91 C2 FA | 	rdbyte	local21, objptr
01098     26 0F 06 F1 | 	add	objptr, #294
0109c     07 91 62 FC | 	wrlong	local21, objptr
010a0     04 00 00 FF 
010a4     48 0E 86 F1 | 	sub	objptr, ##2120
010a8                 | LR__0012
010a8     03 00 00 FF 
010ac     4C 0F 06 F1 | 	add	objptr, ##1868
010b0     07 91 02 FB | 	rdlong	local21, objptr
010b4     10 0F 06 F1 | 	add	objptr, #272
010b8     07 91 62 FC | 	wrlong	local21, objptr
010bc     01 00 00 FF 
010c0     85 0E 86 F1 | 	sub	objptr, ##645
010c4     07 91 02 FB | 	rdlong	local21, objptr
010c8     75 0F 06 F1 | 	add	objptr, #373
010cc     07 91 62 FC | 	wrlong	local21, objptr
010d0     04 0E 06 F1 | 	add	objptr, #4
010d4     07 03 68 FC | 	wrlong	#1, objptr
010d8     67 0F 86 F1 | 	sub	objptr, #359
010dc     07 91 E2 FA | 	rdword	local21, objptr
010e0     0A 0E 06 F1 | 	add	objptr, #10
010e4     07 9B 02 FB | 	rdlong	local26, objptr
010e8     4D 91 82 F1 | 	sub	local21, local26
010ec     61 0F 06 F1 | 	add	objptr, #353
010f0     07 91 62 FC | 	wrlong	local21, objptr
010f4     6B 0F 86 F1 | 	sub	objptr, #363
010f8     07 91 E2 FA | 	rdword	local21, objptr
010fc     6F 0F 06 F1 | 	add	objptr, #367
01100     07 91 62 FC | 	wrlong	local21, objptr
01104     29 0F 86 F1 | 	sub	objptr, #297
01108     07 91 02 FB | 	rdlong	local21, objptr
0110c     07 90 66 F0 | 	shl	local21, #7
01110     2D 0F 06 F1 | 	add	objptr, #301
01114     07 91 62 FC | 	wrlong	local21, objptr
01118     04 0E 06 F1 | 	add	objptr, #4
0111c     18 00 80 FF 
01120     07 01 68 FC | 	wrlong	##12288, objptr
01124     51 0F 86 F1 | 	sub	objptr, #337
01128     07 91 02 FB | 	rdlong	local21, objptr
0112c     55 0F 06 F1 | 	add	objptr, #341
01130     07 91 62 FC | 	wrlong	local21, objptr
01134     04 0E 06 F1 | 	add	objptr, #4
01138     07 03 68 FC | 	wrlong	#1, objptr
0113c                 | ' 
0113c                 | '     old12=paula.channel2(0)
0113c                 | ' 	paula.channel2(0)=tracker.currSamplePtr(1)
0113c                 | ' 	paula.channel2(1)=1
0113c                 | ' 	paula.channel2(2)=tracker.currSampleLength(1)-tracker.currrepeatLength(1)
0113c                 | ' 	paula.channel2(3)=tracker.currSampleLength(1)
0113c                 | ' 	paula.channel2(4)=tracker.currVolume(1)*128
0113c                 | ' 	paula.channel2(5)=8192+4096
0113c                 | ' 	paula.channel2(6)=tracker.currPeriod(1)
0113c                 | ' 	paula.channel2(7)=1
0113c                 | '  '    if paula.channel2(0) <> old12 then paula.channel2(8)=0 :waitus(100) : paula.channel2(8)=1
0113c                 | '      if tracker.trigger(1) <> old2 then paula.channel2(8)=0 :waitus(100) : paula.channel2(8)=1 :old2=tracker.trigger(1)
0113c     45 0E 86 F1 | 	sub	objptr, #69
01140     07 91 C2 FA | 	rdbyte	local21, objptr
01144     29 0F 06 F1 | 	add	objptr, #297
01148     07 9B 02 FB | 	rdlong	local26, objptr
0114c     04 00 00 FF 
01150     4C 0E 86 F1 | 	sub	objptr, ##2124
01154     4D 91 0A F2 | 	cmp	local21, local26 wz
01158     40 00 90 AD |  if_e	jmp	#LR__0013
0115c     03 00 00 FF 
01160     6C 0F 06 F1 | 	add	objptr, ##1900
01164     07 01 68 FC | 	wrlong	#0, objptr
01168     03 00 00 FF 
0116c     6C 0F 86 F1 | 	sub	objptr, ##1900
01170     64 5A 06 F6 | 	mov	arg01, #100
01174     44 3F B0 FD | 	call	#__system___waitus
01178     03 00 00 FF 
0117c     6C 0F 06 F1 | 	add	objptr, ##1900
01180     07 03 68 FC | 	wrlong	#1, objptr
01184     49 0E 86 F1 | 	sub	objptr, #73
01188     07 91 C2 FA | 	rdbyte	local21, objptr
0118c     29 0F 06 F1 | 	add	objptr, #297
01190     07 91 62 FC | 	wrlong	local21, objptr
01194     04 00 00 FF 
01198     4C 0E 86 F1 | 	sub	objptr, ##2124
0119c                 | LR__0013
0119c     03 00 00 FF 
011a0     70 0F 06 F1 | 	add	objptr, ##1904
011a4     07 91 02 FB | 	rdlong	local21, objptr
011a8     F0 0E 06 F1 | 	add	objptr, #240
011ac     07 91 62 FC | 	wrlong	local21, objptr
011b0     01 00 00 FF 
011b4     85 0E 86 F1 | 	sub	objptr, ##645
011b8     07 91 02 FB | 	rdlong	local21, objptr
011bc     95 0F 06 F1 | 	add	objptr, #405
011c0     07 91 62 FC | 	wrlong	local21, objptr
011c4     04 0E 06 F1 | 	add	objptr, #4
011c8     07 03 68 FC | 	wrlong	#1, objptr
011cc     89 0F 86 F1 | 	sub	objptr, #393
011d0     07 91 E2 FA | 	rdword	local21, objptr
011d4     0C 0E 06 F1 | 	add	objptr, #12
011d8     07 9B 02 FB | 	rdlong	local26, objptr
011dc     4D 91 82 F1 | 	sub	local21, local26
011e0     81 0F 06 F1 | 	add	objptr, #385
011e4     07 91 62 FC | 	wrlong	local21, objptr
011e8     8D 0F 86 F1 | 	sub	objptr, #397
011ec     07 91 E2 FA | 	rdword	local21, objptr
011f0     91 0F 06 F1 | 	add	objptr, #401
011f4     07 91 62 FC | 	wrlong	local21, objptr
011f8     49 0F 86 F1 | 	sub	objptr, #329
011fc     07 91 02 FB | 	rdlong	local21, objptr
01200     07 90 66 F0 | 	shl	local21, #7
01204     4D 0F 06 F1 | 	add	objptr, #333
01208     07 91 62 FC | 	wrlong	local21, objptr
0120c     04 0E 06 F1 | 	add	objptr, #4
01210     18 00 80 FF 
01214     07 01 68 FC | 	wrlong	##12288, objptr
01218     71 0F 86 F1 | 	sub	objptr, #369
0121c     07 91 02 FB | 	rdlong	local21, objptr
01220     75 0F 06 F1 | 	add	objptr, #373
01224     07 91 62 FC | 	wrlong	local21, objptr
01228     04 0E 06 F1 | 	add	objptr, #4
0122c     07 03 68 FC | 	wrlong	#1, objptr
01230                 | ' 
01230                 | '     old13=paula.channel3(0)
01230                 | ' 	paula.channel3(0)=tracker.currSamplePtr(2)
01230                 | ' 	paula.channel3(1)=1
01230                 | ' 	paula.channel3(2)=tracker.currSampleLength(2)-tracker.currrepeatLength(2)
01230                 | ' 	paula.channel3(3)=tracker.currSampleLength(2)
01230                 | ' 	paula.channel3(4)=tracker.currVolume(2)*128
01230                 | ' 	paula.channel3(5)=8192+4096
01230                 | ' 	paula.channel3(6)=tracker.currPeriod(2)
01230                 | ' 	paula.channel3(7)=1
01230                 | '  '    if paula.channel3(0) <> old13 then paula.channel3(8)=0 :waitus(100) : paula.channel3	(8)=1
01230                 | '     if tracker.trigger(2) <> old3 then paula.channel3(8)=0 :waitus(100) : paula.channel3(8)=1 :old3=tracker.trigger(02)
01230     68 0E 86 F1 | 	sub	objptr, #104
01234     07 91 C2 FA | 	rdbyte	local21, objptr
01238     2C 0F 06 F1 | 	add	objptr, #300
0123c     07 9B 02 FB | 	rdlong	local26, objptr
01240     04 00 00 FF 
01244     50 0E 86 F1 | 	sub	objptr, ##2128
01248     4D 91 0A F2 | 	cmp	local21, local26 wz
0124c     40 00 90 AD |  if_e	jmp	#LR__0014
01250     03 00 00 FF 
01254     90 0F 06 F1 | 	add	objptr, ##1936
01258     07 01 68 FC | 	wrlong	#0, objptr
0125c     03 00 00 FF 
01260     90 0F 86 F1 | 	sub	objptr, ##1936
01264     64 5A 06 F6 | 	mov	arg01, #100
01268     50 3E B0 FD | 	call	#__system___waitus
0126c     03 00 00 FF 
01270     90 0F 06 F1 | 	add	objptr, ##1936
01274     07 03 68 FC | 	wrlong	#1, objptr
01278     6C 0E 86 F1 | 	sub	objptr, #108
0127c     07 91 C2 FA | 	rdbyte	local21, objptr
01280     2C 0F 06 F1 | 	add	objptr, #300
01284     07 91 62 FC | 	wrlong	local21, objptr
01288     04 00 00 FF 
0128c     50 0E 86 F1 | 	sub	objptr, ##2128
01290                 | LR__0014
01290     03 00 00 FF 
01294     94 0F 06 F1 | 	add	objptr, ##1940
01298     07 91 02 FB | 	rdlong	local21, objptr
0129c     D0 0E 06 F1 | 	add	objptr, #208
012a0     07 91 62 FC | 	wrlong	local21, objptr
012a4     01 00 00 FF 
012a8     85 0E 86 F1 | 	sub	objptr, ##645
012ac     07 91 02 FB | 	rdlong	local21, objptr
012b0     B5 0F 06 F1 | 	add	objptr, #437
012b4     07 91 62 FC | 	wrlong	local21, objptr
012b8     04 0E 06 F1 | 	add	objptr, #4
012bc     07 03 68 FC | 	wrlong	#1, objptr
012c0     AB 0F 86 F1 | 	sub	objptr, #427
012c4     07 91 E2 FA | 	rdword	local21, objptr
012c8     0E 0E 06 F1 | 	add	objptr, #14
012cc     07 9B 02 FB | 	rdlong	local26, objptr
012d0     4D 91 82 F1 | 	sub	local21, local26
012d4     A1 0F 06 F1 | 	add	objptr, #417
012d8     07 91 62 FC | 	wrlong	local21, objptr
012dc     AF 0F 86 F1 | 	sub	objptr, #431
012e0     07 91 E2 FA | 	rdword	local21, objptr
012e4     B3 0F 06 F1 | 	add	objptr, #435
012e8     07 91 62 FC | 	wrlong	local21, objptr
012ec     69 0F 86 F1 | 	sub	objptr, #361
012f0     07 91 02 FB | 	rdlong	local21, objptr
012f4     07 90 66 F0 | 	shl	local21, #7
012f8     6D 0F 06 F1 | 	add	objptr, #365
012fc     07 91 62 FC | 	wrlong	local21, objptr
01300     04 0E 06 F1 | 	add	objptr, #4
01304     08 00 80 FF 
01308     07 01 68 FC | 	wrlong	##4096, objptr
0130c     91 0F 86 F1 | 	sub	objptr, #401
01310     07 91 02 FB | 	rdlong	local21, objptr
01314     95 0F 06 F1 | 	add	objptr, #405
01318     07 91 62 FC | 	wrlong	local21, objptr
0131c     04 0E 06 F1 | 	add	objptr, #4
01320     07 03 68 FC | 	wrlong	#1, objptr
01324                 | ' 
01324                 | '     old14=paula.channel4(0)    
01324                 | ' 	paula.channel4(0)=tracker.currSamplePtr(3)
01324                 | ' 	paula.channel4(1)=1
01324                 | ' 	paula.channel4(2)=tracker.currSampleLength(3)-tracker.currrepeatLength(3)
01324                 | ' 	paula.channel4(3)=tracker.currSampleLength(3)
01324                 | ' 	paula.channel4(4)=tracker.currVolume(3)*128
01324                 | ' 	paula.channel4(5)=4096
01324                 | ' 	paula.channel4(6)=tracker.currPeriod(3)
01324                 | ' 	paula.channel4(7)=1
01324                 | '  '   if paula.channel4(0) <> old14 then paula.channel4(8)=0 :waitus(100) : paula.channel4	(8)=1
01324                 | '     if tracker.trigger(3) <> old4 then paula.channel4(8)=0 :waitus(100) : paula.channel4(8)=1 :old4=tracker.trigger(03)
01324     8B 0E 86 F1 | 	sub	objptr, #139
01328     07 91 C2 FA | 	rdbyte	local21, objptr
0132c     2F 0F 06 F1 | 	add	objptr, #303
01330     07 9B 02 FB | 	rdlong	local26, objptr
01334     04 00 00 FF 
01338     54 0E 86 F1 | 	sub	objptr, ##2132
0133c     4D 91 0A F2 | 	cmp	local21, local26 wz
01340     18 FC 9F AD |  if_e	jmp	#LR__0006
01344     03 00 00 FF 
01348     B4 0F 06 F1 | 	add	objptr, ##1972
0134c     07 01 68 FC | 	wrlong	#0, objptr
01350     03 00 00 FF 
01354     B4 0F 86 F1 | 	sub	objptr, ##1972
01358     64 5A 06 F6 | 	mov	arg01, #100
0135c     5C 3D B0 FD | 	call	#__system___waitus
01360     03 00 00 FF 
01364     B4 0F 06 F1 | 	add	objptr, ##1972
01368     07 03 68 FC | 	wrlong	#1, objptr
0136c     8F 0E 86 F1 | 	sub	objptr, #143
01370     07 91 C2 FA | 	rdbyte	local21, objptr
01374     2F 0F 06 F1 | 	add	objptr, #303
01378     07 91 62 FC | 	wrlong	local21, objptr
0137c     04 00 00 FF 
01380     54 0E 86 F1 | 	sub	objptr, ##2132
01384     D4 FB 9F FD | 	jmp	#LR__0006
01388     AF F0 03 F6 | 	mov	ptra, fp
0138c     BF 00 A0 FD | 	call	#popregs_
01390                 | _program_ret
01390     2D 00 64 FD | 	ret
01394                 | 
01394                 | ' 
01394                 | ' 
01394                 | ' ''---------- putpixel - put a pixel on the screen
01394                 | ' 
01394                 | ' pub putpixel1(x,y,c) |byte b
01394                 | _hng030rm_spin2_putpixel1
01394                 | ' 
01394                 | ' 
01394                 | ' if ((x>=0) & (x<32*cpl) & (y>=0) & (y<lines))
01394     00 2E 06 F6 | 	mov	_var01, #0
01398     00 5A 5E F2 | 	cmps	arg01, #0 wcz
0139c     01 2E 66 36 |  if_ae	neg	_var01, #1
013a0     00 30 06 F6 | 	mov	_var02, #0
013a4     90 0E 06 F1 | 	add	objptr, #144
013a8     07 33 02 FB | 	rdlong	_var03, objptr
013ac     05 32 66 F0 | 	shl	_var03, #5
013b0     19 5B 5A F2 | 	cmps	arg01, _var03 wcz
013b4     01 30 66 C6 |  if_b	neg	_var02, #1
013b8     18 2F 02 F5 | 	and	_var01, _var02
013bc     00 34 06 F6 | 	mov	_var04, #0
013c0     00 5C 5E F2 | 	cmps	arg02, #0 wcz
013c4     01 34 66 36 |  if_ae	neg	_var04, #1
013c8     1A 2F 02 F5 | 	and	_var01, _var04
013cc     00 36 06 F6 | 	mov	_var05, #0
013d0     04 0E 06 F1 | 	add	objptr, #4
013d4     07 39 02 FB | 	rdlong	_var06, objptr
013d8     94 0E 86 F1 | 	sub	objptr, #148
013dc     1C 5D 5A F2 | 	cmps	arg02, _var06 wcz
013e0     01 36 66 C6 |  if_b	neg	_var05, #1
013e4     1B 2F CA F7 | 	test	_var01, _var05 wz
013e8     8C 00 90 AD |  if_e	jmp	#LR__0017
013ec     90 0E 06 F1 | 	add	objptr, #144
013f0     07 3B 02 FB | 	rdlong	_var07, objptr
013f4     90 0E 86 F1 | 	sub	objptr, #144
013f8     02 3A 66 F0 | 	shl	_var07, #2
013fc     2E 3B 02 FD | 	qmul	_var07, arg02
01400     18 3C 62 FD | 	getqx	_var08
01404     07 3F 02 FB | 	rdlong	_var09, objptr
01408     1E 3F 02 F1 | 	add	_var09, _var08
0140c     2D 41 02 F6 | 	mov	_var10, arg01
01410     03 40 46 F0 | 	shr	_var10, #3
01414     20 3F 02 F1 | 	add	_var09, _var10
01418                 | '     b:=byte[buf_ptr+4*cpl*y+(x>>3)]
01418     1F 43 C2 FA | 	rdbyte	_var11, _var09
0141c                 | '     if (c==0)
0141c     00 5E 0E F2 | 	cmp	arg03, #0 wz
01420     18 00 90 5D |  if_ne	jmp	#LR__0015
01424     2D 2F 52 F6 | 	abs	_var01, arg01 wc
01428     07 2E 06 F5 | 	and	_var01, #7
0142c     17 2F 62 C6 |  if_b	neg	_var01, _var01
01430     17 45 C2 F9 | 	decod	_var12, _var01
01434                 | '       b:=b & !(1<<(x//8))
01434     22 43 22 F5 | 	andn	_var11, _var12
01438                 | '     else
01438     14 00 90 FD | 	jmp	#LR__0016
0143c                 | LR__0015
0143c     2D 2F 52 F6 | 	abs	_var01, arg01 wc
01440     07 2E 06 F5 | 	and	_var01, #7
01444     17 2F 62 C6 |  if_b	neg	_var01, _var01
01448     17 47 C2 F9 | 	decod	_var13, _var01
0144c                 | '       b:=b |(1<<(x//8))
0144c     23 43 42 F5 | 	or	_var11, _var13
01450                 | LR__0016
01450     90 0E 06 F1 | 	add	objptr, #144
01454     07 49 02 FB | 	rdlong	_var14, objptr
01458     90 0E 86 F1 | 	sub	objptr, #144
0145c     02 48 66 F0 | 	shl	_var14, #2
01460     2E 49 02 FD | 	qmul	_var14, arg02
01464     18 4A 62 FD | 	getqx	_var15
01468     07 4D 02 FB | 	rdlong	_var16, objptr
0146c     25 4D 02 F1 | 	add	_var16, _var15
01470     20 4D 02 F1 | 	add	_var16, _var10
01474                 | '     byte[buf_ptr+4*cpl*y+(x>>3)]:=b
01474     26 43 42 FC | 	wrbyte	_var11, _var16
01478                 | LR__0017
01478                 | _hng030rm_spin2_putpixel1_ret
01478     2D 00 64 FD | 	ret
0147c                 | 
0147c                 | ' 
0147c                 | ' 
0147c                 | ' pub putpixel2(x,y,c) |byte b
0147c                 | _hng030rm_spin2_putpixel2
0147c                 | ' 
0147c                 | ' 
0147c                 | ' if ((x>=0) & (x<16*cpl) & (y>=0) & (y<lines))
0147c     00 2E 06 F6 | 	mov	_var01, #0
01480     00 5A 5E F2 | 	cmps	arg01, #0 wcz
01484     01 2E 66 36 |  if_ae	neg	_var01, #1
01488     00 30 06 F6 | 	mov	_var02, #0
0148c     90 0E 06 F1 | 	add	objptr, #144
01490     07 33 02 FB | 	rdlong	_var03, objptr
01494     04 32 66 F0 | 	shl	_var03, #4
01498     19 5B 5A F2 | 	cmps	arg01, _var03 wcz
0149c     01 30 66 C6 |  if_b	neg	_var02, #1
014a0     18 2F 02 F5 | 	and	_var01, _var02
014a4     00 34 06 F6 | 	mov	_var04, #0
014a8     00 5C 5E F2 | 	cmps	arg02, #0 wcz
014ac     01 34 66 36 |  if_ae	neg	_var04, #1
014b0     1A 2F 02 F5 | 	and	_var01, _var04
014b4     00 36 06 F6 | 	mov	_var05, #0
014b8     04 0E 06 F1 | 	add	objptr, #4
014bc     07 39 02 FB | 	rdlong	_var06, objptr
014c0     94 0E 86 F1 | 	sub	objptr, #148
014c4     1C 5D 5A F2 | 	cmps	arg02, _var06 wcz
014c8     01 36 66 C6 |  if_b	neg	_var05, #1
014cc     1B 2F CA F7 | 	test	_var01, _var05 wz
014d0     7C 00 90 AD |  if_e	jmp	#LR__0018
014d4     90 0E 06 F1 | 	add	objptr, #144
014d8     07 3B 02 FB | 	rdlong	_var07, objptr
014dc     90 0E 86 F1 | 	sub	objptr, #144
014e0     02 3A 66 F0 | 	shl	_var07, #2
014e4     2E 3B 02 FD | 	qmul	_var07, arg02
014e8     18 3C 62 FD | 	getqx	_var08
014ec     07 3F 02 FB | 	rdlong	_var09, objptr
014f0     1E 3F 02 F1 | 	add	_var09, _var08
014f4     2D 41 02 F6 | 	mov	_var10, arg01
014f8     02 40 46 F0 | 	shr	_var10, #2
014fc     20 3F 02 F1 | 	add	_var09, _var10
01500                 | '     b:=byte[buf_ptr+4*cpl*y+(x>>2)]
01500     1F 43 C2 FA | 	rdbyte	_var11, _var09
01504     2D 2F 52 F6 | 	abs	_var01, arg01 wc
01508     03 2E 06 F5 | 	and	_var01, #3
0150c     17 2F 62 C6 |  if_b	neg	_var01, _var01
01510     01 2E 66 F0 | 	shl	_var01, #1
01514     03 44 06 F6 | 	mov	_var12, #3
01518     17 45 62 F0 | 	shl	_var12, _var01
0151c                 | '     b:=b & !(%11<<((x//4)<<1))
0151c     22 43 22 F5 | 	andn	_var11, _var12
01520     17 5F 62 F0 | 	shl	arg03, _var01
01524                 | '     b:=b |(c<<((x//4)<<1))
01524     2F 43 42 F5 | 	or	_var11, arg03
01528     90 0E 06 F1 | 	add	objptr, #144
0152c     07 47 02 FB | 	rdlong	_var13, objptr
01530     90 0E 86 F1 | 	sub	objptr, #144
01534     02 46 66 F0 | 	shl	_var13, #2
01538     2E 47 02 FD | 	qmul	_var13, arg02
0153c     18 48 62 FD | 	getqx	_var14
01540     07 4B 02 FB | 	rdlong	_var15, objptr
01544     24 4B 02 F1 | 	add	_var15, _var14
01548     20 4B 02 F1 | 	add	_var15, _var10
0154c                 | '     byte[buf_ptr+4*cpl*y+(x>>2)]:=b
0154c     25 43 42 FC | 	wrbyte	_var11, _var15
01550                 | LR__0018
01550                 | _hng030rm_spin2_putpixel2_ret
01550     2D 00 64 FD | 	ret
01554                 | 
01554                 | ' 
01554                 | ' 
01554                 | ' pub putpixel4(x,y,c) |byte b
01554                 | _hng030rm_spin2_putpixel4
01554                 | ' 
01554                 | ' if ((x>=0) & (x<16*cpl) & (y>=0) & (y<lines))
01554     00 2E 06 F6 | 	mov	_var01, #0
01558     00 5A 5E F2 | 	cmps	arg01, #0 wcz
0155c     01 2E 66 36 |  if_ae	neg	_var01, #1
01560     00 30 06 F6 | 	mov	_var02, #0
01564     90 0E 06 F1 | 	add	objptr, #144
01568     07 33 02 FB | 	rdlong	_var03, objptr
0156c     04 32 66 F0 | 	shl	_var03, #4
01570     19 5B 5A F2 | 	cmps	arg01, _var03 wcz
01574     01 30 66 C6 |  if_b	neg	_var02, #1
01578     18 2F 02 F5 | 	and	_var01, _var02
0157c     00 34 06 F6 | 	mov	_var04, #0
01580     00 5C 5E F2 | 	cmps	arg02, #0 wcz
01584     01 34 66 36 |  if_ae	neg	_var04, #1
01588     1A 2F 02 F5 | 	and	_var01, _var04
0158c     00 36 06 F6 | 	mov	_var05, #0
01590     04 0E 06 F1 | 	add	objptr, #4
01594     07 39 02 FB | 	rdlong	_var06, objptr
01598     94 0E 86 F1 | 	sub	objptr, #148
0159c     1C 5D 5A F2 | 	cmps	arg02, _var06 wcz
015a0     01 36 66 C6 |  if_b	neg	_var05, #1
015a4     1B 2F CA F7 | 	test	_var01, _var05 wz
015a8     7C 00 90 AD |  if_e	jmp	#LR__0019
015ac     90 0E 06 F1 | 	add	objptr, #144
015b0     07 3B 02 FB | 	rdlong	_var07, objptr
015b4     90 0E 86 F1 | 	sub	objptr, #144
015b8     02 3A 66 F0 | 	shl	_var07, #2
015bc     2E 3B 02 FD | 	qmul	_var07, arg02
015c0     18 3C 62 FD | 	getqx	_var08
015c4     07 3F 02 FB | 	rdlong	_var09, objptr
015c8     1E 3F 02 F1 | 	add	_var09, _var08
015cc     2D 41 02 F6 | 	mov	_var10, arg01
015d0     01 40 46 F0 | 	shr	_var10, #1
015d4     20 3F 02 F1 | 	add	_var09, _var10
015d8                 | '     b:=byte[buf_ptr+4*cpl*y+(x>>1)]
015d8     1F 43 C2 FA | 	rdbyte	_var11, _var09
015dc     2D 2F 52 F6 | 	abs	_var01, arg01 wc
015e0     01 2E 06 F5 | 	and	_var01, #1
015e4     17 2F 62 C6 |  if_b	neg	_var01, _var01
015e8     02 2E 66 F0 | 	shl	_var01, #2
015ec     0F 44 06 F6 | 	mov	_var12, #15
015f0     17 45 62 F0 | 	shl	_var12, _var01
015f4                 | '     b:=b & !(%1111<<((x//2)<<2))
015f4     22 43 22 F5 | 	andn	_var11, _var12
015f8     17 5F 62 F0 | 	shl	arg03, _var01
015fc                 | '     b:=b |(c<<((x//2)<<2))
015fc     2F 43 42 F5 | 	or	_var11, arg03
01600     90 0E 06 F1 | 	add	objptr, #144
01604     07 47 02 FB | 	rdlong	_var13, objptr
01608     90 0E 86 F1 | 	sub	objptr, #144
0160c     02 46 66 F0 | 	shl	_var13, #2
01610     2E 47 02 FD | 	qmul	_var13, arg02
01614     18 48 62 FD | 	getqx	_var14
01618     07 4B 02 FB | 	rdlong	_var15, objptr
0161c     24 4B 02 F1 | 	add	_var15, _var14
01620     20 4B 02 F1 | 	add	_var15, _var10
01624                 | '     byte[buf_ptr+4*cpl*y+(x>>1)]:=b
01624     25 43 42 FC | 	wrbyte	_var11, _var15
01628                 | LR__0019
01628                 | _hng030rm_spin2_putpixel4_ret
01628     2D 00 64 FD | 	ret
0162c                 | 
0162c                 | ' 
0162c                 | ' 
0162c                 | ' pub putpixel8(x,y,c)
0162c                 | _hng030rm_spin2_putpixel8
0162c                 | ' 
0162c                 | ' if ((x>=0) & (x<4*cpl) & (y>=0) & (y<lines))
0162c     00 2E 06 F6 | 	mov	_var01, #0
01630     00 5A 5E F2 | 	cmps	arg01, #0 wcz
01634     01 2E 66 36 |  if_ae	neg	_var01, #1
01638     00 30 06 F6 | 	mov	_var02, #0
0163c     90 0E 06 F1 | 	add	objptr, #144
01640     07 33 02 FB | 	rdlong	_var03, objptr
01644     02 32 66 F0 | 	shl	_var03, #2
01648     19 5B 5A F2 | 	cmps	arg01, _var03 wcz
0164c     01 30 66 C6 |  if_b	neg	_var02, #1
01650     18 2F 02 F5 | 	and	_var01, _var02
01654     00 34 06 F6 | 	mov	_var04, #0
01658     00 5C 5E F2 | 	cmps	arg02, #0 wcz
0165c     01 34 66 36 |  if_ae	neg	_var04, #1
01660     1A 2F 02 F5 | 	and	_var01, _var04
01664     00 36 06 F6 | 	mov	_var05, #0
01668     04 0E 06 F1 | 	add	objptr, #4
0166c     07 39 02 FB | 	rdlong	_var06, objptr
01670     94 0E 86 F1 | 	sub	objptr, #148
01674     1C 5D 5A F2 | 	cmps	arg02, _var06 wcz
01678     01 36 66 C6 |  if_b	neg	_var05, #1
0167c     1B 2F CA F7 | 	test	_var01, _var05 wz
01680     28 00 90 AD |  if_e	jmp	#LR__0020
01684     90 0E 06 F1 | 	add	objptr, #144
01688     07 3B 02 FB | 	rdlong	_var07, objptr
0168c     90 0E 86 F1 | 	sub	objptr, #144
01690     02 3A 66 F0 | 	shl	_var07, #2
01694     2E 3B 02 FD | 	qmul	_var07, arg02
01698     18 3C 62 FD | 	getqx	_var08
0169c     07 3F 02 FB | 	rdlong	_var09, objptr
016a0     1E 3F 02 F1 | 	add	_var09, _var08
016a4     2D 3F 02 F1 | 	add	_var09, arg01
016a8                 | '     byte[buf_ptr+4*cpl*y+x]:=c
016a8     1F 5F 42 FC | 	wrbyte	arg03, _var09
016ac                 | LR__0020
016ac                 | _hng030rm_spin2_putpixel8_ret
016ac     2D 00 64 FD | 	ret
016b0                 | 
016b0                 | ' 
016b0                 | ' ''---------- Set the border color, o is upper border, lines+1 is lower border
016b0                 | ' 
016b0                 | ' pub setbordercolor(r,g,b) | color
016b0                 | _hng030rm_spin2_setbordercolor
016b0     18 5A 66 F0 | 	shl	arg01, #24
016b4     10 5C 66 F0 | 	shl	arg02, #16
016b8     2E 5B 02 F1 | 	add	arg01, arg02
016bc     08 5E 66 F0 | 	shl	arg03, #8
016c0     2F 5B 02 F1 | 	add	arg01, arg03
016c4                 | ' 
016c4                 | ' color:=r<<24+g<<16+b<<8
016c4                 | ' bordercolor:=color
016c4     2C 0E 06 F1 | 	add	objptr, #44
016c8     07 5B 62 FC | 	wrlong	arg01, objptr
016cc     2C 0E 86 F1 | 	sub	objptr, #44
016d0                 | _hng030rm_spin2_setbordercolor_ret
016d0     2D 00 64 FD | 	ret
016d4                 | 
016d4                 | ' 
016d4                 | ' ''---------- Output a char at the cursor position, move the cursor
016d4                 | ' 
016d4                 | ' pub putchar(achar) | c,x,y
016d4                 | _hng030rm_spin2_putchar
016d4     12 5A 05 F6 | 	mov	COUNT_, #18
016d8     B0 00 A0 FD | 	call	#pushregs_
016dc     2D 69 02 F6 | 	mov	local01, arg01
016e0                 | ' 
016e0                 | ' if achar==10
016e0     0A 68 0E F2 | 	cmp	local01, #10 wz
016e4     58 00 90 5D |  if_ne	jmp	#LR__0021
016e8                 | '   crlf()
016e8                 | ' 
016e8                 | ' cursor_x:=0
016e8     34 0E 06 F1 | 	add	objptr, #52
016ec     07 01 48 FC | 	wrbyte	#0, objptr
016f0                 | ' cursor_y+=1
016f0     01 0E 06 F1 | 	add	objptr, #1
016f4     07 6B C2 FA | 	rdbyte	local02, objptr
016f8     01 6A 06 F1 | 	add	local02, #1
016fc     07 6B 42 FC | 	wrbyte	local02, objptr
01700                 | ' if cursor_y>lines-1
01700     5F 0E 06 F1 | 	add	objptr, #95
01704     07 6B 02 FB | 	rdlong	local02, objptr
01708     01 6A 86 F1 | 	sub	local02, #1
0170c     5F 0E 86 F1 | 	sub	objptr, #95
01710     07 6D C2 FA | 	rdbyte	local03, objptr
01714     35 0E 86 F1 | 	sub	objptr, #53
01718     35 6D 5A F2 | 	cmps	local03, local02 wcz
0171c     38 01 90 ED |  if_be	jmp	#LR__0024
01720                 | '   scrollup()
01720     40 01 B0 FD | 	call	#_hng030rm_spin2_scrollup
01724     94 0E 06 F1 | 	add	objptr, #148
01728     07 6F 02 FB | 	rdlong	local04, objptr
0172c     01 6E 86 F1 | 	sub	local04, #1
01730                 | '   cursor_y:=lines-1
01730     5F 0E 86 F1 | 	sub	objptr, #95
01734     07 6F 42 FC | 	wrbyte	local04, objptr
01738     35 0E 86 F1 | 	sub	objptr, #53
0173c                 | ' else  
0173c     18 01 90 FD | 	jmp	#LR__0024
01740                 | LR__0021
01740                 | '   x:=cursor_x
01740     34 0E 06 F1 | 	add	objptr, #52
01744     07 71 C2 FA | 	rdbyte	local05, objptr
01748                 | '   y:=cursor_y
01748     01 0E 06 F1 | 	add	objptr, #1
0174c     07 73 C2 FA | 	rdbyte	local06, objptr
01750     03 0E 06 F1 | 	add	objptr, #3
01754     07 75 02 FB | 	rdlong	local07, objptr
01758     18 74 66 F0 | 	shl	local07, #24
0175c     04 0E 06 F1 | 	add	objptr, #4
01760     07 77 02 FB | 	rdlong	local08, objptr
01764     10 76 66 F0 | 	shl	local08, #16
01768     3B 75 02 F1 | 	add	local07, local08
0176c                 | '   c:=write_color<<24+write_background<<16
0176c     54 0E 06 F1 | 	add	objptr, #84
01770     07 79 02 FB | 	rdlong	local09, objptr
01774     90 0E 86 F1 | 	sub	objptr, #144
01778     39 79 02 FD | 	qmul	local09, local06
0177c     18 7A 62 FD | 	getqx	local10
01780     38 7B 02 F1 | 	add	local10, local05
01784     02 7A 66 F0 | 	shl	local10, #2
01788     07 7D 02 FB | 	rdlong	local11, objptr
0178c     3D 7D 02 F1 | 	add	local11, local10
01790     3E 7F 02 FB | 	rdlong	local12, local11
01794     7F 00 00 FF 
01798     FF 7F 06 F5 | 	and	local12, ##65535
0179c     3A 7F 42 F5 | 	or	local12, local07
017a0                 | '   long[buf_ptr+4*(cpl*y+x)]:=long[buf_ptr+4*(cpl*y+x)] &$FFFF | c
017a0     3E 7F 62 FC | 	wrlong	local12, local11
017a4     90 0E 06 F1 | 	add	objptr, #144
017a8     07 79 02 FB | 	rdlong	local09, objptr
017ac     90 0E 86 F1 | 	sub	objptr, #144
017b0     39 79 02 FD | 	qmul	local09, local06
017b4     18 80 62 FD | 	getqx	local13
017b8     38 81 02 F1 | 	add	local13, local05
017bc     02 80 66 F0 | 	shl	local13, #2
017c0     07 83 02 FB | 	rdlong	local14, objptr
017c4     40 83 02 F1 | 	add	local14, local13
017c8     41 85 02 FB | 	rdlong	local15, local14
017cc     FF 84 26 F5 | 	andn	local15, #255
017d0     FF 68 06 F5 | 	and	local01, #255
017d4     34 85 42 F5 | 	or	local15, local01
017d8                 | '   long[buf_ptr+4*(cpl*y+x)]:=(long[buf_ptr+4*(cpl*y+x)] & $FFFFFF00)  |(achar & $000000FF)
017d8     41 85 62 FC | 	wrlong	local15, local14
017dc                 | '   cursor_x+=1
017dc     34 0E 06 F1 | 	add	objptr, #52
017e0     07 87 C2 FA | 	rdbyte	local16, objptr
017e4     01 86 06 F1 | 	add	local16, #1
017e8     07 87 42 FC | 	wrbyte	local16, objptr
017ec                 | '   if cursor_x==cpl
017ec     07 87 C2 FA | 	rdbyte	local16, objptr
017f0     5C 0E 06 F1 | 	add	objptr, #92
017f4     07 89 02 FB | 	rdlong	local17, objptr
017f8     90 0E 86 F1 | 	sub	objptr, #144
017fc     44 87 0A F2 | 	cmp	local16, local17 wz
01800     54 00 90 5D |  if_ne	jmp	#LR__0023
01804                 | '     cursor_x:=0
01804     34 0E 06 F1 | 	add	objptr, #52
01808     07 01 48 FC | 	wrbyte	#0, objptr
0180c                 | '     cursor_y+=1
0180c     01 0E 06 F1 | 	add	objptr, #1
01810     07 87 C2 FA | 	rdbyte	local16, objptr
01814     01 86 06 F1 | 	add	local16, #1
01818     07 87 42 FC | 	wrbyte	local16, objptr
0181c                 | '     if cursor_y>lines-1
0181c     5F 0E 06 F1 | 	add	objptr, #95
01820     07 87 02 FB | 	rdlong	local16, objptr
01824     01 86 86 F1 | 	sub	local16, #1
01828     5F 0E 86 F1 | 	sub	objptr, #95
0182c     07 89 C2 FA | 	rdbyte	local17, objptr
01830     35 0E 86 F1 | 	sub	objptr, #53
01834     43 89 5A F2 | 	cmps	local17, local16 wcz
01838     1C 00 90 ED |  if_be	jmp	#LR__0022
0183c                 | '       scrollup()
0183c     24 00 B0 FD | 	call	#_hng030rm_spin2_scrollup
01840     94 0E 06 F1 | 	add	objptr, #148
01844     07 8B 02 FB | 	rdlong	local18, objptr
01848     01 8A 86 F1 | 	sub	local18, #1
0184c                 | '       cursor_y:=lines-1
0184c     5F 0E 86 F1 | 	sub	objptr, #95
01850     07 8B 42 FC | 	wrbyte	local18, objptr
01854     35 0E 86 F1 | 	sub	objptr, #53
01858                 | LR__0022
01858                 | LR__0023
01858                 | LR__0024
01858     AF F0 03 F6 | 	mov	ptra, fp
0185c     BF 00 A0 FD | 	call	#popregs_
01860                 | _hng030rm_spin2_putchar_ret
01860     2D 00 64 FD | 	ret
01864                 | 
01864                 | ' 
01864                 | ' ''-----------  Scroll the screen one line up
01864                 | ' 
01864                 | ' pub scrollup() | i
01864                 | _hng030rm_spin2_scrollup
01864     0A 5A 05 F6 | 	mov	COUNT_, #10
01868     B0 00 A0 FD | 	call	#pushregs_
0186c     90 0E 06 F1 | 	add	objptr, #144
01870     07 69 02 FB | 	rdlong	local01, objptr
01874     90 0E 86 F1 | 	sub	objptr, #144
01878     02 68 66 F0 | 	shl	local01, #2
0187c     07 5D 02 FB | 	rdlong	arg02, objptr
01880     34 5D 02 F1 | 	add	arg02, local01
01884     30 0E 06 F1 | 	add	objptr, #48
01888     07 5F 02 FB | 	rdlong	arg03, objptr
0188c     60 0E 06 F1 | 	add	objptr, #96
01890     07 6B 02 FB | 	rdlong	local02, objptr
01894     90 0E 86 F1 | 	sub	objptr, #144
01898     35 5F 82 F1 | 	sub	arg03, local02
0189c                 | ' 
0189c                 | ' longmove(buf_ptr,buf_ptr+4*cpl,buflen-cpl)
0189c     07 5B 02 FB | 	rdlong	arg01, objptr
018a0     A8 35 B0 FD | 	call	#__system__longmove
018a4                 | ' repeat i from buflen-cpl to buflen-1
018a4     30 0E 06 F1 | 	add	objptr, #48
018a8     07 6D 02 FB | 	rdlong	local03, objptr
018ac     60 0E 06 F1 | 	add	objptr, #96
018b0     07 6B 02 FB | 	rdlong	local02, objptr
018b4     35 6D 82 F1 | 	sub	local03, local02
018b8     60 0E 86 F1 | 	sub	objptr, #96
018bc     07 6F 02 FB | 	rdlong	local04, objptr
018c0     01 6E 86 F1 | 	sub	local04, #1
018c4     07 71 02 FB | 	rdlong	local05, objptr
018c8     60 0E 06 F1 | 	add	objptr, #96
018cc     07 73 02 FB | 	rdlong	local06, objptr
018d0     90 0E 86 F1 | 	sub	objptr, #144
018d4     39 71 82 F1 | 	sub	local05, local06
018d8     38 6F 5A F2 | 	cmps	local04, local05 wcz
018dc     01 74 06 16 |  if_a	mov	local07, #1
018e0     01 74 66 E6 |  if_be	neg	local07, #1
018e4     3A 6F 02 F1 | 	add	local04, local07
018e8     44 E7 9F FE | 	loc	pa,	#(@LR__0026-@LR__0025)
018ec     93 00 A0 FD | 	call	#FCACHE_LOAD_
018f0                 | LR__0025
018f0     36 77 02 F6 | 	mov	local08, local03
018f4     02 76 66 F0 | 	shl	local08, #2
018f8     07 79 02 FB | 	rdlong	local09, objptr
018fc     3B 79 02 F1 | 	add	local09, local08
01900     3C 7B 02 FB | 	rdlong	local10, local09
01904     80 FF 7F FF 
01908     00 7A 06 F5 | 	and	local10, ##-65536
0190c     20 7A 46 F5 | 	or	local10, #32
01910                 | '   long[buf_ptr+4*i]:=(long[buf_ptr+4*i] & $FFFF0000) | 32
01910     3C 7B 62 FC | 	wrlong	local10, local09
01914     3A 6D 02 F1 | 	add	local03, local07
01918     37 6D 0A F2 | 	cmp	local03, local04 wz
0191c     D0 FF 9F 5D |  if_ne	jmp	#LR__0025
01920                 | LR__0026
01920     AF F0 03 F6 | 	mov	ptra, fp
01924     BF 00 A0 FD | 	call	#popregs_
01928                 | _hng030rm_spin2_scrollup_ret
01928     2D 00 64 FD | 	ret
0192c                 | 
0192c                 | ' 
0192c                 | ' 
0192c                 | ' 
0192c                 | ' '*************************************************************************
0192c                 | ' '                                                                        *
0192c                 | ' '  Mode setting and driver start                                                          *
0192c                 | ' '                                                                        *
0192c                 | ' '*************************************************************************
0192c                 | ' 
0192c                 | ' ''---------  Set the graphics mode
0192c                 | ' 
0192c                 | ' 
0192c                 | ' 
0192c                 | ' pub setmode(mode) | i', 'xzoom, yzoom, azoom
0192c                 | _hng030rm_spin2_setmode
0192c     50 5A 05 F6 | 	mov	COUNT_, #80
01930     B0 00 A0 FD | 	call	#pushregs_
01934     2D 69 02 F6 | 	mov	local01, arg01
01938                 | ' 
01938                 | ' '' mode:tn_bb_cc_vv_hh
01938                 | ' '' hh - h.zoom, vv-v.zoom, cc-c.depth,
01938                 | ' '' bb - borders/total pixels, 00-wide/1140, 01 medium/1026, 10 narrow/912, 11 no border, 1024 px PAL, 880 px NTSC
01938                 | ' 
01938                 | ' if mode==(512+192+48)
01938     01 00 00 FF 
0193c     F0 68 0E F2 | 	cmp	local01, ##752 wz
01940                 | '   return 'no RAM
01940     1C 0A 90 AD |  if_e	jmp	#LR__0067
01944                 | ' 
01944                 | ' case_fast (mode>>6) & 7 ' timings are the same for graphic and text
01944     34 6B 02 F6 | 	mov	local02, local01
01948     06 6A 46 F0 | 	shr	local02, #6
0194c     07 6A 06 F5 | 	and	local02, #7
01950     08 6A 26 F3 | 	fle	local02, #8
01954     35 6D 02 F6 | 	mov	local03, local02
01958     30 6C 62 FD | 	jmprel	local03
0195c                 | LR__0027
0195c     20 00 90 FD | 	jmp	#LR__0028
01960     58 00 90 FD | 	jmp	#LR__0029
01964     90 00 90 FD | 	jmp	#LR__0030
01968     C8 00 90 FD | 	jmp	#LR__0031
0196c     00 01 90 FD | 	jmp	#LR__0032
01970     38 01 90 FD | 	jmp	#LR__0033
01974     70 01 90 FD | 	jmp	#LR__0034
01978     A8 01 90 FD | 	jmp	#LR__0035
0197c     E4 01 90 FD | 	jmp	#LR__0036
01980                 | LR__0028
01980                 | ' 
01980                 | '     0:  longmove(@timings,@timings000,16)   'PAL 50 Hz signaling 1140x624, active 800x480, 100x30 text, wide border, 2 colors per pixel, 00_00_00_00_00=0, 354_693_878 Hz
01980     50 0E 06 F1 | 	add	objptr, #80
01984     07 5B 02 F6 | 	mov	arg01, objptr
01988     50 0E 86 F1 | 	sub	objptr, #80
0198c     0E 00 00 FF 
01990     58 18 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7256
01994     0C 6F 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
01998     37 71 02 F6 | 	mov	local05, local04
0199c     10 72 06 F6 | 	mov	local06, #16
019a0     38 5D 02 F6 | 	mov	arg02, local05
019a4     10 5E 06 F6 | 	mov	arg03, #16
019a8     0E 00 00 FF 
019ac     58 18 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7256
019b0     98 34 B0 FD | 	call	#__system__longmove
019b4     14 75 02 F6 | 	mov	local07, result1
019b8     A8 01 90 FD | 	jmp	#LR__0036
019bc                 | LR__0029
019bc                 | '     1:  longmove(@timings,@timings064,16)   'PAL 50 Hz signaling 1026x624, active 880x496, 110x31 text, medium border, 2 colors per pixel 00_01_00_00_00=64, 319_215_686 Hz
019bc     50 0E 06 F1 | 	add	objptr, #80
019c0     07 5B 02 F6 | 	mov	arg01, objptr
019c4     50 0E 86 F1 | 	sub	objptr, #80
019c8     0E 00 00 FF 
019cc     98 18 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7320
019d0     0C 6F 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
019d4     37 71 02 F6 | 	mov	local05, local04
019d8     10 72 06 F6 | 	mov	local06, #16
019dc     38 5D 02 F6 | 	mov	arg02, local05
019e0     10 5E 06 F6 | 	mov	arg03, #16
019e4     0E 00 00 FF 
019e8     98 18 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7320
019ec     5C 34 B0 FD | 	call	#__system__longmove
019f0     14 75 02 F6 | 	mov	local07, result1
019f4     6C 01 90 FD | 	jmp	#LR__0036
019f8                 | LR__0030
019f8                 | '     2:  longmove(@timings,@timings128,16)   'PAL 50 Hz signaling 912x624, active 800x480, 100x30 text, medium border, 2 colors per pixel 00_10_00_00_00=64, 283750000z
019f8     50 0E 06 F1 | 	add	objptr, #80
019fc     07 5B 02 F6 | 	mov	arg01, objptr
01a00     50 0E 86 F1 | 	sub	objptr, #80
01a04     0E 00 00 FF 
01a08     D8 18 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7384
01a0c     0C 6F 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
01a10     37 71 02 F6 | 	mov	local05, local04
01a14     10 72 06 F6 | 	mov	local06, #16
01a18     38 5D 02 F6 | 	mov	arg02, local05
01a1c     10 5E 06 F6 | 	mov	arg03, #16
01a20     0E 00 00 FF 
01a24     D8 18 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7384
01a28     20 34 B0 FD | 	call	#__system__longmove
01a2c     14 75 02 F6 | 	mov	local07, result1
01a30     30 01 90 FD | 	jmp	#LR__0036
01a34                 | LR__0031
01a34                 | '     3:  longmove(@timings,@timings192,16)   'PAL 50 Hz signaling 1140x624, active 1024x576, 128x36 text, borderless, 2 colors per pixel 00_11_00_00_00=6192, 354_693_878 Hz
01a34     50 0E 06 F1 | 	add	objptr, #80
01a38     07 5B 02 F6 | 	mov	arg01, objptr
01a3c     50 0E 86 F1 | 	sub	objptr, #80
01a40     0E 00 00 FF 
01a44     18 19 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7448
01a48     0C 6F 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
01a4c     37 71 02 F6 | 	mov	local05, local04
01a50     10 72 06 F6 | 	mov	local06, #16
01a54     38 5D 02 F6 | 	mov	arg02, local05
01a58     10 5E 06 F6 | 	mov	arg03, #16
01a5c     0E 00 00 FF 
01a60     18 19 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7448
01a64     E4 33 B0 FD | 	call	#__system__longmove
01a68     14 75 02 F6 | 	mov	local07, result1
01a6c     F4 00 90 FD | 	jmp	#LR__0036
01a70                 | LR__0032
01a70                 | '     4:  longmove(@timings,@timings256,16)   'NTSC 50 Hz signaling 1140x524, active 800x480, 100x30 text, NO PLACE FOR wide border, 2 colors per pixel, 01_00_00_00_00=256, 357959184 Hz
01a70     50 0E 06 F1 | 	add	objptr, #80
01a74     07 5B 02 F6 | 	mov	arg01, objptr
01a78     50 0E 86 F1 | 	sub	objptr, #80
01a7c     0E 00 00 FF 
01a80     58 19 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7512
01a84     0C 6F 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
01a88     37 71 02 F6 | 	mov	local05, local04
01a8c     10 72 06 F6 | 	mov	local06, #16
01a90     38 5D 02 F6 | 	mov	arg02, local05
01a94     10 5E 06 F6 | 	mov	arg03, #16
01a98     0E 00 00 FF 
01a9c     58 19 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7512
01aa0     A8 33 B0 FD | 	call	#__system__longmove
01aa4     14 75 02 F6 | 	mov	local07, result1
01aa8     B8 00 90 FD | 	jmp	#LR__0036
01aac                 | LR__0033
01aac                 | '     5:  longmove(@timings,@timings320,16)   'NTSC 50 Hz signaling 1026x524, active 800x480, 100x30 text, NO PLACE FOR wide border, 2 colors per pixel, 01_01_00_00_00=320, 322162162 Hz
01aac     50 0E 06 F1 | 	add	objptr, #80
01ab0     07 5B 02 F6 | 	mov	arg01, objptr
01ab4     50 0E 86 F1 | 	sub	objptr, #80
01ab8     0E 00 00 FF 
01abc     98 19 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7576
01ac0     0C 6F 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
01ac4     37 71 02 F6 | 	mov	local05, local04
01ac8     10 72 06 F6 | 	mov	local06, #16
01acc     38 5D 02 F6 | 	mov	arg02, local05
01ad0     10 5E 06 F6 | 	mov	arg03, #16
01ad4     0E 00 00 FF 
01ad8     98 19 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7576
01adc     6C 33 B0 FD | 	call	#__system__longmove
01ae0     14 75 02 F6 | 	mov	local07, result1
01ae4     7C 00 90 FD | 	jmp	#LR__0036
01ae8                 | LR__0034
01ae8                 | '     6:  longmove(@timings,@timings384,16)   'NTSC 50 Hz signaling 912x524, active 800x480, 100x30 text, NO PLACE FOR wide border, 2 colors per pixel, 01_10_00_00_00=384, 286363636 Hz
01ae8     50 0E 06 F1 | 	add	objptr, #80
01aec     07 5B 02 F6 | 	mov	arg01, objptr
01af0     50 0E 86 F1 | 	sub	objptr, #80
01af4     0E 00 00 FF 
01af8     D8 19 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7640
01afc     0C 6F 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
01b00     37 71 02 F6 | 	mov	local05, local04
01b04     10 72 06 F6 | 	mov	local06, #16
01b08     38 5D 02 F6 | 	mov	arg02, local05
01b0c     10 5E 06 F6 | 	mov	arg03, #16
01b10     0E 00 00 FF 
01b14     D8 19 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7640
01b18     30 33 B0 FD | 	call	#__system__longmove
01b1c     14 75 02 F6 | 	mov	local07, result1
01b20     40 00 90 FD | 	jmp	#LR__0036
01b24                 | LR__0035
01b24                 | '     7:  longmove(@timings,@timings448,16)   'NTSC 50 Hz signaling 1026x524, active 880x496, 110x31 text, borderless, 2 colors per pixel, 01_11_00_00_00=496, 322162162 Hz
01b24     50 0E 06 F1 | 	add	objptr, #80
01b28     07 77 02 F6 | 	mov	local08, objptr
01b2c     3B 79 02 F6 | 	mov	local09, local08
01b30     0F 00 00 FF 
01b34     18 18 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7704
01b38     0C 6F 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
01b3c     37 71 02 F6 | 	mov	local05, local04
01b40     10 72 06 F6 | 	mov	local06, #16
01b44     3C 5B 02 F6 | 	mov	arg01, local09
01b48     38 5D 02 F6 | 	mov	arg02, local05
01b4c     10 5E 06 F6 | 	mov	arg03, #16
01b50     50 0E 86 F1 | 	sub	objptr, #80
01b54     0F 00 00 FF 
01b58     18 18 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7704
01b5c     EC 32 B0 FD | 	call	#__system__longmove
01b60     14 75 02 F6 | 	mov	local07, result1
01b64                 | LR__0036
01b64                 | ' 
01b64                 | ' ' 4-bit graphics: do nothing with timings :)
01b64                 | ' if mode<512
01b64     01 00 00 FF 
01b68     00 68 5E F2 | 	cmps	local01, ##512 wcz
01b6c     20 00 90 3D |  if_ae	jmp	#LR__0037
01b70     0C 00 00 FF 
01b74     58 18 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##6232
01b78     0C 7B 02 F6 | 	mov	local10, ptr__hng030rm_spin2_dat__
01b7c                 | '   palette_ptr:=@ataripalette
01b7c     18 0E 06 F1 | 	add	objptr, #24
01b80     07 7B 62 FC | 	wrlong	local10, objptr
01b84     18 0E 86 F1 | 	sub	objptr, #24
01b88     0C 00 00 FF 
01b8c     58 18 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##6232
01b90                 | LR__0037
01b90                 | ' 
01b90                 | ' if (mode & (%10_00_11_0000))==(%10_00_11_0000) ' 8bit graphics, 4 pixels per long instead of 8, cpp x2
01b90     34 6B 02 F6 | 	mov	local02, local01
01b94     01 00 00 FF 
01b98     30 6A 06 F5 | 	and	local02, ##560
01b9c     01 00 00 FF 
01ba0     30 6A 0E F2 | 	cmp	local02, ##560 wz
01ba4     48 00 90 5D |  if_ne	jmp	#LR__0038
01ba8                 | '   timings[5]:=4
01ba8     64 0E 06 F1 | 	add	objptr, #100
01bac     07 09 68 FC | 	wrlong	#4, objptr
01bb0     18 0E 06 F1 | 	add	objptr, #24
01bb4     07 7D 02 FB | 	rdlong	local11, objptr
01bb8     01 7C 66 F0 | 	shl	local11, #1
01bbc                 | '   timings[11]:=timings[11]<<1
01bbc     07 7D 62 FC | 	wrlong	local11, objptr
01bc0                 | '   putpixel:=p8
01bc0     6C 0E 06 F1 | 	add	objptr, #108
01bc4     07 6B 02 FB | 	rdlong	local02, objptr
01bc8     10 0E 86 F1 | 	sub	objptr, #16
01bcc     07 6B 62 FC | 	wrlong	local02, objptr
01bd0     0C 00 00 FF 
01bd4     58 18 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##6232
01bd8     0C 7F 02 F6 | 	mov	local12, ptr__hng030rm_spin2_dat__
01bdc                 | '   palette_ptr:=@ataripalette
01bdc     C0 0E 86 F1 | 	sub	objptr, #192
01be0     07 7F 62 FC | 	wrlong	local12, objptr
01be4     18 0E 86 F1 | 	sub	objptr, #24
01be8     0C 00 00 FF 
01bec     58 18 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##6232
01bf0                 | LR__0038
01bf0                 | ' 
01bf0                 | ' if (mode & (%10_00_11_0000))==(%10_00_01_0000) ' 2bit graphics, 16 pixels per long instead of 8, cpp /2
01bf0     34 6B 02 F6 | 	mov	local02, local01
01bf4     01 00 00 FF 
01bf8     30 6A 06 F5 | 	and	local02, ##560
01bfc     01 00 00 FF 
01c00     10 6A 0E F2 | 	cmp	local02, ##528 wz
01c04     48 00 90 5D |  if_ne	jmp	#LR__0039
01c08                 | '   timings[5]:=16
01c08     64 0E 06 F1 | 	add	objptr, #100
01c0c     07 21 68 FC | 	wrlong	#16, objptr
01c10     18 0E 06 F1 | 	add	objptr, #24
01c14     07 81 02 FB | 	rdlong	local13, objptr
01c18     01 80 46 F0 | 	shr	local13, #1
01c1c                 | '   timings[11]:=timings[11]>>1
01c1c     07 81 62 FC | 	wrlong	local13, objptr
01c20                 | '   putpixel:=p2
01c20     64 0E 06 F1 | 	add	objptr, #100
01c24     07 6B 02 FB | 	rdlong	local02, objptr
01c28     08 0E 86 F1 | 	sub	objptr, #8
01c2c     07 6B 62 FC | 	wrlong	local02, objptr
01c30     0C 00 00 FF 
01c34     08 18 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##6152
01c38     0C 83 02 F6 | 	mov	local14, ptr__hng030rm_spin2_dat__
01c3c                 | '   palette_ptr:=@fourcolors
01c3c     C0 0E 86 F1 | 	sub	objptr, #192
01c40     07 83 62 FC | 	wrlong	local14, objptr
01c44     18 0E 86 F1 | 	sub	objptr, #24
01c48     0C 00 00 FF 
01c4c     08 18 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##6152
01c50                 | LR__0039
01c50                 | ' 
01c50                 | ' if (mode & (%10_00_11_0000))==(%10_00_00_0000) ' 1bit graphics, 32 pixels per long instead of 8, cpp /4
01c50     34 6B 02 F6 | 	mov	local02, local01
01c54     01 00 00 FF 
01c58     30 6A 06 F5 | 	and	local02, ##560
01c5c     01 00 00 FF 
01c60     00 6A 0E F2 | 	cmp	local02, ##512 wz
01c64     48 00 90 5D |  if_ne	jmp	#LR__0040
01c68                 | '   timings[5]:=32
01c68     64 0E 06 F1 | 	add	objptr, #100
01c6c     07 41 68 FC | 	wrlong	#32, objptr
01c70     18 0E 06 F1 | 	add	objptr, #24
01c74     07 85 02 FB | 	rdlong	local15, objptr
01c78     02 84 46 F0 | 	shr	local15, #2
01c7c                 | '   timings[11]:=timings[11]>>2
01c7c     07 85 62 FC | 	wrlong	local15, objptr
01c80                 | '   putpixel:=p1
01c80     60 0E 06 F1 | 	add	objptr, #96
01c84     07 6B 02 FB | 	rdlong	local02, objptr
01c88     04 0E 86 F1 | 	sub	objptr, #4
01c8c     07 6B 62 FC | 	wrlong	local02, objptr
01c90     0C 00 00 FF 
01c94     00 18 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##6144
01c98     0C 87 02 F6 | 	mov	local16, ptr__hng030rm_spin2_dat__
01c9c                 | '   palette_ptr:=@twocolors
01c9c     C0 0E 86 F1 | 	sub	objptr, #192
01ca0     07 87 62 FC | 	wrlong	local16, objptr
01ca4     18 0E 86 F1 | 	sub	objptr, #24
01ca8     0C 00 00 FF 
01cac     00 18 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##6144
01cb0                 | LR__0040
01cb0                 | ' 
01cb0                 | ' if (mode & (%10_00_11_0000))==(%10_00_10_0000) ' 4bit graphics,
01cb0     34 6B 02 F6 | 	mov	local02, local01
01cb4     01 00 00 FF 
01cb8     30 6A 06 F5 | 	and	local02, ##560
01cbc     01 00 00 FF 
01cc0     20 6A 0E F2 | 	cmp	local02, ##544 wz
01cc4     30 00 90 5D |  if_ne	jmp	#LR__0041
01cc8                 | '   putpixel:=p4
01cc8     E4 0E 06 F1 | 	add	objptr, #228
01ccc     07 6B 02 FB | 	rdlong	local02, objptr
01cd0     0C 0E 86 F1 | 	sub	objptr, #12
01cd4     07 6B 62 FC | 	wrlong	local02, objptr
01cd8     0C 00 00 FF 
01cdc     18 18 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##6168
01ce0     0C 89 02 F6 | 	mov	local17, ptr__hng030rm_spin2_dat__
01ce4                 | '   palette_ptr:=@vga16
01ce4     C0 0E 86 F1 | 	sub	objptr, #192
01ce8     07 89 62 FC | 	wrlong	local17, objptr
01cec     18 0E 86 F1 | 	sub	objptr, #24
01cf0     0C 00 00 FF 
01cf4     18 18 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##6168
01cf8                 | LR__0041
01cf8                 | ' 
01cf8                 | ' repeat i from 0 to 4
01cf8     00 8A 06 F6 | 	mov	local18, #0
01cfc     44 E3 9F FE | 	loc	pa,	#(@LR__0043-@LR__0042)
01d00     93 00 A0 FD | 	call	#FCACHE_LOAD_
01d04                 | LR__0042
01d04     45 8D 02 F6 | 	mov	local19, local18
01d08     02 8C 66 F0 | 	shl	local19, #2
01d0c     50 0E 06 F1 | 	add	objptr, #80
01d10     07 8D 02 F1 | 	add	local19, objptr
01d14     2C 0E 86 F1 | 	sub	objptr, #44
01d18     07 8F 02 FB | 	rdlong	local20, objptr
01d1c     24 0E 86 F1 | 	sub	objptr, #36
01d20     11 8E 66 F0 | 	shl	local20, #17
01d24     46 91 02 FB | 	rdlong	local21, local19
01d28     47 91 02 F1 | 	add	local21, local20
01d2c     48 93 02 F6 | 	mov	local22, local21
01d30     80 40 38 FF 
01d34     00 92 06 F1 | 	add	local22, ##1887502336
01d38                 | '   timings[i]:=timings[i]+hdmibase<<17+ timingsxxt
01d38     46 93 62 FC | 	wrlong	local22, local19
01d3c     01 8A 06 F1 | 	add	local18, #1
01d40     05 8A 5E F2 | 	cmps	local18, #5 wcz
01d44     BC FF 9F CD |  if_b	jmp	#LR__0042
01d48                 | LR__0043
01d48     24 0E 06 F1 | 	add	objptr, #36
01d4c     07 95 02 FB | 	rdlong	local23, objptr
01d50     11 94 66 F0 | 	shl	local23, #17
01d54     40 0E 06 F1 | 	add	objptr, #64
01d58     07 97 02 FB | 	rdlong	local24, objptr
01d5c     4A 97 02 F1 | 	add	local24, local23
01d60                 | ' timings[5]:=timings[5]+hdmibase<<17
01d60     07 97 62 FC | 	wrlong	local24, objptr
01d64                 | ' clkfreq:=timings[13]
01d64     20 0E 06 F1 | 	add	objptr, #32
01d68     07 6B 02 FB | 	rdlong	local02, objptr
01d6c     14 6A 66 FC | 	wrlong	local02, #20
01d70                 | ' hubset(timings[14])
01d70     04 0E 06 F1 | 	add	objptr, #4
01d74     07 5B 02 FB | 	rdlong	arg01, objptr
01d78     88 0E 86 F1 | 	sub	objptr, #136
01d7c     00 5A 62 FD | 	hubset	arg01
01d80                 | ' waitms(1)
01d80     01 5A 06 F6 | 	mov	arg01, #1
01d84     B8 32 B0 FD | 	call	#__system___waitms
01d88     34 99 02 F6 | 	mov	local25, local01
01d8c     03 98 06 F5 | 	and	local25, #3
01d90     4C 9B C2 F9 | 	decod	local26, local25
01d94                 | ' 
01d94                 | ' 
01d94                 | ' xzoom:=1<<(mode & 3)
01d94     CC 0E 06 F1 | 	add	objptr, #204
01d98     07 9B 62 FC | 	wrlong	local26, objptr
01d9c                 | ' 
01d9c                 | ' if (xzoom==8) && (((mode>>4)&3)<>3)
01d9c     4D 77 02 F6 | 	mov	local08, local26
01da0     CC 0E 86 F1 | 	sub	objptr, #204
01da4     08 76 0E F2 | 	cmp	local08, #8 wz
01da8     24 00 90 5D |  if_ne	jmp	#LR__0044
01dac     34 79 02 F6 | 	mov	local09, local01
01db0     04 78 46 F0 | 	shr	local09, #4
01db4     03 78 06 F5 | 	and	local09, #3
01db8     03 78 0E F2 | 	cmp	local09, #3 wz
01dbc     10 00 90 AD |  if_e	jmp	#LR__0044
01dc0                 | '   xzoom:=4
01dc0     04 6A 06 F6 | 	mov	local02, #4
01dc4     CC 0E 06 F1 | 	add	objptr, #204
01dc8     07 09 68 FC | 	wrlong	#4, objptr
01dcc     CC 0E 86 F1 | 	sub	objptr, #204
01dd0                 | LR__0044
01dd0     34 9D 02 F6 | 	mov	local27, local01
01dd4     02 9C 46 F0 | 	shr	local27, #2
01dd8     03 9C 06 F5 | 	and	local27, #3
01ddc     4E 9F C2 F9 | 	decod	local28, local27
01de0                 | ' 
01de0                 | ' yzoom:=1<<((mode>>2) & 3)
01de0     D0 0E 06 F1 | 	add	objptr, #208
01de4     07 9F 62 FC | 	wrlong	local28, objptr
01de8     04 0E 86 F1 | 	sub	objptr, #4
01dec     07 77 02 FB | 	rdlong	local08, objptr
01df0     04 0E 06 F1 | 	add	objptr, #4
01df4     07 6F 02 FB | 	rdlong	local04, objptr
01df8     37 77 02 FD | 	qmul	local08, local04
01dfc     18 A0 62 FD | 	getqx	local29
01e00                 | ' azoom:=xzoom*yzoom
01e00     04 0E 06 F1 | 	add	objptr, #4
01e04     07 A1 62 FC | 	wrlong	local29, objptr
01e08                 | ' 
01e08                 | ' cpl:=timings[11]
01e08     58 0E 86 F1 | 	sub	objptr, #88
01e0c     07 6B 02 FB | 	rdlong	local02, objptr
01e10     14 0E 06 F1 | 	add	objptr, #20
01e14     07 6B 62 FC | 	wrlong	local02, objptr
01e18     90 0E 86 F1 | 	sub	objptr, #144
01e1c                 | ' if (mode<512)
01e1c     01 00 00 FF 
01e20     00 68 5E F2 | 	cmps	local01, ##512 wcz
01e24     60 00 90 3D |  if_ae	jmp	#LR__0045
01e28     80 0E 06 F1 | 	add	objptr, #128
01e2c     07 09 03 FB | 	rdlong	muldiva_, objptr
01e30     04 08 47 F0 | 	shr	muldiva_, #4
01e34     50 0E 06 F1 | 	add	objptr, #80
01e38     07 0B 03 FB | 	rdlong	muldivb_, objptr
01e3c     D0 0E 86 F1 | 	sub	objptr, #208
01e40     CC 00 A0 FD | 	call	#unsdivide_
01e44                 | '   lines:=(timings[12]>>4)+/yzoom
01e44     94 0E 06 F1 | 	add	objptr, #148
01e48     07 0B 63 FC | 	wrlong	muldivb_, objptr
01e4c                 | '   if ((timings[12]>>4)+//yzoom) <>0
01e4c     14 0E 86 F1 | 	sub	objptr, #20
01e50     07 09 03 FB | 	rdlong	muldiva_, objptr
01e54     04 08 47 F0 | 	shr	muldiva_, #4
01e58     50 0E 06 F1 | 	add	objptr, #80
01e5c     07 0B 03 FB | 	rdlong	muldivb_, objptr
01e60     D0 0E 86 F1 | 	sub	objptr, #208
01e64     CC 00 A0 FD | 	call	#unsdivide_
01e68     00 08 0F F2 | 	cmp	muldiva_, #0 wz
01e6c     AC 00 90 AD |  if_e	jmp	#LR__0048
01e70                 | '     lines +=1
01e70     94 0E 06 F1 | 	add	objptr, #148
01e74     07 6B 02 FB | 	rdlong	local02, objptr
01e78     01 6A 06 F1 | 	add	local02, #1
01e7c     07 6B 62 FC | 	wrlong	local02, objptr
01e80     94 0E 86 F1 | 	sub	objptr, #148
01e84                 | ' 
01e84                 | ' else
01e84     94 00 90 FD | 	jmp	#LR__0048
01e88                 | LR__0045
01e88     80 0E 06 F1 | 	add	objptr, #128
01e8c     07 09 03 FB | 	rdlong	muldiva_, objptr
01e90     50 0E 06 F1 | 	add	objptr, #80
01e94     07 0B 03 FB | 	rdlong	muldivb_, objptr
01e98     D0 0E 86 F1 | 	sub	objptr, #208
01e9c     D0 00 A0 FD | 	call	#divide_
01ea0                 | '   lines:=timings[12]/yzoom
01ea0     94 0E 06 F1 | 	add	objptr, #148
01ea4     07 0B 63 FC | 	wrlong	muldivb_, objptr
01ea8                 | '   if cpl//xzoom==0
01ea8     04 0E 86 F1 | 	sub	objptr, #4
01eac     07 09 03 FB | 	rdlong	muldiva_, objptr
01eb0     3C 0E 06 F1 | 	add	objptr, #60
01eb4     07 0B 03 FB | 	rdlong	muldivb_, objptr
01eb8     CC 0E 86 F1 | 	sub	objptr, #204
01ebc     D0 00 A0 FD | 	call	#divide_
01ec0     00 08 0F F2 | 	cmp	muldiva_, #0 wz
01ec4     28 00 90 5D |  if_ne	jmp	#LR__0046
01ec8                 | '     cpl:=cpl/xzoom
01ec8     90 0E 06 F1 | 	add	objptr, #144
01ecc     07 09 03 FB | 	rdlong	muldiva_, objptr
01ed0     3C 0E 06 F1 | 	add	objptr, #60
01ed4     07 0B 03 FB | 	rdlong	muldivb_, objptr
01ed8     CC 0E 86 F1 | 	sub	objptr, #204
01edc     D0 00 A0 FD | 	call	#divide_
01ee0     90 0E 06 F1 | 	add	objptr, #144
01ee4     07 0B 63 FC | 	wrlong	muldivb_, objptr
01ee8     90 0E 86 F1 | 	sub	objptr, #144
01eec                 | '   else
01eec     2C 00 90 FD | 	jmp	#LR__0047
01ef0                 | LR__0046
01ef0     90 0E 06 F1 | 	add	objptr, #144
01ef4     07 09 03 FB | 	rdlong	muldiva_, objptr
01ef8     3C 0E 06 F1 | 	add	objptr, #60
01efc     07 0B 03 FB | 	rdlong	muldivb_, objptr
01f00     CC 0E 86 F1 | 	sub	objptr, #204
01f04     D0 00 A0 FD | 	call	#divide_
01f08     85 A3 02 F6 | 	mov	local30, muldivb_
01f0c     01 A2 06 F1 | 	add	local30, #1
01f10                 | '     cpl:=cpl/xzoom+1
01f10     90 0E 06 F1 | 	add	objptr, #144
01f14     07 A3 62 FC | 	wrlong	local30, objptr
01f18     90 0E 86 F1 | 	sub	objptr, #144
01f1c                 | LR__0047
01f1c                 | LR__0048
01f1c     90 0E 06 F1 | 	add	objptr, #144
01f20     07 77 02 FB | 	rdlong	local08, objptr
01f24     04 0E 06 F1 | 	add	objptr, #4
01f28     07 6F 02 FB | 	rdlong	local04, objptr
01f2c     37 77 02 FD | 	qmul	local08, local04
01f30     18 A4 62 FD | 	getqx	local31
01f34                 | ' 
01f34                 | ' buflen:=(cpl*lines)
01f34     64 0E 86 F1 | 	sub	objptr, #100
01f38     07 A5 62 FC | 	wrlong	local31, objptr
01f3c     30 0E 86 F1 | 	sub	objptr, #48
01f40     02 A4 66 F0 | 	shl	local31, #2
01f44     13 A6 C6 F9 | 	decod	local32, #19
01f48     52 A7 82 F1 | 	sub	local32, local31
01f4c                 | ' buf_ptr:=$80000-4*buflen
01f4c     07 A7 62 FC | 	wrlong	local32, objptr
01f50     50 0E 06 F1 | 	add	objptr, #80
01f54     07 A9 02 F6 | 	mov	local33, objptr
01f58                 | ' mode_ptr:=@timings
01f58     3C 0E 86 F1 | 	sub	objptr, #60
01f5c     07 A9 62 FC | 	wrlong	local33, objptr
01f60                 | ' graphmode:=mode
01f60     B0 0E 06 F1 | 	add	objptr, #176
01f64     07 69 62 FC | 	wrlong	local01, objptr
01f68     C4 0E 86 F1 | 	sub	objptr, #196
01f6c                 | ' makedl(mode)
01f6c     34 5B 02 F6 | 	mov	arg01, local01
01f70                 | ' 
01f70                 | ' ''--%aaaa_aaaa_aaaa_aaaa_aazz_nnnn_llll_ll_01 - txt
01f70                 | '   '' aaaa_aaaa_aaaa_aaaa_aazz_rrrr_rrrr_cc_10 - graph
01f70                 | '   '' aaaa_aaaa_aaaa-aaaa_aarr_rrrr_rrrr_rr_11 - extended, next long to read
01f70                 | ' 
01f70                 | ' '   0 - display a up/down border line
01f70                 | ' 
01f70                 | ' '  ' aaaa_aaaa_aaaa_aaaa_aazz_nnnn_llll_ll_01 - text line
01f70                 | ' '    aaaa_aaaa_aaaa_aaaa_aa00 - buffer start, has to be aligned, 1 long for char, ff_bb_rr_cc, foreground, background,reserved, charcode
01f70                 | ' '    zz - zoom, 00-x1, 01-x2, 10-x4, 11-blank line
01f70                 | ' '    nnnn - font line to display, 0..15
01f70                 | ' '    llllll - character line, determines the cursor Y position
01f70                 | ' 
01f70                 | ' 
01f70                 | ' if (mode &256==0)
01f70     00 5B CE F7 | 	test	arg01, #256 wz
01f74     1C 00 90 5D |  if_ne	jmp	#LR__0049
01f78     07 AB 02 FB | 	rdlong	local34, objptr
01f7c     04 00 00 FF 
01f80     00 AB 86 F1 | 	sub	local34, ##2304
01f84                 | '   dl_ptr:=buf_ptr-4*576
01f84     1C 0E 06 F1 | 	add	objptr, #28
01f88     07 AB 62 FC | 	wrlong	local34, objptr
01f8c     1C 0E 86 F1 | 	sub	objptr, #28
01f90                 | ' else
01f90     18 00 90 FD | 	jmp	#LR__0050
01f94                 | LR__0049
01f94     07 AD 02 FB | 	rdlong	local35, objptr
01f98     03 00 00 FF 
01f9c     C0 AD 86 F1 | 	sub	local35, ##1984
01fa0                 | '   dl_ptr:=buf_ptr-4*496
01fa0     1C 0E 06 F1 | 	add	objptr, #28
01fa4     07 AD 62 FC | 	wrlong	local35, objptr
01fa8     1C 0E 86 F1 | 	sub	objptr, #28
01fac                 | LR__0050
01fac     2D AF 02 F6 | 	mov	local36, arg01
01fb0     02 AE 46 F0 | 	shr	local36, #2
01fb4     03 AE 06 F5 | 	and	local36, #3
01fb8                 | '  ' dl_ptr:=buf_ptr-4*540
01fb8                 | ' 
01fb8                 | ' vzoom:=((mode>>2) & 3)
01fb8                 | ' 
01fb8                 | ' 
01fb8                 | ' if mode<512 '' text modes
01fb8     01 00 00 FF 
01fbc     00 5A 5E F2 | 	cmps	arg01, ##512 wcz
01fc0     E4 01 90 3D |  if_ae	jmp	#LR__0058
01fc4                 | ' 
01fc4                 | '   if timings[6]>0 'borders
01fc4     68 0E 06 F1 | 	add	objptr, #104
01fc8     07 B1 02 FB | 	rdlong	local37, objptr
01fcc     68 0E 86 F1 | 	sub	objptr, #104
01fd0     00 B0 5E F2 | 	cmps	local37, #0 wcz
01fd4     D4 00 90 ED |  if_be	jmp	#LR__0055
01fd8                 | '     repeat i from 0 to timings[6]-1 '0 to -1
01fd8     00 B2 06 F6 | 	mov	local38, #0
01fdc     68 0E 06 F1 | 	add	objptr, #104
01fe0     07 B5 02 FB | 	rdlong	local39, objptr
01fe4     68 0E 86 F1 | 	sub	objptr, #104
01fe8     01 B4 86 F1 | 	sub	local39, #1
01fec     00 B4 5E F2 | 	cmps	local39, #0 wcz
01ff0     01 B6 06 16 |  if_a	mov	local40, #1
01ff4     01 B6 66 E6 |  if_be	neg	local40, #1
01ff8     5B B9 02 F6 | 	mov	local41, local40
01ffc     5B B5 02 F1 | 	add	local39, local40
02000     24 E0 9F FE | 	loc	pa,	#(@LR__0052-@LR__0051)
02004     93 00 A0 FD | 	call	#FCACHE_LOAD_
02008                 | LR__0051
02008     59 BB 02 F6 | 	mov	local42, local38
0200c     02 BA 66 F0 | 	shl	local42, #2
02010     1C 0E 06 F1 | 	add	objptr, #28
02014     07 BD 02 FB | 	rdlong	local43, objptr
02018     1C 0E 86 F1 | 	sub	objptr, #28
0201c     5D BD 02 F1 | 	add	local43, local42
02020                 | '       long[dl_ptr+4*i]:=$0
02020     5E 01 68 FC | 	wrlong	#0, local43
02024     5C B3 02 F1 | 	add	local38, local41
02028     5A B3 0A F2 | 	cmp	local38, local39 wz
0202c     D8 FF 9F 5D |  if_ne	jmp	#LR__0051
02030                 | LR__0052
02030                 | '     repeat i from timings[6]+timings[12] to timings[15]-1
02030     68 0E 06 F1 | 	add	objptr, #104
02034     07 B3 02 FB | 	rdlong	local38, objptr
02038     18 0E 06 F1 | 	add	objptr, #24
0203c     07 B7 02 FB | 	rdlong	local40, objptr
02040     5B B3 02 F1 | 	add	local38, local40
02044     0C 0E 06 F1 | 	add	objptr, #12
02048     07 BF 02 FB | 	rdlong	local44, objptr
0204c     01 BE 86 F1 | 	sub	local44, #1
02050     24 0E 86 F1 | 	sub	objptr, #36
02054     07 C1 02 FB | 	rdlong	local45, objptr
02058     18 0E 06 F1 | 	add	objptr, #24
0205c     07 C3 02 FB | 	rdlong	local46, objptr
02060     80 0E 86 F1 | 	sub	objptr, #128
02064     61 C1 02 F1 | 	add	local45, local46
02068     60 BF 5A F2 | 	cmps	local44, local45 wcz
0206c     01 C4 06 16 |  if_a	mov	local47, #1
02070     01 C4 66 E6 |  if_be	neg	local47, #1
02074     62 C7 02 F6 | 	mov	local48, local47
02078     62 BF 02 F1 | 	add	local44, local47
0207c     A8 DF 9F FE | 	loc	pa,	#(@LR__0054-@LR__0053)
02080     93 00 A0 FD | 	call	#FCACHE_LOAD_
02084                 | LR__0053
02084     59 C9 02 F6 | 	mov	local49, local38
02088     02 C8 66 F0 | 	shl	local49, #2
0208c     1C 0E 06 F1 | 	add	objptr, #28
02090     07 CB 02 FB | 	rdlong	local50, objptr
02094     1C 0E 86 F1 | 	sub	objptr, #28
02098     64 CB 02 F1 | 	add	local50, local49
0209c                 | '       long[dl_ptr+4*i]:=$0
0209c     65 01 68 FC | 	wrlong	#0, local50
020a0     63 B3 02 F1 | 	add	local38, local48
020a4     5F B3 0A F2 | 	cmp	local38, local44 wz
020a8     D8 FF 9F 5D |  if_ne	jmp	#LR__0053
020ac                 | LR__0054
020ac                 | LR__0055
020ac     10 CC 06 F6 | 	mov	local51, #16
020b0     57 CD 62 F0 | 	shl	local51, local36
020b4                 | '   lpc:=16<<vzoom
020b4                 | '   repeat i from timings[6] to timings[6]+timings[12]-1
020b4     68 0E 06 F1 | 	add	objptr, #104
020b8     07 B3 02 FB | 	rdlong	local38, objptr
020bc     59 CF 02 F6 | 	mov	local52, local38
020c0     18 0E 06 F1 | 	add	objptr, #24
020c4     07 D1 02 FB | 	rdlong	local53, objptr
020c8     68 CF 02 F1 | 	add	local52, local53
020cc     01 CE 86 F1 | 	sub	local52, #1
020d0     18 0E 86 F1 | 	sub	objptr, #24
020d4     07 C5 02 FB | 	rdlong	local47, objptr
020d8     68 0E 86 F1 | 	sub	objptr, #104
020dc     62 CF 5A F2 | 	cmps	local52, local47 wcz
020e0     01 D2 06 16 |  if_a	mov	local54, #1
020e4     01 D2 66 E6 |  if_be	neg	local54, #1
020e8     69 D5 02 F6 | 	mov	local55, local54
020ec     69 CF 02 F1 | 	add	local52, local54
020f0     BC DF 9F FE | 	loc	pa,	#(@LR__0057-@LR__0056)
020f4     93 00 A0 FD | 	call	#FCACHE_LOAD_
020f8                 | LR__0056
020f8     59 09 03 F6 | 	mov	muldiva_, local38
020fc     68 0E 06 F1 | 	add	objptr, #104
02100     07 D7 02 FB | 	rdlong	local56, objptr
02104     68 0E 86 F1 | 	sub	objptr, #104
02108     6B 09 83 F1 | 	sub	muldiva_, local56
0210c     66 0B 03 F6 | 	mov	muldivb_, local51
02110     CC 00 A0 FD | 	call	#unsdivide_
02114     57 09 43 F0 | 	shr	muldiva_, local36
02118                 | '     fontline2:=((i-timings[6])+//lpc)>>vzoom
02118     84 D9 02 F6 | 	mov	local57, muldiva_
0211c     59 09 03 F6 | 	mov	muldiva_, local38
02120     68 0E 06 F1 | 	add	objptr, #104
02124     07 D7 02 FB | 	rdlong	local56, objptr
02128     68 0E 86 F1 | 	sub	objptr, #104
0212c     6B 09 83 F1 | 	sub	muldiva_, local56
02130     66 0B 03 F6 | 	mov	muldivb_, local51
02134     CC 00 A0 FD | 	call	#unsdivide_
02138     85 DB 02 F6 | 	mov	local58, muldivb_
0213c                 | '     charline:=(i-timings[6])+/lpc
0213c     90 0E 06 F1 | 	add	objptr, #144
02140     07 D7 02 FB | 	rdlong	local56, objptr
02144     90 0E 86 F1 | 	sub	objptr, #144
02148     6D D7 02 FD | 	qmul	local56, local58
0214c     18 DC 62 FD | 	getqx	local59
02150     02 DC 66 F0 | 	shl	local59, #2
02154     07 DF 02 FB | 	rdlong	local60, objptr
02158     6E DF 02 F1 | 	add	local60, local59
0215c     2D E1 02 F6 | 	mov	local61, arg01
02160     03 E0 06 F5 | 	and	local61, #3
02164     70 DF 02 F1 | 	add	local60, local61
02168                 | '     bufstart:=buf_ptr+4*((cpl)*charline)+(mode&3)
02168     0C DE 66 F0 | 	shl	local60, #12
0216c     08 D8 66 F0 | 	shl	local57, #8
02170     6C DF 02 F1 | 	add	local60, local57
02174     02 DA 66 F0 | 	shl	local58, #2
02178     6D DF 02 F1 | 	add	local60, local58
0217c     01 DE 06 F1 | 	add	local60, #1
02180     59 E3 02 F6 | 	mov	local62, local38
02184     02 E2 66 F0 | 	shl	local62, #2
02188     1C 0E 06 F1 | 	add	objptr, #28
0218c     07 E5 02 FB | 	rdlong	local63, objptr
02190     1C 0E 86 F1 | 	sub	objptr, #28
02194     71 E5 02 F1 | 	add	local63, local62
02198                 | '     long[dl_ptr+4*i]:=(bufstart<<12)+(fontline2<<8)+(charline<<2)+1
02198     72 DF 62 FC | 	wrlong	local60, local63
0219c     6A B3 02 F1 | 	add	local38, local55
021a0     67 B3 0A F2 | 	cmp	local38, local52 wz
021a4     50 FF 9F 5D |  if_ne	jmp	#LR__0056
021a8                 | LR__0057
021a8                 | LR__0058
021a8                 | ' 
021a8                 | ' 
021a8                 | ' 
021a8                 | ' if (mode>=512)' and (mode & (%10_00_00_0000))==(%10_00_00_0000) ' graphics -> all modes TODO :mode 560+192=752 = 10_11_11_0000 impossib,e because out of memory
021a8     01 00 00 FF 
021ac     00 5A 5E F2 | 	cmps	arg01, ##512 wcz
021b0     AC 01 90 CD |  if_b	jmp	#LR__0066
021b4                 | ' 
021b4                 | '   if timings[6]>0 'borders
021b4     68 0E 06 F1 | 	add	objptr, #104
021b8     07 B1 02 FB | 	rdlong	local37, objptr
021bc     68 0E 86 F1 | 	sub	objptr, #104
021c0     00 B0 5E F2 | 	cmps	local37, #0 wcz
021c4     D4 00 90 ED |  if_be	jmp	#LR__0063
021c8                 | '     repeat i from 0 to timings[6]-1 '0 to -1
021c8     00 B2 06 F6 | 	mov	local38, #0
021cc     68 0E 06 F1 | 	add	objptr, #104
021d0     07 E7 02 FB | 	rdlong	local64, objptr
021d4     68 0E 86 F1 | 	sub	objptr, #104
021d8     01 E6 86 F1 | 	sub	local64, #1
021dc     00 E6 5E F2 | 	cmps	local64, #0 wcz
021e0     01 B6 06 16 |  if_a	mov	local40, #1
021e4     01 B6 66 E6 |  if_be	neg	local40, #1
021e8     5B E9 02 F6 | 	mov	local65, local40
021ec     5B E7 02 F1 | 	add	local64, local40
021f0     34 DE 9F FE | 	loc	pa,	#(@LR__0060-@LR__0059)
021f4     93 00 A0 FD | 	call	#FCACHE_LOAD_
021f8                 | LR__0059
021f8     59 EB 02 F6 | 	mov	local66, local38
021fc     02 EA 66 F0 | 	shl	local66, #2
02200     1C 0E 06 F1 | 	add	objptr, #28
02204     07 ED 02 FB | 	rdlong	local67, objptr
02208     1C 0E 86 F1 | 	sub	objptr, #28
0220c     75 ED 02 F1 | 	add	local67, local66
02210                 | '       long[dl_ptr+4*i]:=$0
02210     76 01 68 FC | 	wrlong	#0, local67
02214     74 B3 02 F1 | 	add	local38, local65
02218     73 B3 0A F2 | 	cmp	local38, local64 wz
0221c     D8 FF 9F 5D |  if_ne	jmp	#LR__0059
02220                 | LR__0060
02220                 | '     repeat i from timings[6]+timings[12] to timings[15]-1
02220     68 0E 06 F1 | 	add	objptr, #104
02224     07 B3 02 FB | 	rdlong	local38, objptr
02228     18 0E 06 F1 | 	add	objptr, #24
0222c     07 B7 02 FB | 	rdlong	local40, objptr
02230     5B B3 02 F1 | 	add	local38, local40
02234     0C 0E 06 F1 | 	add	objptr, #12
02238     07 EF 02 FB | 	rdlong	local68, objptr
0223c     01 EE 86 F1 | 	sub	local68, #1
02240     24 0E 86 F1 | 	sub	objptr, #36
02244     07 C1 02 FB | 	rdlong	local45, objptr
02248     18 0E 06 F1 | 	add	objptr, #24
0224c     07 C3 02 FB | 	rdlong	local46, objptr
02250     80 0E 86 F1 | 	sub	objptr, #128
02254     61 C1 02 F1 | 	add	local45, local46
02258     60 EF 5A F2 | 	cmps	local68, local45 wcz
0225c     01 C4 06 16 |  if_a	mov	local47, #1
02260     01 C4 66 E6 |  if_be	neg	local47, #1
02264     62 F1 02 F6 | 	mov	local69, local47
02268     62 EF 02 F1 | 	add	local68, local47
0226c     B8 DD 9F FE | 	loc	pa,	#(@LR__0062-@LR__0061)
02270     93 00 A0 FD | 	call	#FCACHE_LOAD_
02274                 | LR__0061
02274     59 F3 02 F6 | 	mov	local70, local38
02278     02 F2 66 F0 | 	shl	local70, #2
0227c     1C 0E 06 F1 | 	add	objptr, #28
02280     07 F5 02 FB | 	rdlong	local71, objptr
02284     1C 0E 86 F1 | 	sub	objptr, #28
02288     79 F5 02 F1 | 	add	local71, local70
0228c                 | '       long[dl_ptr+4*i]:=$0
0228c     7A 01 68 FC | 	wrlong	#0, local71
02290     78 B3 02 F1 | 	add	local38, local69
02294     77 B3 0A F2 | 	cmp	local38, local68 wz
02298     D8 FF 9F 5D |  if_ne	jmp	#LR__0061
0229c                 | LR__0062
0229c                 | LR__0063
0229c                 | '   repeat i from timings[6] to timings[6]+timings[12]-1
0229c     68 0E 06 F1 | 	add	objptr, #104
022a0     07 B3 02 FB | 	rdlong	local38, objptr
022a4     59 F7 02 F6 | 	mov	local72, local38
022a8     18 0E 06 F1 | 	add	objptr, #24
022ac     07 D1 02 FB | 	rdlong	local53, objptr
022b0     68 F7 02 F1 | 	add	local72, local53
022b4     01 F6 86 F1 | 	sub	local72, #1
022b8     18 0E 86 F1 | 	sub	objptr, #24
022bc     07 C5 02 FB | 	rdlong	local47, objptr
022c0     68 0E 86 F1 | 	sub	objptr, #104
022c4     62 F7 5A F2 | 	cmps	local72, local47 wcz
022c8     01 D2 06 16 |  if_a	mov	local54, #1
022cc     01 D2 66 E6 |  if_be	neg	local54, #1
022d0     69 F9 02 F6 | 	mov	local73, local54
022d4     69 F7 02 F1 | 	add	local72, local54
022d8     A4 DD 9F FE | 	loc	pa,	#(@LR__0065-@LR__0064)
022dc     93 00 A0 FD | 	call	#FCACHE_LOAD_
022e0                 | LR__0064
022e0     59 FB 02 F6 | 	mov	local74, local38
022e4     68 0E 06 F1 | 	add	objptr, #104
022e8     07 D7 02 FB | 	rdlong	local56, objptr
022ec     6B FB 82 F1 | 	sub	local74, local56
022f0     57 FB 42 F0 | 	shr	local74, local36
022f4     28 0E 06 F1 | 	add	objptr, #40
022f8     07 D7 02 FB | 	rdlong	local56, objptr
022fc     90 0E 86 F1 | 	sub	objptr, #144
02300     7D D7 02 FD | 	qmul	local56, local74
02304     18 FC 62 FD | 	getqx	local75
02308     02 FC 66 F0 | 	shl	local75, #2
0230c     07 FF 02 FB | 	rdlong	local76, objptr
02310     7E FF 02 F1 | 	add	local76, local75
02314     2D 01 03 F6 | 	mov	local77, arg01
02318     03 00 07 F5 | 	and	local77, #3
0231c     80 FF 02 F1 | 	add	local76, local77
02320                 | '     bufstart:=buf_ptr+4*(cpl*((i-timings[6])>>vzoom))+(mode&3)
02320     0C FE 66 F0 | 	shl	local76, #12
02324     02 FE 06 F1 | 	add	local76, #2
02328     2D 03 03 F6 | 	mov	local78, arg01
0232c     30 02 07 F5 | 	and	local78, #48
02330     02 02 47 F0 | 	shr	local78, #2
02334     81 FF 02 F1 | 	add	local76, local78
02338     59 05 03 F6 | 	mov	local79, local38
0233c     02 04 67 F0 | 	shl	local79, #2
02340     1C 0E 06 F1 | 	add	objptr, #28
02344     07 07 03 FB | 	rdlong	local80, objptr
02348     1C 0E 86 F1 | 	sub	objptr, #28
0234c     82 07 03 F1 | 	add	local80, local79
02350                 | '     long[dl_ptr+4*i]:=(bufstart<<12)+2+(mode &48)>>2
02350     83 FF 62 FC | 	wrlong	local76, local80
02354     7C B3 02 F1 | 	add	local38, local73
02358     7B B3 0A F2 | 	cmp	local38, local72 wz
0235c     80 FF 9F 5D |  if_ne	jmp	#LR__0064
02360                 | LR__0065
02360                 | LR__0066
02360                 | LR__0067
02360     AF F0 03 F6 | 	mov	ptra, fp
02364     BF 00 A0 FD | 	call	#popregs_
02368                 | _hng030rm_spin2_setmode_ret
02368     2D 00 64 FD | 	ret
0236c                 | 
0236c                 | ' 
0236c                 | ' pub serialcog()| rr, mrr, srr, b, mb, midireport, kbmreport
0236c                 | _retrocog_spin2_serialcog
0236c     1C 5A 05 F6 | 	mov	COUNT_, #28
02370     B0 00 A0 FD | 	call	#pushregs_
02374                 | ' 
02374                 | ' 'start serial and midi
02374                 | ' 
02374                 | ' serial_start(rxpin, txpin, baudrate)
02374     20 5A 06 F6 | 	mov	arg01, #32
02378     21 5C 06 F6 | 	mov	arg02, #33
0237c     A6 0E 00 FF 
02380     00 5E 06 F6 | 	mov	arg03, ##1920000
02384     D8 05 B0 FD | 	call	#_retrocog_spin2_serial_start
02388                 | ' serial_start(midiin,midiout,mbaudrate)
02388     1D 5A 06 F6 | 	mov	arg01, #29
0238c     1E 5C 06 F6 | 	mov	arg02, #30
02390     3D 00 00 FF 
02394     12 5E 06 F6 | 	mov	arg03, ##31250
02398     C4 05 B0 FD | 	call	#_retrocog_spin2_serial_start
0239c                 | ' serial_start(srxpin,stxpin,sbaudrate)
0239c     42 0F 00 FF 
023a0     80 68 06 F6 | 	mov	local01, ##2000000
023a4     3F 5A 06 F6 | 	mov	arg01, #63
023a8     3E 5C 06 F6 | 	mov	arg02, #62
023ac     42 0F 00 FF 
023b0     80 5E 06 F6 | 	mov	arg03, ##2000000
023b4     A8 05 B0 FD | 	call	#_retrocog_spin2_serial_start
023b8                 | ' 
023b8                 | ' mb:=(-1)
023b8     01 6A 66 F6 | 	neg	local02, #1
023bc                 | ' b:=(-1)
023bc     01 6C 66 F6 | 	neg	local03, #1
023c0                 | ' 
023c0                 | ' mousefront:=0
023c0     00 6E 06 F6 | 	mov	local04, #0
023c4     08 0E 06 F1 | 	add	objptr, #8
023c8     07 01 68 FC | 	wrlong	#0, objptr
023cc                 | ' mousetail:=0
023cc     04 0E 06 F1 | 	add	objptr, #4
023d0     07 01 68 FC | 	wrlong	#0, objptr
023d4     0C 0E 86 F1 | 	sub	objptr, #12
023d8                 | ' kbdfront:=0
023d8     07 01 68 FC | 	wrlong	#0, objptr
023dc                 | ' kbdtail:=0
023dc     04 0E 06 F1 | 	add	objptr, #4
023e0     07 01 68 FC | 	wrlong	#0, objptr
023e4                 | ' midifront:=0
023e4     0C 0E 06 F1 | 	add	objptr, #12
023e8     07 01 68 FC | 	wrlong	#0, objptr
023ec                 | ' miditail:=0
023ec     04 0E 06 F1 | 	add	objptr, #4
023f0     07 01 68 FC | 	wrlong	#0, objptr
023f4                 | ' serialfront:=0
023f4     04 0E 06 F1 | 	add	objptr, #4
023f8     07 01 68 FC | 	wrlong	#0, objptr
023fc                 | ' serialtail:=0
023fc     04 0E 06 F1 | 	add	objptr, #4
02400     07 01 68 FC | 	wrlong	#0, objptr
02404                 | ' long[$30]:=0
02404     30 00 6C FC | 	wrlong	#0, #48
02408                 | ' long[$34]:=0
02408     34 00 6C FC | 	wrlong	#0, #52
0240c                 | ' long[$38]:=0
0240c     38 00 6C FC | 	wrlong	#0, #56
02410     1C 0E 86 F1 | 	sub	objptr, #28
02414                 | ' long[$3C]:=0
02414     3C 00 6C FC | 	wrlong	#0, #60
02418                 | ' 
02418                 | ' repeat
02418                 | LR__0068
02418                 | ' 
02418                 | ' '  repeat 
02418                 | '   rr:=rxcheck(rxpin)
02418     20 5A 06 F6 | 	mov	arg01, #32
0241c     BC 05 B0 FD | 	call	#_retrocog_spin2_rxcheck
02420     14 71 02 F6 | 	mov	local05, result1
02424                 | '   mrr:=rxcheck(midiin)
02424     1D 5A 06 F6 | 	mov	arg01, #29
02428     B0 05 B0 FD | 	call	#_retrocog_spin2_rxcheck
0242c     14 73 02 F6 | 	mov	local06, result1
02430                 | '   srr:=rxcheck(srxpin)
02430     3F 6E 06 F6 | 	mov	local04, #63
02434     3F 5A 06 F6 | 	mov	arg01, #63
02438     A0 05 B0 FD | 	call	#_retrocog_spin2_rxcheck
0243c     14 75 02 F6 | 	mov	local07, result1
02440     3A 77 02 F6 | 	mov	local08, local07
02444                 | ' 
02444                 | ' '  until rr>=0 || mrr>=0  || srr>=0
02444                 | ' 
02444                 | '   
02444                 | ' ' midi. Must be >= $80 for a command
02444                 | ' '$80-$8F - 3 bytes note off. note, velocity
02444                 | ' '$90-$9F - 3 bytes note on, note, velocity
02444                 | ' '$A0-$AF - 3 bytes poly aftertouch. note, value
02444                 | ' '$B0-$BF - 3 bytes control change, controller-value, 
02444                 | ' '$C0-$CF - 2 bytes program change
02444                 | ' '$D0-$DF - 2 bytes mono aftertouch
02444                 | ' '$E0-$EF - 3 bytes pitch bend, $2000 - center
02444                 | ' '$F0-$FF - 1 byte
02444                 | '   
02444                 | '   if srr>=0
02444     00 76 5E F2 | 	cmps	local08, #0 wcz
02448     7C 00 90 CD |  if_b	jmp	#LR__0070
0244c                 | '   
0244c                 | '     if serialfront<>((serialtail-1) //32)
0244c     1C 0E 06 F1 | 	add	objptr, #28
02450     07 75 02 FB | 	rdlong	local07, objptr
02454     3A 6F 02 F6 | 	mov	local04, local07
02458     01 6E 86 F1 | 	sub	local04, #1
0245c     37 69 52 F6 | 	abs	local01, local04 wc
02460     1F 68 06 F5 | 	and	local01, #31
02464     34 69 62 C6 |  if_b	neg	local01, local01
02468     04 0E 86 F1 | 	sub	objptr, #4
0246c     07 79 02 FB | 	rdlong	local09, objptr
02470     18 0E 86 F1 | 	sub	objptr, #24
02474     3C 7B 02 F6 | 	mov	local10, local09
02478     34 7B 0A F2 | 	cmp	local10, local01 wz
0247c     48 00 90 AD |  if_e	jmp	#LR__0069
02480     18 0E 06 F1 | 	add	objptr, #24
02484     07 7B 02 FB | 	rdlong	local10, objptr
02488     01 00 00 FF 
0248c     08 0F 06 F1 | 	add	objptr, ##776
02490     07 7B 02 F1 | 	add	local10, objptr
02494     3D 7D 02 F6 | 	mov	local11, local10
02498                 | '       serialbuf[serialfront]:=srr
02498     3E 77 42 FC | 	wrbyte	local08, local11
0249c                 | '       serialfront+=1
0249c     01 00 00 FF 
024a0     08 0F 86 F1 | 	sub	objptr, ##776
024a4     07 69 02 FB | 	rdlong	local01, objptr
024a8     01 68 06 F1 | 	add	local01, #1
024ac     07 69 62 FC | 	wrlong	local01, objptr
024b0                 | '       serialfront:=serialfront // 32
024b0     34 75 02 F6 | 	mov	local07, local01
024b4     3A 6F 52 F6 | 	abs	local04, local07 wc
024b8     1F 6E 06 F5 | 	and	local04, #31
024bc     37 6F 62 C6 |  if_b	neg	local04, local04
024c0     07 6F 62 FC | 	wrlong	local04, objptr
024c4     18 0E 86 F1 | 	sub	objptr, #24
024c8                 | LR__0069
024c8                 | LR__0070
024c8                 | '     
024c8                 | '   if ((mrr>=$80) && (mrr<=$BF)) || ((mrr>=$E0) && (mrr<=$EF)) 
024c8     80 72 5E F2 | 	cmps	local06, #128 wcz
024cc     08 00 90 CD |  if_b	jmp	#LR__0071
024d0     BF 72 5E F2 | 	cmps	local06, #191 wcz
024d4     10 00 90 ED |  if_be	jmp	#LR__0072
024d8                 | LR__0071
024d8     E0 72 5E F2 | 	cmps	local06, #224 wcz
024dc     1C 00 90 CD |  if_b	jmp	#LR__0073
024e0     EF 72 5E F2 | 	cmps	local06, #239 wcz
024e4     14 00 90 1D |  if_a	jmp	#LR__0073
024e8                 | LR__0072
024e8                 | '     mb:=2
024e8     02 6A 06 F6 | 	mov	local02, #2
024ec     39 6F 02 F6 | 	mov	local04, local06
024f0     18 6E 66 F0 | 	shl	local04, #24
024f4     37 7F 02 F6 | 	mov	local12, local04
024f8                 | '     midireport:=mrr<<24
024f8     3F 81 02 F6 | 	mov	local13, local12
024fc                 | LR__0073
024fc                 | ' 
024fc                 | '   if (mrr>=$C0) && (mrr<=$DF)
024fc     C0 72 5E F2 | 	cmps	local06, #192 wcz
02500     1C 00 90 CD |  if_b	jmp	#LR__0074
02504     DF 72 5E F2 | 	cmps	local06, #223 wcz
02508     14 00 90 1D |  if_a	jmp	#LR__0074
0250c                 | '     mb:=1
0250c     01 6A 06 F6 | 	mov	local02, #1
02510     39 6F 02 F6 | 	mov	local04, local06
02514     18 6E 66 F0 | 	shl	local04, #24
02518     37 83 02 F6 | 	mov	local14, local04
0251c                 | '     midireport:=mrr<<24
0251c     41 81 02 F6 | 	mov	local13, local14
02520                 | LR__0074
02520                 | '   
02520                 | '   if (mrr>=$F0) 'TODO: do something with SYSEX, now a workaround for Novation Impulse
02520     F0 72 5E F2 | 	cmps	local06, #240 wcz
02524     10 00 90 CD |  if_b	jmp	#LR__0075
02528                 | '     mb:=4
02528     04 6A 06 F6 | 	mov	local02, #4
0252c     39 85 02 F6 | 	mov	local15, local06
02530     18 84 66 F0 | 	shl	local15, #24
02534                 | '     midireport:=mrr<<24  
02534     42 81 02 F6 | 	mov	local13, local15
02538                 | LR__0075
02538                 | '   
02538                 | '   if (mrr<$80) && (mb>0) && (mrr>=0)
02538     80 72 5E F2 | 	cmps	local06, #128 wcz
0253c     44 00 90 3D |  if_ae	jmp	#LR__0077
02540     00 6A 5E F2 | 	cmps	local02, #0 wcz
02544     3C 00 90 ED |  if_be	jmp	#LR__0077
02548     00 72 5E F2 | 	cmps	local06, #0 wcz
0254c     34 00 90 CD |  if_b	jmp	#LR__0077
02550                 | '     
02550                 | '     mb--
02550     35 6F 02 F6 | 	mov	local04, local02
02554     35 75 02 F6 | 	mov	local07, local02
02558     01 74 86 F1 | 	sub	local07, #1
0255c     3A 6B 02 F6 | 	mov	local02, local07
02560                 | '     if mb<3
02560     03 6A 5E F2 | 	cmps	local02, #3 wcz
02564     1C 00 90 3D |  if_ae	jmp	#LR__0076
02568     35 87 02 F6 | 	mov	local16, local02
0256c     03 86 66 F0 | 	shl	local16, #3
02570     39 89 02 F6 | 	mov	local17, local06
02574     43 89 62 F0 | 	shl	local17, local16
02578                 | '       midireport+=mrr<<(mb<<3)
02578     40 6F 02 F6 | 	mov	local04, local13
0257c     44 6F 02 F1 | 	add	local04, local17
02580     37 81 02 F6 | 	mov	local13, local04
02584                 | LR__0076
02584                 | LR__0077
02584                 | '   
02584                 | '   if mb==0
02584     00 6A 0E F2 | 	cmp	local02, #0 wz
02588     84 00 90 5D |  if_ne	jmp	#LR__0079
0258c                 | '     
0258c                 | '     if midifront<>((miditail-1) //32)
0258c     14 0E 06 F1 | 	add	objptr, #20
02590     07 75 02 FB | 	rdlong	local07, objptr
02594     3A 6F 02 F6 | 	mov	local04, local07
02598     01 6E 86 F1 | 	sub	local04, #1
0259c     37 69 52 F6 | 	abs	local01, local04 wc
025a0     1F 68 06 F5 | 	and	local01, #31
025a4     34 69 62 C6 |  if_b	neg	local01, local01
025a8     04 0E 86 F1 | 	sub	objptr, #4
025ac     07 79 02 FB | 	rdlong	local09, objptr
025b0     10 0E 86 F1 | 	sub	objptr, #16
025b4     3C 7B 02 F6 | 	mov	local10, local09
025b8     34 7B 0A F2 | 	cmp	local10, local01 wz
025bc     4C 00 90 AD |  if_e	jmp	#LR__0078
025c0     10 0E 06 F1 | 	add	objptr, #16
025c4     07 7B 02 FB | 	rdlong	local10, objptr
025c8     02 7A 66 F0 | 	shl	local10, #2
025cc     01 00 00 FF 
025d0     90 0E 06 F1 | 	add	objptr, ##656
025d4     07 7B 02 F1 | 	add	local10, objptr
025d8     3D 8B 02 F6 | 	mov	local18, local10
025dc                 | '       midibuf[midifront]:=midireport
025dc     45 81 62 FC | 	wrlong	local13, local18
025e0                 | '       midifront+=1
025e0     01 00 00 FF 
025e4     90 0E 86 F1 | 	sub	objptr, ##656
025e8     07 69 02 FB | 	rdlong	local01, objptr
025ec     01 68 06 F1 | 	add	local01, #1
025f0     07 69 62 FC | 	wrlong	local01, objptr
025f4                 | '       midifront:=midifront // 32
025f4     34 75 02 F6 | 	mov	local07, local01
025f8     3A 6F 52 F6 | 	abs	local04, local07 wc
025fc     1F 6E 06 F5 | 	and	local04, #31
02600     37 6F 62 C6 |  if_b	neg	local04, local04
02604     07 6F 62 FC | 	wrlong	local04, objptr
02608     10 0E 86 F1 | 	sub	objptr, #16
0260c                 | LR__0078
0260c                 | '     mb:=(-1)
0260c     01 6A 66 F6 | 	neg	local02, #1
02610                 | LR__0079
02610                 | ' 
02610                 | ' 'Keyboard and mouse
02610                 | ' 
02610                 | '   if (rr>=$80) && (rr<>$FF)
02610     80 70 5E F2 | 	cmps	local05, #128 wcz
02614     1C 00 90 CD |  if_b	jmp	#LR__0080
02618     FF 70 0E F2 | 	cmp	local05, #255 wz
0261c     14 00 90 AD |  if_e	jmp	#LR__0080
02620                 | '     b:=3
02620     03 6C 06 F6 | 	mov	local03, #3
02624     38 6F 02 F6 | 	mov	local04, local05
02628     18 6E 66 F0 | 	shl	local04, #24
0262c     37 8D 02 F6 | 	mov	local19, local04
02630                 | '     kbmreport:=rr<<24
02630     46 8F 02 F6 | 	mov	local20, local19
02634                 | LR__0080
02634                 | '   
02634                 | '   if (rr<$80) && (b>0) && (rr>=0)
02634     80 70 5E F2 | 	cmps	local05, #128 wcz
02638     38 00 90 3D |  if_ae	jmp	#LR__0081
0263c     00 6C 5E F2 | 	cmps	local03, #0 wcz
02640     30 00 90 ED |  if_be	jmp	#LR__0081
02644     00 70 5E F2 | 	cmps	local05, #0 wcz
02648     28 00 90 CD |  if_b	jmp	#LR__0081
0264c                 | '     b--
0264c     36 75 02 F6 | 	mov	local07, local03
02650     01 74 86 F1 | 	sub	local07, #1
02654     3A 6D 02 F6 | 	mov	local03, local07
02658     36 91 02 F6 | 	mov	local21, local03
0265c     03 90 66 F0 | 	shl	local21, #3
02660     38 93 02 F6 | 	mov	local22, local05
02664     48 93 62 F0 | 	shl	local22, local21
02668                 | '     kbmreport+=rr<<(b<<3)  
02668     47 6F 02 F6 | 	mov	local04, local20
0266c     49 6F 02 F1 | 	add	local04, local22
02670     37 8F 02 F6 | 	mov	local20, local04
02674                 | LR__0081
02674                 | '   
02674                 | '   if (rr==$FF)
02674     FF 70 0E F2 | 	cmp	local05, #255 wz
02678                 | '     b:=0   
02678     00 6C 06 A6 |  if_e	mov	local03, #0
0267c                 | ' 
0267c                 | '   if b==0  
0267c     00 6C 0E F2 | 	cmp	local03, #0 wz
02680     14 01 90 5D |  if_ne	jmp	#LR__0086
02684                 | '  
02684                 | '     if (kbmreport +>= $80000000) && (kbmreport +< $87000000)  'mouse
02684     00 00 40 FF 
02688     00 8E 1E F2 | 	cmp	local20, ##-2147483648 wcz
0268c     84 00 90 CD |  if_b	jmp	#LR__0083
02690     00 80 43 FF 
02694     00 8E 1E F2 | 	cmp	local20, ##-2030043136 wcz
02698     78 00 90 3D |  if_ae	jmp	#LR__0083
0269c                 | '       if mousefront<>((mousetail-1) //128)
0269c     0C 0E 06 F1 | 	add	objptr, #12
026a0     07 75 02 FB | 	rdlong	local07, objptr
026a4     3A 6F 02 F6 | 	mov	local04, local07
026a8     01 6E 86 F1 | 	sub	local04, #1
026ac     37 69 52 F6 | 	abs	local01, local04 wc
026b0     7F 68 06 F5 | 	and	local01, #127
026b4     34 69 62 C6 |  if_b	neg	local01, local01
026b8     04 0E 86 F1 | 	sub	objptr, #4
026bc     07 79 02 FB | 	rdlong	local09, objptr
026c0     08 0E 86 F1 | 	sub	objptr, #8
026c4     3C 7B 02 F6 | 	mov	local10, local09
026c8     34 7B 0A F2 | 	cmp	local10, local01 wz
026cc     44 00 90 AD |  if_e	jmp	#LR__0082
026d0     08 0E 06 F1 | 	add	objptr, #8
026d4     07 7B 02 FB | 	rdlong	local10, objptr
026d8     02 7A 66 F0 | 	shl	local10, #2
026dc     98 0E 06 F1 | 	add	objptr, #152
026e0     07 7B 02 F1 | 	add	local10, objptr
026e4     3D 95 02 F6 | 	mov	local23, local10
026e8                 | '         mousebuf[mousefront]:=kbmreport
026e8     4A 8F 62 FC | 	wrlong	local20, local23
026ec                 | '         mousefront+=1
026ec     98 0E 86 F1 | 	sub	objptr, #152
026f0     07 69 02 FB | 	rdlong	local01, objptr
026f4     01 68 06 F1 | 	add	local01, #1
026f8     07 69 62 FC | 	wrlong	local01, objptr
026fc                 | '         mousefront:=mousefront // 128
026fc     34 75 02 F6 | 	mov	local07, local01
02700     3A 6F 52 F6 | 	abs	local04, local07 wc
02704     7F 6E 06 F5 | 	and	local04, #127
02708     37 6F 62 C6 |  if_b	neg	local04, local04
0270c     07 6F 62 FC | 	wrlong	local04, objptr
02710     08 0E 86 F1 | 	sub	objptr, #8
02714                 | LR__0082
02714                 | LR__0083
02714                 | '     b:=(-1)
02714     01 6C 66 F6 | 	neg	local03, #1
02718                 | ' 
02718                 | '     if (kbmreport +>= $87000000) && (kbmreport +< $8a000000)  'keyboard
02718     00 80 43 FF 
0271c     00 8E 1E F2 | 	cmp	local20, ##-2030043136 wcz
02720     70 00 90 CD |  if_b	jmp	#LR__0085
02724     00 00 45 FF 
02728     00 8E 1E F2 | 	cmp	local20, ##-1979711488 wcz
0272c     64 00 90 3D |  if_ae	jmp	#LR__0085
02730                 | '       if kbdfront<>((kbdtail-1) //32)
02730     04 0E 06 F1 | 	add	objptr, #4
02734     07 75 02 FB | 	rdlong	local07, objptr
02738     04 0E 86 F1 | 	sub	objptr, #4
0273c     3A 6F 02 F6 | 	mov	local04, local07
02740     01 6E 86 F1 | 	sub	local04, #1
02744     37 69 52 F6 | 	abs	local01, local04 wc
02748     1F 68 06 F5 | 	and	local01, #31
0274c     34 69 62 C6 |  if_b	neg	local01, local01
02750     07 7B 02 FB | 	rdlong	local10, objptr
02754     34 7B 0A F2 | 	cmp	local10, local01 wz
02758     38 00 90 AD |  if_e	jmp	#LR__0084
0275c     07 69 02 FB | 	rdlong	local01, objptr
02760     02 68 66 F0 | 	shl	local01, #2
02764     20 0E 06 F1 | 	add	objptr, #32
02768     07 69 02 F1 | 	add	local01, objptr
0276c     34 97 02 F6 | 	mov	local24, local01
02770                 | '         kbdbuf[kbdfront]:=kbmreport
02770     4B 8F 62 FC | 	wrlong	local20, local24
02774                 | '         kbdfront+=1
02774     20 0E 86 F1 | 	sub	objptr, #32
02778     07 75 02 FB | 	rdlong	local07, objptr
0277c     01 74 06 F1 | 	add	local07, #1
02780     07 75 62 FC | 	wrlong	local07, objptr
02784                 | '         kbdfront:=kbdfront // 32
02784     3A 6F 52 F6 | 	abs	local04, local07 wc
02788     1F 6E 06 F5 | 	and	local04, #31
0278c     37 6F 62 C6 |  if_b	neg	local04, local04
02790     07 6F 62 FC | 	wrlong	local04, objptr
02794                 | LR__0084
02794                 | LR__0085
02794                 | '     b:=(-1)
02794     01 6C 66 F6 | 	neg	local03, #1
02798                 | LR__0086
02798                 | ' 
02798                 | ' 
02798                 | '   if long[$30]==0
02798     30 6E 0E FB | 	rdlong	local04, #48 wz
0279c     5C 00 90 5D |  if_ne	jmp	#LR__0088
027a0                 | '     if kbdfront<>kbdtail
027a0     07 6F 02 FB | 	rdlong	local04, objptr
027a4     04 0E 06 F1 | 	add	objptr, #4
027a8     07 69 02 FB | 	rdlong	local01, objptr
027ac     04 0E 86 F1 | 	sub	objptr, #4
027b0     34 6F 0A F2 | 	cmp	local04, local01 wz
027b4     44 00 90 AD |  if_e	jmp	#LR__0087
027b8     04 0E 06 F1 | 	add	objptr, #4
027bc     07 99 02 FB | 	rdlong	local25, objptr
027c0     02 98 66 F0 | 	shl	local25, #2
027c4     1C 0E 06 F1 | 	add	objptr, #28
027c8     07 99 02 F1 | 	add	local25, objptr
027cc                 | '       long[$30]:=kbdbuf[kbdtail]
027cc     4C 6F 02 FB | 	rdlong	local04, local25
027d0     30 6E 66 FC | 	wrlong	local04, #48
027d4                 | '       kbdtail++
027d4     1C 0E 86 F1 | 	sub	objptr, #28
027d8     07 7B 02 FB | 	rdlong	local10, objptr
027dc     3D 69 02 F6 | 	mov	local01, local10
027e0     01 68 06 F1 | 	add	local01, #1
027e4     07 69 62 FC | 	wrlong	local01, objptr
027e8                 | '       kbdtail:= kbdtail // 32
027e8     34 6F 52 F6 | 	abs	local04, local01 wc
027ec     1F 6E 06 F5 | 	and	local04, #31
027f0     37 6F 62 C6 |  if_b	neg	local04, local04
027f4     07 6F 62 FC | 	wrlong	local04, objptr
027f8     04 0E 86 F1 | 	sub	objptr, #4
027fc                 | LR__0087
027fc                 | LR__0088
027fc                 | '       
027fc                 | '   if long[$34]==0
027fc     34 6E 0E FB | 	rdlong	local04, #52 wz
02800     64 00 90 5D |  if_ne	jmp	#LR__0090
02804                 | '     if mousefront<>mousetail
02804     08 0E 06 F1 | 	add	objptr, #8
02808     07 6F 02 FB | 	rdlong	local04, objptr
0280c     04 0E 06 F1 | 	add	objptr, #4
02810     07 7B 02 FB | 	rdlong	local10, objptr
02814     0C 0E 86 F1 | 	sub	objptr, #12
02818     3D 69 02 F6 | 	mov	local01, local10
0281c     34 6F 0A F2 | 	cmp	local04, local01 wz
02820     44 00 90 AD |  if_e	jmp	#LR__0089
02824     0C 0E 06 F1 | 	add	objptr, #12
02828     07 9B 02 FB | 	rdlong	local26, objptr
0282c     02 9A 66 F0 | 	shl	local26, #2
02830     94 0E 06 F1 | 	add	objptr, #148
02834     07 9B 02 F1 | 	add	local26, objptr
02838                 | '       long[$34]:=mousebuf[mousetail]
02838     4D 6F 02 FB | 	rdlong	local04, local26
0283c     34 6E 66 FC | 	wrlong	local04, #52
02840                 | '       mousetail++
02840     94 0E 86 F1 | 	sub	objptr, #148
02844     07 7B 02 FB | 	rdlong	local10, objptr
02848     3D 69 02 F6 | 	mov	local01, local10
0284c     01 68 06 F1 | 	add	local01, #1
02850     07 69 62 FC | 	wrlong	local01, objptr
02854                 | '       mousetail:= mousetail // 128
02854     34 6F 52 F6 | 	abs	local04, local01 wc
02858     7F 6E 06 F5 | 	and	local04, #127
0285c     37 6F 62 C6 |  if_b	neg	local04, local04
02860     07 6F 62 FC | 	wrlong	local04, objptr
02864     0C 0E 86 F1 | 	sub	objptr, #12
02868                 | LR__0089
02868                 | LR__0090
02868                 | ' 
02868                 | '       
02868                 | '   if long[$38]==0
02868     38 6E 0E FB | 	rdlong	local04, #56 wz
0286c     6C 00 90 5D |  if_ne	jmp	#LR__0092
02870                 | '     if midifront<>miditail
02870     10 0E 06 F1 | 	add	objptr, #16
02874     07 6F 02 FB | 	rdlong	local04, objptr
02878     04 0E 06 F1 | 	add	objptr, #4
0287c     07 7B 02 FB | 	rdlong	local10, objptr
02880     14 0E 86 F1 | 	sub	objptr, #20
02884     3D 69 02 F6 | 	mov	local01, local10
02888     34 6F 0A F2 | 	cmp	local04, local01 wz
0288c     4C 00 90 AD |  if_e	jmp	#LR__0091
02890     14 0E 06 F1 | 	add	objptr, #20
02894     07 9D 02 FB | 	rdlong	local27, objptr
02898     02 9C 66 F0 | 	shl	local27, #2
0289c     01 00 00 FF 
028a0     8C 0E 06 F1 | 	add	objptr, ##652
028a4     07 9D 02 F1 | 	add	local27, objptr
028a8                 | '       long[$38]:=midibuf[miditail]
028a8     4E 6F 02 FB | 	rdlong	local04, local27
028ac     38 6E 66 FC | 	wrlong	local04, #56
028b0                 | '       miditail++
028b0     01 00 00 FF 
028b4     8C 0E 86 F1 | 	sub	objptr, ##652
028b8     07 7B 02 FB | 	rdlong	local10, objptr
028bc     3D 69 02 F6 | 	mov	local01, local10
028c0     01 68 06 F1 | 	add	local01, #1
028c4     07 69 62 FC | 	wrlong	local01, objptr
028c8                 | '       miditail:= miditail // 32
028c8     34 6F 52 F6 | 	abs	local04, local01 wc
028cc     1F 6E 06 F5 | 	and	local04, #31
028d0     37 6F 62 C6 |  if_b	neg	local04, local04
028d4     07 6F 62 FC | 	wrlong	local04, objptr
028d8     14 0E 86 F1 | 	sub	objptr, #20
028dc                 | LR__0091
028dc                 | LR__0092
028dc                 | '       
028dc                 | '   if long[$3c]==0
028dc     3C 6E 0E FB | 	rdlong	local04, #60 wz
028e0     34 FB 9F 5D |  if_ne	jmp	#LR__0068
028e4                 | '     if serialfront<>serialtail
028e4     18 0E 06 F1 | 	add	objptr, #24
028e8     07 6F 02 FB | 	rdlong	local04, objptr
028ec     04 0E 06 F1 | 	add	objptr, #4
028f0     07 7B 02 FB | 	rdlong	local10, objptr
028f4     1C 0E 86 F1 | 	sub	objptr, #28
028f8     3D 69 02 F6 | 	mov	local01, local10
028fc     34 6F 0A F2 | 	cmp	local04, local01 wz
02900     14 FB 9F AD |  if_e	jmp	#LR__0068
02904                 | '       byte[$3c]:=255
02904     3C FE 4D FC | 	wrbyte	#255, #60
02908     1C 0E 06 F1 | 	add	objptr, #28
0290c     07 9F 02 FB | 	rdlong	local28, objptr
02910     01 00 00 FF 
02914     04 0F 06 F1 | 	add	objptr, ##772
02918     07 9F 02 F1 | 	add	local28, objptr
0291c                 | '       byte[$3D]:=serialbuf[serialtail]
0291c     4F 6F C2 FA | 	rdbyte	local04, local28
02920     3D 6E 46 FC | 	wrbyte	local04, #61
02924                 | '       serialtail++
02924     01 00 00 FF 
02928     04 0F 86 F1 | 	sub	objptr, ##772
0292c     07 7B 02 FB | 	rdlong	local10, objptr
02930     3D 69 02 F6 | 	mov	local01, local10
02934     01 68 06 F1 | 	add	local01, #1
02938     07 69 62 FC | 	wrlong	local01, objptr
0293c                 | '       serialtail:= serialtail // 32
0293c     34 6F 52 F6 | 	abs	local04, local01 wc
02940     1F 6E 06 F5 | 	and	local04, #31
02944     37 6F 62 C6 |  if_b	neg	local04, local04
02948     07 6F 62 FC | 	wrlong	local04, objptr
0294c     1C 0E 86 F1 | 	sub	objptr, #28
02950     C4 FA 9F FD | 	jmp	#LR__0068
02954     AF F0 03 F6 | 	mov	ptra, fp
02958     BF 00 A0 FD | 	call	#popregs_
0295c                 | _retrocog_spin2_serialcog_ret
0295c     2D 00 64 FD | 	ret
02960                 | 
02960                 | '       
02960                 | ' 
02960                 | ' ''---------------------- Serial functions from jm_serial.spin2, modified
02960                 | ' 
02960                 | ' pub serial_start(rxpin, txpin, baud) | bitmode
02960                 | _retrocog_spin2_serial_start
02960     04 5A 05 F6 | 	mov	COUNT_, #4
02964     B0 00 A0 FD | 	call	#pushregs_
02968     2D 69 02 F6 | 	mov	local01, arg01
0296c     2E 6B 02 F6 | 	mov	local02, arg02
02970                 | ' 
02970                 | ' bitmode := muldiv64(clkfreq, $1_0000, baud) & $FFFFFC00       ' set bit timing
02970     14 5A 06 FB | 	rdlong	arg01, #20
02974     10 5C C6 F9 | 	decod	arg02, #16
02978     2E 5B 02 FD | 	qmul	arg01, arg02
0297c     19 6C 62 FD | 	getqy	local03
02980     18 6E 62 FD | 	getqx	local04
02984     28 6C 62 FD | 	setq	local03
02988     2F 6F 12 FD | 	qdiv	local04, arg03
0298c     18 28 62 FD | 	getqx	result1
02990     14 5F 02 F6 | 	mov	arg03, result1
02994     FE FF 7F FF 
02998     00 5E 06 F5 | 	and	arg03, ##-1024
0299c                 | ' bitmode |= 7                                                  ' set bits (8)
0299c     07 5E 46 F5 | 	or	arg03, #7
029a0                 | ' pinstart(rxpin,P_HIGH_15K|P_ASYNC_RX,bitmode,0)
029a0     40 68 62 FD | 	dirl	local01
029a4     08 00 80 FF 
029a8     34 7D 08 FC | 	wrpin	##4158, local01
029ac     34 5F 12 FC | 	wxpin	arg03, local01
029b0     34 01 28 FC | 	wypin	#0, local01
029b4     41 68 62 FD | 	dirh	local01
029b8                 | ' pinstart(txpin,P_ASYNC_TX|P_OE,bitmode,0)
029b8     40 6A 62 FD | 	dirl	local02
029bc     35 F9 08 FC | 	wrpin	#124, local02
029c0     35 5F 12 FC | 	wxpin	arg03, local02
029c4     35 01 28 FC | 	wypin	#0, local02
029c8     41 6A 62 FD | 	dirh	local02
029cc                 | ' pinhigh(rxpin)
029cc     59 68 62 FD | 	drvh	local01
029d0     AF F0 03 F6 | 	mov	ptra, fp
029d4     BF 00 A0 FD | 	call	#popregs_
029d8                 | _retrocog_spin2_serial_start_ret
029d8     2D 00 64 FD | 	ret
029dc                 | 
029dc                 | ' 
029dc                 | ' pub rxcheck(pin) : rxbyte | check
029dc                 | _retrocog_spin2_rxcheck
029dc     03 5A 05 F6 | 	mov	COUNT_, #3
029e0     B0 00 A0 FD | 	call	#pushregs_
029e4     2D 69 02 F6 | 	mov	local01, arg01
029e8                 | ' 
029e8                 | ' '' Check for serial input
029e8                 | ' '' -- returns -1 if nothing available
029e8                 | ' 
029e8                 | '   rxbyte := -1
029e8     01 6A 66 F6 | 	neg	local02, #1
029ec                 | '   check := pinr(pin)
029ec     34 5B 02 F6 | 	mov	arg01, local01
029f0     2C 26 B0 FD | 	call	#__system___pinread
029f4     14 6D 0A F6 | 	mov	local03, result1 wz
029f8                 | '   if (check)
029f8                 | '     rxbyte := rdpin(pin) >> 24
029f8     00 6A 06 56 |  if_ne	mov	local02, #0
029fc     34 6B 8A 5A |  if_ne	rdpin	local02, local01
02a00     18 6A 46 50 |  if_ne	shr	local02, #24
02a04     35 29 02 F6 | 	mov	result1, local02
02a08     AF F0 03 F6 | 	mov	ptra, fp
02a0c     BF 00 A0 FD | 	call	#popregs_
02a10                 | _retrocog_spin2_rxcheck_ret
02a10     2D 00 64 FD | 	ret
02a14                 | 
02a14                 | ' 
02a14                 | ' ' "Loads" (initialize) a module in hub memory
02a14                 | ' '
02a14                 | '     ' @hubPtr - A pointer to hub memory where the tracker module is located
02a14                 | ' '
02a14                 | ' PUB initModule(hubPtr, startPattern) | i, tmpPtr, samLength, d1, d2, d3, d4, d5
02a14                 | _trackerplayer_spin2_initModule
02a14     3E 5A 05 F6 | 	mov	COUNT_, #62
02a18     B0 00 A0 FD | 	call	#pushregs_
02a1c     24 F1 07 F1 | 	add	ptra, #292
02a20     AF 5A 62 FC | 	wrlong	arg01, fp
02a24     04 5E 05 F1 | 	add	fp, #4
02a28     AF 5C 62 FC | 	wrlong	arg02, fp
02a2c     04 5E 85 F1 | 	sub	fp, #4
02a30     AF 68 02 FB | 	rdlong	local01, fp
02a34     02 00 00 FF 
02a38     38 68 06 F1 | 	add	local01, ##1080
02a3c                 | ' 
02a3c                 | '   ' Set some data pointers
02a3c                 | '   magicFour      := hubPtr + 1080
02a3c     9D 0E 06 F1 | 	add	objptr, #157
02a40     07 69 62 FC | 	wrlong	local01, objptr
02a44                 | '   nameStr        := hubPtr
02a44     AF 6A 02 FB | 	rdlong	local02, fp
02a48     97 0E 86 F1 | 	sub	objptr, #151
02a4c     07 6B 62 FC | 	wrlong	local02, objptr
02a50     AF 6C 02 FB | 	rdlong	local03, fp
02a54     14 6C 06 F1 | 	add	local03, #20
02a58                 | '   samplesInfoLut := hubPtr + 20
02a58     04 0E 06 F1 | 	add	objptr, #4
02a5c     07 6D 62 FC | 	wrlong	local03, objptr
02a60                 | ' 
02a60                 | '   ' Is this a 31 sample module?
02a60                 | '   if byte[magicFour][0] == "M" and byte[magicFour][2] == "K"
02a60     93 0E 06 F1 | 	add	objptr, #147
02a64     07 6B 02 FB | 	rdlong	local02, objptr
02a68     9D 0E 86 F1 | 	sub	objptr, #157
02a6c     35 6F C2 FA | 	rdbyte	local04, local02
02a70     4D 6E 0E F2 | 	cmp	local04, #77 wz
02a74     48 01 90 5D |  if_ne	jmp	#LR__0096
02a78     9D 0E 06 F1 | 	add	objptr, #157
02a7c     07 71 02 FB | 	rdlong	local05, objptr
02a80     9D 0E 86 F1 | 	sub	objptr, #157
02a84     02 70 06 F1 | 	add	local05, #2
02a88     38 73 C2 FA | 	rdbyte	local06, local05
02a8c     4B 72 0E F2 | 	cmp	local06, #75 wz
02a90     2C 01 90 5D |  if_ne	jmp	#LR__0096
02a94     AF 74 02 FB | 	rdlong	local07, fp
02a98     01 00 00 FF 
02a9c     B6 75 06 F1 | 	add	local07, ##950
02aa0                 | '     songLength          := byte[hubPtr + 950]
02aa0     3A 6B C2 FA | 	rdbyte	local02, local07
02aa4     9A 0E 06 F1 | 	add	objptr, #154
02aa8     07 6B 42 FC | 	wrbyte	local02, objptr
02aac     AF 76 02 FB | 	rdlong	local08, fp
02ab0     01 00 00 FF 
02ab4     B7 77 06 F1 | 	add	local08, ##951
02ab8                 | '     unknown1            := byte[hubPtr + 951]
02ab8     3B 6B C2 FA | 	rdbyte	local02, local08
02abc     02 0E 06 F1 | 	add	objptr, #2
02ac0     07 6B 42 FC | 	wrbyte	local02, objptr
02ac4     AF 78 02 FB | 	rdlong	local09, fp
02ac8     01 00 00 FF 
02acc     B8 79 06 F1 | 	add	local09, ##952
02ad0                 | '     songPositionsLut    :=      hubPtr + 952
02ad0     06 0E 86 F1 | 	sub	objptr, #6
02ad4     07 79 62 FC | 	wrlong	local09, objptr
02ad8     AF 7A 02 FB | 	rdlong	local10, fp
02adc     02 00 00 FF 
02ae0     3C 7A 06 F1 | 	add	local10, ##1084
02ae4                 | '     patternsData        :=      hubPtr + 1084
02ae4     04 0E 86 F1 | 	sub	objptr, #4
02ae8     07 7B 62 FC | 	wrlong	local10, objptr
02aec                 | '     numberOfInstruments := 31
02aec     14 0E 06 F1 | 	add	objptr, #20
02af0     07 3F 48 FC | 	wrbyte	#31, objptr
02af4                 | '     numberOfPatterns    := 0    ' Find out how many patterns that are available
02af4     0B 0E 86 F1 | 	sub	objptr, #11
02af8     07 01 48 FC | 	wrbyte	#0, objptr
02afc     9B 0E 86 F1 | 	sub	objptr, #155
02b00                 | '     repeat i from 952 to 1079
02b00     08 5E 05 F1 | 	add	fp, #8
02b04     01 00 80 FF 
02b08     AF 70 6B FC | 	wrlong	##952, fp
02b0c     08 5E 85 F1 | 	sub	fp, #8
02b10     5C D5 9F FE | 	loc	pa,	#(@LR__0095-@LR__0093)
02b14     93 00 A0 FD | 	call	#FCACHE_LOAD_
02b18                 | LR__0093
02b18                 | '       if byte[hubPtr][i] > numberOfPatterns
02b18     AF 7C 02 FB | 	rdlong	local11, fp
02b1c     08 5E 05 F1 | 	add	fp, #8
02b20     AF 6E 02 FB | 	rdlong	local04, fp
02b24     08 5E 85 F1 | 	sub	fp, #8
02b28     3E 6F 02 F1 | 	add	local04, local11
02b2c     37 73 C2 FA | 	rdbyte	local06, local04
02b30     9B 0E 06 F1 | 	add	objptr, #155
02b34     07 7F C2 FA | 	rdbyte	local12, objptr
02b38     9B 0E 86 F1 | 	sub	objptr, #155
02b3c     3F 73 5A F2 | 	cmps	local06, local12 wcz
02b40     24 00 90 ED |  if_be	jmp	#LR__0094
02b44     AF 7C 02 FB | 	rdlong	local11, fp
02b48     08 5E 05 F1 | 	add	fp, #8
02b4c     AF 80 02 FB | 	rdlong	local13, fp
02b50     08 5E 85 F1 | 	sub	fp, #8
02b54     3E 81 02 F1 | 	add	local13, local11
02b58                 | '         numberOfPatterns := byte[hubPtr][i]
02b58     40 83 C2 FA | 	rdbyte	local14, local13
02b5c     9B 0E 06 F1 | 	add	objptr, #155
02b60     07 83 42 FC | 	wrbyte	local14, objptr
02b64     9B 0E 86 F1 | 	sub	objptr, #155
02b68                 | LR__0094
02b68     08 5E 05 F1 | 	add	fp, #8
02b6c     AF 82 02 FB | 	rdlong	local14, fp
02b70     01 82 06 F1 | 	add	local14, #1
02b74     AF 82 62 FC | 	wrlong	local14, fp
02b78     08 5E 85 F1 | 	sub	fp, #8
02b7c     02 00 00 FF 
02b80     38 82 5E F2 | 	cmps	local14, ##1080 wcz
02b84     90 FF 9F CD |  if_b	jmp	#LR__0093
02b88                 | LR__0095
02b88                 | '     numberOfPatterns++
02b88     9B 0E 06 F1 | 	add	objptr, #155
02b8c     07 83 C2 FA | 	rdbyte	local14, objptr
02b90     07 6F C2 FA | 	rdbyte	local04, objptr
02b94     01 6E 06 F1 | 	add	local04, #1
02b98     07 6F 42 FC | 	wrbyte	local04, objptr
02b9c     07 85 C2 FA | 	rdbyte	local15, objptr
02ba0     0A 84 66 F0 | 	shl	local15, #10
02ba4     09 0E 86 F1 | 	sub	objptr, #9
02ba8     07 87 02 FB | 	rdlong	local16, objptr
02bac     42 87 02 F1 | 	add	local16, local15
02bb0                 | '     sampleDataPtr       := patternsData + (numberOfPatterns << 10)
02bb0     84 0E 86 F1 | 	sub	objptr, #132
02bb4     07 87 62 FC | 	wrlong	local16, objptr
02bb8     0E 0E 86 F1 | 	sub	objptr, #14
02bbc                 | ' 
02bbc                 | '   ' This must be an oldschool 15 sample soundtracker module
02bbc                 | '   else
02bbc     18 01 90 FD | 	jmp	#LR__0100
02bc0                 | LR__0096
02bc0     AF 88 02 FB | 	rdlong	local17, fp
02bc4     D6 89 06 F1 | 	add	local17, #470
02bc8                 | '     songLength          := byte[hubPtr + 470]
02bc8     44 6B C2 FA | 	rdbyte	local02, local17
02bcc     9A 0E 06 F1 | 	add	objptr, #154
02bd0     07 6B 42 FC | 	wrbyte	local02, objptr
02bd4     AF 8A 02 FB | 	rdlong	local18, fp
02bd8     D7 8B 06 F1 | 	add	local18, #471
02bdc                 | '     unknown1            := byte[hubPtr + 471]
02bdc     45 6B C2 FA | 	rdbyte	local02, local18
02be0     02 0E 06 F1 | 	add	objptr, #2
02be4     07 6B 42 FC | 	wrbyte	local02, objptr
02be8     AF 8C 02 FB | 	rdlong	local19, fp
02bec     D8 8D 06 F1 | 	add	local19, #472
02bf0                 | '     songPositionsLut    :=      hubPtr + 472
02bf0     06 0E 86 F1 | 	sub	objptr, #6
02bf4     07 8D 62 FC | 	wrlong	local19, objptr
02bf8     AF 8E 02 FB | 	rdlong	local20, fp
02bfc     01 00 00 FF 
02c00     58 8E 06 F1 | 	add	local20, ##600
02c04                 | '     patternsData        :=      hubPtr + 600
02c04     04 0E 86 F1 | 	sub	objptr, #4
02c08     07 8F 62 FC | 	wrlong	local20, objptr
02c0c                 | '     numberOfInstruments := 15
02c0c     14 0E 06 F1 | 	add	objptr, #20
02c10     07 1F 48 FC | 	wrbyte	#15, objptr
02c14                 | '     numberOfPatterns    := 0    ' Find out how many patterns that are available
02c14     0B 0E 86 F1 | 	sub	objptr, #11
02c18     07 01 48 FC | 	wrbyte	#0, objptr
02c1c     9B 0E 86 F1 | 	sub	objptr, #155
02c20                 | '     repeat i from 472 to 599
02c20     08 5E 05 F1 | 	add	fp, #8
02c24     AF B0 6B FC | 	wrlong	#472, fp
02c28     08 5E 85 F1 | 	sub	fp, #8
02c2c     40 D4 9F FE | 	loc	pa,	#(@LR__0099-@LR__0097)
02c30     93 00 A0 FD | 	call	#FCACHE_LOAD_
02c34                 | LR__0097
02c34                 | '       if byte[hubPtr][i] > numberOfPatterns
02c34     AF 7C 02 FB | 	rdlong	local11, fp
02c38     08 5E 05 F1 | 	add	fp, #8
02c3c     AF 6E 02 FB | 	rdlong	local04, fp
02c40     08 5E 85 F1 | 	sub	fp, #8
02c44     3E 6F 02 F1 | 	add	local04, local11
02c48     37 73 C2 FA | 	rdbyte	local06, local04
02c4c     9B 0E 06 F1 | 	add	objptr, #155
02c50     07 7F C2 FA | 	rdbyte	local12, objptr
02c54     9B 0E 86 F1 | 	sub	objptr, #155
02c58     3F 73 5A F2 | 	cmps	local06, local12 wcz
02c5c     24 00 90 ED |  if_be	jmp	#LR__0098
02c60     AF 7C 02 FB | 	rdlong	local11, fp
02c64     08 5E 05 F1 | 	add	fp, #8
02c68     AF 90 02 FB | 	rdlong	local21, fp
02c6c     08 5E 85 F1 | 	sub	fp, #8
02c70     3E 91 02 F1 | 	add	local21, local11
02c74                 | '         numberOfPatterns := byte[hubPtr][i]
02c74     48 83 C2 FA | 	rdbyte	local14, local21
02c78     9B 0E 06 F1 | 	add	objptr, #155
02c7c     07 83 42 FC | 	wrbyte	local14, objptr
02c80     9B 0E 86 F1 | 	sub	objptr, #155
02c84                 | LR__0098
02c84     08 5E 05 F1 | 	add	fp, #8
02c88     AF 82 02 FB | 	rdlong	local14, fp
02c8c     01 82 06 F1 | 	add	local14, #1
02c90     AF 82 62 FC | 	wrlong	local14, fp
02c94     08 5E 85 F1 | 	sub	fp, #8
02c98     01 00 00 FF 
02c9c     58 82 5E F2 | 	cmps	local14, ##600 wcz
02ca0     90 FF 9F CD |  if_b	jmp	#LR__0097
02ca4                 | LR__0099
02ca4                 | '     numberOfPatterns++
02ca4     9B 0E 06 F1 | 	add	objptr, #155
02ca8     07 83 C2 FA | 	rdbyte	local14, objptr
02cac     07 6F C2 FA | 	rdbyte	local04, objptr
02cb0     01 6E 06 F1 | 	add	local04, #1
02cb4     07 6F 42 FC | 	wrbyte	local04, objptr
02cb8     07 93 C2 FA | 	rdbyte	local22, objptr
02cbc     0A 92 66 F0 | 	shl	local22, #10
02cc0     09 0E 86 F1 | 	sub	objptr, #9
02cc4     07 95 02 FB | 	rdlong	local23, objptr
02cc8     49 95 02 F1 | 	add	local23, local22
02ccc                 | '     sampleDataPtr       := patternsData + (numberOfPatterns << 10)
02ccc     84 0E 86 F1 | 	sub	objptr, #132
02cd0     07 95 62 FC | 	wrlong	local23, objptr
02cd4     0E 0E 86 F1 | 	sub	objptr, #14
02cd8                 | LR__0100
02cd8                 | ' 
02cd8                 | '   ' Iterate through all samples and fill in the sample pointer LUT
02cd8                 | '   tmpPtr := sampleDataPtr
02cd8     0E 0E 06 F1 | 	add	objptr, #14
02cdc     07 6B 02 FB | 	rdlong	local02, objptr
02ce0     0C 5E 05 F1 | 	add	fp, #12
02ce4     AF 6A 62 FC | 	wrlong	local02, fp
02ce8                 | '   repeat i from 1 to numberOfInstruments
02ce8     04 5E 85 F1 | 	sub	fp, #4
02cec     AF 02 68 FC | 	wrlong	#1, fp
02cf0     08 5E 85 F1 | 	sub	fp, #8
02cf4     98 0E 06 F1 | 	add	objptr, #152
02cf8     07 6F C2 FA | 	rdbyte	local04, objptr
02cfc     01 6E 5E F2 | 	cmps	local04, #1 wcz
02d00     01 82 06 16 |  if_a	mov	local14, #1
02d04     01 82 66 E6 |  if_be	neg	local14, #1
02d08     41 97 02 F6 | 	mov	local24, local14
02d0c     07 99 C2 FA | 	rdbyte	local25, objptr
02d10     A6 0E 86 F1 | 	sub	objptr, #166
02d14     4B 99 02 F1 | 	add	local25, local24
02d18                 | LR__0101
02d18     08 5E 05 F1 | 	add	fp, #8
02d1c     AF 9A 02 FB | 	rdlong	local26, fp
02d20     01 9A 86 F1 | 	sub	local26, #1
02d24     02 9A 66 F0 | 	shl	local26, #2
02d28     12 0E 06 F1 | 	add	objptr, #18
02d2c     07 9B 02 F1 | 	add	local26, objptr
02d30                 | '     samplesPtrLut[i-1] := tmpPtr
02d30     04 5E 05 F1 | 	add	fp, #4
02d34     AF 7E 02 FB | 	rdlong	local12, fp
02d38     4D 7F 62 FC | 	wrlong	local12, local26
02d3c     18 5E 05 F1 | 	add	fp, #24
02d40     AF 5C 02 F6 | 	mov	arg02, fp
02d44     14 5E 85 F1 | 	sub	fp, #20
02d48     AF 5E 02 F6 | 	mov	arg03, fp
02d4c     04 5E 05 F1 | 	add	fp, #4
02d50     AF 60 02 F6 | 	mov	arg04, fp
02d54     04 5E 05 F1 | 	add	fp, #4
02d58     AF 62 02 F6 | 	mov	arg05, fp
02d5c     04 5E 05 F1 | 	add	fp, #4
02d60     AF 64 02 F6 | 	mov	arg06, fp
02d64     04 5E 05 F1 | 	add	fp, #4
02d68     AF 66 02 F6 | 	mov	arg07, fp
02d6c                 | '     getSampleInfo(i, @d5, @samLength, @d1, @d2, @d3, @d4)
02d6c     18 5E 85 F1 | 	sub	fp, #24
02d70     AF 5A 02 FB | 	rdlong	arg01, fp
02d74     08 5E 85 F1 | 	sub	fp, #8
02d78     12 0E 86 F1 | 	sub	objptr, #18
02d7c     A0 07 B0 FD | 	call	#_trackerplayer_spin2_getSampleInfo
02d80                 | '     tmpPtr += samLength
02d80     0C 5E 05 F1 | 	add	fp, #12
02d84     AF 7E 02 FB | 	rdlong	local12, fp
02d88     04 5E 05 F1 | 	add	fp, #4
02d8c     AF 9C 02 FB | 	rdlong	local27, fp
02d90     4E 7F 02 F1 | 	add	local12, local27
02d94     04 5E 85 F1 | 	sub	fp, #4
02d98     AF 7E 62 FC | 	wrlong	local12, fp
02d9c     04 5E 85 F1 | 	sub	fp, #4
02da0     AF 7E 02 FB | 	rdlong	local12, fp
02da4     4B 7F 02 F1 | 	add	local12, local24
02da8     AF 7E 62 FC | 	wrlong	local12, fp
02dac     08 5E 85 F1 | 	sub	fp, #8
02db0     4C 7F 0A F2 | 	cmp	local12, local25 wz
02db4     60 FF 9F 5D |  if_ne	jmp	#LR__0101
02db8                 | ' 
02db8                 | '   ' Below this point, all play routine variables are resest to their default values
02db8                 | '   tickCounter                 := 0
02db8     A1 0E 06 F1 | 	add	objptr, #161
02dbc     07 01 48 FC | 	wrbyte	#0, objptr
02dc0                 | '   patternRow                  := 0
02dc0     01 0E 06 F1 | 	add	objptr, #1
02dc4     07 01 48 FC | 	wrbyte	#0, objptr
02dc8                 | '   songPosition                := startPattern
02dc8     04 5E 05 F1 | 	add	fp, #4
02dcc     AF 6A 02 FB | 	rdlong	local02, fp
02dd0     04 5E 85 F1 | 	sub	fp, #4
02dd4     01 0E 06 F1 | 	add	objptr, #1
02dd8     07 6B 42 FC | 	wrbyte	local02, objptr
02ddc                 | '   currentSongSpeed            := 6
02ddc     01 0E 06 F1 | 	add	objptr, #1
02de0     07 0D 48 FC | 	wrbyte	#6, objptr
02de4                 | '   patternDelay                := 0
02de4     01 0E 06 F1 | 	add	objptr, #1
02de8     07 01 48 FC | 	wrbyte	#0, objptr
02dec                 | '   ticksPerMinute              := 50 * 60
02dec     02 0F 06 F1 | 	add	objptr, #258
02df0     05 00 80 FF 
02df4     07 71 6B FC | 	wrlong	##3000, objptr
02df8     A7 0F 86 F1 | 	sub	objptr, #423
02dfc     07 09 03 FB | 	rdlong	muldiva_, objptr
02e00     32 0A 07 F6 | 	mov	muldivb_, #50
02e04     D0 00 A0 FD | 	call	#divide_
02e08                 | '   cyclesToWait                := systemClock / 50
02e08     AB 0F 06 F1 | 	add	objptr, #427
02e0c     07 0B 63 FC | 	wrlong	muldivb_, objptr
02e10                 | '   sampleNumber_memory         := 0
02e10     35 0E 06 F1 | 	add	objptr, #53
02e14     07 01 48 FC | 	wrbyte	#0, objptr
02e18                 | '   lpFilter                    := 0
02e18     25 0E 86 F1 | 	sub	objptr, #37
02e1c     07 01 48 FC | 	wrbyte	#0, objptr
02e20                 | '   cmdD_memoryX                := 0
02e20     29 0E 06 F1 | 	add	objptr, #41
02e24     07 01 48 FC | 	wrbyte	#0, objptr
02e28                 | '   cmdD_memoryY                := 0
02e28     01 0E 06 F1 | 	add	objptr, #1
02e2c     07 01 48 FC | 	wrbyte	#0, objptr
02e30                 | '   cmdD_updatePosition         := false
02e30     01 0E 06 F1 | 	add	objptr, #1
02e34     07 01 48 FC | 	wrbyte	#0, objptr
02e38                 | '   cmdB_memoryZ                := 0
02e38     01 0E 06 F1 | 	add	objptr, #1
02e3c     07 01 48 FC | 	wrbyte	#0, objptr
02e40                 | '   cmdB_updatePosition         := false
02e40     01 0E 06 F1 | 	add	objptr, #1
02e44     07 01 48 FC | 	wrbyte	#0, objptr
02e48                 | '   cmdE6_updatePositionCommon  := false
02e48     0D 0E 06 F1 | 	add	objptr, #13
02e4c     07 01 48 FC | 	wrbyte	#0, objptr
02e50     F5 0F 86 F1 | 	sub	objptr, #501
02e54                 | ' 
02e54                 | '   repeat i from 0 to LAST_CHANNEL
02e54     08 5E 05 F1 | 	add	fp, #8
02e58     AF 00 68 FC | 	wrlong	#0, fp
02e5c     08 5E 85 F1 | 	sub	fp, #8
02e60                 | LR__0102
02e60     08 5E 05 F1 | 	add	fp, #8
02e64     AF 9E 02 FB | 	rdlong	local28, fp
02e68     01 9E 66 F0 | 	shl	local28, #1
02e6c     D7 0E 06 F1 | 	add	objptr, #215
02e70     07 9F 02 F1 | 	add	local28, objptr
02e74                 | ' 
02e74                 | '     currRepeatPoint[i]        := 0
02e74     4F 01 58 FC | 	wrword	#0, local28
02e78     AF A0 02 FB | 	rdlong	local29, fp
02e7c     01 A0 66 F0 | 	shl	local29, #1
02e80     1C 0E 86 F1 | 	sub	objptr, #28
02e84     07 A1 02 F1 | 	add	local29, objptr
02e88                 | '     currSampleLength[i]       := 4
02e88     50 09 58 FC | 	wrword	#4, local29
02e8c     13 A3 02 F6 | 	mov	local30, ptr__trackerplayer_spin2_dat__
02e90     AF A4 02 FB | 	rdlong	local31, fp
02e94     02 A4 66 F0 | 	shl	local31, #2
02e98     14 0E 86 F1 | 	sub	objptr, #20
02e9c     07 A5 02 F1 | 	add	local31, objptr
02ea0                 | '     currSamplePtr[i]          := @null
02ea0     52 A3 62 FC | 	wrlong	local30, local31
02ea4     AF A6 02 FB | 	rdlong	local32, fp
02ea8     10 0E 06 F1 | 	add	objptr, #16
02eac     07 A7 02 F1 | 	add	local32, objptr
02eb0                 | '     currSampleNr[i]           := 0
02eb0     53 01 48 FC | 	wrbyte	#0, local32
02eb4     AF A8 02 FB | 	rdlong	local33, fp
02eb8     02 A8 66 F0 | 	shl	local33, #2
02ebc     0C 0E 06 F1 | 	add	objptr, #12
02ec0     07 A9 02 F1 | 	add	local33, objptr
02ec4                 | '     currRepeatLength[i]       := 1
02ec4     54 03 68 FC | 	wrlong	#1, local33
02ec8     AF AA 02 FB | 	rdlong	local34, fp
02ecc     02 AA 66 F0 | 	shl	local34, #2
02ed0     1C 0E 06 F1 | 	add	objptr, #28
02ed4     07 AB 02 F1 | 	add	local34, objptr
02ed8                 | '     currPeriod[i]             := 400
02ed8     55 21 6B FC | 	wrlong	#400, local34
02edc     AF AC 02 FB | 	rdlong	local35, fp
02ee0     02 AC 66 F0 | 	shl	local35, #2
02ee4     48 0E 06 F1 | 	add	objptr, #72
02ee8     07 AD 02 F1 | 	add	local35, objptr
02eec                 | '     lastSetPeriod[i]          := 400
02eec     56 21 6B FC | 	wrlong	#400, local35
02ef0     AF AE 02 FB | 	rdlong	local36, fp
02ef4     02 AE 66 F0 | 	shl	local36, #2
02ef8     10 0E 06 F1 | 	add	objptr, #16
02efc     07 AF 02 F1 | 	add	local36, objptr
02f00                 | '     lastSetSamplePtr[i]       := 0
02f00     57 01 68 FC | 	wrlong	#0, local36
02f04     AF B0 02 FB | 	rdlong	local37, fp
02f08     02 B0 66 F0 | 	shl	local37, #2
02f0c     10 0E 06 F1 | 	add	objptr, #16
02f10     07 B1 02 F1 | 	add	local37, objptr
02f14                 | '     lastSetSampleNr[i]        := 0
02f14     58 01 68 FC | 	wrlong	#0, local37
02f18     AF B2 02 FB | 	rdlong	local38, fp
02f1c     02 B2 66 F0 | 	shl	local38, #2
02f20     10 0E 06 F1 | 	add	objptr, #16
02f24     07 B3 02 F1 | 	add	local38, objptr
02f28                 | '     lastSetSampleLength[i]    := 0
02f28     59 01 68 FC | 	wrlong	#0, local38
02f2c     AF B4 02 FB | 	rdlong	local39, fp
02f30     02 B4 66 F0 | 	shl	local39, #2
02f34     10 0E 06 F1 | 	add	objptr, #16
02f38     07 B5 02 F1 | 	add	local39, objptr
02f3c                 | '     lastSetRepeatLength[i]    := 0
02f3c     5A 01 68 FC | 	wrlong	#0, local39
02f40     AF B6 02 FB | 	rdlong	local40, fp
02f44     02 B6 66 F0 | 	shl	local40, #2
02f48     10 0E 06 F1 | 	add	objptr, #16
02f4c     07 B7 02 F1 | 	add	local40, objptr
02f50                 | '     lastSetRepeatPoint[i]     := 0
02f50     5B 01 68 FC | 	wrlong	#0, local40
02f54     AF B8 02 FB | 	rdlong	local41, fp
02f58     02 B8 66 F0 | 	shl	local41, #2
02f5c     78 0E 86 F1 | 	sub	objptr, #120
02f60     07 B9 02 F1 | 	add	local41, objptr
02f64                 | '     currVolume[i]             := 0
02f64     5C 01 68 FC | 	wrlong	#0, local41
02f68     AF BA 02 FB | 	rdlong	local42, fp
02f6c     01 BA 66 F0 | 	shl	local42, #1
02f70     20 0E 06 F1 | 	add	objptr, #32
02f74     07 BB 02 F1 | 	add	local42, objptr
02f78                 | '     currPanning[i]            := 0
02f78     5D 01 58 FC | 	wrword	#0, local42
02f7c     AF BC 02 FB | 	rdlong	local43, fp
02f80     A9 0E 06 F1 | 	add	objptr, #169
02f84     07 BD 02 F1 | 	add	local43, objptr
02f88                 | '     cmd3_memoryZ[i]           := 0
02f88     5E 01 48 FC | 	wrbyte	#0, local43
02f8c     AF BE 02 FB | 	rdlong	local44, fp
02f90     04 0E 06 F1 | 	add	objptr, #4
02f94     07 BF 02 F1 | 	add	local44, objptr
02f98                 | '     cmd4_memoryY[i]           := 0
02f98     5F 01 48 FC | 	wrbyte	#0, local44
02f9c     AF C0 02 FB | 	rdlong	local45, fp
02fa0     04 0E 06 F1 | 	add	objptr, #4
02fa4     07 C1 02 F1 | 	add	local45, objptr
02fa8                 | '     cmd4_memoryX[i]           := 0
02fa8     60 01 48 FC | 	wrbyte	#0, local45
02fac     AF C2 02 FB | 	rdlong	local46, fp
02fb0     04 0E 06 F1 | 	add	objptr, #4
02fb4     07 C3 02 F1 | 	add	local46, objptr
02fb8                 | '     cmd7_memoryY[i]           := 0
02fb8     61 01 48 FC | 	wrbyte	#0, local46
02fbc     AF C4 02 FB | 	rdlong	local47, fp
02fc0     04 0E 06 F1 | 	add	objptr, #4
02fc4     07 C5 02 F1 | 	add	local47, objptr
02fc8                 | '     cmd7_memoryX[i]           := 0
02fc8     62 01 48 FC | 	wrbyte	#0, local47
02fcc     AF C6 02 FB | 	rdlong	local48, fp
02fd0     04 0E 06 F1 | 	add	objptr, #4
02fd4     07 C7 02 F1 | 	add	local48, objptr
02fd8                 | '     cmd9_memoryZ[i]           := 0
02fd8     63 01 48 FC | 	wrbyte	#0, local48
02fdc     AF C8 02 FB | 	rdlong	local49, fp
02fe0     0D 0E 06 F1 | 	add	objptr, #13
02fe4     07 C9 02 F1 | 	add	local49, objptr
02fe8                 | '     cmdE6_memory[i]           := 0
02fe8     64 01 48 FC | 	wrbyte	#0, local49
02fec     AF CA 02 FB | 	rdlong	local50, fp
02ff0     04 0E 06 F1 | 	add	objptr, #4
02ff4     07 CB 02 F1 | 	add	local50, objptr
02ff8                 | '     cmdE6_counter[i]          := 0
02ff8     65 01 48 FC | 	wrbyte	#0, local50
02ffc     AF CC 02 FB | 	rdlong	local51, fp
03000     04 0E 06 F1 | 	add	objptr, #4
03004     07 CD 02 F1 | 	add	local51, objptr
03008                 | '     cmdE6_updatePosition[i]   := false
03008     66 01 48 FC | 	wrbyte	#0, local51
0300c     AF CE 02 FB | 	rdlong	local52, fp
03010     11 0E 86 F1 | 	sub	objptr, #17
03014     07 CF 02 F1 | 	add	local52, objptr
03018                 | '     sampleNumber_memory[i]    := 0
03018     67 01 48 FC | 	wrbyte	#0, local52
0301c     AF D0 02 FB | 	rdlong	local53, fp
03020     59 0E 86 F1 | 	sub	objptr, #89
03024     07 D1 02 F1 | 	add	local53, objptr
03028                 | '     vibratoPos[i]             := 0
03028     68 01 48 FC | 	wrbyte	#0, local53
0302c     AF D2 02 FB | 	rdlong	local54, fp
03030     02 D2 66 F0 | 	shl	local54, #2
03034     10 0E 06 F1 | 	add	objptr, #16
03038     07 D3 02 F1 | 	add	local54, objptr
0303c                 | '     portamentoPeriodMemory[i] := 0
0303c     69 01 68 FC | 	wrlong	#0, local54
03040     AF D4 02 FB | 	rdlong	local55, fp
03044     25 0E 06 F1 | 	add	objptr, #37
03048     07 D5 02 F1 | 	add	local55, objptr
0304c                 | '     portaGlissando[i]         := 0
0304c     6A 01 48 FC | 	wrbyte	#0, local55
03050     AF D6 02 FB | 	rdlong	local56, fp
03054     04 0E 06 F1 | 	add	objptr, #4
03058     07 D7 02 F1 | 	add	local56, objptr
0305c                 | '     vibratoType[i]            := 0
0305c     6B 01 48 FC | 	wrbyte	#0, local56
03060     AF D8 02 FB | 	rdlong	local57, fp
03064     04 0E 06 F1 | 	add	objptr, #4
03068     07 D9 02 F1 | 	add	local57, objptr
0306c                 | '     tremoloType[i]            := 0
0306c     6C 01 48 FC | 	wrbyte	#0, local57
03070     AF DA 02 FB | 	rdlong	local58, fp
03074     39 0E 86 F1 | 	sub	objptr, #57
03078     07 DB 02 F1 | 	add	local58, objptr
0307c                 | '     tremoloPos[i]             := 0
0307c     6D 01 48 FC | 	wrbyte	#0, local58
03080     AF DC 02 FB | 	rdlong	local59, fp
03084     02 DC 66 F0 | 	shl	local59, #2
03088     7C 0E 86 F1 | 	sub	objptr, #124
0308c     07 DD 02 F1 | 	add	local59, objptr
03090                 | '     deltaVolume[i]            := 0
03090     6E 01 68 FC | 	wrlong	#0, local59
03094     AF DE 02 FB | 	rdlong	local60, fp
03098     02 DE 66 F0 | 	shl	local60, #2
0309c     20 0E 86 F1 | 	sub	objptr, #32
030a0     07 DF 02 F1 | 	add	local60, objptr
030a4                 | '     deltaPeriod[i]            := 0
030a4     6F 01 68 FC | 	wrlong	#0, local60
030a8     AF E0 02 FB | 	rdlong	local61, fp
030ac     A0 0E 06 F1 | 	add	objptr, #160
030b0     07 E1 02 F1 | 	add	local61, objptr
030b4                 | '     resetTremolo[i]           := 0
030b4     70 01 48 FC | 	wrbyte	#0, local61
030b8     AF E2 02 FB | 	rdlong	local62, fp
030bc     04 0E 06 F1 | 	add	objptr, #4
030c0     07 E3 02 F1 | 	add	local62, objptr
030c4                 | '     resetVibrato[i]           := 0
030c4     71 01 48 FC | 	wrbyte	#0, local62
030c8     AF 82 02 FB | 	rdlong	local14, fp
030cc     01 82 06 F1 | 	add	local14, #1
030d0     AF 82 62 FC | 	wrlong	local14, fp
030d4     08 5E 85 F1 | 	sub	fp, #8
030d8     04 82 5E F2 | 	cmps	local14, #4 wcz
030dc     93 0F 86 F1 | 	sub	objptr, #403
030e0     7C FD 9F CD |  if_b	jmp	#LR__0102
030e4     AF F0 03 F6 | 	mov	ptra, fp
030e8     BF 00 A0 FD | 	call	#popregs_
030ec                 | _trackerplayer_spin2_initModule_ret
030ec     2D 00 64 FD | 	ret
030f0                 | 
030f0                 | ' 
030f0                 | ' 
030f0                 | ' ' This routine needs to be ticked X number of times per second
030f0                 | ' ' in order to advance the tracker play routine
030f0                 | ' '
030f0                 | ' PUB tick() | channel, sampleNumber, period, effect, i
030f0                 | _trackerplayer_spin2_tick
030f0     12 5A 05 F6 | 	mov	COUNT_, #18
030f4     B0 00 A0 FD | 	call	#pushregs_
030f8     30 F0 07 F1 | 	add	ptra, #48
030fc                 | ' 
030fc                 | '   if currentSongSpeed == 0
030fc     A4 0E 06 F1 | 	add	objptr, #164
03100     07 69 CA FA | 	rdbyte	local01, objptr wz
03104     A4 0E 86 F1 | 	sub	objptr, #164
03108                 | '     return
03108     34 03 90 AD |  if_e	jmp	#LR__0114
0310c                 | ' 
0310c                 | '   ' Iterate over the channels and process everything
0310c                 | '   repeat channel from 0 to LAST_CHANNEL
0310c     AF 00 68 FC | 	wrlong	#0, fp
03110                 | LR__0103
03110     04 5E 05 F1 | 	add	fp, #4
03114     AF 60 02 F6 | 	mov	arg04, fp
03118     04 5E 05 F1 | 	add	fp, #4
0311c     AF 62 02 F6 | 	mov	arg05, fp
03120     04 5E 05 F1 | 	add	fp, #4
03124     AF 64 02 F6 | 	mov	arg06, fp
03128     0C 5E 85 F1 | 	sub	fp, #12
0312c                 | ' 
0312c                 | '     getNoteData(channel, songPosition, patternRow, @sampleNumber, @period, @effect)
0312c     AF 5A 02 FB | 	rdlong	arg01, fp
03130     A3 0E 06 F1 | 	add	objptr, #163
03134     07 5D C2 FA | 	rdbyte	arg02, objptr
03138     01 0E 86 F1 | 	sub	objptr, #1
0313c     07 5F C2 FA | 	rdbyte	arg03, objptr
03140     7F 5C 06 F5 | 	and	arg02, #127
03144     0C 0E 86 F1 | 	sub	objptr, #12
03148     07 6B 02 FB | 	rdlong	local02, objptr
0314c     35 5D 02 F1 | 	add	arg02, local02
03150                 | ' 
03150                 | '   ' Get the note data for a specific channel/song position/pattern row
03150                 | '   patternNumber := byte[songPositionsLut][position & 127]
03150     2E 6D C2 FA | 	rdbyte	local03, arg02
03154     0A 6C 66 F0 | 	shl	local03, #10
03158     04 0E 86 F1 | 	sub	objptr, #4
0315c     07 6F 02 FB | 	rdlong	local04, objptr
03160     92 0E 86 F1 | 	sub	objptr, #146
03164     36 6F 02 F1 | 	add	local04, local03
03168                 | '   patternPtr    := patternsData + (patternNumber << 10)
03168     3F 5E 06 F5 | 	and	arg03, #63
0316c     04 5E 66 F0 | 	shl	arg03, #4
03170     2F 6F 02 F1 | 	add	local04, arg03
03174     03 5A 06 F5 | 	and	arg01, #3
03178     02 5A 66 F0 | 	shl	arg01, #2
0317c     2D 6F 02 F1 | 	add	local04, arg01
03180                 | '   dataPtr       := patternPtr + ((row & 63) << 4) + ((channel &3 ) << 2)
03180     37 71 C2 FA | 	rdbyte	local05, local04
03184     18 70 66 F0 | 	shl	local05, #24
03188     01 6E 06 F1 | 	add	local04, #1
0318c     37 73 C2 FA | 	rdbyte	local06, local04
03190     10 72 66 F0 | 	shl	local06, #16
03194     39 71 42 F5 | 	or	local05, local06
03198     01 6E 06 F1 | 	add	local04, #1
0319c     37 75 C2 FA | 	rdbyte	local07, local04
031a0     08 74 66 F0 | 	shl	local07, #8
031a4     3A 71 42 F5 | 	or	local05, local07
031a8     01 6E 06 F1 | 	add	local04, #1
031ac     37 77 C2 FA | 	rdbyte	local08, local04
031b0     3B 71 42 F5 | 	or	local05, local08
031b4                 | '   data          := (byte[dataPtr][0] << 24) | (byte[dataPtr][1] << 16) | (byte[dataPtr][2] << 8) | byte[dataPtr][3]
031b4     38 79 02 F6 | 	mov	local09, local05
031b8     0C 78 46 F0 | 	shr	local09, #12
031bc     0F 78 06 F5 | 	and	local09, #15
031c0     38 7B 02 F6 | 	mov	local10, local05
031c4     18 7A 46 F0 | 	shr	local10, #24
031c8     F0 7A 06 F5 | 	and	local10, #240
031cc     3D 79 42 F5 | 	or	local09, local10
031d0                 | ' 
031d0                 | '   ' Extract the different sub parts from the data
031d0                 | '   long[sampleNumber] := ((data >> 12) & $F) | ((data >> 24) & $F0)
031d0     30 79 62 FC | 	wrlong	local09, arg04
031d4     38 7D 02 F6 | 	mov	local11, local05
031d8     10 7C 46 F0 | 	shr	local11, #16
031dc     07 00 00 FF 
031e0     FF 7D 06 F5 | 	and	local11, ##4095
031e4                 | '   long[period]       :=  (data >> 16) & $FFF
031e4     31 7D 62 FC | 	wrlong	local11, arg05
031e8     07 00 00 FF 
031ec     FF 71 06 F5 | 	and	local05, ##4095
031f0                 | '   long[effect]       :=   data & $FFF
031f0     32 71 62 FC | 	wrlong	local05, arg06
031f4                 | '     processChannel(channel, sampleNumber, period, effect)
031f4     AF 5A 02 FB | 	rdlong	arg01, fp
031f8     04 5E 05 F1 | 	add	fp, #4
031fc     AF 5C 02 FB | 	rdlong	arg02, fp
03200     04 5E 05 F1 | 	add	fp, #4
03204     AF 5E 02 FB | 	rdlong	arg03, fp
03208     04 5E 05 F1 | 	add	fp, #4
0320c     AF 60 02 FB | 	rdlong	arg04, fp
03210     0C 5E 85 F1 | 	sub	fp, #12
03214     0C 05 B0 FD | 	call	#_trackerplayer_spin2_processChannel
03218     AF 7E 02 FB | 	rdlong	local12, fp
0321c     01 7E 06 F1 | 	add	local12, #1
03220     AF 7E 62 FC | 	wrlong	local12, fp
03224     04 7E 5E F2 | 	cmps	local12, #4 wcz
03228     E4 FE 9F CD |  if_b	jmp	#LR__0103
0322c                 | ' 
0322c                 | '   ' Incrementation the main counter that drives the whole play routine
0322c                 | '   if ++tickCounter >= (currentSongSpeed + patternDelay)
0322c     A1 0E 06 F1 | 	add	objptr, #161
03230     07 69 C2 FA | 	rdbyte	local01, objptr
03234     01 68 06 F1 | 	add	local01, #1
03238     07 69 42 FC | 	wrbyte	local01, objptr
0323c     03 0E 06 F1 | 	add	objptr, #3
03240     07 81 C2 FA | 	rdbyte	local13, objptr
03244     01 0E 06 F1 | 	add	objptr, #1
03248     07 83 C2 FA | 	rdbyte	local14, objptr
0324c     41 81 02 F1 | 	add	local13, local14
03250     04 0E 86 F1 | 	sub	objptr, #4
03254     07 85 C2 FA | 	rdbyte	local15, objptr
03258     A1 0E 86 F1 | 	sub	objptr, #161
0325c     40 85 5A F2 | 	cmps	local15, local13 wcz
03260                 | '     tickCounter := 0
03260     A1 0E 06 31 |  if_ae	add	objptr, #161
03264     07 01 48 3C |  if_ae	wrbyte	#0, objptr
03268     A1 0E 86 31 |  if_ae	sub	objptr, #161
0326c                 | ' 
0326c                 | '   ' If the tick is zero, increment the other counters and do some song positioning handling
0326c                 | '   if tickCounter == 0
0326c     A1 0E 06 F1 | 	add	objptr, #161
03270     07 69 CA FA | 	rdbyte	local01, objptr wz
03274     A1 0E 86 F1 | 	sub	objptr, #161
03278     C4 01 90 5D |  if_ne	jmp	#LR__0113
0327c                 | ' 
0327c                 | '     ' Handle the "pattern repeat" command, "E6"
0327c                 | '     if cmdE6_updatePositionCommon
0327c     F5 0F 06 F1 | 	add	objptr, #501
03280     07 69 CA FA | 	rdbyte	local01, objptr wz
03284     F5 0F 86 F1 | 	sub	objptr, #501
03288     8C 00 90 AD |  if_e	jmp	#LR__0107
0328c                 | '       repeat i from 0 to LAST_CHANNEL
0328c     10 5E 05 F1 | 	add	fp, #16
03290     AF 00 68 FC | 	wrlong	#0, fp
03294     10 5E 85 F1 | 	sub	fp, #16
03298     D8 CD 9F FE | 	loc	pa,	#(@LR__0106-@LR__0104)
0329c     93 00 A0 FD | 	call	#FCACHE_LOAD_
032a0                 | LR__0104
032a0                 | '         if cmdE6_updatePosition[i]
032a0     10 5E 05 F1 | 	add	fp, #16
032a4     AF 7E 02 FB | 	rdlong	local12, fp
032a8     10 5E 85 F1 | 	sub	fp, #16
032ac     F1 0F 06 F1 | 	add	objptr, #497
032b0     07 7F 02 F1 | 	add	local12, objptr
032b4     3F 83 CA FA | 	rdbyte	local14, local12 wz
032b8     F1 0F 86 F1 | 	sub	objptr, #497
032bc     24 00 90 AD |  if_e	jmp	#LR__0105
032c0     10 5E 05 F1 | 	add	fp, #16
032c4     AF 86 02 FB | 	rdlong	local16, fp
032c8     10 5E 85 F1 | 	sub	fp, #16
032cc     E9 0F 06 F1 | 	add	objptr, #489
032d0     07 87 02 F1 | 	add	local16, objptr
032d4                 | '           patternRow := cmdE6_memory[i]
032d4     43 7F C2 FA | 	rdbyte	local12, local16
032d8     47 0F 86 F1 | 	sub	objptr, #327
032dc     07 7F 42 FC | 	wrbyte	local12, objptr
032e0     A2 0E 86 F1 | 	sub	objptr, #162
032e4                 | LR__0105
032e4     10 5E 05 F1 | 	add	fp, #16
032e8     AF 88 02 FB | 	rdlong	local17, fp
032ec     F1 0F 06 F1 | 	add	objptr, #497
032f0     07 89 02 F1 | 	add	local17, objptr
032f4                 | '         cmdE6_updatePosition[i] := false
032f4     44 01 48 FC | 	wrbyte	#0, local17
032f8     AF 7E 02 FB | 	rdlong	local12, fp
032fc     01 7E 06 F1 | 	add	local12, #1
03300     AF 7E 62 FC | 	wrlong	local12, fp
03304     10 5E 85 F1 | 	sub	fp, #16
03308     04 7E 5E F2 | 	cmps	local12, #4 wcz
0330c     F1 0F 86 F1 | 	sub	objptr, #497
03310     8C FF 9F CD |  if_b	jmp	#LR__0104
03314                 | LR__0106
03314     CC 00 90 FD | 	jmp	#LR__0111
03318                 | LR__0107
03318                 | ' 
03318                 | '     ' Handle the "skip to next pattern with offset command", "D"
03318                 | '     elseif cmdD_updatePosition
03318     E6 0F 06 F1 | 	add	objptr, #486
0331c     07 69 CA FA | 	rdbyte	local01, objptr wz
03320     E6 0F 86 F1 | 	sub	objptr, #486
03324     64 00 90 AD |  if_e	jmp	#LR__0108
03328                 | '       if ++songPosition >= songLength
03328     A3 0E 06 F1 | 	add	objptr, #163
0332c     07 69 C2 FA | 	rdbyte	local01, objptr
03330     01 68 06 F1 | 	add	local01, #1
03334     07 69 42 FC | 	wrbyte	local01, objptr
03338     07 81 C2 FA | 	rdbyte	local13, objptr
0333c     09 0E 86 F1 | 	sub	objptr, #9
03340     07 83 C2 FA | 	rdbyte	local14, objptr
03344     9A 0E 86 F1 | 	sub	objptr, #154
03348     41 81 5A F2 | 	cmps	local13, local14 wcz
0334c                 | '         songPosition := 0
0334c     A3 0E 06 31 |  if_ae	add	objptr, #163
03350     07 01 48 3C |  if_ae	wrbyte	#0, objptr
03354     A3 0E 86 31 |  if_ae	sub	objptr, #163
03358     E4 0F 06 F1 | 	add	objptr, #484
0335c     07 7F C2 FA | 	rdbyte	local12, objptr
03360     3F 8B 02 F6 | 	mov	local18, local12
03364     02 8A 66 F0 | 	shl	local18, #2
03368     3F 8B 02 F1 | 	add	local18, local12
0336c     01 8A 66 F0 | 	shl	local18, #1
03370     01 0E 06 F1 | 	add	objptr, #1
03374     07 7F C2 FA | 	rdbyte	local12, objptr
03378     3F 8B 02 F1 | 	add	local18, local12
0337c                 | ' 
0337c                 | '       patternRow := (cmdD_memoryX * 10) + cmdD_memoryY
0337c     43 0F 86 F1 | 	sub	objptr, #323
03380     07 8B 42 FC | 	wrbyte	local18, objptr
03384     A2 0E 86 F1 | 	sub	objptr, #162
03388                 | ' 
03388                 | '     ' If no "jump to row commands" are active, do a normal pattern incrementation
03388                 | '     else
03388     58 00 90 FD | 	jmp	#LR__0110
0338c                 | LR__0108
0338c                 | '       if ++patternRow >= PATTERN_LENGTH
0338c     A2 0E 06 F1 | 	add	objptr, #162
03390     07 69 C2 FA | 	rdbyte	local01, objptr
03394     01 68 06 F1 | 	add	local01, #1
03398     07 69 42 FC | 	wrbyte	local01, objptr
0339c     07 81 C2 FA | 	rdbyte	local13, objptr
033a0     A2 0E 86 F1 | 	sub	objptr, #162
033a4     40 80 5E F2 | 	cmps	local13, #64 wcz
033a8     38 00 90 CD |  if_b	jmp	#LR__0109
033ac                 | '         patternRow := 0
033ac     A2 0E 06 F1 | 	add	objptr, #162
033b0     07 01 48 FC | 	wrbyte	#0, objptr
033b4                 | ' 
033b4                 | '         if ++songPosition >= songLength
033b4     01 0E 06 F1 | 	add	objptr, #1
033b8     07 69 C2 FA | 	rdbyte	local01, objptr
033bc     01 68 06 F1 | 	add	local01, #1
033c0     07 69 42 FC | 	wrbyte	local01, objptr
033c4     07 81 C2 FA | 	rdbyte	local13, objptr
033c8     09 0E 86 F1 | 	sub	objptr, #9
033cc     07 83 C2 FA | 	rdbyte	local14, objptr
033d0     9A 0E 86 F1 | 	sub	objptr, #154
033d4     41 81 5A F2 | 	cmps	local13, local14 wcz
033d8                 | '           songPosition := 0
033d8     A3 0E 06 31 |  if_ae	add	objptr, #163
033dc     07 01 48 3C |  if_ae	wrbyte	#0, objptr
033e0     A3 0E 86 31 |  if_ae	sub	objptr, #163
033e4                 | LR__0109
033e4                 | LR__0110
033e4                 | LR__0111
033e4                 | ' 
033e4                 | '     ' Handle "jump to song position" command, "B"
033e4                 | '     if cmdB_updatePosition
033e4     E8 0F 06 F1 | 	add	objptr, #488
033e8     07 69 CA FA | 	rdbyte	local01, objptr wz
033ec     E8 0F 86 F1 | 	sub	objptr, #488
033f0     28 00 90 AD |  if_e	jmp	#LR__0112
033f4                 | ' 
033f4                 | '       songPosition := cmdB_memoryZ
033f4     E7 0F 06 F1 | 	add	objptr, #487
033f8     07 69 C2 FA | 	rdbyte	local01, objptr
033fc     44 0F 86 F1 | 	sub	objptr, #324
03400     07 69 42 FC | 	wrbyte	local01, objptr
03404                 | ' 
03404                 | '       ifnot cmdD_updatePosition
03404     43 0F 06 F1 | 	add	objptr, #323
03408     07 69 CA FA | 	rdbyte	local01, objptr wz
0340c     E6 0F 86 F1 | 	sub	objptr, #486
03410                 | '         patternRow := 0
03410     A2 0E 06 A1 |  if_e	add	objptr, #162
03414     07 01 48 AC |  if_e	wrbyte	#0, objptr
03418     A2 0E 86 A1 |  if_e	sub	objptr, #162
0341c                 | LR__0112
0341c                 | ' 
0341c                 | '     ' We need to be sure that all positioning commands are reset for the next tick
0341c                 | '     cmdE6_updatePositionCommon := false
0341c     F5 0F 06 F1 | 	add	objptr, #501
03420     07 01 48 FC | 	wrbyte	#0, objptr
03424                 | '     cmdB_updatePosition := false
03424     0D 0E 86 F1 | 	sub	objptr, #13
03428     07 01 48 FC | 	wrbyte	#0, objptr
0342c                 | '     cmdD_updatePosition := false
0342c     02 0E 86 F1 | 	sub	objptr, #2
03430     07 01 48 FC | 	wrbyte	#0, objptr
03434                 | '     patternDelay := 0
03434     41 0F 86 F1 | 	sub	objptr, #321
03438     07 01 48 FC | 	wrbyte	#0, objptr
0343c     A5 0E 86 F1 | 	sub	objptr, #165
03440                 | LR__0113
03440                 | LR__0114
03440     AF F0 03 F6 | 	mov	ptra, fp
03444     BF 00 A0 FD | 	call	#popregs_
03448                 | _trackerplayer_spin2_tick_ret
03448     2D 00 64 FD | 	ret
0344c                 | 
0344c                 | ' 
0344c                 | ' 
0344c                 | ' PRI amigaPeriodToNote(period, fTune) : r | i
0344c                 | _trackerplayer_spin2_amigaPeriodToNote
0344c                 | ' 
0344c                 | '   repeat i from 0 to LAST_POS_IN_PERIOD_TBL
0344c     00 2E 06 F6 | 	mov	_var01, #0
03450     F8 CB 9F FE | 	loc	pa,	#(@LR__0116-@LR__0115)
03454     93 00 A0 FD | 	call	#FCACHE_LOAD_
03458                 | LR__0115
03458                 | '     if (word[@periodTable + (fTune * BYTES_IN_PERIOD_TABLE)][i]) <= period
03458     06 00 00 FF 
0345c     AC 26 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##3244
03460     13 31 02 F6 | 	mov	_var02, ptr__trackerplayer_spin2_dat__
03464     2E 33 02 F6 | 	mov	_var03, arg02
03468     03 32 66 F0 | 	shl	_var03, #3
0346c     2E 33 02 F1 | 	add	_var03, arg02
03470     03 32 66 F0 | 	shl	_var03, #3
03474     19 31 02 F1 | 	add	_var02, _var03
03478     17 35 02 F6 | 	mov	_var04, _var01
0347c     01 34 66 F0 | 	shl	_var04, #1
03480     18 35 02 F1 | 	add	_var04, _var02
03484     1A 37 E2 FA | 	rdword	_var05, _var04
03488     2D 37 5A F2 | 	cmps	_var05, arg01 wcz
0348c                 | '       quit
0348c     06 00 00 FF 
03490     AC 26 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##3244
03494     0C 00 90 ED |  if_be	jmp	#LR__0117
03498     01 2E 06 F1 | 	add	_var01, #1
0349c     24 2E 5E F2 | 	cmps	_var01, #36 wcz
034a0     B4 FF 9F CD |  if_b	jmp	#LR__0115
034a4                 | LR__0116
034a4                 | LR__0117
034a4                 | ' 
034a4                 | '   return i
034a4     17 29 02 F6 | 	mov	result1, _var01
034a8                 | _trackerplayer_spin2_amigaPeriodToNote_ret
034a8     2D 00 64 FD | 	ret
034ac                 | 
034ac                 | ' 
034ac                 | ' 
034ac                 | ' PRI retunePeriod(period, fTune) | noteNumber
034ac                 | _trackerplayer_spin2_retunePeriod
034ac     06 5A 05 F6 | 	mov	COUNT_, #6
034b0     B0 00 A0 FD | 	call	#pushregs_
034b4     2D 69 02 F6 | 	mov	local01, arg01
034b8     2E 6B 02 F6 | 	mov	local02, arg02
034bc                 | ' 
034bc                 | '   if period > 0 and fTune < 16
034bc     00 68 5E F2 | 	cmps	local01, #0 wcz
034c0     50 00 90 ED |  if_be	jmp	#LR__0118
034c4     10 6A 5E F2 | 	cmps	local02, #16 wcz
034c8     48 00 90 3D |  if_ae	jmp	#LR__0118
034cc                 | '     noteNumber := amigaPeriodToNote(word[period], 0)
034cc     34 5B E2 FA | 	rdword	arg01, local01
034d0     00 5C 06 F6 | 	mov	arg02, #0
034d4     74 FF BF FD | 	call	#_trackerplayer_spin2_amigaPeriodToNote
034d8     14 6D 02 F6 | 	mov	local03, result1
034dc     06 00 00 FF 
034e0     AC 26 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##3244
034e4     13 6F 02 F6 | 	mov	local04, ptr__trackerplayer_spin2_dat__
034e8     35 71 02 F6 | 	mov	local05, local02
034ec     03 70 66 F0 | 	shl	local05, #3
034f0     35 71 02 F1 | 	add	local05, local02
034f4     03 70 66 F0 | 	shl	local05, #3
034f8     38 6F 02 F1 | 	add	local04, local05
034fc     01 6C 66 F0 | 	shl	local03, #1
03500     37 6D 02 F1 | 	add	local03, local04
03504                 | '     word[period] := word[@periodTable + (fTune * BYTES_IN_PERIOD_TABLE)][noteNumber]
03504     36 73 E2 FA | 	rdword	local06, local03
03508     34 73 52 FC | 	wrword	local06, local01
0350c     06 00 00 FF 
03510     AC 26 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##3244
03514                 | LR__0118
03514     AF F0 03 F6 | 	mov	ptra, fp
03518     BF 00 A0 FD | 	call	#popregs_
0351c                 | _trackerplayer_spin2_retunePeriod_ret
0351c     2D 00 64 FD | 	ret
03520                 | 
03520                 | ' 
03520                 | ' 
03520                 | ' PRI getSampleInfo(sampleNumber, samplePtr, sampleLength, fTune, volume, repeatPoint, repeatLength) | sampleInfoPtr
03520                 | _trackerplayer_spin2_getSampleInfo
03520     2D 2F 0A F6 | 	mov	_var01, arg01 wz
03524                 | ' 
03524                 | '   if sampleNumber == 0 or sampleNumber > LAST_SAMPLE_NUMBER ' Can't go beyond sample 31
03524     08 00 90 AD |  if_e	jmp	#LR__0119
03528     1F 2E 5E F2 | 	cmps	_var01, #31 wcz
0352c     08 00 90 ED |  if_be	jmp	#LR__0120
03530                 | LR__0119
03530                 | '     long[samplePtr] := 0
03530     2E 01 68 FC | 	wrlong	#0, arg02
03534                 | '     return
03534     E0 00 90 FD | 	jmp	#_trackerplayer_spin2_getSampleInfo_ret
03538                 | LR__0120
03538                 | ' 
03538                 | '   sampleNumber--
03538     01 2E 86 F1 | 	sub	_var01, #1
0353c     17 31 02 F6 | 	mov	_var02, _var01
03540     04 30 66 F0 | 	shl	_var02, #4
03544     17 31 82 F1 | 	sub	_var02, _var01
03548     01 30 66 F0 | 	shl	_var02, #1
0354c     0A 0E 06 F1 | 	add	objptr, #10
03550     07 33 02 FB | 	rdlong	_var03, objptr
03554     18 33 02 F1 | 	add	_var03, _var02
03558                 | '   sampleInfoPtr      := samplesInfoLut + (sampleNumber * 30)
03558     19 35 02 F6 | 	mov	_var04, _var03
0355c     16 34 06 F1 | 	add	_var04, #22
03560     1A 37 C2 FA | 	rdbyte	_var05, _var04
03564     08 36 66 F0 | 	shl	_var05, #8
03568     19 39 02 F6 | 	mov	_var06, _var03
0356c     17 38 06 F1 | 	add	_var06, #23
03570     1C 3B C2 FA | 	rdbyte	_var07, _var06
03574     1D 37 42 F5 | 	or	_var05, _var07
03578     01 36 66 F0 | 	shl	_var05, #1
0357c                 | '   long[sampleLength] := ((byte[sampleInfoPtr + 22] << 8) | byte[sampleInfoPtr + 23]) << 1
0357c     2F 37 62 FC | 	wrlong	_var05, arg03
03580     19 3D 02 F6 | 	mov	_var08, _var03
03584     18 3C 06 F1 | 	add	_var08, #24
03588                 | '   long[fTune]        :=   byte[sampleInfoPtr + 24]
03588     1E 3F C2 FA | 	rdbyte	_var09, _var08
0358c     30 3F 62 FC | 	wrlong	_var09, arg04
03590     19 41 02 F6 | 	mov	_var10, _var03
03594     19 40 06 F1 | 	add	_var10, #25
03598                 | '   long[volume]       :=   byte[sampleInfoPtr + 25]
03598     20 3F C2 FA | 	rdbyte	_var09, _var10
0359c     31 3F 62 FC | 	wrlong	_var09, arg05
035a0     19 43 02 F6 | 	mov	_var11, _var03
035a4     1A 42 06 F1 | 	add	_var11, #26
035a8     21 45 C2 FA | 	rdbyte	_var12, _var11
035ac     08 44 66 F0 | 	shl	_var12, #8
035b0     19 47 02 F6 | 	mov	_var13, _var03
035b4     1B 46 06 F1 | 	add	_var13, #27
035b8     23 3B C2 FA | 	rdbyte	_var07, _var13
035bc     1D 45 42 F5 | 	or	_var12, _var07
035c0     01 44 66 F0 | 	shl	_var12, #1
035c4                 | '   long[repeatPoint]  := ((byte[sampleInfoPtr + 26] << 8) | byte[sampleInfoPtr + 27]) << 1
035c4     32 45 62 FC | 	wrlong	_var12, arg06
035c8     19 49 02 F6 | 	mov	_var14, _var03
035cc     1C 48 06 F1 | 	add	_var14, #28
035d0     24 4B C2 FA | 	rdbyte	_var15, _var14
035d4     08 4A 66 F0 | 	shl	_var15, #8
035d8     1D 32 06 F1 | 	add	_var03, #29
035dc     19 3B C2 FA | 	rdbyte	_var07, _var03
035e0     1D 4B 42 F5 | 	or	_var15, _var07
035e4     01 4A 66 F0 | 	shl	_var15, #1
035e8                 | '   long[repeatLength] := ((byte[sampleInfoPtr + 28] << 8) | byte[sampleInfoPtr + 29]) << 1
035e8     33 4B 62 FC | 	wrlong	_var15, arg07
035ec     02 2E 66 F0 | 	shl	_var01, #2
035f0     08 0E 06 F1 | 	add	objptr, #8
035f4     07 2F 02 F1 | 	add	_var01, objptr
035f8                 | '   long[samplePtr]    := samplesPtrLut[sampleNumber]
035f8     17 3F 02 FB | 	rdlong	_var09, _var01
035fc     2E 3F 62 FC | 	wrlong	_var09, arg02
03600                 | ' 
03600                 | '   if long[repeatLength] == 2 && long[repeatPoint] == 0
03600     33 3F 02 FB | 	rdlong	_var09, arg07
03604     02 3E 0E F2 | 	cmp	_var09, #2 wz
03608     12 0E 86 F1 | 	sub	objptr, #18
0360c     08 00 90 5D |  if_ne	jmp	#LR__0121
03610     32 3B 0A FB | 	rdlong	_var07, arg06 wz
03614                 | '     long[repeatLength] := 1
03614     33 03 68 AC |  if_e	wrlong	#1, arg07
03618                 | LR__0121
03618                 | _trackerplayer_spin2_getSampleInfo_ret
03618     2D 00 64 FD | 	ret
0361c                 | 
0361c                 | ' 
0361c                 | ' 
0361c                 | ' PRI triggerNote(channel)
0361c                 | _trackerplayer_spin2_triggerNote
0361c     2D 2F 02 F6 | 	mov	_var01, arg01
03620     02 2E 66 F0 | 	shl	_var01, #2
03624     47 0F 06 F1 | 	add	objptr, #327
03628     07 2F 02 F1 | 	add	_var01, objptr
0362c     2D 31 02 F6 | 	mov	_var02, arg01
03630     90 0E 86 F1 | 	sub	objptr, #144
03634                 | ' 
03634                 | '   currSampleNr[channel]     := lastSetSampleNr[channel]
03634     17 33 02 FB | 	rdlong	_var03, _var01
03638     07 31 02 F1 | 	add	_var02, objptr
0363c     18 33 42 FC | 	wrbyte	_var03, _var02
03640     2D 35 02 F6 | 	mov	_var04, arg01
03644     02 34 66 F0 | 	shl	_var04, #2
03648     80 0E 06 F1 | 	add	objptr, #128
0364c     07 35 02 F1 | 	add	_var04, objptr
03650     2D 37 02 F6 | 	mov	_var05, arg01
03654     02 36 66 F0 | 	shl	_var05, #2
03658     90 0E 86 F1 | 	sub	objptr, #144
0365c                 | '   currSamplePtr[channel]    := lastSetSamplePtr[channel]              ' This triggers the actual sample playback
0365c     1A 33 02 FB | 	rdlong	_var03, _var04
03660     07 37 02 F1 | 	add	_var05, objptr
03664     1B 33 62 FC | 	wrlong	_var03, _var05
03668     2D 39 02 F6 | 	mov	_var06, arg01
0366c     02 38 66 F0 | 	shl	_var06, #2
03670     80 0E 06 F1 | 	add	objptr, #128
03674     07 39 02 F1 | 	add	_var06, objptr
03678     2D 3B 02 F6 | 	mov	_var07, arg01
0367c     02 3A 66 F0 | 	shl	_var07, #2
03680     48 0E 86 F1 | 	sub	objptr, #72
03684                 | '   currPeriod[channel]       := lastSetPeriod[channel]
03684     1C 33 02 FB | 	rdlong	_var03, _var06
03688     07 3B 02 F1 | 	add	_var07, objptr
0368c     1D 33 62 FC | 	wrlong	_var03, _var07
03690     2D 3D 02 F6 | 	mov	_var08, arg01
03694     02 3C 66 F0 | 	shl	_var08, #2
03698     78 0E 06 F1 | 	add	objptr, #120
0369c     07 3D 02 F1 | 	add	_var08, objptr
036a0     2D 3F 02 F6 | 	mov	_var09, arg01
036a4     01 3E 66 F0 | 	shl	_var09, #1
036a8     9C 0E 86 F1 | 	sub	objptr, #156
036ac                 | '   currSampleLength[channel] := lastSetSampleLength[channel]
036ac     1E 33 02 FB | 	rdlong	_var03, _var08
036b0     07 3F 02 F1 | 	add	_var09, objptr
036b4     1F 33 52 FC | 	wrword	_var03, _var09
036b8     2D 41 02 F6 | 	mov	_var10, arg01
036bc     02 40 66 F0 | 	shl	_var10, #2
036c0     AC 0E 06 F1 | 	add	objptr, #172
036c4     07 41 02 F1 | 	add	_var10, objptr
036c8     2D 43 02 F6 | 	mov	_var11, arg01
036cc     02 42 66 F0 | 	shl	_var11, #2
036d0     A4 0E 86 F1 | 	sub	objptr, #164
036d4                 | '   currRepeatLength[channel] := lastSetRepeatLength[channel]
036d4     20 33 02 FB | 	rdlong	_var03, _var10
036d8     07 43 02 F1 | 	add	_var11, objptr
036dc     21 33 62 FC | 	wrlong	_var03, _var11
036e0     2D 45 02 F6 | 	mov	_var12, arg01
036e4     02 44 66 F0 | 	shl	_var12, #2
036e8     B4 0E 06 F1 | 	add	objptr, #180
036ec     07 45 02 F1 | 	add	_var12, objptr
036f0     2D 47 02 F6 | 	mov	_var13, arg01
036f4     01 46 66 F0 | 	shl	_var13, #1
036f8     A0 0E 86 F1 | 	sub	objptr, #160
036fc                 | '   currRepeatPoint[channel]  := lastSetRepeatPoint[channel]
036fc     22 33 02 FB | 	rdlong	_var03, _var12
03700     07 47 02 F1 | 	add	_var13, objptr
03704     23 33 52 FC | 	wrword	_var03, _var13
03708     1F 0F 06 F1 | 	add	objptr, #287
0370c     07 5B 02 F1 | 	add	arg01, objptr
03710     2D 49 C2 FA | 	rdbyte	_var14, arg01
03714     01 48 06 F1 | 	add	_var14, #1
03718                 | '   trigger[channel]+=1
03718     2D 49 42 FC | 	wrbyte	_var14, arg01
0371c     F6 0F 86 F1 | 	sub	objptr, #502
03720                 | _trackerplayer_spin2_triggerNote_ret
03720     2D 00 64 FD | 	ret
03724                 | 
03724                 | ' 
03724                 | ' PRI processChannel(channel, sampleNumber, period, effect) | sampleLength, volume, repeatPoint, repeatLength, samplePtr
03724                 | _trackerplayer_spin2_processChannel
03724     33 5A 05 F6 | 	mov	COUNT_, #51
03728     B0 00 A0 FD | 	call	#pushregs_
0372c     D8 F0 07 F1 | 	add	ptra, #216
03730     AF 5A 62 FC | 	wrlong	arg01, fp
03734     04 5E 05 F1 | 	add	fp, #4
03738     AF 5C 62 FC | 	wrlong	arg02, fp
0373c     04 5E 05 F1 | 	add	fp, #4
03740     AF 5E 62 FC | 	wrlong	arg03, fp
03744     04 5E 05 F1 | 	add	fp, #4
03748     AF 60 62 FC | 	wrlong	arg04, fp
0374c     0C 5E 85 F1 | 	sub	fp, #12
03750                 | ' 
03750                 | '   channel := channel & 3
03750     AF 68 02 FB | 	rdlong	local01, fp
03754     03 68 06 F5 | 	and	local01, #3
03758     AF 68 62 FC | 	wrlong	local01, fp
0375c     0C 5E 05 F1 | 	add	fp, #12
03760     AF 6A 02 FB | 	rdlong	local02, fp
03764     08 6A 46 F0 | 	shr	local02, #8
03768     35 6D 02 F6 | 	mov	local03, local02
0376c     0F 6C 06 F5 | 	and	local03, #15
03770                 | '   cmd     := (effect >> 8) & $F
03770     BA 0F 06 F1 | 	add	objptr, #442
03774     07 6D 42 FC | 	wrbyte	local03, objptr
03778     AF 6E 02 FB | 	rdlong	local04, fp
0377c     04 6E 46 F0 | 	shr	local04, #4
03780     37 71 02 F6 | 	mov	local05, local04
03784     0F 70 06 F5 | 	and	local05, #15
03788                 | '   x       := (effect >> 4) & $F
03788     03 0E 86 F1 | 	sub	objptr, #3
0378c     07 71 42 FC | 	wrbyte	local05, objptr
03790     AF 72 02 FB | 	rdlong	local06, fp
03794     0F 72 06 F5 | 	and	local06, #15
03798                 | '   y       := (effect     ) & $F
03798     01 0E 06 F1 | 	add	objptr, #1
0379c     07 73 42 FC | 	wrbyte	local06, objptr
037a0     AF 74 02 FB | 	rdlong	local07, fp
037a4     0C 5E 85 F1 | 	sub	fp, #12
037a8     FF 74 06 F5 | 	and	local07, #255
037ac                 | '   z       := (effect     ) & $FF
037ac     01 0E 06 F1 | 	add	objptr, #1
037b0     07 75 42 FC | 	wrbyte	local07, objptr
037b4                 | ' 
037b4                 | '   ' Handle everything that executes on "tick zero"
037b4                 | '   if tickCounter == 0
037b4     18 0F 86 F1 | 	sub	objptr, #280
037b8     07 69 CA FA | 	rdbyte	local01, objptr wz
037bc     A1 0E 86 F1 | 	sub	objptr, #161
037c0     24 04 90 5D |  if_ne	jmp	#LR__0132
037c4     AF 76 02 FB | 	rdlong	local08, fp
037c8     02 76 66 F0 | 	shl	local08, #2
037cc     EF 0E 06 F1 | 	add	objptr, #239
037d0     07 77 02 F1 | 	add	local08, objptr
037d4                 | ' 
037d4                 | '     ' These two variables are used for vibrato/tremolo/arpeggio effects and needs to be reset at "tick zero"
037d4                 | '     deltaPeriod[channel] := 0
037d4     3B 01 68 FC | 	wrlong	#0, local08
037d8     AF 78 02 FB | 	rdlong	local09, fp
037dc     02 78 66 F0 | 	shl	local09, #2
037e0     20 0E 06 F1 | 	add	objptr, #32
037e4     07 79 02 F1 | 	add	local09, objptr
037e8                 | '     deltaVolume[channel] := 0
037e8     3C 01 68 FC | 	wrlong	#0, local09
037ec                 | ' 
037ec                 | '     ' If the sample number is zero, the memory from "last set non zero sample number" is used
037ec                 | '     if sampleNumber > 0
037ec     04 5E 05 F1 | 	add	fp, #4
037f0     AF 68 02 FB | 	rdlong	local01, fp
037f4     04 5E 85 F1 | 	sub	fp, #4
037f8     00 68 5E F2 | 	cmps	local01, #0 wcz
037fc     0F 0F 86 F1 | 	sub	objptr, #271
03800     20 00 90 ED |  if_be	jmp	#LR__0122
03804     AF 7A 02 FB | 	rdlong	local10, fp
03808     E0 0F 06 F1 | 	add	objptr, #480
0380c     07 7B 02 F1 | 	add	local10, objptr
03810                 | '       sampleNumber_memory[channel] := sampleNumber
03810     04 5E 05 F1 | 	add	fp, #4
03814     AF 68 02 FB | 	rdlong	local01, fp
03818     04 5E 85 F1 | 	sub	fp, #4
0381c     3D 69 42 FC | 	wrbyte	local01, local10
03820     E0 0F 86 F1 | 	sub	objptr, #480
03824                 | LR__0122
03824     AF 7C 02 FB | 	rdlong	local11, fp
03828     E0 0F 06 F1 | 	add	objptr, #480
0382c     07 7D 02 F1 | 	add	local11, objptr
03830     20 5E 05 F1 | 	add	fp, #32
03834     AF 7E 02 F6 | 	mov	local12, fp
03838     10 5E 85 F1 | 	sub	fp, #16
0383c     AF 80 02 F6 | 	mov	local13, fp
03840     31 0E 86 F1 | 	sub	objptr, #49
03844     07 83 02 F6 | 	mov	local14, objptr
03848     04 5E 05 F1 | 	add	fp, #4
0384c     AF 84 02 F6 | 	mov	local15, fp
03850     04 5E 05 F1 | 	add	fp, #4
03854     AF 86 02 F6 | 	mov	local16, fp
03858     04 5E 05 F1 | 	add	fp, #4
0385c     AF 88 02 F6 | 	mov	local17, fp
03860                 | ' 
03860                 | '     ' Get data for the sample in use by the current channel (uses the memorized sample number)
03860                 | '     getSampleInfo(sampleNumber_memory[channel], @samplePtr, @sampleLength, @fineTune, @volume, @repeatPoint, @repeatLength)
03860     3E 5B C2 FA | 	rdbyte	arg01, local11
03864     41 61 02 F6 | 	mov	arg04, local14
03868     42 8B 02 F6 | 	mov	local18, local15
0386c     43 8D 02 F6 | 	mov	local19, local16
03870     44 8F 02 F6 | 	mov	local20, local17
03874     3F 5D 02 F6 | 	mov	arg02, local12
03878     40 5F 02 F6 | 	mov	arg03, local13
0387c     45 63 02 F6 | 	mov	arg05, local18
03880     46 65 02 F6 | 	mov	arg06, local19
03884     47 67 02 F6 | 	mov	arg07, local20
03888     AF 0F 86 F1 | 	sub	objptr, #431
0388c     1C 5E 85 F1 | 	sub	fp, #28
03890     8C FC BF FD | 	call	#_trackerplayer_spin2_getSampleInfo
03894                 | ' 
03894                 | '     ' Only set volume according to the default sample configuration if the sample number is non zero,
03894                 | '     ' this allows for some tricks when used in combination with the sample number memory (commonly used in protracker modules)
03894                 | '     if sampleNumber > 0
03894     04 5E 05 F1 | 	add	fp, #4
03898     AF 68 02 FB | 	rdlong	local01, fp
0389c     04 5E 85 F1 | 	sub	fp, #4
038a0     00 68 5E F2 | 	cmps	local01, #0 wcz
038a4     24 00 90 ED |  if_be	jmp	#LR__0123
038a8     AF 90 02 FB | 	rdlong	local21, fp
038ac     02 90 66 F0 | 	shl	local21, #2
038b0     FF 0E 06 F1 | 	add	objptr, #255
038b4     07 91 02 F1 | 	add	local21, objptr
038b8                 | '       currVolume[channel] := volume
038b8     14 5E 05 F1 | 	add	fp, #20
038bc     AF 68 02 FB | 	rdlong	local01, fp
038c0     14 5E 85 F1 | 	sub	fp, #20
038c4     48 69 62 FC | 	wrlong	local01, local21
038c8     FF 0E 86 F1 | 	sub	objptr, #255
038cc                 | LR__0123
038cc                 | ' 
038cc                 | '     ' Handle all commands that executes on "zero tick"
038cc                 | '     sampleOffset := 0
038cc     B3 0F 06 F1 | 	add	objptr, #435
038d0     07 01 68 FC | 	wrlong	#0, objptr
038d4     B3 0F 86 F1 | 	sub	objptr, #435
038d8                 | '     handleZeroTickCommands(channel)
038d8     AF 5A 02 FB | 	rdlong	arg01, fp
038dc     94 03 B0 FD | 	call	#_trackerplayer_spin2_handleZeroTickCommands
038e0                 | ' 
038e0                 | '     ' Prepare sample data for triggering (now or later)
038e0                 | '     if period > 0
038e0     08 5E 05 F1 | 	add	fp, #8
038e4     AF 68 02 FB | 	rdlong	local01, fp
038e8     08 5E 85 F1 | 	sub	fp, #8
038ec     00 68 5E F2 | 	cmps	local01, #0 wcz
038f0     FC 02 90 ED |  if_be	jmp	#LR__0133
038f4     08 5E 05 F1 | 	add	fp, #8
038f8     AF 92 02 F6 | 	mov	local22, fp
038fc                 | ' 
038fc                 | '       retunePeriod(@period, fineTune)
038fc     AF 0F 06 F1 | 	add	objptr, #431
03900     07 5D 02 FB | 	rdlong	arg02, objptr
03904     AF 0F 86 F1 | 	sub	objptr, #431
03908     49 5B 02 F6 | 	mov	arg01, local22
0390c     08 5E 85 F1 | 	sub	fp, #8
03910     98 FB BF FD | 	call	#_trackerplayer_spin2_retunePeriod
03914     AF 94 02 FB | 	rdlong	local23, fp
03918     D3 0E 06 F1 | 	add	objptr, #211
0391c     07 95 02 F1 | 	add	local23, objptr
03920                 | '       currFineTune[channel]        := fineTune
03920     DC 0E 06 F1 | 	add	objptr, #220
03924     07 69 02 FB | 	rdlong	local01, objptr
03928     4A 69 42 FC | 	wrbyte	local01, local23
0392c     AF 96 02 FB | 	rdlong	local24, fp
03930     4B 99 02 F6 | 	mov	local25, local24
03934     01 98 66 F0 | 	shl	local25, #1
03938     05 00 00 FF 
0393c     A4 27 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##2980
03940     13 99 02 F1 | 	add	local25, ptr__trackerplayer_spin2_dat__
03944     01 96 66 F0 | 	shl	local24, #1
03948     90 0E 86 F1 | 	sub	objptr, #144
0394c                 | '       currPanning[channel]         := panningLut[channel]
0394c     4C 69 E2 FA | 	rdword	local01, local25
03950     07 97 02 F1 | 	add	local24, objptr
03954     4B 69 52 FC | 	wrword	local01, local24
03958     AF 9A 02 FB | 	rdlong	local26, fp
0395c     02 9A 66 F0 | 	shl	local26, #2
03960     08 0E 06 F1 | 	add	objptr, #8
03964     07 9B 02 F1 | 	add	local26, objptr
03968                 | '       lastSetPeriod[channel]       := period
03968     08 5E 05 F1 | 	add	fp, #8
0396c     AF 68 02 FB | 	rdlong	local01, fp
03970     4D 69 62 FC | 	wrlong	local01, local26
03974     08 5E 85 F1 | 	sub	fp, #8
03978     AF 9C 02 FB | 	rdlong	local27, fp
0397c     02 9C 66 F0 | 	shl	local27, #2
03980     40 0E 06 F1 | 	add	objptr, #64
03984     07 9D 02 F1 | 	add	local27, objptr
03988                 | '       lastSetRepeatLength[channel] := repeatLength
03988     1C 5E 05 F1 | 	add	fp, #28
0398c     AF 68 02 FB | 	rdlong	local01, fp
03990     4E 69 62 FC | 	wrlong	local01, local27
03994     1C 5E 85 F1 | 	sub	fp, #28
03998     AF 9E 02 FB | 	rdlong	local28, fp
0399c     02 9E 66 F0 | 	shl	local28, #2
039a0     10 0E 06 F1 | 	add	objptr, #16
039a4     07 9F 02 F1 | 	add	local28, objptr
039a8                 | '       lastSetRepeatPoint[channel]  := repeatPoint
039a8     18 5E 05 F1 | 	add	fp, #24
039ac     AF 68 02 FB | 	rdlong	local01, fp
039b0     4F 69 62 FC | 	wrlong	local01, local28
039b4     08 5E 05 F1 | 	add	fp, #8
039b8     AF A0 02 FB | 	rdlong	local29, fp
039bc     20 5E 85 F1 | 	sub	fp, #32
039c0     3C 0E 06 F1 | 	add	objptr, #60
039c4     07 A3 02 FB | 	rdlong	local30, objptr
039c8     51 A1 02 F1 | 	add	local29, local30
039cc     AF A4 02 FB | 	rdlong	local31, fp
039d0     02 A4 66 F0 | 	shl	local31, #2
039d4     7C 0E 86 F1 | 	sub	objptr, #124
039d8     07 A5 02 F1 | 	add	local31, objptr
039dc                 | '       lastSetSamplePtr[channel]    := samplePtr + sampleOffset
039dc     52 A1 62 FC | 	wrlong	local29, local31
039e0     AF A6 02 FB | 	rdlong	local32, fp
039e4     02 A6 66 F0 | 	shl	local32, #2
039e8     10 0E 06 F1 | 	add	objptr, #16
039ec     07 A7 02 F1 | 	add	local32, objptr
039f0                 | '       lastSetSampleNr[channel]     := sampleNumber
039f0     04 5E 05 F1 | 	add	fp, #4
039f4     AF 68 02 FB | 	rdlong	local01, fp
039f8     53 69 62 FC | 	wrlong	local01, local32
039fc                 | ' 
039fc                 | '       ' This calculates the correct sample length in all situations
039fc                 | '       if repeatLength > 2
039fc     18 5E 05 F1 | 	add	fp, #24
03a00     AF 68 02 FB | 	rdlong	local01, fp
03a04     1C 5E 85 F1 | 	sub	fp, #28
03a08     02 68 5E F2 | 	cmps	local01, #2 wcz
03a0c     05 00 00 FF 
03a10     A4 27 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##2980
03a14     47 0F 86 F1 | 	sub	objptr, #327
03a18     20 00 90 ED |  if_be	jmp	#LR__0124
03a1c     18 5E 05 F1 | 	add	fp, #24
03a20     AF A8 02 FB | 	rdlong	local33, fp
03a24     04 5E 05 F1 | 	add	fp, #4
03a28     AF A2 02 FB | 	rdlong	local30, fp
03a2c     51 A9 02 F1 | 	add	local33, local30
03a30                 | '         sampleLength := repeatPoint + repeatLength
03a30     0C 5E 85 F1 | 	sub	fp, #12
03a34     AF A8 62 FC | 	wrlong	local33, fp
03a38     10 5E 85 F1 | 	sub	fp, #16
03a3c                 | LR__0124
03a3c                 | ' 
03a3c                 | '       if sampleLength - sampleOffset < 1
03a3c     10 5E 05 F1 | 	add	fp, #16
03a40     AF 68 02 FB | 	rdlong	local01, fp
03a44     10 5E 85 F1 | 	sub	fp, #16
03a48     B3 0F 06 F1 | 	add	objptr, #435
03a4c     07 A3 02 FB | 	rdlong	local30, objptr
03a50     B3 0F 86 F1 | 	sub	objptr, #435
03a54     51 69 82 F1 | 	sub	local01, local30
03a58     01 68 5E F2 | 	cmps	local01, #1 wcz
03a5c     1C 00 90 3D |  if_ae	jmp	#LR__0125
03a60     AF AA 02 FB | 	rdlong	local34, fp
03a64     02 AA 66 F0 | 	shl	local34, #2
03a68     57 0F 06 F1 | 	add	objptr, #343
03a6c     07 AB 02 F1 | 	add	local34, objptr
03a70                 | '         lastSetSampleLength[channel] := 1
03a70     55 03 68 FC | 	wrlong	#1, local34
03a74                 | '       else
03a74     57 0F 86 F1 | 	sub	objptr, #343
03a78     30 00 90 FD | 	jmp	#LR__0126
03a7c                 | LR__0125
03a7c     10 5E 05 F1 | 	add	fp, #16
03a80     AF AC 02 FB | 	rdlong	local35, fp
03a84     10 5E 85 F1 | 	sub	fp, #16
03a88     B3 0F 06 F1 | 	add	objptr, #435
03a8c     07 A3 02 FB | 	rdlong	local30, objptr
03a90     51 AD 82 F1 | 	sub	local35, local30
03a94     AF AE 02 FB | 	rdlong	local36, fp
03a98     02 AE 66 F0 | 	shl	local36, #2
03a9c     5C 0E 86 F1 | 	sub	objptr, #92
03aa0     07 AF 02 F1 | 	add	local36, objptr
03aa4                 | '         lastSetSampleLength[channel] := sampleLength - sampleOffset
03aa4     57 AD 62 FC | 	wrlong	local35, local36
03aa8     57 0F 86 F1 | 	sub	objptr, #343
03aac                 | LR__0126
03aac                 | ' 
03aac                 | '       ' When the sample offset is more than the actual sample length, use the repeat data as sample ptr and length
03aac                 | '       if sampleOffset > sampleLength
03aac     B3 0F 06 F1 | 	add	objptr, #435
03ab0     07 69 02 FB | 	rdlong	local01, objptr
03ab4     B3 0F 86 F1 | 	sub	objptr, #435
03ab8     10 5E 05 F1 | 	add	fp, #16
03abc     AF A2 02 FB | 	rdlong	local30, fp
03ac0     10 5E 85 F1 | 	sub	fp, #16
03ac4     51 69 5A F2 | 	cmps	local01, local30 wcz
03ac8     50 00 90 ED |  if_be	jmp	#LR__0127
03acc     20 5E 05 F1 | 	add	fp, #32
03ad0     AF B0 02 FB | 	rdlong	local37, fp
03ad4     08 5E 85 F1 | 	sub	fp, #8
03ad8     AF A2 02 FB | 	rdlong	local30, fp
03adc     18 5E 85 F1 | 	sub	fp, #24
03ae0     51 B1 02 F1 | 	add	local37, local30
03ae4     AF B2 02 FB | 	rdlong	local38, fp
03ae8     02 B2 66 F0 | 	shl	local38, #2
03aec     37 0F 06 F1 | 	add	objptr, #311
03af0     07 B3 02 F1 | 	add	local38, objptr
03af4                 | '         lastSetSamplePtr[channel] := samplePtr + repeatPoint
03af4     59 B1 62 FC | 	wrlong	local37, local38
03af8     AF B4 02 FB | 	rdlong	local39, fp
03afc     02 B4 66 F0 | 	shl	local39, #2
03b00     20 0E 06 F1 | 	add	objptr, #32
03b04     07 B5 02 F1 | 	add	local39, objptr
03b08                 | '         lastSetSampleLength[channel] := repeatLength
03b08     1C 5E 05 F1 | 	add	fp, #28
03b0c     AF 68 02 FB | 	rdlong	local01, fp
03b10     1C 5E 85 F1 | 	sub	fp, #28
03b14     5A 69 62 FC | 	wrlong	local01, local39
03b18     57 0F 86 F1 | 	sub	objptr, #343
03b1c                 | LR__0127
03b1c                 | ' 
03b1c                 | '       ' Trigger note/sample playback directly if no delay or portamento is active
03b1c                 | '       ifnot cmd == $3 || cmd == $5
03b1c     BA 0F 06 F1 | 	add	objptr, #442
03b20     07 69 C2 FA | 	rdbyte	local01, objptr
03b24     BA 0F 86 F1 | 	sub	objptr, #442
03b28     03 68 0E F2 | 	cmp	local01, #3 wz
03b2c     54 00 90 AD |  if_e	jmp	#LR__0130
03b30     BA 0F 06 F1 | 	add	objptr, #442
03b34     07 B7 C2 FA | 	rdbyte	local40, objptr
03b38     BA 0F 86 F1 | 	sub	objptr, #442
03b3c     5B A3 02 F6 | 	mov	local30, local40
03b40     05 A2 0E F2 | 	cmp	local30, #5 wz
03b44     3C 00 90 AD |  if_e	jmp	#LR__0130
03b48                 | '         ifnot cmd == $E && x == $D
03b48     BA 0F 06 F1 | 	add	objptr, #442
03b4c     07 B9 C2 FA | 	rdbyte	local41, objptr
03b50     BA 0F 86 F1 | 	sub	objptr, #442
03b54     5C 69 02 F6 | 	mov	local01, local41
03b58     0E 68 0E F2 | 	cmp	local01, #14 wz
03b5c     18 00 90 5D |  if_ne	jmp	#LR__0128
03b60     B7 0F 06 F1 | 	add	objptr, #439
03b64     07 B7 C2 FA | 	rdbyte	local40, objptr
03b68     B7 0F 86 F1 | 	sub	objptr, #439
03b6c     5B A3 02 F6 | 	mov	local30, local40
03b70     0D A2 0E F2 | 	cmp	local30, #13 wz
03b74     0C 00 90 AD |  if_e	jmp	#LR__0129
03b78                 | LR__0128
03b78                 | '           triggerNote(channel)
03b78     AF 68 02 FB | 	rdlong	local01, fp
03b7c     34 5B 02 F6 | 	mov	arg01, local01
03b80     98 FA BF FD | 	call	#_trackerplayer_spin2_triggerNote
03b84                 | LR__0129
03b84                 | LR__0130
03b84                 | ' 
03b84                 | '       ' If the "reset vibrato/tremolo function/s" is/are set, it/they get reset at "zero tick"
03b84                 | '       if resetTremolo[channel] > 0
03b84     AF 68 02 FB | 	rdlong	local01, fp
03b88     8F 0F 06 F1 | 	add	objptr, #399
03b8c     07 69 02 F1 | 	add	local01, objptr
03b90     34 A3 C2 FA | 	rdbyte	local30, local01
03b94     00 A2 5E F2 | 	cmps	local30, #0 wcz
03b98     8F 0F 86 F1 | 	sub	objptr, #399
03b9c     14 00 90 ED |  if_be	jmp	#LR__0131
03ba0     AF BA 02 FB | 	rdlong	local42, fp
03ba4     8B 0F 06 F1 | 	add	objptr, #395
03ba8     07 BB 02 F1 | 	add	local42, objptr
03bac                 | '         tremoloPos[channel] := 0
03bac     5D 01 48 FC | 	wrbyte	#0, local42
03bb0     8B 0F 86 F1 | 	sub	objptr, #395
03bb4                 | LR__0131
03bb4                 | ' 
03bb4                 | '       if resetVibrato[channel] > 0
03bb4     AF 68 02 FB | 	rdlong	local01, fp
03bb8     93 0F 06 F1 | 	add	objptr, #403
03bbc     07 69 02 F1 | 	add	local01, objptr
03bc0     34 A3 C2 FA | 	rdbyte	local30, local01
03bc4     00 A2 5E F2 | 	cmps	local30, #0 wcz
03bc8     93 0F 86 F1 | 	sub	objptr, #403
03bcc     20 00 90 ED |  if_be	jmp	#LR__0133
03bd0     AF BC 02 FB | 	rdlong	local43, fp
03bd4     87 0F 06 F1 | 	add	objptr, #391
03bd8     07 BD 02 F1 | 	add	local43, objptr
03bdc                 | '         vibratoPos[channel] := 0
03bdc     5E 01 48 FC | 	wrbyte	#0, local43
03be0     87 0F 86 F1 | 	sub	objptr, #391
03be4                 | ' 
03be4                 | '   else
03be4     08 00 90 FD | 	jmp	#LR__0133
03be8                 | LR__0132
03be8                 | '     ' Handle commands that executes on all "non zero ticks"
03be8                 | '     handleNonZeroTickCommands(channel)
03be8     AF 5A 02 FB | 	rdlong	arg01, fp
03bec     E4 04 B0 FD | 	call	#_trackerplayer_spin2_handleNonZeroTickCommands
03bf0                 | LR__0133
03bf0                 | ' 
03bf0                 | '   ' Handle commands that executes on every tick
03bf0                 | '   handleEveryTickCommands(channel)
03bf0     AF 5A 02 FB | 	rdlong	arg01, fp
03bf4     40 07 B0 FD | 	call	#_trackerplayer_spin2_handleEveryTickCommands
03bf8     AF BE 02 FB | 	rdlong	local44, fp
03bfc     02 BE 66 F0 | 	shl	local44, #2
03c00     DF 0E 06 F1 | 	add	objptr, #223
03c04     07 BF 02 F1 | 	add	local44, objptr
03c08     5F C1 02 FB | 	rdlong	local45, local44
03c0c     01 00 00 FF 
03c10     58 C1 66 F3 | 	fles	local45, ##856
03c14                 | ' 
03c14                 | '   ' Handle boundaries that should be kept
03c14                 | '   currPeriod[channel] <#= MAXIMUM_PERIOD
03c14     5F C1 62 FC | 	wrlong	local45, local44
03c18     AF C2 02 FB | 	rdlong	local46, fp
03c1c     02 C2 66 F0 | 	shl	local46, #2
03c20     07 C3 02 F1 | 	add	local46, objptr
03c24     61 C5 02 FB | 	rdlong	local47, local46
03c28     71 C4 46 F3 | 	fges	local47, #113
03c2c                 | '   currPeriod[channel] #>= MINIMUM_PERIOD
03c2c     61 C5 62 FC | 	wrlong	local47, local46
03c30     AF C6 02 FB | 	rdlong	local48, fp
03c34     02 C6 66 F0 | 	shl	local48, #2
03c38     20 0E 06 F1 | 	add	objptr, #32
03c3c     07 C7 02 F1 | 	add	local48, objptr
03c40     63 C9 02 FB | 	rdlong	local49, local48
03c44     40 C8 66 F3 | 	fles	local49, #64
03c48                 | '   currVolume[channel] <#= MAXIMUM_VOLUME
03c48     63 C9 62 FC | 	wrlong	local49, local48
03c4c     AF CA 02 FB | 	rdlong	local50, fp
03c50     02 CA 66 F0 | 	shl	local50, #2
03c54     07 CB 02 F1 | 	add	local50, objptr
03c58     65 CD 02 FB | 	rdlong	local51, local50
03c5c     00 CC 46 F3 | 	fges	local51, #0
03c60                 | '   currVolume[channel] #>= MINIMUM_VOLUME
03c60     65 CD 62 FC | 	wrlong	local51, local50
03c64     FF 0E 86 F1 | 	sub	objptr, #255
03c68     AF F0 03 F6 | 	mov	ptra, fp
03c6c     BF 00 A0 FD | 	call	#popregs_
03c70                 | _trackerplayer_spin2_processChannel_ret
03c70     2D 00 64 FD | 	ret
03c74                 | 
03c74                 | ' 
03c74                 | ' 
03c74                 | ' ' Handle all commands that executes on tick zero
03c74                 | ' '
03c74                 | ' PRI handleZeroTickCommands(channel)
03c74                 | _trackerplayer_spin2_handleZeroTickCommands
03c74     2D 2F 02 F6 | 	mov	_var01, arg01
03c78                 | ' 
03c78                 | '   CASE_FAST cmd
03c78     BA 0F 06 F1 | 	add	objptr, #442
03c7c     07 31 C2 FA | 	rdbyte	_var02, objptr
03c80     BA 0F 86 F1 | 	sub	objptr, #442
03c84     18 33 02 F6 | 	mov	_var03, _var02
03c88     09 32 86 F1 | 	sub	_var03, #9
03c8c     07 32 26 F3 | 	fle	_var03, #7
03c90     19 35 02 F6 | 	mov	_var04, _var03
03c94     30 34 62 FD | 	jmprel	_var04
03c98                 | LR__0134
03c98     1C 00 90 FD | 	jmp	#LR__0135
03c9c     30 04 90 FD | 	jmp	#LR__0158
03ca0     64 00 90 FD | 	jmp	#LR__0137
03ca4     84 00 90 FD | 	jmp	#LR__0138
03ca8     A0 00 90 FD | 	jmp	#LR__0139
03cac     D0 00 90 FD | 	jmp	#LR__0140
03cb0     9C 03 90 FD | 	jmp	#LR__0155
03cb4     18 04 90 FD | 	jmp	#LR__0158
03cb8                 | LR__0135
03cb8                 | ' 
03cb8                 | '     $9:                          ' Set sample offset
03cb8                 | '       if z > 0
03cb8     B9 0F 06 F1 | 	add	objptr, #441
03cbc     07 37 C2 FA | 	rdbyte	_var05, objptr
03cc0     B9 0F 86 F1 | 	sub	objptr, #441
03cc4     00 36 5E F2 | 	cmps	_var05, #0 wcz
03cc8     1C 00 90 ED |  if_be	jmp	#LR__0136
03ccc                 | '         cmd9_memoryZ[channel] := z
03ccc     17 37 02 F6 | 	mov	_var05, _var01
03cd0     DC 0F 06 F1 | 	add	objptr, #476
03cd4     07 37 02 F1 | 	add	_var05, objptr
03cd8     23 0E 86 F1 | 	sub	objptr, #35
03cdc     07 39 C2 FA | 	rdbyte	_var06, objptr
03ce0     B9 0F 86 F1 | 	sub	objptr, #441
03ce4     1B 39 42 FC | 	wrbyte	_var06, _var05
03ce8                 | LR__0136
03ce8                 | ' 
03ce8                 | '       sampleOffset := cmd9_memoryZ[channel] << 8
03ce8     DC 0F 06 F1 | 	add	objptr, #476
03cec     07 2F 02 F1 | 	add	_var01, objptr
03cf0     17 37 C2 FA | 	rdbyte	_var05, _var01
03cf4     08 36 66 F0 | 	shl	_var05, #8
03cf8     29 0E 86 F1 | 	sub	objptr, #41
03cfc     07 37 62 FC | 	wrlong	_var05, objptr
03d00     B3 0F 86 F1 | 	sub	objptr, #435
03d04     C8 03 90 FD | 	jmp	#LR__0158
03d08                 | LR__0137
03d08                 | ' 
03d08                 | '     $B:                          ' Jump position
03d08                 | '       cmdB_memoryZ := z
03d08     B9 0F 06 F1 | 	add	objptr, #441
03d0c     07 37 C2 FA | 	rdbyte	_var05, objptr
03d10     2E 0E 06 F1 | 	add	objptr, #46
03d14     07 37 42 FC | 	wrbyte	_var05, objptr
03d18                 | '       cmdB_updatePosition := true
03d18     01 0E 06 F1 | 	add	objptr, #1
03d1c     FF FF FF FF 
03d20     07 FF 4B FC | 	wrbyte	##-1, objptr
03d24     E8 0F 86 F1 | 	sub	objptr, #488
03d28     A4 03 90 FD | 	jmp	#LR__0158
03d2c                 | LR__0138
03d2c                 | ' 
03d2c                 | '     $C:                          ' Set volume
03d2c                 | '       currVolume[channel] := z
03d2c     02 2E 66 F0 | 	shl	_var01, #2
03d30     FF 0E 06 F1 | 	add	objptr, #255
03d34     07 2F 02 F1 | 	add	_var01, objptr
03d38     BA 0E 06 F1 | 	add	objptr, #186
03d3c     07 39 C2 FA | 	rdbyte	_var06, objptr
03d40     B9 0F 86 F1 | 	sub	objptr, #441
03d44     17 39 62 FC | 	wrlong	_var06, _var01
03d48     84 03 90 FD | 	jmp	#LR__0158
03d4c                 | LR__0139
03d4c                 | ' 
03d4c                 | '     $D:                          ' Pattern break
03d4c                 | '       cmdD_memoryX := x
03d4c     B7 0F 06 F1 | 	add	objptr, #439
03d50     07 37 C2 FA | 	rdbyte	_var05, objptr
03d54     2D 0E 06 F1 | 	add	objptr, #45
03d58     07 37 42 FC | 	wrbyte	_var05, objptr
03d5c                 | '       cmdD_memoryY := y
03d5c     2C 0E 86 F1 | 	sub	objptr, #44
03d60     07 37 C2 FA | 	rdbyte	_var05, objptr
03d64     2D 0E 06 F1 | 	add	objptr, #45
03d68     07 37 42 FC | 	wrbyte	_var05, objptr
03d6c                 | '       cmdD_updatePosition := true
03d6c     01 0E 06 F1 | 	add	objptr, #1
03d70     FF FF FF FF 
03d74     07 FF 4B FC | 	wrbyte	##-1, objptr
03d78     E6 0F 86 F1 | 	sub	objptr, #486
03d7c     50 03 90 FD | 	jmp	#LR__0158
03d80                 | LR__0140
03d80                 | ' 
03d80                 | '     $E:                          ' Handle "E commands" that execute on tick zero
03d80                 | ' 
03d80                 | '       CASE_FAST x
03d80     B7 0F 06 F1 | 	add	objptr, #439
03d84     07 3B C2 FA | 	rdbyte	_var07, objptr
03d88     B7 0F 86 F1 | 	sub	objptr, #439
03d8c     1D 37 02 F6 | 	mov	_var05, _var07
03d90     0F 36 26 F3 | 	fle	_var05, #15
03d94     1B 3D 02 F6 | 	mov	_var08, _var05
03d98     30 3C 62 FD | 	jmprel	_var08
03d9c                 | LR__0141
03d9c     3C 00 90 FD | 	jmp	#LR__0142
03da0     58 00 90 FD | 	jmp	#LR__0143
03da4     8C 00 90 FD | 	jmp	#LR__0144
03da8     C0 00 90 FD | 	jmp	#LR__0145
03dac     DC 00 90 FD | 	jmp	#LR__0146
03db0     14 01 90 FD | 	jmp	#LR__0147
03db4     28 01 90 FD | 	jmp	#LR__0148
03db8     C0 01 90 FD | 	jmp	#LR__0151
03dbc     10 03 90 FD | 	jmp	#LR__0158
03dc0     0C 03 90 FD | 	jmp	#LR__0158
03dc4     F0 01 90 FD | 	jmp	#LR__0152
03dc8     24 02 90 FD | 	jmp	#LR__0153
03dcc     00 03 90 FD | 	jmp	#LR__0158
03dd0     FC 02 90 FD | 	jmp	#LR__0158
03dd4     50 02 90 FD | 	jmp	#LR__0154
03dd8     F4 02 90 FD | 	jmp	#LR__0158
03ddc                 | LR__0142
03ddc                 | ' 
03ddc                 | '         $0: lpFilter := (!y) & 1                 ' Set lowpass filter On/Off
03ddc     B8 0F 06 F1 | 	add	objptr, #440
03de0     07 39 C2 FA | 	rdbyte	_var06, objptr
03de4     1C 39 22 F6 | 	not	_var06, _var06
03de8     01 38 06 F5 | 	and	_var06, #1
03dec     03 0E 06 F1 | 	add	objptr, #3
03df0     07 39 42 FC | 	wrbyte	_var06, objptr
03df4     BB 0F 86 F1 | 	sub	objptr, #443
03df8     D4 02 90 FD | 	jmp	#LR__0158
03dfc                 | LR__0143
03dfc                 | ' 
03dfc                 | '         $1: currPeriod[channel] -= y             ' Fine frequency slide up
03dfc     17 3F 02 F6 | 	mov	_var09, _var01
03e00     02 3E 66 F0 | 	shl	_var09, #2
03e04     DF 0E 06 F1 | 	add	objptr, #223
03e08     07 3F 02 F1 | 	add	_var09, objptr
03e0c     1F 39 02 FB | 	rdlong	_var06, _var09
03e10     D9 0E 06 F1 | 	add	objptr, #217
03e14     07 41 C2 FA | 	rdbyte	_var10, objptr
03e18     20 39 82 F1 | 	sub	_var06, _var10
03e1c     02 2E 66 F0 | 	shl	_var01, #2
03e20     D9 0E 86 F1 | 	sub	objptr, #217
03e24     07 2F 02 F1 | 	add	_var01, objptr
03e28     17 39 62 FC | 	wrlong	_var06, _var01
03e2c     DF 0E 86 F1 | 	sub	objptr, #223
03e30     9C 02 90 FD | 	jmp	#LR__0158
03e34                 | LR__0144
03e34                 | ' 
03e34                 | '         $2: currPeriod[channel] += y             ' Fine frequency slide down
03e34     17 3F 02 F6 | 	mov	_var09, _var01
03e38     02 3E 66 F0 | 	shl	_var09, #2
03e3c     DF 0E 06 F1 | 	add	objptr, #223
03e40     07 3F 02 F1 | 	add	_var09, objptr
03e44     1F 39 02 FB | 	rdlong	_var06, _var09
03e48     D9 0E 06 F1 | 	add	objptr, #217
03e4c     07 41 C2 FA | 	rdbyte	_var10, objptr
03e50     20 39 02 F1 | 	add	_var06, _var10
03e54     02 2E 66 F0 | 	shl	_var01, #2
03e58     D9 0E 86 F1 | 	sub	objptr, #217
03e5c     07 2F 02 F1 | 	add	_var01, objptr
03e60     17 39 62 FC | 	wrlong	_var06, _var01
03e64     DF 0E 86 F1 | 	sub	objptr, #223
03e68     64 02 90 FD | 	jmp	#LR__0158
03e6c                 | LR__0145
03e6c                 | ' 
03e6c                 | '         $3: portaGlissando[channel] := y & 1     ' Set portamento glissando On/Off
03e6c     B8 0F 06 F1 | 	add	objptr, #440
03e70     07 39 C2 FA | 	rdbyte	_var06, objptr
03e74     01 38 06 F5 | 	and	_var06, #1
03e78     04 0E 06 F1 | 	add	objptr, #4
03e7c     07 2F 02 F1 | 	add	_var01, objptr
03e80     17 39 42 FC | 	wrbyte	_var06, _var01
03e84     BC 0F 86 F1 | 	sub	objptr, #444
03e88     44 02 90 FD | 	jmp	#LR__0158
03e8c                 | LR__0146
03e8c                 | ' 
03e8c                 | '         $4:                                      ' Set vibrato waveform type
03e8c                 | '           vibratoType[channel]  := y & 3
03e8c     B8 0F 06 F1 | 	add	objptr, #440
03e90     07 39 C2 FA | 	rdbyte	_var06, objptr
03e94     03 38 06 F5 | 	and	_var06, #3
03e98     17 43 02 F6 | 	mov	_var11, _var01
03e9c     08 0E 06 F1 | 	add	objptr, #8
03ea0     07 43 02 F1 | 	add	_var11, objptr
03ea4     21 39 42 FC | 	wrbyte	_var06, _var11
03ea8                 | '           resetVibrato[channel] := y & 4
03ea8     08 0E 86 F1 | 	sub	objptr, #8
03eac     07 39 C2 FA | 	rdbyte	_var06, objptr
03eb0     04 38 06 F5 | 	and	_var06, #4
03eb4     25 0E 86 F1 | 	sub	objptr, #37
03eb8     07 2F 02 F1 | 	add	_var01, objptr
03ebc     17 39 42 FC | 	wrbyte	_var06, _var01
03ec0     93 0F 86 F1 | 	sub	objptr, #403
03ec4     08 02 90 FD | 	jmp	#LR__0158
03ec8                 | LR__0147
03ec8                 | ' 
03ec8                 | '         $5: fineTune := y                        ' Set finetune
03ec8     B8 0F 06 F1 | 	add	objptr, #440
03ecc     07 39 C2 FA | 	rdbyte	_var06, objptr
03ed0     09 0E 86 F1 | 	sub	objptr, #9
03ed4     07 39 62 FC | 	wrlong	_var06, objptr
03ed8     AF 0F 86 F1 | 	sub	objptr, #431
03edc     F0 01 90 FD | 	jmp	#LR__0158
03ee0                 | LR__0148
03ee0                 | ' 
03ee0                 | '         $6:                                      ' Pattern looping
03ee0                 | '           if y == 0
03ee0     B8 0F 06 F1 | 	add	objptr, #440
03ee4     07 39 CA FA | 	rdbyte	_var06, objptr wz
03ee8     B8 0F 86 F1 | 	sub	objptr, #440
03eec     1C 00 90 5D |  if_ne	jmp	#LR__0149
03ef0                 | '             cmdE6_memory[channel] := patternRow
03ef0     E9 0F 06 F1 | 	add	objptr, #489
03ef4     07 2F 02 F1 | 	add	_var01, objptr
03ef8     47 0F 86 F1 | 	sub	objptr, #327
03efc     07 43 C2 FA | 	rdbyte	_var11, objptr
03f00     A2 0E 86 F1 | 	sub	objptr, #162
03f04     17 43 42 FC | 	wrbyte	_var11, _var01
03f08                 | '           else
03f08     C4 01 90 FD | 	jmp	#LR__0158
03f0c                 | LR__0149
03f0c                 | '             if ++cmdE6_counter[channel] <= y
03f0c     17 3F 02 F6 | 	mov	_var09, _var01
03f10     ED 0F 06 F1 | 	add	objptr, #493
03f14     07 3F 02 F1 | 	add	_var09, objptr
03f18     1F 39 C2 FA | 	rdbyte	_var06, _var09
03f1c     01 38 06 F1 | 	add	_var06, #1
03f20     17 41 02 F6 | 	mov	_var10, _var01
03f24     07 41 02 F1 | 	add	_var10, objptr
03f28     20 39 42 FC | 	wrbyte	_var06, _var10
03f2c     20 45 C2 FA | 	rdbyte	_var12, _var10
03f30     35 0E 86 F1 | 	sub	objptr, #53
03f34     07 47 C2 FA | 	rdbyte	_var13, objptr
03f38     B8 0F 86 F1 | 	sub	objptr, #440
03f3c     23 45 5A F2 | 	cmps	_var12, _var13 wcz
03f40     24 00 90 1D |  if_a	jmp	#LR__0150
03f44                 | '               cmdE6_updatePosition[channel] := true
03f44     F1 0F 06 F1 | 	add	objptr, #497
03f48     07 2F 02 F1 | 	add	_var01, objptr
03f4c     FF FF FF FF 
03f50     17 FF 4B FC | 	wrbyte	##-1, _var01
03f54                 | '               cmdE6_updatePositionCommon    := true
03f54     04 0E 06 F1 | 	add	objptr, #4
03f58     FF FF FF FF 
03f5c     07 FF 4B FC | 	wrbyte	##-1, objptr
03f60     F5 0F 86 F1 | 	sub	objptr, #501
03f64                 | '             else
03f64     68 01 90 FD | 	jmp	#LR__0158
03f68                 | LR__0150
03f68                 | '               cmdE6_counter[channel] := 0
03f68     ED 0F 06 F1 | 	add	objptr, #493
03f6c     07 2F 02 F1 | 	add	_var01, objptr
03f70     17 01 48 FC | 	wrbyte	#0, _var01
03f74     ED 0F 86 F1 | 	sub	objptr, #493
03f78     54 01 90 FD | 	jmp	#LR__0158
03f7c                 | LR__0151
03f7c                 | ' 
03f7c                 | '         $7:                                      ' Set tremolo waveform type
03f7c                 | '           tremoloType[channel] := y & 3
03f7c     B8 0F 06 F1 | 	add	objptr, #440
03f80     07 39 C2 FA | 	rdbyte	_var06, objptr
03f84     03 38 06 F5 | 	and	_var06, #3
03f88     17 43 02 F6 | 	mov	_var11, _var01
03f8c     0C 0E 06 F1 | 	add	objptr, #12
03f90     07 43 02 F1 | 	add	_var11, objptr
03f94     21 39 42 FC | 	wrbyte	_var06, _var11
03f98                 | '           resetTremolo[channel] := y & 4
03f98     0C 0E 86 F1 | 	sub	objptr, #12
03f9c     07 39 C2 FA | 	rdbyte	_var06, objptr
03fa0     04 38 06 F5 | 	and	_var06, #4
03fa4     29 0E 86 F1 | 	sub	objptr, #41
03fa8     07 2F 02 F1 | 	add	_var01, objptr
03fac     17 39 42 FC | 	wrbyte	_var06, _var01
03fb0     8F 0F 86 F1 | 	sub	objptr, #399
03fb4     18 01 90 FD | 	jmp	#LR__0158
03fb8                 | LR__0152
03fb8                 | ' 
03fb8                 | '         $A: currVolume[channel] += y             ' Fine volume slide up
03fb8     17 3F 02 F6 | 	mov	_var09, _var01
03fbc     02 3E 66 F0 | 	shl	_var09, #2
03fc0     FF 0E 06 F1 | 	add	objptr, #255
03fc4     07 3F 02 F1 | 	add	_var09, objptr
03fc8     1F 39 02 FB | 	rdlong	_var06, _var09
03fcc     B9 0E 06 F1 | 	add	objptr, #185
03fd0     07 41 C2 FA | 	rdbyte	_var10, objptr
03fd4     20 39 02 F1 | 	add	_var06, _var10
03fd8     02 2E 66 F0 | 	shl	_var01, #2
03fdc     B9 0E 86 F1 | 	sub	objptr, #185
03fe0     07 2F 02 F1 | 	add	_var01, objptr
03fe4     17 39 62 FC | 	wrlong	_var06, _var01
03fe8     FF 0E 86 F1 | 	sub	objptr, #255
03fec     E0 00 90 FD | 	jmp	#LR__0158
03ff0                 | LR__0153
03ff0                 | ' 
03ff0                 | '         $B: currVolume[channel] -= y             ' Fine volume slide down
03ff0     17 3F 02 F6 | 	mov	_var09, _var01
03ff4     02 3E 66 F0 | 	shl	_var09, #2
03ff8     FF 0E 06 F1 | 	add	objptr, #255
03ffc     07 3F 02 F1 | 	add	_var09, objptr
04000     1F 39 02 FB | 	rdlong	_var06, _var09
04004     B9 0E 06 F1 | 	add	objptr, #185
04008     07 41 C2 FA | 	rdbyte	_var10, objptr
0400c     20 39 82 F1 | 	sub	_var06, _var10
04010     02 2E 66 F0 | 	shl	_var01, #2
04014     B9 0E 86 F1 | 	sub	objptr, #185
04018     07 2F 02 F1 | 	add	_var01, objptr
0401c     17 39 62 FC | 	wrlong	_var06, _var01
04020     FF 0E 86 F1 | 	sub	objptr, #255
04024     A8 00 90 FD | 	jmp	#LR__0158
04028                 | LR__0154
04028                 | ' 
04028                 | '         $E: patternDelay := y * currentSongSpeed ' Pattern delay
04028     B8 0F 06 F1 | 	add	objptr, #440
0402c     07 3F C2 FA | 	rdbyte	_var09, objptr
04030     14 0F 86 F1 | 	sub	objptr, #276
04034     07 41 C2 FA | 	rdbyte	_var10, objptr
04038     20 3F 02 FD | 	qmul	_var09, _var10
0403c     18 38 62 FD | 	getqx	_var06
04040     01 0E 06 F1 | 	add	objptr, #1
04044     07 39 42 FC | 	wrbyte	_var06, objptr
04048     A5 0E 86 F1 | 	sub	objptr, #165
0404c     80 00 90 FD | 	jmp	#LR__0158
04050                 | LR__0155
04050                 | ' 
04050                 | '     $F:                          ' Set speed
04050                 | '       if z < 32
04050     B9 0F 06 F1 | 	add	objptr, #441
04054     07 37 C2 FA | 	rdbyte	_var05, objptr
04058     B9 0F 86 F1 | 	sub	objptr, #441
0405c     20 36 5E F2 | 	cmps	_var05, #32 wcz
04060     18 00 90 3D |  if_ae	jmp	#LR__0156
04064                 | '         currentSongSpeed := z
04064     B9 0F 06 F1 | 	add	objptr, #441
04068     07 37 C2 FA | 	rdbyte	_var05, objptr
0406c     15 0F 86 F1 | 	sub	objptr, #277
04070     07 37 42 FC | 	wrbyte	_var05, objptr
04074     A4 0E 86 F1 | 	sub	objptr, #164
04078                 | '       else
04078     54 00 90 FD | 	jmp	#LR__0157
0407c                 | LR__0156
0407c                 | '         ticksPerMinute := z * 24
0407c     B9 0F 06 F1 | 	add	objptr, #441
04080     07 3B C2 FA | 	rdbyte	_var07, objptr
04084     1D 37 02 F6 | 	mov	_var05, _var07
04088     01 36 66 F0 | 	shl	_var05, #1
0408c     1D 37 02 F1 | 	add	_var05, _var07
04090     03 36 66 F0 | 	shl	_var05, #3
04094     12 0E 86 F1 | 	sub	objptr, #18
04098     07 37 62 FC | 	wrlong	_var05, objptr
0409c     A7 0F 86 F1 | 	sub	objptr, #423
040a0                 | '         cyclesToWait   := (systemClock / ticksPerMinute) * 60
040a0     07 09 03 FB | 	rdlong	muldiva_, objptr
040a4     A7 0F 06 F1 | 	add	objptr, #423
040a8     07 0B 03 FB | 	rdlong	muldivb_, objptr
040ac     A7 0F 86 F1 | 	sub	objptr, #423
040b0     D0 00 A0 FD | 	call	#divide_
040b4     85 39 02 F6 | 	mov	_var06, muldivb_
040b8     04 38 66 F0 | 	shl	_var06, #4
040bc     85 39 82 F1 | 	sub	_var06, muldivb_
040c0     02 38 66 F0 | 	shl	_var06, #2
040c4     AB 0F 06 F1 | 	add	objptr, #427
040c8     07 39 62 FC | 	wrlong	_var06, objptr
040cc     AB 0F 86 F1 | 	sub	objptr, #427
040d0                 | LR__0157
040d0                 | LR__0158
040d0                 | _trackerplayer_spin2_handleZeroTickCommands_ret
040d0     2D 00 64 FD | 	ret
040d4                 | 
040d4                 | ' 
040d4                 | ' 
040d4                 | ' ' Handle all commands that executes on "non zero ticks"
040d4                 | ' '
040d4                 | ' PRI handleNonZeroTickCommands(channel)
040d4                 | _trackerplayer_spin2_handleNonZeroTickCommands
040d4     0A 5A 05 F6 | 	mov	COUNT_, #10
040d8     B0 00 A0 FD | 	call	#pushregs_
040dc     2D 69 02 F6 | 	mov	local01, arg01
040e0                 | ' 
040e0                 | '   CASE_FAST cmd
040e0     BA 0F 06 F1 | 	add	objptr, #442
040e4     07 6B C2 FA | 	rdbyte	local02, objptr
040e8     BA 0F 86 F1 | 	sub	objptr, #442
040ec     35 6D 02 F6 | 	mov	local03, local02
040f0     01 6C 86 F1 | 	sub	local03, #1
040f4     0E 6C 26 F3 | 	fle	local03, #14
040f8     36 6F 02 F6 | 	mov	local04, local03
040fc     30 6E 62 FD | 	jmprel	local04
04100                 | LR__0159
04100     38 00 90 FD | 	jmp	#LR__0160
04104     A0 00 90 FD | 	jmp	#LR__0161
04108     D4 00 90 FD | 	jmp	#LR__0162
0410c     1C 02 90 FD | 	jmp	#LR__0172
04110     20 01 90 FD | 	jmp	#LR__0164
04114     48 01 90 FD | 	jmp	#LR__0165
04118     50 01 90 FD | 	jmp	#LR__0166
0411c     0C 02 90 FD | 	jmp	#LR__0172
04120     08 02 90 FD | 	jmp	#LR__0172
04124     B0 01 90 FD | 	jmp	#LR__0169
04128     00 02 90 FD | 	jmp	#LR__0172
0412c     FC 01 90 FD | 	jmp	#LR__0172
04130     F8 01 90 FD | 	jmp	#LR__0172
04134     AC 01 90 FD | 	jmp	#LR__0170
04138     F0 01 90 FD | 	jmp	#LR__0172
0413c                 | LR__0160
0413c                 | ' 
0413c                 | '     $1: currPeriod[channel] -= z        ' Frequency slide up
0413c     34 71 02 F6 | 	mov	local05, local01
04140     02 70 66 F0 | 	shl	local05, #2
04144     DF 0E 06 F1 | 	add	objptr, #223
04148     07 71 02 F1 | 	add	local05, objptr
0414c     38 73 02 FB | 	rdlong	local06, local05
04150     DA 0E 06 F1 | 	add	objptr, #218
04154     07 75 C2 FA | 	rdbyte	local07, objptr
04158     3A 73 82 F1 | 	sub	local06, local07
0415c     34 77 02 F6 | 	mov	local08, local01
04160     02 76 66 F0 | 	shl	local08, #2
04164     DA 0E 86 F1 | 	sub	objptr, #218
04168     07 77 02 F1 | 	add	local08, objptr
0416c     3B 73 62 FC | 	wrlong	local06, local08
04170                 | ' 
04170                 | '        ' This simulates a bug in the original protracker play routine that is dependant on an UINT16 data type
04170                 | '       if currPeriod[channel] < 0
04170     34 73 02 F6 | 	mov	local06, local01
04174     02 72 66 F0 | 	shl	local06, #2
04178     07 73 02 F1 | 	add	local06, objptr
0417c     39 79 02 FB | 	rdlong	local09, local06
04180     00 78 5E F2 | 	cmps	local09, #0 wcz
04184     DF 0E 86 F1 | 	sub	objptr, #223
04188     A0 01 90 3D |  if_ae	jmp	#LR__0172
0418c                 | '         currPeriod[channel] := MAXIMUM_PERIOD
0418c     02 68 66 F0 | 	shl	local01, #2
04190     DF 0E 06 F1 | 	add	objptr, #223
04194     07 69 02 F1 | 	add	local01, objptr
04198     01 00 80 FF 
0419c     34 B1 6A FC | 	wrlong	##856, local01
041a0     DF 0E 86 F1 | 	sub	objptr, #223
041a4     84 01 90 FD | 	jmp	#LR__0172
041a8                 | LR__0161
041a8                 | ' 
041a8                 | '     $2: currPeriod[channel] += z        ' Frequency slide down
041a8     34 71 02 F6 | 	mov	local05, local01
041ac     02 70 66 F0 | 	shl	local05, #2
041b0     DF 0E 06 F1 | 	add	objptr, #223
041b4     07 71 02 F1 | 	add	local05, objptr
041b8     38 73 02 FB | 	rdlong	local06, local05
041bc     DA 0E 06 F1 | 	add	objptr, #218
041c0     07 75 C2 FA | 	rdbyte	local07, objptr
041c4     3A 73 02 F1 | 	add	local06, local07
041c8     02 68 66 F0 | 	shl	local01, #2
041cc     DA 0E 86 F1 | 	sub	objptr, #218
041d0     07 69 02 F1 | 	add	local01, objptr
041d4     34 73 62 FC | 	wrlong	local06, local01
041d8     DF 0E 86 F1 | 	sub	objptr, #223
041dc     4C 01 90 FD | 	jmp	#LR__0172
041e0                 | LR__0162
041e0                 | ' 
041e0                 | '     $3:                                 ' Slide to note (portamento)
041e0                 | '       if z > 0
041e0     B9 0F 06 F1 | 	add	objptr, #441
041e4     07 73 C2 FA | 	rdbyte	local06, objptr
041e8     B9 0F 86 F1 | 	sub	objptr, #441
041ec     00 72 5E F2 | 	cmps	local06, #0 wcz
041f0     1C 00 90 ED |  if_be	jmp	#LR__0163
041f4                 | '         cmd3_memoryZ[channel] := z
041f4     34 73 02 F6 | 	mov	local06, local01
041f8     C8 0F 06 F1 | 	add	objptr, #456
041fc     07 73 02 F1 | 	add	local06, objptr
04200     0F 0E 86 F1 | 	sub	objptr, #15
04204     07 79 C2 FA | 	rdbyte	local09, objptr
04208     B9 0F 86 F1 | 	sub	objptr, #441
0420c     39 79 42 FC | 	wrbyte	local09, local06
04210                 | LR__0163
04210                 | ' 
04210                 | '       doPortamento(channel, lastSetPeriod[channel])
04210     34 71 02 F6 | 	mov	local05, local01
04214     02 70 66 F0 | 	shl	local05, #2
04218     27 0F 06 F1 | 	add	objptr, #295
0421c     07 71 02 F1 | 	add	local05, objptr
04220     38 5D 02 FB | 	rdlong	arg02, local05
04224     34 5B 02 F6 | 	mov	arg01, local01
04228     27 0F 86 F1 | 	sub	objptr, #295
0422c     64 07 B0 FD | 	call	#_trackerplayer_spin2_doPortamento
04230     F8 00 90 FD | 	jmp	#LR__0172
04234                 | LR__0164
04234                 | ' 
04234                 | '     $5:                                 ' Volume slide + portamento
04234                 | '       doVolumeSlide(channel)
04234     34 5B 02 F6 | 	mov	arg01, local01
04238     54 09 B0 FD | 	call	#_trackerplayer_spin2_doVolumeSlide
0423c                 | '       doPortamento(channel, lastSetPeriod[channel])
0423c     34 71 02 F6 | 	mov	local05, local01
04240     02 70 66 F0 | 	shl	local05, #2
04244     27 0F 06 F1 | 	add	objptr, #295
04248     07 71 02 F1 | 	add	local05, objptr
0424c     38 5D 02 FB | 	rdlong	arg02, local05
04250     34 5B 02 F6 | 	mov	arg01, local01
04254     27 0F 86 F1 | 	sub	objptr, #295
04258     38 07 B0 FD | 	call	#_trackerplayer_spin2_doPortamento
0425c     CC 00 90 FD | 	jmp	#LR__0172
04260                 | LR__0165
04260                 | ' 
04260                 | '     $6: doVolumeSlide(channel)          ' Volume slide + Vibrato (note that vibrato is a)
04260     34 5B 02 F6 | 	mov	arg01, local01
04264     28 09 B0 FD | 	call	#_trackerplayer_spin2_doVolumeSlide
04268     C0 00 90 FD | 	jmp	#LR__0172
0426c                 | LR__0166
0426c                 | ' 
0426c                 | '     $7:                                 ' Tremolo
0426c                 | '       if x > 0
0426c     B7 0F 06 F1 | 	add	objptr, #439
04270     07 73 C2 FA | 	rdbyte	local06, objptr
04274     B7 0F 86 F1 | 	sub	objptr, #439
04278     00 72 5E F2 | 	cmps	local06, #0 wcz
0427c     1C 00 90 ED |  if_be	jmp	#LR__0167
04280                 | '         cmd7_memoryX[channel] := x
04280     34 73 02 F6 | 	mov	local06, local01
04284     D8 0F 06 F1 | 	add	objptr, #472
04288     07 73 02 F1 | 	add	local06, objptr
0428c     21 0E 86 F1 | 	sub	objptr, #33
04290     07 79 C2 FA | 	rdbyte	local09, objptr
04294     B7 0F 86 F1 | 	sub	objptr, #439
04298     39 79 42 FC | 	wrbyte	local09, local06
0429c                 | LR__0167
0429c                 | '       if y > 0
0429c     B8 0F 06 F1 | 	add	objptr, #440
042a0     07 73 C2 FA | 	rdbyte	local06, objptr
042a4     B8 0F 86 F1 | 	sub	objptr, #440
042a8     00 72 5E F2 | 	cmps	local06, #0 wcz
042ac     1C 00 90 ED |  if_be	jmp	#LR__0168
042b0                 | '         cmd7_memoryY[channel] := y
042b0     34 73 02 F6 | 	mov	local06, local01
042b4     D4 0F 06 F1 | 	add	objptr, #468
042b8     07 73 02 F1 | 	add	local06, objptr
042bc     1C 0E 86 F1 | 	sub	objptr, #28
042c0     07 79 C2 FA | 	rdbyte	local09, objptr
042c4     B8 0F 86 F1 | 	sub	objptr, #440
042c8     39 79 42 FC | 	wrbyte	local09, local06
042cc                 | LR__0168
042cc                 | ' 
042cc                 | '       doTremolo(channel)
042cc     34 5B 02 F6 | 	mov	arg01, local01
042d0     08 04 B0 FD | 	call	#_trackerplayer_spin2_doTremolo
042d4     54 00 90 FD | 	jmp	#LR__0172
042d8                 | LR__0169
042d8                 | ' 
042d8                 | '     $A: doVolumeSlide(channel)          ' Volume slide
042d8     34 5B 02 F6 | 	mov	arg01, local01
042dc     B0 08 B0 FD | 	call	#_trackerplayer_spin2_doVolumeSlide
042e0     48 00 90 FD | 	jmp	#LR__0172
042e4                 | LR__0170
042e4                 | ' 
042e4                 | '     $E:                                 ' Retrig every Y ticks
042e4                 | '       if (x == $9) && ((tickcounter // y) == 0)
042e4     B7 0F 06 F1 | 	add	objptr, #439
042e8     07 71 C2 FA | 	rdbyte	local05, objptr
042ec     B7 0F 86 F1 | 	sub	objptr, #439
042f0     09 70 0E F2 | 	cmp	local05, #9 wz
042f4     34 00 90 5D |  if_ne	jmp	#LR__0171
042f8     A1 0E 06 F1 | 	add	objptr, #161
042fc     07 75 C2 FA | 	rdbyte	local07, objptr
04300     3A 09 03 F6 | 	mov	muldiva_, local07
04304     17 0F 06 F1 | 	add	objptr, #279
04308     07 7B C2 FA | 	rdbyte	local10, objptr
0430c     B8 0F 86 F1 | 	sub	objptr, #440
04310     3D 0B 03 F6 | 	mov	muldivb_, local10
04314     D0 00 A0 FD | 	call	#divide_
04318     84 79 0A F6 | 	mov	local09, muldiva_ wz
0431c     0C 00 90 5D |  if_ne	jmp	#LR__0171
04320                 | '         triggerNote(channel)
04320     34 73 02 F6 | 	mov	local06, local01
04324     39 5B 02 F6 | 	mov	arg01, local06
04328     F0 F2 BF FD | 	call	#_trackerplayer_spin2_triggerNote
0432c                 | LR__0171
0432c                 | LR__0172
0432c     AF F0 03 F6 | 	mov	ptra, fp
04330     BF 00 A0 FD | 	call	#popregs_
04334                 | _trackerplayer_spin2_handleNonZeroTickCommands_ret
04334     2D 00 64 FD | 	ret
04338                 | 
04338                 | ' 
04338                 | ' 
04338                 | ' ' Handle all commands that executes on every tick
04338                 | ' '
04338                 | ' PRI handleEveryTickCommands(channel) | tempNote, arpCounter
04338                 | _trackerplayer_spin2_handleEveryTickCommands
04338     12 5A 05 F6 | 	mov	COUNT_, #18
0433c     B0 00 A0 FD | 	call	#pushregs_
04340     2D 69 02 F6 | 	mov	local01, arg01
04344                 | ' 
04344                 | '   CASE_FAST cmd
04344     BA 0F 06 F1 | 	add	objptr, #442
04348     07 6B C2 FA | 	rdbyte	local02, objptr
0434c     BA 0F 86 F1 | 	sub	objptr, #442
04350     35 6D 02 F6 | 	mov	local03, local02
04354     0F 6C 26 F3 | 	fle	local03, #15
04358     36 6F 02 F6 | 	mov	local04, local03
0435c     30 6E 62 FD | 	jmprel	local04
04360                 | LR__0173
04360     3C 00 90 FD | 	jmp	#LR__0174
04364     68 03 90 FD | 	jmp	#LR__0188
04368     64 03 90 FD | 	jmp	#LR__0188
0436c     60 03 90 FD | 	jmp	#LR__0188
04370     E8 01 90 FD | 	jmp	#LR__0177
04374     58 03 90 FD | 	jmp	#LR__0188
04378     4C 02 90 FD | 	jmp	#LR__0180
0437c     50 03 90 FD | 	jmp	#LR__0188
04380     4C 03 90 FD | 	jmp	#LR__0188
04384     48 03 90 FD | 	jmp	#LR__0188
04388     44 03 90 FD | 	jmp	#LR__0188
0438c     40 03 90 FD | 	jmp	#LR__0188
04390     3C 03 90 FD | 	jmp	#LR__0188
04394     38 03 90 FD | 	jmp	#LR__0188
04398     38 02 90 FD | 	jmp	#LR__0181
0439c     30 03 90 FD | 	jmp	#LR__0188
043a0                 | LR__0174
043a0                 | ' 
043a0                 | '     $0:                                 ' Arpeggio
043a0                 | '       arpCounter := tickCounter // 3
043a0     A1 0E 06 F1 | 	add	objptr, #161
043a4     07 09 C3 FA | 	rdbyte	muldiva_, objptr
043a8     A1 0E 86 F1 | 	sub	objptr, #161
043ac     03 0A 07 F6 | 	mov	muldivb_, #3
043b0     D0 00 A0 FD | 	call	#divide_
043b4     84 71 02 F6 | 	mov	local05, muldiva_
043b8                 | '       if (tempNote := amigaPeriodToNote(currPeriod[channel], currFineTune[channel])) < 36
043b8     34 73 02 F6 | 	mov	local06, local01
043bc     02 72 66 F0 | 	shl	local06, #2
043c0     DF 0E 06 F1 | 	add	objptr, #223
043c4     07 73 02 F1 | 	add	local06, objptr
043c8     39 5B 02 FB | 	rdlong	arg01, local06
043cc     34 75 02 F6 | 	mov	local07, local01
043d0     0C 0E 86 F1 | 	sub	objptr, #12
043d4     07 75 02 F1 | 	add	local07, objptr
043d8     3A 5D C2 FA | 	rdbyte	arg02, local07
043dc     D3 0E 86 F1 | 	sub	objptr, #211
043e0     68 F0 BF FD | 	call	#_trackerplayer_spin2_amigaPeriodToNote
043e4     14 77 02 F6 | 	mov	local08, result1
043e8     3B 79 02 F6 | 	mov	local09, local08
043ec     24 76 5E F2 | 	cmps	local08, #36 wcz
043f0     DC 02 90 3D |  if_ae	jmp	#LR__0188
043f4                 | '         if arpCounter == 1 and x > 0
043f4     01 70 0E F2 | 	cmp	local05, #1 wz
043f8     8C 00 90 5D |  if_ne	jmp	#LR__0175
043fc     B7 0F 06 F1 | 	add	objptr, #439
04400     07 73 C2 FA | 	rdbyte	local06, objptr
04404     B7 0F 86 F1 | 	sub	objptr, #439
04408     00 72 5E F2 | 	cmps	local06, #0 wcz
0440c     78 00 90 ED |  if_be	jmp	#LR__0175
04410                 | '           deltaPeriod[channel] := noteToAmigaPeriod(tempNote + x) - currPeriod[channel]
04410     3C 7B 02 F6 | 	mov	local10, local09
04414     B7 0F 06 F1 | 	add	objptr, #439
04418     07 75 C2 FA | 	rdbyte	local07, objptr
0441c     3A 7D 02 F6 | 	mov	local11, local07
04420     3A 7B 02 F1 | 	add	local10, local07
04424     3D 7F 02 F6 | 	mov	local12, local10
04428     3F 5B 02 F6 | 	mov	arg01, local12
0442c     06 00 00 FF 
04430     AC 26 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##3244
04434     01 5A 66 F0 | 	shl	arg01, #1
04438     13 5B 02 F1 | 	add	arg01, ptr__trackerplayer_spin2_dat__
0443c                 | ' 
0443c                 | '   return word[@periodTable][noteNumber]
0443c     2D 29 E2 FA | 	rdword	result1, arg01
04440     06 00 00 FF 
04444     AC 26 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##3244
04448     14 81 02 F6 | 	mov	local13, result1
0444c     34 83 02 F6 | 	mov	local14, local01
04450     02 82 66 F0 | 	shl	local14, #2
04454     D8 0E 86 F1 | 	sub	objptr, #216
04458     07 85 02 F6 | 	mov	local15, objptr
0445c     07 83 02 F1 | 	add	local14, objptr
04460     40 73 02 F6 | 	mov	local06, local13
04464     41 87 02 FB | 	rdlong	local16, local14
04468     43 73 82 F1 | 	sub	local06, local16
0446c     34 89 02 F6 | 	mov	local17, local01
04470     02 88 66 F0 | 	shl	local17, #2
04474     10 0E 06 F1 | 	add	objptr, #16
04478     07 8B 02 F6 | 	mov	local18, objptr
0447c     07 89 02 F1 | 	add	local17, objptr
04480     44 73 62 FC | 	wrlong	local06, local17
04484     EF 0E 86 F1 | 	sub	objptr, #239
04488                 | LR__0175
04488                 | '         if arpCounter == 2 and y > 0
04488     02 70 0E F2 | 	cmp	local05, #2 wz
0448c     8C 00 90 5D |  if_ne	jmp	#LR__0176
04490     B8 0F 06 F1 | 	add	objptr, #440
04494     07 73 C2 FA | 	rdbyte	local06, objptr
04498     B8 0F 86 F1 | 	sub	objptr, #440
0449c     00 72 5E F2 | 	cmps	local06, #0 wcz
044a0     78 00 90 ED |  if_be	jmp	#LR__0176
044a4                 | '           deltaPeriod[channel] := noteToAmigaPeriod(tempNote + y) - currPeriod[channel]
044a4     3C 7B 02 F6 | 	mov	local10, local09
044a8     B8 0F 06 F1 | 	add	objptr, #440
044ac     07 75 C2 FA | 	rdbyte	local07, objptr
044b0     3A 7D 02 F6 | 	mov	local11, local07
044b4     3A 7B 02 F1 | 	add	local10, local07
044b8     3D 7F 02 F6 | 	mov	local12, local10
044bc     3F 5B 02 F6 | 	mov	arg01, local12
044c0     06 00 00 FF 
044c4     AC 26 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##3244
044c8     01 5A 66 F0 | 	shl	arg01, #1
044cc     13 5B 02 F1 | 	add	arg01, ptr__trackerplayer_spin2_dat__
044d0                 | ' 
044d0                 | '   return word[@periodTable][noteNumber]
044d0     2D 29 E2 FA | 	rdword	result1, arg01
044d4     06 00 00 FF 
044d8     AC 26 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##3244
044dc     14 81 02 F6 | 	mov	local13, result1
044e0     34 83 02 F6 | 	mov	local14, local01
044e4     02 82 66 F0 | 	shl	local14, #2
044e8     D9 0E 86 F1 | 	sub	objptr, #217
044ec     07 85 02 F6 | 	mov	local15, objptr
044f0     07 83 02 F1 | 	add	local14, objptr
044f4     40 73 02 F6 | 	mov	local06, local13
044f8     41 87 02 FB | 	rdlong	local16, local14
044fc     43 73 82 F1 | 	sub	local06, local16
04500     34 89 02 F6 | 	mov	local17, local01
04504     02 88 66 F0 | 	shl	local17, #2
04508     10 0E 06 F1 | 	add	objptr, #16
0450c     07 8B 02 F6 | 	mov	local18, objptr
04510     07 89 02 F1 | 	add	local17, objptr
04514     44 73 62 FC | 	wrlong	local06, local17
04518     EF 0E 86 F1 | 	sub	objptr, #239
0451c                 | LR__0176
0451c                 | '         if arpCounter == 0 and (x + y) > 0
0451c     00 70 0E F2 | 	cmp	local05, #0 wz
04520     AC 01 90 5D |  if_ne	jmp	#LR__0188
04524     B7 0F 06 F1 | 	add	objptr, #439
04528     07 73 C2 FA | 	rdbyte	local06, objptr
0452c     01 0E 06 F1 | 	add	objptr, #1
04530     07 75 C2 FA | 	rdbyte	local07, objptr
04534     B8 0F 86 F1 | 	sub	objptr, #440
04538     3A 73 02 F1 | 	add	local06, local07
0453c     00 72 5E F2 | 	cmps	local06, #0 wcz
04540     8C 01 90 ED |  if_be	jmp	#LR__0188
04544                 | '           deltaPeriod[channel] := 0
04544     02 68 66 F0 | 	shl	local01, #2
04548     EF 0E 06 F1 | 	add	objptr, #239
0454c     07 69 02 F1 | 	add	local01, objptr
04550     34 01 68 FC | 	wrlong	#0, local01
04554     EF 0E 86 F1 | 	sub	objptr, #239
04558     74 01 90 FD | 	jmp	#LR__0188
0455c                 | LR__0177
0455c                 | ' 
0455c                 | '     $4:                                 ' Vibrato
0455c                 | '       if x > 0
0455c     B7 0F 06 F1 | 	add	objptr, #439
04560     07 73 C2 FA | 	rdbyte	local06, objptr
04564     B7 0F 86 F1 | 	sub	objptr, #439
04568     00 72 5E F2 | 	cmps	local06, #0 wcz
0456c     1C 00 90 ED |  if_be	jmp	#LR__0178
04570                 | '         cmd4_memoryX[channel] := x
04570     34 73 02 F6 | 	mov	local06, local01
04574     D0 0F 06 F1 | 	add	objptr, #464
04578     07 73 02 F1 | 	add	local06, objptr
0457c     19 0E 86 F1 | 	sub	objptr, #25
04580     07 7D C2 FA | 	rdbyte	local11, objptr
04584     B7 0F 86 F1 | 	sub	objptr, #439
04588     39 7D 42 FC | 	wrbyte	local11, local06
0458c                 | LR__0178
0458c                 | '       if y > 0
0458c     B8 0F 06 F1 | 	add	objptr, #440
04590     07 73 C2 FA | 	rdbyte	local06, objptr
04594     B8 0F 86 F1 | 	sub	objptr, #440
04598     00 72 5E F2 | 	cmps	local06, #0 wcz
0459c     1C 00 90 ED |  if_be	jmp	#LR__0179
045a0                 | '         cmd4_memoryY[channel] := y
045a0     34 73 02 F6 | 	mov	local06, local01
045a4     CC 0F 06 F1 | 	add	objptr, #460
045a8     07 73 02 F1 | 	add	local06, objptr
045ac     14 0E 86 F1 | 	sub	objptr, #20
045b0     07 7D C2 FA | 	rdbyte	local11, objptr
045b4     B8 0F 86 F1 | 	sub	objptr, #440
045b8     39 7D 42 FC | 	wrbyte	local11, local06
045bc                 | LR__0179
045bc                 | ' 
045bc                 | '       doVibrato(channel)
045bc     34 5B 02 F6 | 	mov	arg01, local01
045c0     74 02 B0 FD | 	call	#_trackerplayer_spin2_doVibrato
045c4     08 01 90 FD | 	jmp	#LR__0188
045c8                 | LR__0180
045c8                 | ' 
045c8                 | '     $6: doVibrato(channel)              ' Volume slide + Vibrato
045c8     34 5B 02 F6 | 	mov	arg01, local01
045cc     68 02 B0 FD | 	call	#_trackerplayer_spin2_doVibrato
045d0     FC 00 90 FD | 	jmp	#LR__0188
045d4                 | LR__0181
045d4                 | ' 
045d4                 | '     $E:
045d4                 | '       if x == $C                        ' Cut note after Y ticks
045d4     B7 0F 06 F1 | 	add	objptr, #439
045d8     07 73 C2 FA | 	rdbyte	local06, objptr
045dc     B7 0F 86 F1 | 	sub	objptr, #439
045e0     0C 72 0E F2 | 	cmp	local06, #12 wz
045e4     34 00 90 5D |  if_ne	jmp	#LR__0182
045e8                 | '         if tickcounter == y
045e8     A1 0E 06 F1 | 	add	objptr, #161
045ec     07 73 C2 FA | 	rdbyte	local06, objptr
045f0     17 0F 06 F1 | 	add	objptr, #279
045f4     07 7D C2 FA | 	rdbyte	local11, objptr
045f8     B8 0F 86 F1 | 	sub	objptr, #440
045fc     3E 73 0A F2 | 	cmp	local06, local11 wz
04600     CC 00 90 5D |  if_ne	jmp	#LR__0187
04604                 | '           currVolume[channel] := 0
04604     02 68 66 F0 | 	shl	local01, #2
04608     FF 0E 06 F1 | 	add	objptr, #255
0460c     07 69 02 F1 | 	add	local01, objptr
04610     34 01 68 FC | 	wrlong	#0, local01
04614     FF 0E 86 F1 | 	sub	objptr, #255
04618     B4 00 90 FD | 	jmp	#LR__0187
0461c                 | LR__0182
0461c                 | ' 
0461c                 | '       elseif x == $D                    ' Delay note Y ticks
0461c     B7 0F 06 F1 | 	add	objptr, #439
04620     07 73 C2 FA | 	rdbyte	local06, objptr
04624     B7 0F 86 F1 | 	sub	objptr, #439
04628     0D 72 0E F2 | 	cmp	local06, #13 wz
0462c     A0 00 90 5D |  if_ne	jmp	#LR__0186
04630                 | '         if tickcounter == y
04630     A1 0E 06 F1 | 	add	objptr, #161
04634     07 73 C2 FA | 	rdbyte	local06, objptr
04638     17 0F 06 F1 | 	add	objptr, #279
0463c     07 7D C2 FA | 	rdbyte	local11, objptr
04640     B8 0F 86 F1 | 	sub	objptr, #440
04644     3E 73 0A F2 | 	cmp	local06, local11 wz
04648     0C 00 90 5D |  if_ne	jmp	#LR__0183
0464c                 | '           triggerNote(channel)
0464c     34 5B 02 F6 | 	mov	arg01, local01
04650     C8 EF BF FD | 	call	#_trackerplayer_spin2_triggerNote
04654     78 00 90 FD | 	jmp	#LR__0185
04658                 | LR__0183
04658                 | '         ' Do a "bugged trigger" if y >= currentSongSpeed
04658                 | '         elseif (y >= currentSongSpeed) and tickcounter == (currentSongSpeed - 1)
04658     B8 0F 06 F1 | 	add	objptr, #440
0465c     07 73 C2 FA | 	rdbyte	local06, objptr
04660     14 0F 86 F1 | 	sub	objptr, #276
04664     07 7D C2 FA | 	rdbyte	local11, objptr
04668     A4 0E 86 F1 | 	sub	objptr, #164
0466c     3E 73 5A F2 | 	cmps	local06, local11 wcz
04670     5C 00 90 CD |  if_b	jmp	#LR__0184
04674     A4 0E 06 F1 | 	add	objptr, #164
04678     07 81 C2 FA | 	rdbyte	local13, objptr
0467c     40 7F 02 F6 | 	mov	local12, local13
04680     01 7E 86 F1 | 	sub	local12, #1
04684     03 0E 86 F1 | 	sub	objptr, #3
04688     07 85 C2 FA | 	rdbyte	local15, objptr
0468c     A1 0E 86 F1 | 	sub	objptr, #161
04690     42 83 02 F6 | 	mov	local14, local15
04694     3F 83 0A F2 | 	cmp	local14, local12 wz
04698     34 00 90 5D |  if_ne	jmp	#LR__0184
0469c                 | '           currPeriod[channel] := lastSetPeriod[channel] ' Only set period, don't trigger a sample playback
0469c     34 73 02 F6 | 	mov	local06, local01
046a0     02 72 66 F0 | 	shl	local06, #2
046a4     27 0F 06 F1 | 	add	objptr, #295
046a8     07 7B 02 F6 | 	mov	local10, objptr
046ac     07 73 02 F1 | 	add	local06, objptr
046b0     34 7D 02 F6 | 	mov	local11, local01
046b4     02 7C 66 F0 | 	shl	local11, #2
046b8     48 0E 86 F1 | 	sub	objptr, #72
046bc     07 75 02 F6 | 	mov	local07, objptr
046c0     39 7F 02 FB | 	rdlong	local12, local06
046c4     3A 7D 02 F1 | 	add	local11, local07
046c8     3E 7F 62 FC | 	wrlong	local12, local11
046cc     DF 0E 86 F1 | 	sub	objptr, #223
046d0                 | LR__0184
046d0                 | LR__0185
046d0                 | LR__0186
046d0                 | LR__0187
046d0                 | LR__0188
046d0     AF F0 03 F6 | 	mov	ptra, fp
046d4     BF 00 A0 FD | 	call	#popregs_
046d8                 | _trackerplayer_spin2_handleEveryTickCommands_ret
046d8     2D 00 64 FD | 	ret
046dc                 | 
046dc                 | ' 
046dc                 | ' 
046dc                 | ' PRI doTremolo(channel) | depth, sineWave, speed
046dc                 | _trackerplayer_spin2_doTremolo
046dc     2D 2F 02 F6 | 	mov	_var01, arg01
046e0     17 31 02 F6 | 	mov	_var02, _var01
046e4     8B 0F 06 F1 | 	add	objptr, #395
046e8     07 31 02 F1 | 	add	_var02, objptr
046ec     05 00 00 FF 
046f0     AC 27 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##2988
046f4     13 33 02 F6 | 	mov	_var03, ptr__trackerplayer_spin2_dat__
046f8     18 35 C2 FA | 	rdbyte	_var04, _var02
046fc     02 34 66 F0 | 	shl	_var04, #2
04700     19 35 02 F1 | 	add	_var04, _var03
04704                 | ' 
04704                 | '   sineWave := long[@vibratoWaveform][tremoloPos[channel]]
04704     1A 37 02 FB | 	rdlong	_var05, _var04
04708     17 39 02 F6 | 	mov	_var06, _var01
0470c     49 0E 06 F1 | 	add	objptr, #73
04710     07 39 02 F1 | 	add	_var06, objptr
04714                 | '   depth    := cmd7_memoryY[channel]
04714     1C 3B C2 FA | 	rdbyte	_var07, _var06
04718     17 3D 02 F6 | 	mov	_var08, _var01
0471c     04 0E 06 F1 | 	add	objptr, #4
04720     07 3D 02 F1 | 	add	_var08, objptr
04724                 | '   speed    := cmd7_memoryX[channel]
04724     1E 3F C2 FA | 	rdbyte	_var09, _var08
04728                 | ' 
04728                 | '   CASE_FAST vibratoType[channel]
04728     17 41 02 F6 | 	mov	_var10, _var01
0472c     18 0E 86 F1 | 	sub	objptr, #24
04730     07 43 02 F6 | 	mov	_var11, objptr
04734     07 41 02 F1 | 	add	_var10, objptr
04738     20 45 C2 FA | 	rdbyte	_var12, _var10
0473c     03 44 26 F3 | 	fle	_var12, #3
04740     22 47 02 F6 | 	mov	_var13, _var12
04744     05 00 00 FF 
04748     AC 27 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##2988
0474c     C0 0F 86 F1 | 	sub	objptr, #448
04750     30 46 62 FD | 	jmprel	_var13
04754                 | LR__0189
04754     0C 00 90 FD | 	jmp	#LR__0190
04758     30 00 90 FD | 	jmp	#LR__0191
0475c     6C 00 90 FD | 	jmp	#LR__0192
04760     B4 00 90 FD | 	jmp	#LR__0193
04764                 | LR__0190
04764                 | ' 
04764                 | '     0: deltaVolume[channel] := (depth * sineWave) SAR 6                                 ' Sine wave
04764     1B 3B 02 FD | 	qmul	_var07, _var05
04768     18 48 62 FD | 	getqx	_var14
0476c     06 48 C6 F0 | 	sar	_var14, #6
04770     17 4B 02 F6 | 	mov	_var15, _var01
04774     02 4A 66 F0 | 	shl	_var15, #2
04778     0F 0F 06 F1 | 	add	objptr, #271
0477c     07 4B 02 F1 | 	add	_var15, objptr
04780     25 49 62 FC | 	wrlong	_var14, _var15
04784     0F 0F 86 F1 | 	sub	objptr, #271
04788     8C 00 90 FD | 	jmp	#LR__0193
0478c                 | LR__0191
0478c                 | '     1: deltaVolume[channel] := (depth * (tremoloPos[channel] << 3) - 256) SAR 6         ' Ramp down wave
0478c     17 4B 02 F6 | 	mov	_var15, _var01
04790     8B 0F 06 F1 | 	add	objptr, #395
04794     07 4B 02 F1 | 	add	_var15, objptr
04798     25 4D C2 FA | 	rdbyte	_var16, _var15
0479c     03 4C 66 F0 | 	shl	_var16, #3
047a0     26 3B 02 FD | 	qmul	_var07, _var16
047a4     18 48 62 FD | 	getqx	_var14
047a8     00 49 86 F1 | 	sub	_var14, #256
047ac     06 48 C6 F0 | 	sar	_var14, #6
047b0     17 4F 02 F6 | 	mov	_var17, _var01
047b4     02 4E 66 F0 | 	shl	_var17, #2
047b8     7C 0E 86 F1 | 	sub	objptr, #124
047bc     07 4F 02 F1 | 	add	_var17, objptr
047c0     27 49 62 FC | 	wrlong	_var14, _var17
047c4     0F 0F 86 F1 | 	sub	objptr, #271
047c8     4C 00 90 FD | 	jmp	#LR__0193
047cc                 | LR__0192
047cc                 | '     2: deltaVolume[channel] := (depth * ((tremoloPos[channel] & 32) << 4) - 256) SAR 6  ' Square wave
047cc     17 4B 02 F6 | 	mov	_var15, _var01
047d0     8B 0F 06 F1 | 	add	objptr, #395
047d4     07 51 02 F6 | 	mov	_var18, objptr
047d8     07 4B 02 F1 | 	add	_var15, objptr
047dc     25 4D C2 FA | 	rdbyte	_var16, _var15
047e0     20 4C 06 F5 | 	and	_var16, #32
047e4     04 4C 66 F0 | 	shl	_var16, #4
047e8     26 3B 02 FD | 	qmul	_var07, _var16
047ec     18 52 62 FD | 	getqx	_var19
047f0     29 49 02 F6 | 	mov	_var14, _var19
047f4     00 49 86 F1 | 	sub	_var14, #256
047f8     06 48 C6 F0 | 	sar	_var14, #6
047fc     17 4F 02 F6 | 	mov	_var17, _var01
04800     02 4E 66 F0 | 	shl	_var17, #2
04804     7C 0E 86 F1 | 	sub	objptr, #124
04808     07 55 02 F6 | 	mov	_var20, objptr
0480c     07 4F 02 F1 | 	add	_var17, objptr
04810     27 49 62 FC | 	wrlong	_var14, _var17
04814     0F 0F 86 F1 | 	sub	objptr, #271
04818                 | LR__0193
04818     8B 0F 06 F1 | 	add	objptr, #395
0481c     07 2F 02 F1 | 	add	_var01, objptr
04820     17 57 C2 FA | 	rdbyte	_var21, _var01
04824     1F 57 02 F1 | 	add	_var21, _var09
04828     3F 56 06 F5 | 	and	_var21, #63
0482c                 | ' 
0482c                 | '   tremoloPos[channel] := (tremoloPos[channel] + speed) & VIBRATO_WAVEFORM_MASK
0482c     17 57 42 FC | 	wrbyte	_var21, _var01
04830     8B 0F 86 F1 | 	sub	objptr, #395
04834                 | _trackerplayer_spin2_doTremolo_ret
04834     2D 00 64 FD | 	ret
04838                 | 
04838                 | ' 
04838                 | ' 
04838                 | ' PRI doVibrato(channel) | depth, sineWave, speed
04838                 | _trackerplayer_spin2_doVibrato
04838     2D 2F 02 F6 | 	mov	_var01, arg01
0483c     17 31 02 F6 | 	mov	_var02, _var01
04840     87 0F 06 F1 | 	add	objptr, #391
04844     07 31 02 F1 | 	add	_var02, objptr
04848     05 00 00 FF 
0484c     AC 27 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##2988
04850     13 33 02 F6 | 	mov	_var03, ptr__trackerplayer_spin2_dat__
04854     18 35 C2 FA | 	rdbyte	_var04, _var02
04858     02 34 66 F0 | 	shl	_var04, #2
0485c     19 35 02 F1 | 	add	_var04, _var03
04860                 | ' 
04860                 | '   sineWave := long[@vibratoWaveform][vibratoPos[channel]]
04860     1A 37 02 FB | 	rdlong	_var05, _var04
04864     17 39 02 F6 | 	mov	_var06, _var01
04868     45 0E 06 F1 | 	add	objptr, #69
0486c     07 39 02 F1 | 	add	_var06, objptr
04870                 | '   depth    := cmd4_memoryY[channel]
04870     1C 3B C2 FA | 	rdbyte	_var07, _var06
04874     17 3D 02 F6 | 	mov	_var08, _var01
04878     04 0E 06 F1 | 	add	objptr, #4
0487c     07 3D 02 F1 | 	add	_var08, objptr
04880                 | '   speed    := cmd4_memoryX[channel]
04880     1E 3F C2 FA | 	rdbyte	_var09, _var08
04884                 | ' 
04884                 | '   CASE_FAST vibratoType[channel]
04884     17 41 02 F6 | 	mov	_var10, _var01
04888     10 0E 86 F1 | 	sub	objptr, #16
0488c     07 43 02 F6 | 	mov	_var11, objptr
04890     07 41 02 F1 | 	add	_var10, objptr
04894     20 45 C2 FA | 	rdbyte	_var12, _var10
04898     03 44 26 F3 | 	fle	_var12, #3
0489c     22 47 02 F6 | 	mov	_var13, _var12
048a0     05 00 00 FF 
048a4     AC 27 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##2988
048a8     C0 0F 86 F1 | 	sub	objptr, #448
048ac     30 46 62 FD | 	jmprel	_var13
048b0                 | LR__0194
048b0     0C 00 90 FD | 	jmp	#LR__0195
048b4     30 00 90 FD | 	jmp	#LR__0196
048b8     6C 00 90 FD | 	jmp	#LR__0197
048bc     B4 00 90 FD | 	jmp	#LR__0198
048c0                 | LR__0195
048c0                 | ' 
048c0                 | '     0: deltaPeriod[channel] := (depth * sineWave) SAR 7                                 ' Sine wave
048c0     1B 3B 02 FD | 	qmul	_var07, _var05
048c4     18 48 62 FD | 	getqx	_var14
048c8     07 48 C6 F0 | 	sar	_var14, #7
048cc     17 4B 02 F6 | 	mov	_var15, _var01
048d0     02 4A 66 F0 | 	shl	_var15, #2
048d4     EF 0E 06 F1 | 	add	objptr, #239
048d8     07 4B 02 F1 | 	add	_var15, objptr
048dc     25 49 62 FC | 	wrlong	_var14, _var15
048e0     EF 0E 86 F1 | 	sub	objptr, #239
048e4     8C 00 90 FD | 	jmp	#LR__0198
048e8                 | LR__0196
048e8                 | '     1: deltaPeriod[channel] := (depth * (vibratoPos[channel] << 3) - 256) SAR 7         ' Ramp down wave
048e8     17 4B 02 F6 | 	mov	_var15, _var01
048ec     87 0F 06 F1 | 	add	objptr, #391
048f0     07 4B 02 F1 | 	add	_var15, objptr
048f4     25 4D C2 FA | 	rdbyte	_var16, _var15
048f8     03 4C 66 F0 | 	shl	_var16, #3
048fc     26 3B 02 FD | 	qmul	_var07, _var16
04900     18 48 62 FD | 	getqx	_var14
04904     00 49 86 F1 | 	sub	_var14, #256
04908     07 48 C6 F0 | 	sar	_var14, #7
0490c     17 4F 02 F6 | 	mov	_var17, _var01
04910     02 4E 66 F0 | 	shl	_var17, #2
04914     98 0E 86 F1 | 	sub	objptr, #152
04918     07 4F 02 F1 | 	add	_var17, objptr
0491c     27 49 62 FC | 	wrlong	_var14, _var17
04920     EF 0E 86 F1 | 	sub	objptr, #239
04924     4C 00 90 FD | 	jmp	#LR__0198
04928                 | LR__0197
04928                 | '     2: deltaPeriod[channel] := (depth * ((vibratoPos[channel] & 32) << 4) - 256) SAR 7  ' Square wave
04928     17 4B 02 F6 | 	mov	_var15, _var01
0492c     87 0F 06 F1 | 	add	objptr, #391
04930     07 51 02 F6 | 	mov	_var18, objptr
04934     07 4B 02 F1 | 	add	_var15, objptr
04938     25 4D C2 FA | 	rdbyte	_var16, _var15
0493c     20 4C 06 F5 | 	and	_var16, #32
04940     04 4C 66 F0 | 	shl	_var16, #4
04944     26 3B 02 FD | 	qmul	_var07, _var16
04948     18 52 62 FD | 	getqx	_var19
0494c     29 49 02 F6 | 	mov	_var14, _var19
04950     00 49 86 F1 | 	sub	_var14, #256
04954     07 48 C6 F0 | 	sar	_var14, #7
04958     17 4F 02 F6 | 	mov	_var17, _var01
0495c     02 4E 66 F0 | 	shl	_var17, #2
04960     98 0E 86 F1 | 	sub	objptr, #152
04964     07 55 02 F6 | 	mov	_var20, objptr
04968     07 4F 02 F1 | 	add	_var17, objptr
0496c     27 49 62 FC | 	wrlong	_var14, _var17
04970     EF 0E 86 F1 | 	sub	objptr, #239
04974                 | LR__0198
04974     87 0F 06 F1 | 	add	objptr, #391
04978     07 2F 02 F1 | 	add	_var01, objptr
0497c     17 57 C2 FA | 	rdbyte	_var21, _var01
04980     1F 57 02 F1 | 	add	_var21, _var09
04984     3F 56 06 F5 | 	and	_var21, #63
04988                 | ' 
04988                 | '   vibratoPos[channel] := (vibratoPos[channel] + speed) & VIBRATO_WAVEFORM_MASK
04988     17 57 42 FC | 	wrbyte	_var21, _var01
0498c     87 0F 86 F1 | 	sub	objptr, #391
04990                 | _trackerplayer_spin2_doVibrato_ret
04990     2D 00 64 FD | 	ret
04994                 | 
04994                 | ' 
04994                 | ' 
04994                 | ' PRI doPortamento(channel, period) | i, j, periodStep, tempPeriod
04994                 | _trackerplayer_spin2_doPortamento
04994                 | ' 
04994                 | '   if period == currPeriod[channel]
04994     2D 2F 02 F6 | 	mov	_var01, arg01
04998     02 2E 66 F0 | 	shl	_var01, #2
0499c     DF 0E 06 F1 | 	add	objptr, #223
049a0     07 31 02 F6 | 	mov	_var02, objptr
049a4     07 2F 02 F1 | 	add	_var01, objptr
049a8     17 33 02 FB | 	rdlong	_var03, _var01
049ac     19 5D 0A F2 | 	cmp	arg02, _var03 wz
049b0                 | '     return
049b0     DF 0E 86 F1 | 	sub	objptr, #223
049b4     D4 01 90 AD |  if_e	jmp	#_trackerplayer_spin2_doPortamento_ret
049b8                 | ' 
049b8                 | '   if period > 0
049b8     00 5C 5E F2 | 	cmps	arg02, #0 wcz
049bc     1C 00 90 ED |  if_be	jmp	#LR__0199
049c0     2D 35 02 F6 | 	mov	_var04, arg01
049c4     02 34 66 F0 | 	shl	_var04, #2
049c8     97 0F 06 F1 | 	add	objptr, #407
049cc     07 35 02 F1 | 	add	_var04, objptr
049d0                 | '     portamentoPeriodMemory[channel] := period
049d0     1A 5D 62 FC | 	wrlong	arg02, _var04
049d4                 | '   else
049d4     97 0F 86 F1 | 	sub	objptr, #407
049d8     18 00 90 FD | 	jmp	#LR__0200
049dc                 | LR__0199
049dc     2D 37 02 F6 | 	mov	_var05, arg01
049e0     02 36 66 F0 | 	shl	_var05, #2
049e4     97 0F 06 F1 | 	add	objptr, #407
049e8     07 37 02 F1 | 	add	_var05, objptr
049ec                 | '     period := portamentoPeriodMemory[channel]
049ec     1B 5D 02 FB | 	rdlong	arg02, _var05
049f0     97 0F 86 F1 | 	sub	objptr, #407
049f4                 | LR__0200
049f4                 | ' 
049f4                 | '   if period > currPeriod[channel]
049f4     2D 2F 02 F6 | 	mov	_var01, arg01
049f8     02 2E 66 F0 | 	shl	_var01, #2
049fc     DF 0E 06 F1 | 	add	objptr, #223
04a00     07 2F 02 F1 | 	add	_var01, objptr
04a04     17 33 02 FB | 	rdlong	_var03, _var01
04a08     19 5D 5A F2 | 	cmps	arg02, _var03 wcz
04a0c     DF 0E 86 F1 | 	sub	objptr, #223
04a10     50 00 90 ED |  if_be	jmp	#LR__0201
04a14     2D 39 02 F6 | 	mov	_var06, arg01
04a18     02 38 66 F0 | 	shl	_var06, #2
04a1c     DF 0E 06 F1 | 	add	objptr, #223
04a20     07 39 02 F1 | 	add	_var06, objptr
04a24     2D 3B 02 F6 | 	mov	_var07, arg01
04a28     E9 0E 06 F1 | 	add	objptr, #233
04a2c     1C 3D 02 FB | 	rdlong	_var08, _var06
04a30     07 3B 02 F1 | 	add	_var07, objptr
04a34     1D 31 C2 FA | 	rdbyte	_var02, _var07
04a38     18 3D 02 F1 | 	add	_var08, _var02
04a3c                 | '     currPeriod[channel] += cmd3_memoryZ[channel]
04a3c     1C 3D 62 FC | 	wrlong	_var08, _var06
04a40     2D 3F 02 F6 | 	mov	_var09, arg01
04a44     02 3E 66 F0 | 	shl	_var09, #2
04a48     E9 0E 86 F1 | 	sub	objptr, #233
04a4c     07 3F 02 F1 | 	add	_var09, objptr
04a50     1F 41 02 FB | 	rdlong	_var10, _var09
04a54     2E 41 62 F3 | 	fles	_var10, arg02
04a58                 | '     currPeriod[channel] <#= period
04a58     1F 41 62 FC | 	wrlong	_var10, _var09
04a5c     DF 0E 86 F1 | 	sub	objptr, #223
04a60     6C 00 90 FD | 	jmp	#LR__0203
04a64                 | LR__0201
04a64                 | ' 
04a64                 | '   elseif period < currPeriod[channel]
04a64     2D 2F 02 F6 | 	mov	_var01, arg01
04a68     02 2E 66 F0 | 	shl	_var01, #2
04a6c     DF 0E 06 F1 | 	add	objptr, #223
04a70     07 2F 02 F1 | 	add	_var01, objptr
04a74     17 33 02 FB | 	rdlong	_var03, _var01
04a78     19 5D 5A F2 | 	cmps	arg02, _var03 wcz
04a7c     DF 0E 86 F1 | 	sub	objptr, #223
04a80     4C 00 90 3D |  if_ae	jmp	#LR__0202
04a84     2D 43 02 F6 | 	mov	_var11, arg01
04a88     02 42 66 F0 | 	shl	_var11, #2
04a8c     DF 0E 06 F1 | 	add	objptr, #223
04a90     07 43 02 F1 | 	add	_var11, objptr
04a94     2D 45 02 F6 | 	mov	_var12, arg01
04a98     E9 0E 06 F1 | 	add	objptr, #233
04a9c     21 47 02 FB | 	rdlong	_var13, _var11
04aa0     07 45 02 F1 | 	add	_var12, objptr
04aa4     22 31 C2 FA | 	rdbyte	_var02, _var12
04aa8     18 47 82 F1 | 	sub	_var13, _var02
04aac                 | '     currPeriod[channel] -= cmd3_memoryZ[channel]
04aac     21 47 62 FC | 	wrlong	_var13, _var11
04ab0     2D 49 02 F6 | 	mov	_var14, arg01
04ab4     02 48 66 F0 | 	shl	_var14, #2
04ab8     E9 0E 86 F1 | 	sub	objptr, #233
04abc     07 49 02 F1 | 	add	_var14, objptr
04ac0     24 4B 02 FB | 	rdlong	_var15, _var14
04ac4     2E 4B 42 F3 | 	fges	_var15, arg02
04ac8                 | '     currPeriod[channel] #>= period
04ac8     24 4B 62 FC | 	wrlong	_var15, _var14
04acc     DF 0E 86 F1 | 	sub	objptr, #223
04ad0                 | LR__0202
04ad0                 | LR__0203
04ad0                 | ' 
04ad0                 | '   ' Handle glissando if activated
04ad0                 | '   if portaGlissando[channel] > 0
04ad0     2D 2F 02 F6 | 	mov	_var01, arg01
04ad4     BC 0F 06 F1 | 	add	objptr, #444
04ad8     07 2F 02 F1 | 	add	_var01, objptr
04adc     17 33 C2 FA | 	rdbyte	_var03, _var01
04ae0     00 32 5E F2 | 	cmps	_var03, #0 wcz
04ae4     BC 0F 86 F1 | 	sub	objptr, #444
04ae8     A0 00 90 ED |  if_be	jmp	#LR__0206
04aec     2D 4D 02 F6 | 	mov	_var16, arg01
04af0     02 4C 66 F0 | 	shl	_var16, #2
04af4     DF 0E 06 F1 | 	add	objptr, #223
04af8     07 4D 02 F1 | 	add	_var16, objptr
04afc                 | ' 
04afc                 | '     tempPeriod := currPeriod[channel]
04afc     26 4F 02 FB | 	rdlong	_var17, _var16
04b00                 | ' 
04b00                 | '     repeat i from 0 to LAST_POS_IN_PERIOD_TBL
04b00     00 50 06 F6 | 	mov	_var18, #0
04b04     DF 0E 86 F1 | 	sub	objptr, #223
04b08     58 B5 9F FE | 	loc	pa,	#(@LR__0205-@LR__0204)
04b0c     93 00 A0 FD | 	call	#FCACHE_LOAD_
04b10                 | LR__0204
04b10     06 00 00 FF 
04b14     AC 26 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##3244
04b18     13 33 02 F6 | 	mov	_var03, ptr__trackerplayer_spin2_dat__
04b1c     2D 53 02 F6 | 	mov	_var19, arg01
04b20     D3 0E 06 F1 | 	add	objptr, #211
04b24     07 53 02 F1 | 	add	_var19, objptr
04b28     29 31 C2 FA | 	rdbyte	_var02, _var19
04b2c     18 55 02 F6 | 	mov	_var20, _var02
04b30     03 54 66 F0 | 	shl	_var20, #3
04b34     18 55 02 F1 | 	add	_var20, _var02
04b38     03 54 66 F0 | 	shl	_var20, #3
04b3c     2A 33 02 F1 | 	add	_var03, _var20
04b40     28 57 02 F6 | 	mov	_var21, _var18
04b44     01 56 66 F0 | 	shl	_var21, #1
04b48     19 57 02 F1 | 	add	_var21, _var03
04b4c                 | ' 
04b4c                 | '       periodStep := word[@periodTable + (currFineTune[channel] * BYTES_IN_PERIOD_TABLE)][i]
04b4c     2B 59 E2 FA | 	rdword	_var22, _var21
04b50                 | '       if tempPeriod >= periodStep
04b50     2C 4F 5A F2 | 	cmps	_var17, _var22 wcz
04b54                 | '         i += 1000
04b54     06 00 00 FF 
04b58     AC 26 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##3244
04b5c     D3 0E 86 F1 | 	sub	objptr, #211
04b60     01 00 00 3F 
04b64     E8 51 06 31 |  if_ae	add	_var18, ##1000
04b68     01 50 06 F1 | 	add	_var18, #1
04b6c     24 50 5E F2 | 	cmps	_var18, #36 wcz
04b70     9C FF 9F CD |  if_b	jmp	#LR__0204
04b74                 | LR__0205
04b74     27 59 82 F1 | 	sub	_var22, _var17
04b78     02 5A 66 F0 | 	shl	arg01, #2
04b7c     EF 0E 06 F1 | 	add	objptr, #239
04b80     07 5B 02 F1 | 	add	arg01, objptr
04b84                 | ' 
04b84                 | '     deltaPeriod[channel] := periodStep - tempPeriod
04b84     2D 59 62 FC | 	wrlong	_var22, arg01
04b88     EF 0E 86 F1 | 	sub	objptr, #239
04b8c                 | LR__0206
04b8c                 | _trackerplayer_spin2_doPortamento_ret
04b8c     2D 00 64 FD | 	ret
04b90                 | 
04b90                 | ' 
04b90                 | ' 
04b90                 | ' PRI doVolumeSlide(channel)
04b90                 | _trackerplayer_spin2_doVolumeSlide
04b90                 | ' 
04b90                 | '   if x > 0
04b90     B7 0F 06 F1 | 	add	objptr, #439
04b94     07 2F C2 FA | 	rdbyte	_var01, objptr
04b98     B7 0F 86 F1 | 	sub	objptr, #439
04b9c     00 2E 5E F2 | 	cmps	_var01, #0 wcz
04ba0     28 00 90 ED |  if_be	jmp	#LR__0207
04ba4     2D 31 02 F6 | 	mov	_var02, arg01
04ba8     02 30 66 F0 | 	shl	_var02, #2
04bac     FF 0E 06 F1 | 	add	objptr, #255
04bb0     07 31 02 F1 | 	add	_var02, objptr
04bb4     18 33 02 FB | 	rdlong	_var03, _var02
04bb8     B8 0E 06 F1 | 	add	objptr, #184
04bbc     07 35 C2 FA | 	rdbyte	_var04, objptr
04bc0     B7 0F 86 F1 | 	sub	objptr, #439
04bc4     1A 33 02 F1 | 	add	_var03, _var04
04bc8                 | '     currVolume[channel] += x
04bc8     18 33 62 FC | 	wrlong	_var03, _var02
04bcc                 | LR__0207
04bcc                 | '   if y > 0
04bcc     B8 0F 06 F1 | 	add	objptr, #440
04bd0     07 2F C2 FA | 	rdbyte	_var01, objptr
04bd4     B8 0F 86 F1 | 	sub	objptr, #440
04bd8     00 2E 5E F2 | 	cmps	_var01, #0 wcz
04bdc     24 00 90 ED |  if_be	jmp	#LR__0208
04be0     02 5A 66 F0 | 	shl	arg01, #2
04be4     FF 0E 06 F1 | 	add	objptr, #255
04be8     07 5B 02 F1 | 	add	arg01, objptr
04bec     2D 37 02 FB | 	rdlong	_var05, arg01
04bf0     B9 0E 06 F1 | 	add	objptr, #185
04bf4     07 35 C2 FA | 	rdbyte	_var04, objptr
04bf8     B8 0F 86 F1 | 	sub	objptr, #440
04bfc     1A 37 82 F1 | 	sub	_var05, _var04
04c00                 | '     currVolume[channel] -= y
04c00     2D 37 62 FC | 	wrlong	_var05, arg01
04c04                 | LR__0208
04c04                 | _trackerplayer_spin2_doVolumeSlide_ret
04c04     2D 00 64 FD | 	ret
04c08                 | 
04c08                 | ' 
04c08                 | ' 
04c08                 | ' PRI calculateAccumulatorFrequency(mixingFrequency, amigaPeriod) : r | upper, lower
04c08                 | _trackerplayer_spin2_calculateAccumulatorFrequency
04c08                 | ' 
04c08                 | '   'R = (65536 * 3546894) / amigaPeriod / mixingFrequency
04c08                 | '   org
04c08     1C B4 9F FE | 	loc	pa,	#(@LR__0210-@LR__0209)
04c0c     93 00 A0 FD | 	call	#FCACHE_LOAD_
04c10                 | LR__0209
04c10 000             | 	org	0
04c10 000 80 00 80 FF 
04c14 001 0F 1B 00 FF 
04c18 002 0E 01 0C FD | 	qmul	##65536, ##3546894
04c1c 003 18 2E 62 FD | 	getqx	_var01
04c20 004 19 30 62 FD | 	getqy	_var02
04c24 005 28 30 62 FD | 	setq	_var02
04c28 006 2E 2F 12 FD | 	qdiv	_var01, arg02
04c2c 007 18 2E 62 FD | 	getqx	_var01
04c30 008 2D 2F 12 FD | 	qdiv	_var01, arg01
04c34 009 18 2E 62 FD | 	getqx	_var01
04c38 00a             | LR__0210
04c38                 | 	orgh
04c38                 | ' 
04c38                 | '   return lower
04c38     17 29 02 F6 | 	mov	result1, _var01
04c3c                 | _trackerplayer_spin2_calculateAccumulatorFrequency_ret
04c3c     2D 00 64 FD | 	ret
04c40                 | hubexit
04c40     81 00 80 FD | 	jmp	#cogexit
04c44                 | 
04c44                 | __system___setbaud
04c44     14 08 07 FB | 	rdlong	muldiva_, #20
04c48     2D 0B 03 F6 | 	mov	muldivb_, arg01
04c4c     D0 00 A0 FD | 	call	#divide_
04c50     40 7C 64 FD | 	dirl	#62
04c54     40 7E 64 FD | 	dirl	#63
04c58     09 0B 63 FC | 	wrlong	muldivb_, ptr___system__dat__
04c5c     10 0A 67 F0 | 	shl	muldivb_, #16
04c60     07 5C 06 F6 | 	mov	arg02, #7
04c64     85 5D 02 F1 | 	add	arg02, muldivb_
04c68     3E F8 0C FC | 	wrpin	#124, #62
04c6c     3E 5C 16 FC | 	wxpin	arg02, #62
04c70     3F 7C 0C FC | 	wrpin	#62, #63
04c74     14 5C 06 F1 | 	add	arg02, #20
04c78     3F 5C 16 FC | 	wxpin	arg02, #63
04c7c     41 7C 64 FD | 	dirh	#62
04c80     41 7E 64 FD | 	dirh	#63
04c84                 | __system___setbaud_ret
04c84     2D 00 64 FD | 	ret
04c88                 | 
04c88                 | __system___txraw
04c88     02 5A 05 F6 | 	mov	COUNT_, #2
04c8c     B0 00 A0 FD | 	call	#pushregs_
04c90     2D 69 02 F6 | 	mov	local01, arg01
04c94     09 6B 0A FB | 	rdlong	local02, ptr___system__dat__ wz
04c98     0C 00 90 5D |  if_ne	jmp	#LR__0211
04c9c     C2 01 00 FF 
04ca0     00 5A 06 F6 | 	mov	arg01, ##230400
04ca4     9C FF BF FD | 	call	#__system___setbaud
04ca8                 | LR__0211
04ca8     3E 68 26 FC | 	wypin	local01, #62
04cac     1F 02 64 FD | 	waitx	#1
04cb0     54 B3 9F FE | 	loc	pa,	#(@LR__0213-@LR__0212)
04cb4     93 00 A0 FD | 	call	#FCACHE_LOAD_
04cb8                 | LR__0212
04cb8     40 7C 74 FD | 	testp	#62 wc
04cbc     F8 FF 9F 3D |  if_nc	jmp	#LR__0212
04cc0                 | LR__0213
04cc0     01 28 06 F6 | 	mov	result1, #1
04cc4     AF F0 03 F6 | 	mov	ptra, fp
04cc8     BF 00 A0 FD | 	call	#popregs_
04ccc                 | __system___txraw_ret
04ccc     2D 00 64 FD | 	ret
04cd0                 | 
04cd0                 | __system___rxraw
04cd0     0D 5A 05 F6 | 	mov	COUNT_, #13
04cd4     B0 00 A0 FD | 	call	#pushregs_
04cd8     2D 69 02 F6 | 	mov	local01, arg01
04cdc     09 6B 0A FB | 	rdlong	local02, ptr___system__dat__ wz
04ce0     0C 00 90 5D |  if_ne	jmp	#LR__0214
04ce4     C2 01 00 FF 
04ce8     00 5A 06 F6 | 	mov	arg01, ##230400
04cec     54 FF BF FD | 	call	#__system___setbaud
04cf0                 | LR__0214
04cf0     00 68 0E F2 | 	cmp	local01, #0 wz
04cf4     18 00 90 AD |  if_e	jmp	#LR__0215
04cf8     14 6C 06 FB | 	rdlong	local03, #20
04cfc     0A 6C 46 F0 | 	shr	local03, #10
04d00     36 69 02 FD | 	qmul	local01, local03
04d04     18 6E 62 FD | 	getqx	local04
04d08     1A 70 62 FD | 	getct	local05
04d0c     37 71 02 F1 | 	add	local05, local04
04d10                 | LR__0215
04d10     01 72 66 F6 | 	neg	local06, #1
04d14     00 74 06 F6 | 	mov	local07, #0
04d18     04 12 06 F1 | 	add	ptr___system__dat__, #4
04d1c     09 77 02 FB | 	rdlong	local08, ptr___system__dat__
04d20     04 12 86 F1 | 	sub	ptr___system__dat__, #4
04d24                 | LR__0216
04d24     08 76 16 F4 | 	testb	local08, #8 wc
04d28     09 76 76 F4 | 	testbn	local08, #9 andc
04d2c     0A 76 46 F0 | 	shr	local08, #10
04d30     01 74 06 C6 |  if_b	mov	local07, #1
04d34     10 00 90 CD |  if_b	jmp	#LR__0217
04d38     40 7E 6C FD | 	testp	#63 wz
04d3c     01 74 06 A6 |  if_e	mov	local07, #1
04d40     3F 76 8E AA |  if_e	rdpin	local08, #63
04d44     04 76 46 A0 |  if_e	shr	local08, #4
04d48                 | LR__0217
04d48     00 6A 06 F6 | 	mov	local02, #0
04d4c     00 74 0E F2 | 	cmp	local07, #0 wz
04d50     01 6A 66 56 |  if_ne	neg	local02, #1
04d54     00 78 06 F6 | 	mov	local09, #0
04d58     00 7A 06 F6 | 	mov	local10, #0
04d5c     00 68 0E F2 | 	cmp	local01, #0 wz
04d60     01 7A 66 56 |  if_ne	neg	local10, #1
04d64     00 7C 06 F6 | 	mov	local11, #0
04d68     00 7E 06 F6 | 	mov	local12, #0
04d6c     1A 80 62 FD | 	getct	local13
04d70     38 81 82 F1 | 	sub	local13, local05
04d74     00 80 5E F2 | 	cmps	local13, #0 wcz
04d78     01 7E 66 C6 |  if_b	neg	local12, #1
04d7c     00 7E 0E F2 | 	cmp	local12, #0 wz
04d80     01 7C 66 56 |  if_ne	neg	local11, #1
04d84     3E 7B CA F7 | 	test	local10, local11 wz
04d88     01 78 66 56 |  if_ne	neg	local09, #1
04d8c     3C 6B 4A F5 | 	or	local02, local09 wz
04d90     90 FF 9F AD |  if_e	jmp	#LR__0216
04d94     00 74 0E F2 | 	cmp	local07, #0 wz
04d98     3B 73 02 56 |  if_ne	mov	local06, local08
04d9c     FF 72 06 55 |  if_ne	and	local06, #255
04da0     04 12 06 F1 | 	add	ptr___system__dat__, #4
04da4     09 77 62 FC | 	wrlong	local08, ptr___system__dat__
04da8     04 12 86 F1 | 	sub	ptr___system__dat__, #4
04dac     39 29 02 F6 | 	mov	result1, local06
04db0     AF F0 03 F6 | 	mov	ptra, fp
04db4     BF 00 A0 FD | 	call	#popregs_
04db8                 | __system___rxraw_ret
04db8     2D 00 64 FD | 	ret
04dbc                 | 
04dbc                 | __system____builtin_memmove
04dbc     2D 2F 02 F6 | 	mov	_var01, arg01
04dc0     2E 5B 5A F2 | 	cmps	arg01, arg02 wcz
04dc4     50 00 90 3D |  if_ae	jmp	#LR__0225
04dc8     54 B2 9F FE | 	loc	pa,	#(@LR__0219-@LR__0218)
04dcc     93 00 A0 FD | 	call	#FCACHE_LOAD_
04dd0                 | LR__0218
04dd0     03 5E 5E F2 | 	cmps	arg03, #3 wcz
04dd4     18 00 90 ED |  if_be	jmp	#LR__0220
04dd8     2E 31 02 FB | 	rdlong	_var02, arg02
04ddc     2D 31 62 FC | 	wrlong	_var02, arg01
04de0     04 5A 06 F1 | 	add	arg01, #4
04de4     04 5C 06 F1 | 	add	arg02, #4
04de8     04 5E 86 F1 | 	sub	arg03, #4
04dec     E0 FF 9F FD | 	jmp	#LR__0218
04df0                 | LR__0219
04df0                 | LR__0220
04df0     2F 33 0A F6 | 	mov	_var03, arg03 wz
04df4     4C 00 90 AD |  if_e	jmp	#LR__0231
04df8     18 B2 9F FE | 	loc	pa,	#(@LR__0223-@LR__0221)
04dfc     93 00 A0 FD | 	call	#FCACHE_LOAD_
04e00                 | LR__0221
04e00     19 09 D8 FC | 	rep	@LR__0224, _var03
04e04                 | LR__0222
04e04     2E 31 C2 FA | 	rdbyte	_var02, arg02
04e08     2D 31 42 FC | 	wrbyte	_var02, arg01
04e0c     01 5A 06 F1 | 	add	arg01, #1
04e10     01 5C 06 F1 | 	add	arg02, #1
04e14                 | LR__0223
04e14                 | LR__0224
04e14     2C 00 90 FD | 	jmp	#LR__0231
04e18                 | LR__0225
04e18     2F 5B 02 F1 | 	add	arg01, arg03
04e1c     2F 5D 02 F1 | 	add	arg02, arg03
04e20     2F 35 0A F6 | 	mov	_var04, arg03 wz
04e24     1C 00 90 AD |  if_e	jmp	#LR__0230
04e28     E8 B1 9F FE | 	loc	pa,	#(@LR__0228-@LR__0226)
04e2c     93 00 A0 FD | 	call	#FCACHE_LOAD_
04e30                 | LR__0226
04e30     1A 09 D8 FC | 	rep	@LR__0229, _var04
04e34                 | LR__0227
04e34     01 5A 86 F1 | 	sub	arg01, #1
04e38     01 5C 86 F1 | 	sub	arg02, #1
04e3c     2E 31 C2 FA | 	rdbyte	_var02, arg02
04e40     2D 31 42 FC | 	wrbyte	_var02, arg01
04e44                 | LR__0228
04e44                 | LR__0229
04e44                 | LR__0230
04e44                 | LR__0231
04e44     17 29 02 F6 | 	mov	result1, _var01
04e48                 | __system____builtin_memmove_ret
04e48     2D 00 64 FD | 	ret
04e4c                 | 
04e4c                 | __system__longmove
04e4c     2D 2F 02 F6 | 	mov	_var01, arg01
04e50     2E 5B 5A F2 | 	cmps	arg01, arg02 wcz
04e54     28 00 90 3D |  if_ae	jmp	#LR__0236
04e58     2F 31 0A F6 | 	mov	_var02, arg03 wz
04e5c     54 00 90 AD |  if_e	jmp	#LR__0242
04e60     B0 B1 9F FE | 	loc	pa,	#(@LR__0234-@LR__0232)
04e64     93 00 A0 FD | 	call	#FCACHE_LOAD_
04e68                 | LR__0232
04e68     18 09 D8 FC | 	rep	@LR__0235, _var02
04e6c                 | LR__0233
04e6c     2E 33 02 FB | 	rdlong	_var03, arg02
04e70     2D 33 62 FC | 	wrlong	_var03, arg01
04e74     04 5A 06 F1 | 	add	arg01, #4
04e78     04 5C 06 F1 | 	add	arg02, #4
04e7c                 | LR__0234
04e7c                 | LR__0235
04e7c     34 00 90 FD | 	jmp	#LR__0242
04e80                 | LR__0236
04e80     2F 35 02 F6 | 	mov	_var04, arg03
04e84     02 34 66 F0 | 	shl	_var04, #2
04e88     1A 5B 02 F1 | 	add	arg01, _var04
04e8c     1A 5D 02 F1 | 	add	arg02, _var04
04e90     2F 37 0A F6 | 	mov	_var05, arg03 wz
04e94     1C 00 90 AD |  if_e	jmp	#LR__0241
04e98     78 B1 9F FE | 	loc	pa,	#(@LR__0239-@LR__0237)
04e9c     93 00 A0 FD | 	call	#FCACHE_LOAD_
04ea0                 | LR__0237
04ea0     1B 09 D8 FC | 	rep	@LR__0240, _var05
04ea4                 | LR__0238
04ea4     04 5A 86 F1 | 	sub	arg01, #4
04ea8     04 5C 86 F1 | 	sub	arg02, #4
04eac     2E 33 02 FB | 	rdlong	_var03, arg02
04eb0     2D 33 62 FC | 	wrlong	_var03, arg01
04eb4                 | LR__0239
04eb4                 | LR__0240
04eb4                 | LR__0241
04eb4                 | LR__0242
04eb4     17 29 02 F6 | 	mov	result1, _var01
04eb8                 | __system__longmove_ret
04eb8     2D 00 64 FD | 	ret
04ebc                 | 
04ebc                 | __system____topofstack
04ebc     00 5A 05 F6 | 	mov	COUNT_, #0
04ec0     B0 00 A0 FD | 	call	#pushregs_
04ec4     0C F0 07 F1 | 	add	ptra, #12
04ec8     04 5E 05 F1 | 	add	fp, #4
04ecc     AF 5A 62 FC | 	wrlong	arg01, fp
04ed0     AF 28 02 F6 | 	mov	result1, fp
04ed4     04 5E 85 F1 | 	sub	fp, #4
04ed8     AF F0 03 F6 | 	mov	ptra, fp
04edc     BF 00 A0 FD | 	call	#popregs_
04ee0                 | __system____topofstack_ret
04ee0     2D 00 64 FD | 	ret
04ee4                 | 
04ee4                 | __system___make_methodptr
04ee4     04 5A 05 F6 | 	mov	COUNT_, #4
04ee8     B0 00 A0 FD | 	call	#pushregs_
04eec     2D 69 02 F6 | 	mov	local01, arg01
04ef0     2E 6B 02 F6 | 	mov	local02, arg02
04ef4     08 5A 06 F6 | 	mov	arg01, #8
04ef8     BC 05 B0 FD | 	call	#__system___gc_alloc_managed
04efc     14 6D 0A F6 | 	mov	local03, result1 wz
04f00     10 00 90 AD |  if_e	jmp	#LR__0243
04f04     36 69 62 FC | 	wrlong	local01, local03
04f08     36 6F 02 F6 | 	mov	local04, local03
04f0c     04 6E 06 F1 | 	add	local04, #4
04f10     37 6B 62 FC | 	wrlong	local02, local04
04f14                 | LR__0243
04f14     36 29 02 F6 | 	mov	result1, local03
04f18     AF F0 03 F6 | 	mov	ptra, fp
04f1c     BF 00 A0 FD | 	call	#popregs_
04f20                 | __system___make_methodptr_ret
04f20     2D 00 64 FD | 	ret
04f24                 | 
04f24                 | __system___lockmem
04f24     02 5A 05 F6 | 	mov	COUNT_, #2
04f28     B0 00 A0 FD | 	call	#pushregs_
04f2c     01 28 62 FD | 	cogid	result1
04f30     14 69 02 F6 | 	mov	local01, result1
04f34     00 69 06 F1 | 	add	local01, #256
04f38                 | LR__0244
04f38     2D 6B 0A FB | 	rdlong	local02, arg01 wz
04f3c     2D 69 62 AC |  if_e	wrlong	local01, arg01
04f40     2D 6B 02 AB |  if_e	rdlong	local02, arg01
04f44     2D 6B 02 AB |  if_e	rdlong	local02, arg01
04f48     34 6B 0A F2 | 	cmp	local02, local01 wz
04f4c     E8 FF 9F 5D |  if_ne	jmp	#LR__0244
04f50     AF F0 03 F6 | 	mov	ptra, fp
04f54     BF 00 A0 FD | 	call	#popregs_
04f58                 | __system___lockmem_ret
04f58     2D 00 64 FD | 	ret
04f5c                 | 
04f5c                 | __system___tx
04f5c     02 5A 05 F6 | 	mov	COUNT_, #2
04f60     B0 00 A0 FD | 	call	#pushregs_
04f64     2D 69 02 F6 | 	mov	local01, arg01
04f68     0A 68 0E F2 | 	cmp	local01, #10 wz
04f6c     20 00 90 5D |  if_ne	jmp	#LR__0245
04f70     08 12 06 F1 | 	add	ptr___system__dat__, #8
04f74     09 6B 02 FB | 	rdlong	local02, ptr___system__dat__
04f78     08 12 86 F1 | 	sub	ptr___system__dat__, #8
04f7c     02 6A CE F7 | 	test	local02, #2 wz
04f80     0C 00 90 AD |  if_e	jmp	#LR__0245
04f84     0D 6A 06 F6 | 	mov	local02, #13
04f88     0D 5A 06 F6 | 	mov	arg01, #13
04f8c     F8 FC BF FD | 	call	#__system___txraw
04f90                 | LR__0245
04f90     34 5B 02 F6 | 	mov	arg01, local01
04f94     F0 FC BF FD | 	call	#__system___txraw
04f98     AF F0 03 F6 | 	mov	ptra, fp
04f9c     BF 00 A0 FD | 	call	#popregs_
04fa0                 | __system___tx_ret
04fa0     2D 00 64 FD | 	ret
04fa4                 | 
04fa4                 | __system___rx
04fa4     02 5A 05 F6 | 	mov	COUNT_, #2
04fa8     B0 00 A0 FD | 	call	#pushregs_
04fac                 | LR__0246
04fac     00 5A 06 F6 | 	mov	arg01, #0
04fb0     1C FD BF FD | 	call	#__system___rxraw
04fb4     14 69 02 F6 | 	mov	local01, result1
04fb8     FF FF 7F FF 
04fbc     FF 69 0E F2 | 	cmp	local01, ##-1 wz
04fc0     E8 FF 9F AD |  if_e	jmp	#LR__0246
04fc4     0D 68 0E F2 | 	cmp	local01, #13 wz
04fc8     14 00 90 5D |  if_ne	jmp	#LR__0247
04fcc     08 12 06 F1 | 	add	ptr___system__dat__, #8
04fd0     09 6B 02 FB | 	rdlong	local02, ptr___system__dat__
04fd4     08 12 86 F1 | 	sub	ptr___system__dat__, #8
04fd8     02 6A CE F7 | 	test	local02, #2 wz
04fdc     0A 68 06 56 |  if_ne	mov	local01, #10
04fe0                 | LR__0247
04fe0     08 12 06 F1 | 	add	ptr___system__dat__, #8
04fe4     09 6B 02 FB | 	rdlong	local02, ptr___system__dat__
04fe8     08 12 86 F1 | 	sub	ptr___system__dat__, #8
04fec     01 6A CE F7 | 	test	local02, #1 wz
04ff0     1C 00 90 AD |  if_e	jmp	#LR__0250
04ff4     7F 68 0E F2 | 	cmp	local01, #127 wz
04ff8     0C 00 90 5D |  if_ne	jmp	#LR__0248
04ffc     08 5A 06 F6 | 	mov	arg01, #8
05000     58 FF BF FD | 	call	#__system___tx
05004     08 00 90 FD | 	jmp	#LR__0249
05008                 | LR__0248
05008     34 5B 02 F6 | 	mov	arg01, local01
0500c     4C FF BF FD | 	call	#__system___tx
05010                 | LR__0249
05010                 | LR__0250
05010     34 29 02 F6 | 	mov	result1, local01
05014     AF F0 03 F6 | 	mov	ptra, fp
05018     BF 00 A0 FD | 	call	#popregs_
0501c                 | __system___rx_ret
0501c     2D 00 64 FD | 	ret
05020                 | 
05020                 | __system___pinread
05020     20 5A CE F7 | 	test	arg01, #32 wz
05024     FF 2F 02 56 |  if_ne	mov	_var01, inb
05028     FE 2F 02 A6 |  if_e	mov	_var01, ina
0502c     17 29 02 F6 | 	mov	result1, _var01
05030     2D 29 42 F0 | 	shr	result1, arg01
05034     06 5A 46 F0 | 	shr	arg01, #6
05038     2D 29 42 F7 | 	zerox	result1, arg01
0503c                 | __system___pinread_ret
0503c     2D 00 64 FD | 	ret
05040                 | 
05040                 | __system___waitms
05040     03 5A 05 F6 | 	mov	COUNT_, #3
05044     B0 00 A0 FD | 	call	#pushregs_
05048     2D 69 02 F6 | 	mov	local01, arg01
0504c     14 6A 06 FB | 	rdlong	local02, #20
05050     C4 AF 9F FE | 	loc	pa,	#(@LR__0252-@LR__0251)
05054     93 00 A0 FD | 	call	#FCACHE_LOAD_
05058                 | LR__0251
05058     01 00 00 FF 
0505c     E8 69 5E F2 | 	cmps	local01, ##1000 wcz
05060     1F 6A 62 1D |  if_a	waitx	local02
05064     01 00 00 1F 
05068     E8 69 86 11 |  if_a	sub	local01, ##1000
0506c     E8 FF 9F 1D |  if_a	jmp	#LR__0251
05070                 | LR__0252
05070     0C 12 06 F1 | 	add	ptr___system__dat__, #12
05074     09 6D 0A FB | 	rdlong	local03, ptr___system__dat__ wz
05078     0C 12 86 F1 | 	sub	ptr___system__dat__, #12
0507c     20 00 90 5D |  if_ne	jmp	#LR__0253
05080     35 09 03 F6 | 	mov	muldiva_, local02
05084     01 00 00 FF 
05088     E8 0B 07 F6 | 	mov	muldivb_, ##1000
0508c     CC 00 A0 FD | 	call	#unsdivide_
05090     85 6D 02 F6 | 	mov	local03, muldivb_
05094     0C 12 06 F1 | 	add	ptr___system__dat__, #12
05098     09 0B 63 FC | 	wrlong	muldivb_, ptr___system__dat__
0509c     0C 12 86 F1 | 	sub	ptr___system__dat__, #12
050a0                 | LR__0253
050a0     00 68 5E F2 | 	cmps	local01, #0 wcz
050a4     36 69 02 1D |  if_a	qmul	local01, local03
050a8     18 5A 62 1D |  if_a	getqx	arg01
050ac     1F 5A 62 1D |  if_a	waitx	arg01
050b0     AF F0 03 F6 | 	mov	ptra, fp
050b4     BF 00 A0 FD | 	call	#popregs_
050b8                 | __system___waitms_ret
050b8     2D 00 64 FD | 	ret
050bc                 | 
050bc                 | __system___waitus
050bc     02 5A 05 F6 | 	mov	COUNT_, #2
050c0     B0 00 A0 FD | 	call	#pushregs_
050c4     2D 69 02 F6 | 	mov	local01, arg01
050c8     10 12 06 F1 | 	add	ptr___system__dat__, #16
050cc     09 6B 0A FB | 	rdlong	local02, ptr___system__dat__ wz
050d0     10 12 86 F1 | 	sub	ptr___system__dat__, #16
050d4     20 00 90 5D |  if_ne	jmp	#LR__0254
050d8     14 08 07 FB | 	rdlong	muldiva_, #20
050dc     A1 07 00 FF 
050e0     40 0A 07 F6 | 	mov	muldivb_, ##1000000
050e4     CC 00 A0 FD | 	call	#unsdivide_
050e8     85 6B 02 F6 | 	mov	local02, muldivb_
050ec     10 12 06 F1 | 	add	ptr___system__dat__, #16
050f0     09 0B 63 FC | 	wrlong	muldivb_, ptr___system__dat__
050f4     10 12 86 F1 | 	sub	ptr___system__dat__, #16
050f8                 | LR__0254
050f8     35 69 02 FD | 	qmul	local01, local02
050fc     18 5A 62 FD | 	getqx	arg01
05100     1F 5A 62 FD | 	waitx	arg01
05104     AF F0 03 F6 | 	mov	ptra, fp
05108     BF 00 A0 FD | 	call	#popregs_
0510c                 | __system___waitus_ret
0510c     2D 00 64 FD | 	ret
05110                 | 
05110                 | __system___basic_open
05110     05 5A 05 F6 | 	mov	COUNT_, #5
05114     B0 00 A0 FD | 	call	#pushregs_
05118     2E 69 02 F6 | 	mov	local01, arg02
0511c     2F 6B 02 F6 | 	mov	local02, arg03
05120     30 6D 02 F6 | 	mov	local03, arg04
05124     94 0B B0 FD | 	call	#__system____getftab
05128     14 6F 0A F6 | 	mov	local04, result1 wz
0512c     18 00 90 5D |  if_ne	jmp	#LR__0255
05130     03 5B 02 F6 | 	mov	arg01, abortchain
05134     0C 5C 06 F6 | 	mov	arg02, #12
05138     01 5E 06 F6 | 	mov	arg03, #1
0513c     F0 00 A0 FD | 	call	#__longjmp
05140     01 28 66 F6 | 	neg	result1, #1
05144     70 00 90 FD | 	jmp	#LR__0259
05148                 | LR__0255
05148     00 68 0E F2 | 	cmp	local01, #0 wz
0514c     48 00 90 AD |  if_e	jmp	#LR__0257
05150     04 5A 06 F6 | 	mov	arg01, #4
05154     60 03 B0 FD | 	call	#__system___gc_alloc_managed
05158     14 71 0A F6 | 	mov	local05, result1 wz
0515c     18 00 90 5D |  if_ne	jmp	#LR__0256
05160     03 5B 02 F6 | 	mov	arg01, abortchain
05164     07 5C 06 F6 | 	mov	arg02, #7
05168     01 5E 06 F6 | 	mov	arg03, #1
0516c     F0 00 A0 FD | 	call	#__longjmp
05170     01 28 66 F6 | 	neg	result1, #1
05174     40 00 90 FD | 	jmp	#LR__0259
05178                 | LR__0256
05178     38 69 62 FC | 	wrlong	local01, local05
0517c     08 5D 02 F6 | 	mov	arg02, ptr___struct___bas_wrap_sender_tx_
05180     38 5B 02 F6 | 	mov	arg01, local05
05184     5C FD BF FD | 	call	#__system___make_methodptr
05188     18 6E 06 F1 | 	add	local04, #24
0518c     37 29 62 FC | 	wrlong	result1, local04
05190     18 6E 86 F1 | 	sub	local04, #24
05194     0C 00 90 FD | 	jmp	#LR__0258
05198                 | LR__0257
05198     18 6E 06 F1 | 	add	local04, #24
0519c     37 69 62 FC | 	wrlong	local01, local04
051a0     18 6E 86 F1 | 	sub	local04, #24
051a4                 | LR__0258
051a4     1C 6E 06 F1 | 	add	local04, #28
051a8     37 6B 62 FC | 	wrlong	local02, local04
051ac     04 6E 06 F1 | 	add	local04, #4
051b0     37 6D 62 FC | 	wrlong	local03, local04
051b4     00 28 06 F6 | 	mov	result1, #0
051b8                 | LR__0259
051b8     AF F0 03 F6 | 	mov	ptra, fp
051bc     BF 00 A0 FD | 	call	#popregs_
051c0                 | __system___basic_open_ret
051c0     2D 00 64 FD | 	ret
051c4                 | 
051c4                 | __system___gc_ptrs
051c4     0A 5A 05 F6 | 	mov	COUNT_, #10
051c8     B0 00 A0 FD | 	call	#pushregs_
051cc     02 69 02 F6 | 	mov	local01, __heap_ptr
051d0     34 6B 02 F6 | 	mov	local02, local01
051d4     07 00 00 FF 
051d8     F8 6B 06 F1 | 	add	local02, ##4088
051dc     34 6D 0A FB | 	rdlong	local03, local01 wz
051e0     74 00 90 5D |  if_ne	jmp	#LR__0260
051e4     35 6F 02 F6 | 	mov	local04, local02
051e8     34 6F 82 F1 | 	sub	local04, local01
051ec     34 03 58 FC | 	wrword	#1, local01
051f0     34 71 02 F6 | 	mov	local05, local01
051f4     02 70 06 F1 | 	add	local05, #2
051f8     36 00 80 FF 
051fc     38 21 59 FC | 	wrword	##27792, local05
05200     34 73 02 F6 | 	mov	local06, local01
05204     04 72 06 F1 | 	add	local06, #4
05208     39 01 58 FC | 	wrword	#0, local06
0520c     34 75 02 F6 | 	mov	local07, local01
05210     06 74 06 F1 | 	add	local07, #6
05214     3A 03 58 FC | 	wrword	#1, local07
05218     10 68 06 F1 | 	add	local01, #16
0521c     37 6D 52 F6 | 	abs	local03, local04 wc
05220     04 6C 46 F0 | 	shr	local03, #4
05224     36 6D 62 C6 |  if_b	neg	local03, local03
05228     34 6D 52 FC | 	wrword	local03, local01
0522c     34 77 02 F6 | 	mov	local08, local01
05230     02 76 06 F1 | 	add	local08, #2
05234     36 00 80 FF 
05238     3B 1F 59 FC | 	wrword	##27791, local08
0523c     34 79 02 F6 | 	mov	local09, local01
05240     04 78 06 F1 | 	add	local09, #4
05244     3C 01 58 FC | 	wrword	#0, local09
05248     34 7B 02 F6 | 	mov	local10, local01
0524c     06 7A 06 F1 | 	add	local10, #6
05250     3D 01 58 FC | 	wrword	#0, local10
05254     10 68 86 F1 | 	sub	local01, #16
05258                 | LR__0260
05258     35 2B 02 F6 | 	mov	result2, local02
0525c     34 29 02 F6 | 	mov	result1, local01
05260     AF F0 03 F6 | 	mov	ptra, fp
05264     BF 00 A0 FD | 	call	#popregs_
05268                 | __system___gc_ptrs_ret
05268     2D 00 64 FD | 	ret
0526c                 | 
0526c                 | __system___gc_nextBlockPtr
0526c     02 5A 05 F6 | 	mov	COUNT_, #2
05270     B0 00 A0 FD | 	call	#pushregs_
05274     2D 69 02 F6 | 	mov	local01, arg01
05278     34 6B EA FA | 	rdword	local02, local01 wz
0527c     10 00 90 5D |  if_ne	jmp	#LR__0261
05280     33 00 00 FF 
05284     BC 5B 06 F6 | 	mov	arg01, ##@LR__0357
05288     F8 01 B0 FD | 	call	#__system___gc_errmsg
0528c     0C 00 90 FD | 	jmp	#LR__0262
05290                 | LR__0261
05290     04 6A 66 F0 | 	shl	local02, #4
05294     34 29 02 F6 | 	mov	result1, local01
05298     35 29 02 F1 | 	add	result1, local02
0529c                 | LR__0262
0529c     AF F0 03 F6 | 	mov	ptra, fp
052a0     BF 00 A0 FD | 	call	#popregs_
052a4                 | __system___gc_nextBlockPtr_ret
052a4     2D 00 64 FD | 	ret
052a8                 | 
052a8                 | __system___gc_tryalloc
052a8     1B 5A 05 F6 | 	mov	COUNT_, #27
052ac     B0 00 A0 FD | 	call	#pushregs_
052b0     2D 69 02 F6 | 	mov	local01, arg01
052b4     2E 6B 02 F6 | 	mov	local02, arg02
052b8     08 FF BF FD | 	call	#__system___gc_ptrs
052bc     14 6D 02 F6 | 	mov	local03, result1
052c0     15 6F 02 F6 | 	mov	local04, result2
052c4     36 71 02 F6 | 	mov	local05, local03
052c8     00 72 06 F6 | 	mov	local06, #0
052cc     88 AD 9F FE | 	loc	pa,	#(@LR__0264-@LR__0263)
052d0     93 00 A0 FD | 	call	#FCACHE_LOAD_
052d4                 | LR__0263
052d4     38 75 02 F6 | 	mov	local07, local05
052d8     06 70 06 F1 | 	add	local05, #6
052dc     38 77 02 F6 | 	mov	local08, local05
052e0     36 79 02 F6 | 	mov	local09, local03
052e4     3B 7B E2 FA | 	rdword	local10, local08
052e8     3C 5B 02 F6 | 	mov	arg01, local09
052ec     3D 5D 0A F6 | 	mov	arg02, local10 wz
052f0     00 28 06 A6 |  if_e	mov	result1, #0
052f4     04 5C 66 50 |  if_ne	shl	arg02, #4
052f8     2E 5B 02 51 |  if_ne	add	arg01, arg02
052fc     2D 29 02 56 |  if_ne	mov	result1, arg01
05300     14 7D 02 F6 | 	mov	local11, result1
05304     3E 71 0A F6 | 	mov	local05, local11 wz
05308     38 79 02 56 |  if_ne	mov	local09, local05
0530c     3C 7F 02 56 |  if_ne	mov	local12, local09
05310     3F 73 E2 5A |  if_ne	rdword	local06, local12
05314     00 70 0E F2 | 	cmp	local05, #0 wz
05318     10 00 90 AD |  if_e	jmp	#LR__0265
0531c     37 71 5A F2 | 	cmps	local05, local04 wcz
05320     08 00 90 3D |  if_ae	jmp	#LR__0265
05324     39 69 5A F2 | 	cmps	local01, local06 wcz
05328     A8 FF 9F 1D |  if_a	jmp	#LR__0263
0532c                 | LR__0264
0532c                 | LR__0265
0532c     00 70 0E F2 | 	cmp	local05, #0 wz
05330     38 29 02 A6 |  if_e	mov	result1, local05
05334     40 01 90 AD |  if_e	jmp	#LR__0268
05338     38 81 02 F6 | 	mov	local13, local05
0533c     06 80 06 F1 | 	add	local13, #6
05340     40 83 E2 FA | 	rdword	local14, local13
05344     39 69 5A F2 | 	cmps	local01, local06 wcz
05348     CC 00 90 3D |  if_ae	jmp	#LR__0267
0534c     38 85 02 F6 | 	mov	local15, local05
05350     42 69 52 FC | 	wrword	local01, local15
05354     34 87 02 F6 | 	mov	local16, local01
05358     04 86 66 F0 | 	shl	local16, #4
0535c     38 89 02 F6 | 	mov	local17, local05
05360     43 89 02 F1 | 	add	local17, local16
05364     39 8B 02 F6 | 	mov	local18, local06
05368     34 8B 82 F1 | 	sub	local18, local01
0536c     44 8D 02 F6 | 	mov	local19, local17
05370     46 8B 52 FC | 	wrword	local18, local19
05374     44 8F 02 F6 | 	mov	local20, local17
05378     02 8E 06 F1 | 	add	local20, #2
0537c     36 00 80 FF 
05380     47 1F 59 FC | 	wrword	##27791, local20
05384     44 91 02 F6 | 	mov	local21, local17
05388     04 90 06 F1 | 	add	local21, #4
0538c     38 5D 0A F6 | 	mov	arg02, local05 wz
05390     00 28 06 A6 |  if_e	mov	result1, #0
05394     36 5D 82 51 |  if_ne	sub	arg02, local03
05398     04 5C 46 50 |  if_ne	shr	arg02, #4
0539c     2E 29 02 56 |  if_ne	mov	result1, arg02
053a0     48 29 52 FC | 	wrword	result1, local21
053a4     44 93 02 F6 | 	mov	local22, local17
053a8     40 79 E2 FA | 	rdword	local09, local13
053ac     06 92 06 F1 | 	add	local22, #6
053b0     49 79 52 FC | 	wrword	local09, local22
053b4     44 95 02 F6 | 	mov	local23, local17
053b8     4A 5D 0A F6 | 	mov	arg02, local23 wz
053bc     00 28 06 A6 |  if_e	mov	result1, #0
053c0     36 5D 82 51 |  if_ne	sub	arg02, local03
053c4     04 5C 46 50 |  if_ne	shr	arg02, #4
053c8     2E 29 02 56 |  if_ne	mov	result1, arg02
053cc     14 83 02 F6 | 	mov	local14, result1
053d0     44 5B 02 F6 | 	mov	arg01, local17
053d4     94 FE BF FD | 	call	#__system___gc_nextBlockPtr
053d8     14 97 0A F6 | 	mov	local24, result1 wz
053dc     38 00 90 AD |  if_e	jmp	#LR__0266
053e0     37 97 5A F2 | 	cmps	local24, local04 wcz
053e4     30 00 90 3D |  if_ae	jmp	#LR__0266
053e8     4B 99 02 F6 | 	mov	local25, local24
053ec     04 98 06 F1 | 	add	local25, #4
053f0     36 79 02 F6 | 	mov	local09, local03
053f4     4A 7B 02 F6 | 	mov	local10, local23
053f8     3C 5B 02 F6 | 	mov	arg01, local09
053fc     3D 5D 0A F6 | 	mov	arg02, local10 wz
05400     00 28 06 A6 |  if_e	mov	result1, #0
05404     2D 5D 82 51 |  if_ne	sub	arg02, arg01
05408     04 5C 46 50 |  if_ne	shr	arg02, #4
0540c     2E 29 02 56 |  if_ne	mov	result1, arg02
05410     14 7D 02 F6 | 	mov	local11, result1
05414     4C 7D 52 FC | 	wrword	local11, local25
05418                 | LR__0266
05418                 | LR__0267
05418     06 74 06 F1 | 	add	local07, #6
0541c     3A 83 52 FC | 	wrword	local14, local07
05420     36 00 00 FF 
05424     80 78 06 F6 | 	mov	local09, ##27776
05428     35 79 42 F5 | 	or	local09, local02
0542c     38 9B 02 F6 | 	mov	local26, local05
05430     02 9A 06 F1 | 	add	local26, #2
05434     01 28 62 FD | 	cogid	result1
05438     14 79 42 F5 | 	or	local09, result1
0543c     4D 79 52 FC | 	wrword	local09, local26
05440     36 9D 02 F6 | 	mov	local27, local03
05444     08 9C 06 F1 | 	add	local27, #8
05448     4E 79 E2 FA | 	rdword	local09, local27
0544c     40 79 52 FC | 	wrword	local09, local13
05450     38 5D 0A F6 | 	mov	arg02, local05 wz
05454     00 28 06 A6 |  if_e	mov	result1, #0
05458     36 5D 82 51 |  if_ne	sub	arg02, local03
0545c     04 5C 46 50 |  if_ne	shr	arg02, #4
05460     2E 29 02 56 |  if_ne	mov	result1, arg02
05464     4E 29 52 FC | 	wrword	result1, local27
05468     08 70 06 F1 | 	add	local05, #8
0546c     38 29 02 F6 | 	mov	result1, local05
05470     00 C0 31 FF 
05474     00 28 46 F5 | 	or	result1, ##1669332992
05478                 | LR__0268
05478     AF F0 03 F6 | 	mov	ptra, fp
0547c     BF 00 A0 FD | 	call	#popregs_
05480                 | __system___gc_tryalloc_ret
05480     2D 00 64 FD | 	ret
05484                 | 
05484                 | __system___gc_errmsg
05484     02 5A 05 F6 | 	mov	COUNT_, #2
05488     B0 00 A0 FD | 	call	#pushregs_
0548c     2D 69 02 F6 | 	mov	local01, arg01
05490                 | LR__0269
05490     34 6B CA FA | 	rdbyte	local02, local01 wz
05494     01 68 06 F1 | 	add	local01, #1
05498     0C 00 90 AD |  if_e	jmp	#LR__0270
0549c     35 5B 02 F6 | 	mov	arg01, local02
054a0     B8 FA BF FD | 	call	#__system___tx
054a4     E8 FF 9F FD | 	jmp	#LR__0269
054a8                 | LR__0270
054a8     00 28 06 F6 | 	mov	result1, #0
054ac     AF F0 03 F6 | 	mov	ptra, fp
054b0     BF 00 A0 FD | 	call	#popregs_
054b4                 | __system___gc_errmsg_ret
054b4     2D 00 64 FD | 	ret
054b8                 | 
054b8                 | __system___gc_alloc_managed
054b8     02 5A 05 F6 | 	mov	COUNT_, #2
054bc     B0 00 A0 FD | 	call	#pushregs_
054c0     2D 69 02 F6 | 	mov	local01, arg01
054c4     00 5C 06 F6 | 	mov	arg02, #0
054c8     30 00 B0 FD | 	call	#__system___gc_doalloc
054cc     14 6B 0A F6 | 	mov	local02, result1 wz
054d0     18 00 90 5D |  if_ne	jmp	#LR__0271
054d4     00 68 5E F2 | 	cmps	local01, #0 wcz
054d8     10 00 90 ED |  if_be	jmp	#LR__0271
054dc     33 00 00 FF 
054e0     D8 5B 06 F6 | 	mov	arg01, ##@LR__0358
054e4     9C FF BF FD | 	call	#__system___gc_errmsg
054e8     04 00 90 FD | 	jmp	#LR__0272
054ec                 | LR__0271
054ec     35 29 02 F6 | 	mov	result1, local02
054f0                 | LR__0272
054f0     AF F0 03 F6 | 	mov	ptra, fp
054f4     BF 00 A0 FD | 	call	#popregs_
054f8                 | __system___gc_alloc_managed_ret
054f8     2D 00 64 FD | 	ret
054fc                 | 
054fc                 | __system___gc_doalloc
054fc     07 5A 05 F6 | 	mov	COUNT_, #7
05500     B0 00 A0 FD | 	call	#pushregs_
05504     2D 69 0A F6 | 	mov	local01, arg01 wz
05508     2E 6B 02 F6 | 	mov	local02, arg02
0550c     00 28 06 A6 |  if_e	mov	result1, #0
05510     8C 00 90 AD |  if_e	jmp	#LR__0280
05514     17 68 06 F1 | 	add	local01, #23
05518     0F 68 26 F5 | 	andn	local01, #15
0551c     04 68 46 F0 | 	shr	local01, #4
05520     14 12 06 F1 | 	add	ptr___system__dat__, #20
05524     09 6D 02 F6 | 	mov	local03, ptr___system__dat__
05528     36 5B 02 F6 | 	mov	arg01, local03
0552c     14 12 86 F1 | 	sub	ptr___system__dat__, #20
05530     F0 F9 BF FD | 	call	#__system___lockmem
05534     34 5B 02 F6 | 	mov	arg01, local01
05538     35 5D 02 F6 | 	mov	arg02, local02
0553c     68 FD BF FD | 	call	#__system___gc_tryalloc
05540     14 6F 0A F6 | 	mov	local04, result1 wz
05544     14 00 90 5D |  if_ne	jmp	#LR__0273
05548     10 03 B0 FD | 	call	#__system___gc_docollect
0554c     34 5B 02 F6 | 	mov	arg01, local01
05550     35 5D 02 F6 | 	mov	arg02, local02
05554     50 FD BF FD | 	call	#__system___gc_tryalloc
05558     14 6F 02 F6 | 	mov	local04, result1
0555c                 | LR__0273
0555c     36 01 68 FC | 	wrlong	#0, local03
05560     00 6E 0E F2 | 	cmp	local04, #0 wz
05564     34 00 90 AD |  if_e	jmp	#LR__0279
05568     04 68 66 F0 | 	shl	local01, #4
0556c     08 68 86 F1 | 	sub	local01, #8
05570     34 71 52 F6 | 	abs	local05, local01 wc
05574     02 70 46 F0 | 	shr	local05, #2
05578     38 71 62 C6 |  if_b	neg	local05, local05
0557c     38 73 0A F6 | 	mov	local06, local05 wz
05580     37 75 02 F6 | 	mov	local07, local04
05584     14 00 90 AD |  if_e	jmp	#LR__0278
05588     80 AA 9F FE | 	loc	pa,	#(@LR__0276-@LR__0274)
0558c     93 00 A0 FD | 	call	#FCACHE_LOAD_
05590                 | LR__0274
05590     39 05 D8 FC | 	rep	@LR__0277, local06
05594                 | LR__0275
05594     3A 01 68 FC | 	wrlong	#0, local07
05598     04 74 06 F1 | 	add	local07, #4
0559c                 | LR__0276
0559c                 | LR__0277
0559c                 | LR__0278
0559c                 | LR__0279
0559c     37 29 02 F6 | 	mov	result1, local04
055a0                 | LR__0280
055a0     AF F0 03 F6 | 	mov	ptra, fp
055a4     BF 00 A0 FD | 	call	#popregs_
055a8                 | __system___gc_doalloc_ret
055a8     2D 00 64 FD | 	ret
055ac                 | 
055ac                 | __system___gc_isvalidptr
055ac     2F 2F 02 F6 | 	mov	_var01, arg03
055b0     17 31 02 F6 | 	mov	_var02, _var01
055b4     00 F8 7F FF 
055b8     00 30 06 F5 | 	and	_var02, ##-1048576
055bc     00 C0 31 FF 
055c0     00 30 0E F2 | 	cmp	_var02, ##1669332992 wz
055c4     00 28 06 56 |  if_ne	mov	result1, #0
055c8     60 00 90 5D |  if_ne	jmp	#__system___gc_isvalidptr_ret
055cc     08 2E 86 F1 | 	sub	_var01, #8
055d0     17 33 02 F6 | 	mov	_var03, _var01
055d4     00 F8 7F FF 
055d8     00 32 26 F5 | 	andn	_var03, ##-1048576
055dc     2D 33 5A F2 | 	cmps	_var03, arg01 wcz
055e0     08 00 90 CD |  if_b	jmp	#LR__0281
055e4     2E 33 5A F2 | 	cmps	_var03, arg02 wcz
055e8     08 00 90 CD |  if_b	jmp	#LR__0282
055ec                 | LR__0281
055ec     00 28 06 F6 | 	mov	result1, #0
055f0     38 00 90 FD | 	jmp	#__system___gc_isvalidptr_ret
055f4                 | LR__0282
055f4     19 31 02 F6 | 	mov	_var02, _var03
055f8     2D 31 62 F5 | 	xor	_var02, arg01
055fc     0F 30 0E F5 | 	and	_var02, #15 wz
05600     00 28 06 56 |  if_ne	mov	result1, #0
05604     24 00 90 5D |  if_ne	jmp	#__system___gc_isvalidptr_ret
05608     19 35 02 F6 | 	mov	_var04, _var03
0560c     02 34 06 F1 | 	add	_var04, #2
05610     1A 31 E2 FA | 	rdword	_var02, _var04
05614     7F 00 00 FF 
05618     C0 31 06 F5 | 	and	_var02, ##65472
0561c     36 00 00 FF 
05620     80 30 0E F2 | 	cmp	_var02, ##27776 wz
05624     00 28 06 56 |  if_ne	mov	result1, #0
05628     19 29 02 A6 |  if_e	mov	result1, _var03
0562c                 | __system___gc_isvalidptr_ret
0562c     2D 00 64 FD | 	ret
05630                 | 
05630                 | __system___gc_dofree
05630     1A 5A 05 F6 | 	mov	COUNT_, #26
05634     B0 00 A0 FD | 	call	#pushregs_
05638     2D 69 02 F6 | 	mov	local01, arg01
0563c     84 FB BF FD | 	call	#__system___gc_ptrs
05640     15 6B 02 F6 | 	mov	local02, result2
05644     14 6D 02 F6 | 	mov	local03, result1
05648     34 6F 02 F6 | 	mov	local04, local01
0564c     02 6E 06 F1 | 	add	local04, #2
05650     36 00 80 FF 
05654     37 1F 59 FC | 	wrword	##27791, local04
05658     34 71 02 F6 | 	mov	local05, local01
0565c     34 5B 02 F6 | 	mov	arg01, local01
05660     08 FC BF FD | 	call	#__system___gc_nextBlockPtr
05664     14 73 02 F6 | 	mov	local06, result1
05668     E4 A9 9F FE | 	loc	pa,	#(@LR__0284-@LR__0283)
0566c     93 00 A0 FD | 	call	#FCACHE_LOAD_
05670                 | LR__0283
05670     04 70 06 F1 | 	add	local05, #4
05674     38 75 02 F6 | 	mov	local07, local05
05678     3A 5D EA FA | 	rdword	arg02, local07 wz
0567c     36 5B 02 F6 | 	mov	arg01, local03
05680     00 28 06 A6 |  if_e	mov	result1, #0
05684     04 5C 66 50 |  if_ne	shl	arg02, #4
05688     2E 5B 02 51 |  if_ne	add	arg01, arg02
0568c     2D 29 02 56 |  if_ne	mov	result1, arg01
05690     14 71 0A F6 | 	mov	local05, result1 wz
05694     28 00 90 AD |  if_e	jmp	#LR__0285
05698     38 5B 02 F6 | 	mov	arg01, local05
0569c     00 76 06 F6 | 	mov	local08, #0
056a0     02 5A 06 F1 | 	add	arg01, #2
056a4     2D 79 E2 FA | 	rdword	local09, arg01
056a8     36 00 00 FF 
056ac     8F 78 0E F2 | 	cmp	local09, ##27791 wz
056b0     01 76 66 A6 |  if_e	neg	local08, #1
056b4     3B 29 02 F6 | 	mov	result1, local08
056b8     14 7B 0A F6 | 	mov	local10, result1 wz
056bc     B0 FF 9F AD |  if_e	jmp	#LR__0283
056c0                 | LR__0284
056c0                 | LR__0285
056c0     00 70 0E F2 | 	cmp	local05, #0 wz
056c4     36 71 02 A6 |  if_e	mov	local05, local03
056c8     38 7D 02 F6 | 	mov	local11, local05
056cc     06 7C 06 F1 | 	add	local11, #6
056d0     34 7F 02 F6 | 	mov	local12, local01
056d4     3E 81 E2 FA | 	rdword	local13, local11
056d8     06 7E 06 F1 | 	add	local12, #6
056dc     3F 81 52 FC | 	wrword	local13, local12
056e0     34 5D 0A F6 | 	mov	arg02, local01 wz
056e4     00 28 06 A6 |  if_e	mov	result1, #0
056e8     36 5D 82 51 |  if_ne	sub	arg02, local03
056ec     04 5C 46 50 |  if_ne	shr	arg02, #4
056f0     2E 29 02 56 |  if_ne	mov	result1, arg02
056f4     14 83 02 F6 | 	mov	local14, result1
056f8     3E 83 52 FC | 	wrword	local14, local11
056fc     36 71 0A F2 | 	cmp	local05, local03 wz
05700     74 00 90 AD |  if_e	jmp	#LR__0288
05704     38 5B 02 F6 | 	mov	arg01, local05
05708     60 FB BF FD | 	call	#__system___gc_nextBlockPtr
0570c     34 29 0A F2 | 	cmp	result1, local01 wz
05710     64 00 90 5D |  if_ne	jmp	#LR__0287
05714     38 85 02 F6 | 	mov	local15, local05
05718     42 87 E2 FA | 	rdword	local16, local15
0571c     34 89 02 F6 | 	mov	local17, local01
05720     44 7B E2 FA | 	rdword	local10, local17
05724     3D 87 02 F1 | 	add	local16, local10
05728     42 87 52 FC | 	wrword	local16, local15
0572c     37 01 58 FC | 	wrword	#0, local04
05730     34 5B 02 F6 | 	mov	arg01, local01
05734     34 FB BF FD | 	call	#__system___gc_nextBlockPtr
05738     14 73 02 F6 | 	mov	local06, result1
0573c     35 73 5A F2 | 	cmps	local06, local02 wcz
05740     24 00 90 3D |  if_ae	jmp	#LR__0286
05744     39 8B 02 F6 | 	mov	local18, local06
05748     04 8A 06 F1 | 	add	local18, #4
0574c     38 5D 0A F6 | 	mov	arg02, local05 wz
05750     00 28 06 A6 |  if_e	mov	result1, #0
05754     36 5D 82 51 |  if_ne	sub	arg02, local03
05758     04 5C 46 50 |  if_ne	shr	arg02, #4
0575c     2E 29 02 56 |  if_ne	mov	result1, arg02
05760     14 83 02 F6 | 	mov	local14, result1
05764     45 83 52 FC | 	wrword	local14, local18
05768                 | LR__0286
05768     3F 81 E2 FA | 	rdword	local13, local12
0576c     3E 81 52 FC | 	wrword	local13, local11
05770     3F 01 58 FC | 	wrword	#0, local12
05774     38 69 02 F6 | 	mov	local01, local05
05778                 | LR__0287
05778                 | LR__0288
05778     34 5B 02 F6 | 	mov	arg01, local01
0577c     EC FA BF FD | 	call	#__system___gc_nextBlockPtr
05780     14 8D 0A F6 | 	mov	local19, result1 wz
05784     C4 00 90 AD |  if_e	jmp	#LR__0290
05788     35 8D 5A F2 | 	cmps	local19, local02 wcz
0578c     BC 00 90 3D |  if_ae	jmp	#LR__0290
05790     46 5B 02 F6 | 	mov	arg01, local19
05794     00 76 06 F6 | 	mov	local08, #0
05798     02 5A 06 F1 | 	add	arg01, #2
0579c     2D 79 E2 FA | 	rdword	local09, arg01
057a0     36 00 00 FF 
057a4     8F 78 0E F2 | 	cmp	local09, ##27791 wz
057a8     01 76 66 A6 |  if_e	neg	local08, #1
057ac     3B 29 0A F6 | 	mov	result1, local08 wz
057b0     98 00 90 AD |  if_e	jmp	#LR__0290
057b4     34 71 02 F6 | 	mov	local05, local01
057b8     46 69 02 F6 | 	mov	local01, local19
057bc     38 8F 02 F6 | 	mov	local20, local05
057c0     47 91 E2 FA | 	rdword	local21, local20
057c4     34 93 02 F6 | 	mov	local22, local01
057c8     49 7B E2 FA | 	rdword	local10, local22
057cc     3D 91 02 F1 | 	add	local21, local10
057d0     47 91 52 FC | 	wrword	local21, local20
057d4     34 95 02 F6 | 	mov	local23, local01
057d8     06 94 06 F1 | 	add	local23, #6
057dc     38 97 02 F6 | 	mov	local24, local05
057e0     4A 81 E2 FA | 	rdword	local13, local23
057e4     06 96 06 F1 | 	add	local24, #6
057e8     4B 81 52 FC | 	wrword	local13, local24
057ec     34 99 02 F6 | 	mov	local25, local01
057f0     02 98 06 F1 | 	add	local25, #2
057f4     4C 55 59 FC | 	wrword	#170, local25
057f8     4A 01 58 FC | 	wrword	#0, local23
057fc     34 81 02 F6 | 	mov	local13, local01
05800     40 5B 02 F6 | 	mov	arg01, local13
05804     64 FA BF FD | 	call	#__system___gc_nextBlockPtr
05808     14 7B 02 F6 | 	mov	local10, result1
0580c     3D 73 0A F6 | 	mov	local06, local10 wz
05810     38 00 90 AD |  if_e	jmp	#LR__0289
05814     35 73 5A F2 | 	cmps	local06, local02 wcz
05818     30 00 90 3D |  if_ae	jmp	#LR__0289
0581c     39 9B 02 F6 | 	mov	local26, local06
05820     04 9A 06 F1 | 	add	local26, #4
05824     36 81 02 F6 | 	mov	local13, local03
05828     38 7B 02 F6 | 	mov	local10, local05
0582c     40 5B 02 F6 | 	mov	arg01, local13
05830     3D 5D 0A F6 | 	mov	arg02, local10 wz
05834     00 28 06 A6 |  if_e	mov	result1, #0
05838     2D 5D 82 51 |  if_ne	sub	arg02, arg01
0583c     04 5C 46 50 |  if_ne	shr	arg02, #4
05840     2E 29 02 56 |  if_ne	mov	result1, arg02
05844     14 83 02 F6 | 	mov	local14, result1
05848     4D 83 52 FC | 	wrword	local14, local26
0584c                 | LR__0289
0584c                 | LR__0290
0584c     39 29 02 F6 | 	mov	result1, local06
05850     AF F0 03 F6 | 	mov	ptra, fp
05854     BF 00 A0 FD | 	call	#popregs_
05858                 | __system___gc_dofree_ret
05858     2D 00 64 FD | 	ret
0585c                 | 
0585c                 | __system___gc_docollect
0585c     0C 5A 05 F6 | 	mov	COUNT_, #12
05860     B0 00 A0 FD | 	call	#pushregs_
05864     5C F9 BF FD | 	call	#__system___gc_ptrs
05868     15 69 02 F6 | 	mov	local01, result2
0586c     14 6B 02 F6 | 	mov	local02, result1
05870     35 5B 02 F6 | 	mov	arg01, local02
05874     F4 F9 BF FD | 	call	#__system___gc_nextBlockPtr
05878     14 6D 0A F6 | 	mov	local03, result1 wz
0587c     01 28 62 FD | 	cogid	result1
05880     14 6F 02 F6 | 	mov	local04, result1
05884     2C 00 90 AD |  if_e	jmp	#LR__0292
05888                 | LR__0291
05888     34 6D 5A F2 | 	cmps	local03, local01 wcz
0588c     24 00 90 3D |  if_ae	jmp	#LR__0292
05890     36 71 02 F6 | 	mov	local05, local03
05894     02 70 06 F1 | 	add	local05, #2
05898     38 73 E2 FA | 	rdword	local06, local05
0589c     20 72 26 F5 | 	andn	local06, #32
058a0     38 73 52 FC | 	wrword	local06, local05
058a4     36 5B 02 F6 | 	mov	arg01, local03
058a8     C0 F9 BF FD | 	call	#__system___gc_nextBlockPtr
058ac     14 6D 0A F6 | 	mov	local03, result1 wz
058b0     D4 FF 9F 5D |  if_ne	jmp	#LR__0291
058b4                 | LR__0292
058b4     00 74 06 F6 | 	mov	local07, #0
058b8     00 5A 06 F6 | 	mov	arg01, #0
058bc     FC F5 BF FD | 	call	#__system____topofstack
058c0     14 77 02 F6 | 	mov	local08, result1
058c4     3A 5B 02 F6 | 	mov	arg01, local07
058c8     3B 5D 02 F6 | 	mov	arg02, local08
058cc     A0 00 B0 FD | 	call	#__system___gc_markhub
058d0     2C 01 B0 FD | 	call	#__system___gc_markcog
058d4     35 5B 02 F6 | 	mov	arg01, local02
058d8     90 F9 BF FD | 	call	#__system___gc_nextBlockPtr
058dc     14 79 0A F6 | 	mov	local09, result1 wz
058e0     10 00 90 5D |  if_ne	jmp	#LR__0293
058e4     33 00 00 FF 
058e8     F5 5B 06 F6 | 	mov	arg01, ##@LR__0359
058ec     94 FB BF FD | 	call	#__system___gc_errmsg
058f0     70 00 90 FD | 	jmp	#LR__0299
058f4                 | LR__0293
058f4                 | LR__0294
058f4     3C 6D 02 F6 | 	mov	local03, local09
058f8     36 5B 02 F6 | 	mov	arg01, local03
058fc     6C F9 BF FD | 	call	#__system___gc_nextBlockPtr
05900     14 79 02 F6 | 	mov	local09, result1
05904     36 7B 02 F6 | 	mov	local10, local03
05908     02 7A 06 F1 | 	add	local10, #2
0590c     3D 7D E2 FA | 	rdword	local11, local10
05910     20 7C CE F7 | 	test	local11, #32 wz
05914     3C 00 90 5D |  if_ne	jmp	#LR__0297
05918     3E 7F 02 F6 | 	mov	local12, local11
0591c     10 7E 0E F5 | 	and	local12, #16 wz
05920     30 00 90 5D |  if_ne	jmp	#LR__0297
05924     3E 75 02 F6 | 	mov	local07, local11
05928     0F 74 06 F5 | 	and	local07, #15
0592c     3A 7D 02 F6 | 	mov	local11, local07
05930     37 7D 0A F2 | 	cmp	local11, local04 wz
05934     08 00 90 AD |  if_e	jmp	#LR__0295
05938     0E 7C 0E F2 | 	cmp	local11, #14 wz
0593c     14 00 90 5D |  if_ne	jmp	#LR__0296
05940                 | LR__0295
05940     36 75 02 F6 | 	mov	local07, local03
05944     3A 5B 02 F6 | 	mov	arg01, local07
05948     E4 FC BF FD | 	call	#__system___gc_dofree
0594c     14 7F 02 F6 | 	mov	local12, result1
05950     3F 79 02 F6 | 	mov	local09, local12
05954                 | LR__0296
05954                 | LR__0297
05954     00 78 0E F2 | 	cmp	local09, #0 wz
05958     08 00 90 AD |  if_e	jmp	#LR__0298
0595c     34 79 5A F2 | 	cmps	local09, local01 wcz
05960     90 FF 9F CD |  if_b	jmp	#LR__0294
05964                 | LR__0298
05964                 | LR__0299
05964     AF F0 03 F6 | 	mov	ptra, fp
05968     BF 00 A0 FD | 	call	#popregs_
0596c                 | __system___gc_docollect_ret
0596c     2D 00 64 FD | 	ret
05970                 | 
05970                 | __system___gc_markhub
05970     0A 5A 05 F6 | 	mov	COUNT_, #10
05974     B0 00 A0 FD | 	call	#pushregs_
05978     2D 69 02 F6 | 	mov	local01, arg01
0597c     2E 6B 02 F6 | 	mov	local02, arg02
05980     40 F8 BF FD | 	call	#__system___gc_ptrs
05984     14 6D 02 F6 | 	mov	local03, result1
05988     15 6F 02 F6 | 	mov	local04, result2
0598c                 | LR__0300
0598c     35 69 5A F2 | 	cmps	local01, local02 wcz
05990     60 00 90 3D |  if_ae	jmp	#LR__0301
05994     34 5F 02 FB | 	rdlong	arg03, local01
05998     04 68 06 F1 | 	add	local01, #4
0599c     36 5B 02 F6 | 	mov	arg01, local03
059a0     37 5D 02 F6 | 	mov	arg02, local04
059a4     04 FC BF FD | 	call	#__system___gc_isvalidptr
059a8     14 71 0A F6 | 	mov	local05, result1 wz
059ac     DC FF 9F AD |  if_e	jmp	#LR__0300
059b0     38 5B 02 F6 | 	mov	arg01, local05
059b4     00 72 06 F6 | 	mov	local06, #0
059b8     02 5A 06 F1 | 	add	arg01, #2
059bc     2D 75 E2 FA | 	rdword	local07, arg01
059c0     36 00 00 FF 
059c4     8F 74 0E F2 | 	cmp	local07, ##27791 wz
059c8     01 72 66 A6 |  if_e	neg	local06, #1
059cc     39 29 02 F6 | 	mov	result1, local06
059d0     14 77 0A F6 | 	mov	local08, result1 wz
059d4     B4 FF 9F 5D |  if_ne	jmp	#LR__0300
059d8     38 79 02 F6 | 	mov	local09, local05
059dc     02 78 06 F1 | 	add	local09, #2
059e0     3C 7B E2 FA | 	rdword	local10, local09
059e4     0F 7A 26 F5 | 	andn	local10, #15
059e8     2E 7A 46 F5 | 	or	local10, #46
059ec     3C 7B 52 FC | 	wrword	local10, local09
059f0     98 FF 9F FD | 	jmp	#LR__0300
059f4                 | LR__0301
059f4     AF F0 03 F6 | 	mov	ptra, fp
059f8     BF 00 A0 FD | 	call	#popregs_
059fc                 | __system___gc_markhub_ret
059fc     2D 00 64 FD | 	ret
05a00                 | 
05a00                 | __system___gc_markcog
05a00     06 5A 05 F6 | 	mov	COUNT_, #6
05a04     B0 00 A0 FD | 	call	#pushregs_
05a08     B8 F7 BF FD | 	call	#__system___gc_ptrs
05a0c     14 69 02 F6 | 	mov	local01, result1
05a10     15 6B 02 F6 | 	mov	local02, result2
05a14     00 6C 06 F6 | 	mov	local03, #0
05a18                 | LR__0302
05a18     F0 6F 06 F6 | 	mov	local04, #496
05a1c     36 6F 82 F1 | 	sub	local04, local03
05a20     F0 6F 06 F1 | 	add	local04, #496
05a24                 | 	'.live	local04
05a24     00 6E 96 F9 | 	alts	local04, #0
05a28     37 71 02 F6 | 	mov	local05, local04
05a2c     35 5D 02 F6 | 	mov	arg02, local02
05a30     34 5B 02 F6 | 	mov	arg01, local01
05a34     38 5F 02 F6 | 	mov	arg03, local05
05a38     70 FB BF FD | 	call	#__system___gc_isvalidptr
05a3c     14 71 0A F6 | 	mov	local05, result1 wz
05a40     10 00 90 AD |  if_e	jmp	#LR__0303
05a44     02 70 06 F1 | 	add	local05, #2
05a48     38 73 E2 FA | 	rdword	local06, local05
05a4c     20 72 46 F5 | 	or	local06, #32
05a50     38 73 52 FC | 	wrword	local06, local05
05a54                 | LR__0303
05a54     01 6C 06 F1 | 	add	local03, #1
05a58     F0 6D 5E F2 | 	cmps	local03, #496 wcz
05a5c     B8 FF 9F CD |  if_b	jmp	#LR__0302
05a60     AF F0 03 F6 | 	mov	ptra, fp
05a64     BF 00 A0 FD | 	call	#popregs_
05a68                 | __system___gc_markcog_ret
05a68     2D 00 64 FD | 	ret
05a6c                 | 
05a6c                 | __system__write
05a6c     03 5A 05 F6 | 	mov	COUNT_, #3
05a70     B0 00 A0 FD | 	call	#pushregs_
05a74     2D 69 02 F6 | 	mov	local01, arg01
05a78     2E 6B 02 F6 | 	mov	local02, arg02
05a7c     2F 6D 02 F6 | 	mov	local03, arg03
05a80     0A 68 1E F2 | 	cmp	local01, #10 wcz
05a84     1C 00 90 CD |  if_b	jmp	#LR__0304
05a88     01 00 00 FF 
05a8c     5C 12 06 F1 | 	add	ptr___system__dat__, ##604
05a90     09 0B 68 FC | 	wrlong	#5, ptr___system__dat__
05a94     01 00 00 FF 
05a98     5C 12 86 F1 | 	sub	ptr___system__dat__, ##604
05a9c     01 28 66 F6 | 	neg	result1, #1
05aa0     28 00 90 FD | 	jmp	#LR__0305
05aa4                 | LR__0304
05aa4     34 5B 02 F6 | 	mov	arg01, local01
05aa8     01 5A 66 F0 | 	shl	arg01, #1
05aac     34 5B 02 F1 | 	add	arg01, local01
05ab0     04 5A 66 F0 | 	shl	arg01, #4
05ab4     1C 12 06 F1 | 	add	ptr___system__dat__, #28
05ab8     09 5B 02 F1 | 	add	arg01, ptr___system__dat__
05abc     35 5D 02 F6 | 	mov	arg02, local02
05ac0     36 5F 02 F6 | 	mov	arg03, local03
05ac4     1C 12 86 F1 | 	sub	ptr___system__dat__, #28
05ac8     20 07 B0 FD | 	call	#__system___vfswrite
05acc                 | LR__0305
05acc     AF F0 03 F6 | 	mov	ptra, fp
05ad0     BF 00 A0 FD | 	call	#popregs_
05ad4                 | __system__write_ret
05ad4     2D 00 64 FD | 	ret
05ad8                 | 
05ad8                 | __system__read
05ad8     03 5A 05 F6 | 	mov	COUNT_, #3
05adc     B0 00 A0 FD | 	call	#pushregs_
05ae0     2D 69 02 F6 | 	mov	local01, arg01
05ae4     2E 6B 02 F6 | 	mov	local02, arg02
05ae8     2F 6D 02 F6 | 	mov	local03, arg03
05aec     0A 68 1E F2 | 	cmp	local01, #10 wcz
05af0     1C 00 90 CD |  if_b	jmp	#LR__0306
05af4     01 00 00 FF 
05af8     5C 12 06 F1 | 	add	ptr___system__dat__, ##604
05afc     09 0B 68 FC | 	wrlong	#5, ptr___system__dat__
05b00     01 00 00 FF 
05b04     5C 12 86 F1 | 	sub	ptr___system__dat__, ##604
05b08     01 28 66 F6 | 	neg	result1, #1
05b0c     28 00 90 FD | 	jmp	#LR__0307
05b10                 | LR__0306
05b10     34 5B 02 F6 | 	mov	arg01, local01
05b14     01 5A 66 F0 | 	shl	arg01, #1
05b18     34 5B 02 F1 | 	add	arg01, local01
05b1c     04 5A 66 F0 | 	shl	arg01, #4
05b20     1C 12 06 F1 | 	add	ptr___system__dat__, #28
05b24     09 5B 02 F1 | 	add	arg01, ptr___system__dat__
05b28     35 5D 02 F6 | 	mov	arg02, local02
05b2c     36 5F 02 F6 | 	mov	arg03, local03
05b30     1C 12 86 F1 | 	sub	ptr___system__dat__, #28
05b34     78 08 B0 FD | 	call	#__system___vfsread
05b38                 | LR__0307
05b38     AF F0 03 F6 | 	mov	ptra, fp
05b3c     BF 00 A0 FD | 	call	#popregs_
05b40                 | __system__read_ret
05b40     2D 00 64 FD | 	ret
05b44                 | 
05b44                 | __system__close
05b44     01 5A 05 F6 | 	mov	COUNT_, #1
05b48     B0 00 A0 FD | 	call	#pushregs_
05b4c     2D 69 02 F6 | 	mov	local01, arg01
05b50     0A 68 1E F2 | 	cmp	local01, #10 wcz
05b54     1C 00 90 CD |  if_b	jmp	#LR__0308
05b58     01 00 00 FF 
05b5c     5C 12 06 F1 | 	add	ptr___system__dat__, ##604
05b60     09 0B 68 FC | 	wrlong	#5, ptr___system__dat__
05b64     01 00 00 FF 
05b68     5C 12 86 F1 | 	sub	ptr___system__dat__, ##604
05b6c     01 28 66 F6 | 	neg	result1, #1
05b70     20 00 90 FD | 	jmp	#LR__0309
05b74                 | LR__0308
05b74     34 5B 02 F6 | 	mov	arg01, local01
05b78     01 5A 66 F0 | 	shl	arg01, #1
05b7c     34 5B 02 F1 | 	add	arg01, local01
05b80     04 5A 66 F0 | 	shl	arg01, #4
05b84     1C 12 06 F1 | 	add	ptr___system__dat__, #28
05b88     09 5B 02 F1 | 	add	arg01, ptr___system__dat__
05b8c     1C 12 86 F1 | 	sub	ptr___system__dat__, #28
05b90     54 01 B0 FD | 	call	#__system___closeraw
05b94                 | LR__0309
05b94     AF F0 03 F6 | 	mov	ptra, fp
05b98     BF 00 A0 FD | 	call	#popregs_
05b9c                 | __system__close_ret
05b9c     2D 00 64 FD | 	ret
05ba0                 | 
05ba0                 | __system__lseek
05ba0     09 5A 05 F6 | 	mov	COUNT_, #9
05ba4     B0 00 A0 FD | 	call	#pushregs_
05ba8     2D 69 02 F6 | 	mov	local01, arg01
05bac     2E 6B 02 F6 | 	mov	local02, arg02
05bb0     2F 6D 02 F6 | 	mov	local03, arg03
05bb4     0A 68 1E F2 | 	cmp	local01, #10 wcz
05bb8     1C 00 90 CD |  if_b	jmp	#LR__0310
05bbc     01 00 00 FF 
05bc0     5C 12 06 F1 | 	add	ptr___system__dat__, ##604
05bc4     09 0B 68 FC | 	wrlong	#5, ptr___system__dat__
05bc8     01 00 00 FF 
05bcc     5C 12 86 F1 | 	sub	ptr___system__dat__, ##604
05bd0     01 28 66 F6 | 	neg	result1, #1
05bd4     D8 00 90 FD | 	jmp	#LR__0314
05bd8                 | LR__0310
05bd8     34 6F 02 F6 | 	mov	local04, local01
05bdc     01 6E 66 F0 | 	shl	local04, #1
05be0     34 6F 02 F1 | 	add	local04, local01
05be4     04 6E 66 F0 | 	shl	local04, #4
05be8     1C 12 06 F1 | 	add	ptr___system__dat__, #28
05bec     09 6F 02 F1 | 	add	local04, ptr___system__dat__
05bf0     2C 6E 06 F1 | 	add	local04, #44
05bf4     37 71 0A FB | 	rdlong	local05, local04 wz
05bf8     2C 6E 86 F1 | 	sub	local04, #44
05bfc     1C 12 86 F1 | 	sub	ptr___system__dat__, #28
05c00     1C 00 90 5D |  if_ne	jmp	#LR__0311
05c04     01 00 00 FF 
05c08     5C 12 06 F1 | 	add	ptr___system__dat__, ##604
05c0c     09 21 68 FC | 	wrlong	#16, ptr___system__dat__
05c10     01 00 00 FF 
05c14     5C 12 86 F1 | 	sub	ptr___system__dat__, ##604
05c18     01 28 66 F6 | 	neg	result1, #1
05c1c     90 00 90 FD | 	jmp	#LR__0314
05c20                 | LR__0311
05c20     08 6E 06 F1 | 	add	local04, #8
05c24     37 71 02 FB | 	rdlong	local05, local04
05c28     08 6E 86 F1 | 	sub	local04, #8
05c2c     40 70 CE F7 | 	test	local05, #64 wz
05c30     14 00 90 AD |  if_e	jmp	#LR__0312
05c34     08 6E 06 F1 | 	add	local04, #8
05c38     37 71 02 FB | 	rdlong	local05, local04
05c3c     80 70 46 F5 | 	or	local05, #128
05c40     37 71 62 FC | 	wrlong	local05, local04
05c44     08 6E 86 F1 | 	sub	local04, #8
05c48                 | LR__0312
05c48     2C 6E 06 F1 | 	add	local04, #44
05c4c     37 71 02 FB | 	rdlong	local05, local04
05c50     2C 6E 86 F1 | 	sub	local04, #44
05c54     38 73 02 FB | 	rdlong	local06, local05
05c58     04 70 06 F1 | 	add	local05, #4
05c5c     38 75 02 FB | 	rdlong	local07, local05
05c60     37 5B 02 F6 | 	mov	arg01, local04
05c64     35 5D 02 F6 | 	mov	arg02, local02
05c68     36 5F 02 F6 | 	mov	arg03, local03
05c6c     07 77 02 F6 | 	mov	local08, objptr
05c70     39 0F 02 F6 | 	mov	objptr, local06
05c74     2D 74 62 FD | 	call	local07
05c78     3B 0F 02 F6 | 	mov	objptr, local08
05c7c     14 79 02 F6 | 	mov	local09, result1
05c80     00 78 5E F2 | 	cmps	local09, #0 wcz
05c84     24 00 90 3D |  if_ae	jmp	#LR__0313
05c88     3C 5B 6A F6 | 	neg	arg01, local09 wz
05c8c     01 00 00 FF 
05c90     5C 12 06 F1 | 	add	ptr___system__dat__, ##604
05c94     09 5B 62 FC | 	wrlong	arg01, ptr___system__dat__
05c98     01 00 00 FF 
05c9c     5C 12 86 F1 | 	sub	ptr___system__dat__, ##604
05ca0     01 28 66 56 |  if_ne	neg	result1, #1
05ca4     00 28 06 A6 |  if_e	mov	result1, #0
05ca8     04 00 90 FD | 	jmp	#LR__0314
05cac                 | LR__0313
05cac     3C 29 02 F6 | 	mov	result1, local09
05cb0                 | LR__0314
05cb0     AF F0 03 F6 | 	mov	ptra, fp
05cb4     BF 00 A0 FD | 	call	#popregs_
05cb8                 | __system__lseek_ret
05cb8     2D 00 64 FD | 	ret
05cbc                 | 
05cbc                 | __system____getftab
05cbc     0A 5A 1E F2 | 	cmp	arg01, #10 wcz
05cc0     00 28 06 36 |  if_ae	mov	result1, #0
05cc4     1C 00 90 3D |  if_ae	jmp	#__system____getftab_ret
05cc8     2D 29 02 F6 | 	mov	result1, arg01
05ccc     01 28 66 F0 | 	shl	result1, #1
05cd0     2D 29 02 F1 | 	add	result1, arg01
05cd4     04 28 66 F0 | 	shl	result1, #4
05cd8     1C 12 06 F1 | 	add	ptr___system__dat__, #28
05cdc     09 29 02 F1 | 	add	result1, ptr___system__dat__
05ce0     1C 12 86 F1 | 	sub	ptr___system__dat__, #28
05ce4                 | __system____getftab_ret
05ce4     2D 00 64 FD | 	ret
05ce8                 | 
05ce8                 | __system___closeraw
05ce8     06 5A 05 F6 | 	mov	COUNT_, #6
05cec     B0 00 A0 FD | 	call	#pushregs_
05cf0     2D 69 02 F6 | 	mov	local01, arg01
05cf4     00 6A 06 F6 | 	mov	local02, #0
05cf8     08 68 06 F1 | 	add	local01, #8
05cfc     34 6D 0A FB | 	rdlong	local03, local01 wz
05d00     08 68 86 F1 | 	sub	local01, #8
05d04     1C 00 90 5D |  if_ne	jmp	#LR__0315
05d08     01 00 00 FF 
05d0c     5C 12 06 F1 | 	add	ptr___system__dat__, ##604
05d10     09 0B 68 FC | 	wrlong	#5, ptr___system__dat__
05d14     01 00 00 FF 
05d18     5C 12 86 F1 | 	sub	ptr___system__dat__, ##604
05d1c     01 28 66 F6 | 	neg	result1, #1
05d20     90 00 90 FD | 	jmp	#LR__0318
05d24                 | LR__0315
05d24     28 68 06 F1 | 	add	local01, #40
05d28     34 6D 0A FB | 	rdlong	local03, local01 wz
05d2c     28 68 86 F1 | 	sub	local01, #40
05d30     2C 00 90 AD |  if_e	jmp	#LR__0316
05d34     28 68 06 F1 | 	add	local01, #40
05d38     34 6D 02 FB | 	rdlong	local03, local01
05d3c     28 68 86 F1 | 	sub	local01, #40
05d40     36 6F 02 FB | 	rdlong	local04, local03
05d44     04 6C 06 F1 | 	add	local03, #4
05d48     36 71 02 FB | 	rdlong	local05, local03
05d4c     34 5B 02 F6 | 	mov	arg01, local01
05d50     07 73 02 F6 | 	mov	local06, objptr
05d54     37 0F 02 F6 | 	mov	objptr, local04
05d58     2D 70 62 FD | 	call	local05
05d5c     39 0F 02 F6 | 	mov	objptr, local06
05d60                 | LR__0316
05d60     20 68 06 F1 | 	add	local01, #32
05d64     34 6D 0A FB | 	rdlong	local03, local01 wz
05d68     20 68 86 F1 | 	sub	local01, #32
05d6c     30 00 90 AD |  if_e	jmp	#LR__0317
05d70     20 68 06 F1 | 	add	local01, #32
05d74     34 6D 02 FB | 	rdlong	local03, local01
05d78     20 68 86 F1 | 	sub	local01, #32
05d7c     36 6F 02 FB | 	rdlong	local04, local03
05d80     04 6C 06 F1 | 	add	local03, #4
05d84     36 71 02 FB | 	rdlong	local05, local03
05d88     34 5B 02 F6 | 	mov	arg01, local01
05d8c     07 73 02 F6 | 	mov	local06, objptr
05d90     37 0F 02 F6 | 	mov	objptr, local04
05d94     2D 70 62 FD | 	call	local05
05d98     39 0F 02 F6 | 	mov	objptr, local06
05d9c     14 6B 02 F6 | 	mov	local02, result1
05da0                 | LR__0317
05da0     34 5B 02 F6 | 	mov	arg01, local01
05da4     00 5C 06 F6 | 	mov	arg02, #0
05da8     30 5E 06 F6 | 	mov	arg03, #48
05dac     A0 00 A0 FD | 	call	#\builtin_bytefill_
05db0     35 29 02 F6 | 	mov	result1, local02
05db4                 | LR__0318
05db4     AF F0 03 F6 | 	mov	ptra, fp
05db8     BF 00 A0 FD | 	call	#popregs_
05dbc                 | __system___closeraw_ret
05dbc     2D 00 64 FD | 	ret
05dc0                 | 
05dc0                 | __system____default_getc
05dc0     0C 5A 05 F6 | 	mov	COUNT_, #12
05dc4     B0 00 A0 FD | 	call	#pushregs_
05dc8     2D 69 02 F6 | 	mov	local01, arg01
05dcc     34 6B 02 FB | 	rdlong	local02, local01
05dd0     08 6A 06 F1 | 	add	local02, #8
05dd4     35 6D 02 FB | 	rdlong	local03, local02
05dd8     08 6A 86 F1 | 	sub	local02, #8
05ddc     02 6C CE F7 | 	test	local03, #2 wz
05de0     08 00 90 AD |  if_e	jmp	#LR__0319
05de4     34 5B 02 F6 | 	mov	arg01, local01
05de8     FC 01 B0 FD | 	call	#__system____default_flush
05dec                 | LR__0319
05dec     08 6A 06 F1 | 	add	local02, #8
05df0     35 6D 02 FB | 	rdlong	local03, local02
05df4     01 6C 46 F5 | 	or	local03, #1
05df8     35 6D 62 FC | 	wrlong	local03, local02
05dfc     08 6A 86 F1 | 	sub	local02, #8
05e00     35 6F 0A FB | 	rdlong	local04, local02 wz
05e04     7C 00 90 5D |  if_ne	jmp	#LR__0321
05e08     34 5B 02 F6 | 	mov	arg01, local01
05e0c     2D 71 02 FB | 	rdlong	local05, arg01
05e10     0C 70 06 F1 | 	add	local05, #12
05e14     38 5D 02 F6 | 	mov	arg02, local05
05e18     0C 70 86 F1 | 	sub	local05, #12
05e1c     10 5A 06 F1 | 	add	arg01, #16
05e20     2D 73 02 FB | 	rdlong	local06, arg01
05e24     10 5A 86 F1 | 	sub	arg01, #16
05e28     39 75 02 FB | 	rdlong	local07, local06
05e2c     04 72 06 F1 | 	add	local06, #4
05e30     39 77 02 FB | 	rdlong	local08, local06
05e34     0A 5E C6 F9 | 	decod	arg03, #10
05e38     07 79 02 F6 | 	mov	local09, objptr
05e3c     3A 0F 02 F6 | 	mov	objptr, local07
05e40     2D 76 62 FD | 	call	local08
05e44     3C 0F 02 F6 | 	mov	objptr, local09
05e48     14 7B 02 F6 | 	mov	local10, result1
05e4c     00 7A 5E F2 | 	cmps	local10, #0 wcz
05e50     01 28 66 C6 |  if_b	neg	result1, #1
05e54     28 00 90 CD |  if_b	jmp	#LR__0320
05e58     38 7B 62 FC | 	wrlong	local10, local05
05e5c     0C 70 06 F1 | 	add	local05, #12
05e60     38 7D 02 F6 | 	mov	local11, local05
05e64     08 70 86 F1 | 	sub	local05, #8
05e68     38 7D 62 FC | 	wrlong	local11, local05
05e6c     04 70 06 F1 | 	add	local05, #4
05e70     38 73 02 FB | 	rdlong	local06, local05
05e74     01 72 46 F5 | 	or	local06, #1
05e78     38 73 62 FC | 	wrlong	local06, local05
05e7c     3D 29 02 F6 | 	mov	result1, local10
05e80                 | LR__0320
05e80     14 6F 02 F6 | 	mov	local04, result1
05e84                 | LR__0321
05e84     00 6E 5E F2 | 	cmps	local04, #0 wcz
05e88     01 28 66 E6 |  if_be	neg	result1, #1
05e8c     1C 00 90 ED |  if_be	jmp	#LR__0322
05e90     01 6E 86 F1 | 	sub	local04, #1
05e94     35 6F 62 FC | 	wrlong	local04, local02
05e98     04 6A 06 F1 | 	add	local02, #4
05e9c     35 7F 02 FB | 	rdlong	local12, local02
05ea0     3F 29 C2 FA | 	rdbyte	result1, local12
05ea4     01 7E 06 F1 | 	add	local12, #1
05ea8     35 7F 62 FC | 	wrlong	local12, local02
05eac                 | LR__0322
05eac     AF F0 03 F6 | 	mov	ptra, fp
05eb0     BF 00 A0 FD | 	call	#popregs_
05eb4                 | __system____default_getc_ret
05eb4     2D 00 64 FD | 	ret
05eb8                 | 
05eb8                 | __system____default_putc
05eb8     06 5A 05 F6 | 	mov	COUNT_, #6
05ebc     B0 00 A0 FD | 	call	#pushregs_
05ec0     2D 69 02 F6 | 	mov	local01, arg01
05ec4     2E 6B 02 F6 | 	mov	local02, arg02
05ec8     35 6D 02 FB | 	rdlong	local03, local02
05ecc     08 6C 06 F1 | 	add	local03, #8
05ed0     36 6F 02 FB | 	rdlong	local04, local03
05ed4     08 6C 86 F1 | 	sub	local03, #8
05ed8     01 6E CE F7 | 	test	local04, #1 wz
05edc     08 00 90 AD |  if_e	jmp	#LR__0323
05ee0     35 5B 02 F6 | 	mov	arg01, local02
05ee4     00 01 B0 FD | 	call	#__system____default_flush
05ee8                 | LR__0323
05ee8     08 6C 06 F1 | 	add	local03, #8
05eec     36 6F 02 FB | 	rdlong	local04, local03
05ef0     02 6E 46 F5 | 	or	local04, #2
05ef4     36 6F 62 FC | 	wrlong	local04, local03
05ef8     08 6C 86 F1 | 	sub	local03, #8
05efc     36 71 02 FB | 	rdlong	local05, local03
05f00     38 73 02 F6 | 	mov	local06, local05
05f04     0C 6C 06 F1 | 	add	local03, #12
05f08     36 73 02 F1 | 	add	local06, local03
05f0c     39 69 42 FC | 	wrbyte	local01, local06
05f10     FF 68 06 F5 | 	and	local01, #255
05f14     01 70 06 F1 | 	add	local05, #1
05f18     0C 6C 86 F1 | 	sub	local03, #12
05f1c     36 71 62 FC | 	wrlong	local05, local03
05f20     02 00 00 FF 
05f24     00 70 0E F2 | 	cmp	local05, ##1024 wz
05f28     10 00 90 5D |  if_ne	jmp	#LR__0324
05f2c     35 5B 02 F6 | 	mov	arg01, local02
05f30     B4 00 B0 FD | 	call	#__system____default_flush
05f34     00 28 0E F2 | 	cmp	result1, #0 wz
05f38     01 68 66 56 |  if_ne	neg	local01, #1
05f3c                 | LR__0324
05f3c     34 29 02 F6 | 	mov	result1, local01
05f40     AF F0 03 F6 | 	mov	ptra, fp
05f44     BF 00 A0 FD | 	call	#popregs_
05f48                 | __system____default_putc_ret
05f48     2D 00 64 FD | 	ret
05f4c                 | 
05f4c                 | __system____default_putc_terminal
05f4c     06 5A 05 F6 | 	mov	COUNT_, #6
05f50     B0 00 A0 FD | 	call	#pushregs_
05f54     2D 69 02 F6 | 	mov	local01, arg01
05f58     2E 6B 02 F6 | 	mov	local02, arg02
05f5c     35 6D 02 FB | 	rdlong	local03, local02
05f60     08 6C 06 F1 | 	add	local03, #8
05f64     36 6F 02 FB | 	rdlong	local04, local03
05f68     08 6C 86 F1 | 	sub	local03, #8
05f6c     01 6E CE F7 | 	test	local04, #1 wz
05f70     08 00 90 AD |  if_e	jmp	#LR__0325
05f74     35 5B 02 F6 | 	mov	arg01, local02
05f78     6C 00 B0 FD | 	call	#__system____default_flush
05f7c                 | LR__0325
05f7c     08 6C 06 F1 | 	add	local03, #8
05f80     36 6F 02 FB | 	rdlong	local04, local03
05f84     02 6E 46 F5 | 	or	local04, #2
05f88     36 6F 62 FC | 	wrlong	local04, local03
05f8c     08 6C 86 F1 | 	sub	local03, #8
05f90     36 71 02 FB | 	rdlong	local05, local03
05f94     38 73 02 F6 | 	mov	local06, local05
05f98     0C 6C 06 F1 | 	add	local03, #12
05f9c     36 73 02 F1 | 	add	local06, local03
05fa0     39 69 42 FC | 	wrbyte	local01, local06
05fa4     FF 68 06 F5 | 	and	local01, #255
05fa8     0C 6C 86 F1 | 	sub	local03, #12
05fac     01 70 06 F1 | 	add	local05, #1
05fb0     36 71 62 FC | 	wrlong	local05, local03
05fb4     0A 68 0E F2 | 	cmp	local01, #10 wz
05fb8     0C 00 90 AD |  if_e	jmp	#LR__0326
05fbc     02 00 00 FF 
05fc0     00 70 0E F2 | 	cmp	local05, ##1024 wz
05fc4     10 00 90 5D |  if_ne	jmp	#LR__0327
05fc8                 | LR__0326
05fc8     35 5B 02 F6 | 	mov	arg01, local02
05fcc     18 00 B0 FD | 	call	#__system____default_flush
05fd0     00 28 0E F2 | 	cmp	result1, #0 wz
05fd4     01 68 66 56 |  if_ne	neg	local01, #1
05fd8                 | LR__0327
05fd8     34 29 02 F6 | 	mov	result1, local01
05fdc     AF F0 03 F6 | 	mov	ptra, fp
05fe0     BF 00 A0 FD | 	call	#popregs_
05fe4                 | __system____default_putc_terminal_ret
05fe4     2D 00 64 FD | 	ret
05fe8                 | 
05fe8                 | __system____default_flush
05fe8     0F 5A 05 F6 | 	mov	COUNT_, #15
05fec     B0 00 A0 FD | 	call	#pushregs_
05ff0     2D 69 02 F6 | 	mov	local01, arg01
05ff4     34 6B 02 FB | 	rdlong	local02, local01
05ff8     35 6D 02 FB | 	rdlong	local03, local02
05ffc     08 6A 06 F1 | 	add	local02, #8
06000     35 6F 02 FB | 	rdlong	local04, local02
06004     08 6A 86 F1 | 	sub	local02, #8
06008     02 6E CE F7 | 	test	local04, #2 wz
0600c     B8 00 90 AD |  if_e	jmp	#LR__0330
06010     00 6C 5E F2 | 	cmps	local03, #0 wcz
06014     30 01 90 ED |  if_be	jmp	#LR__0332
06018     08 68 06 F1 | 	add	local01, #8
0601c     34 6F 02 FB | 	rdlong	local04, local01
06020     08 68 86 F1 | 	sub	local01, #8
06024     40 6E CE F7 | 	test	local04, #64 wz
06028     5C 00 90 AD |  if_e	jmp	#LR__0329
0602c     08 68 06 F1 | 	add	local01, #8
06030     34 6F 02 FB | 	rdlong	local04, local01
06034     08 68 86 F1 | 	sub	local01, #8
06038     80 6E CE F7 | 	test	local04, #128 wz
0603c     48 00 90 AD |  if_e	jmp	#LR__0328
06040     2C 68 06 F1 | 	add	local01, #44
06044     34 6F 02 FB | 	rdlong	local04, local01
06048     2C 68 86 F1 | 	sub	local01, #44
0604c     37 71 02 FB | 	rdlong	local05, local04
06050     04 6E 06 F1 | 	add	local04, #4
06054     37 73 02 FB | 	rdlong	local06, local04
06058     34 5B 02 F6 | 	mov	arg01, local01
0605c     00 5C 06 F6 | 	mov	arg02, #0
06060     02 5E 06 F6 | 	mov	arg03, #2
06064     07 75 02 F6 | 	mov	local07, objptr
06068     38 0F 02 F6 | 	mov	objptr, local05
0606c     2D 72 62 FD | 	call	local06
06070     3A 0F 02 F6 | 	mov	objptr, local07
06074     08 68 06 F1 | 	add	local01, #8
06078     34 6F 02 FB | 	rdlong	local04, local01
0607c     80 6E 26 F5 | 	andn	local04, #128
06080     34 6F 62 FC | 	wrlong	local04, local01
06084     08 68 86 F1 | 	sub	local01, #8
06088                 | LR__0328
06088                 | LR__0329
06088     0C 6A 06 F1 | 	add	local02, #12
0608c     35 5D 02 F6 | 	mov	arg02, local02
06090     0C 6A 86 F1 | 	sub	local02, #12
06094     14 68 06 F1 | 	add	local01, #20
06098     34 6F 02 FB | 	rdlong	local04, local01
0609c     14 68 86 F1 | 	sub	local01, #20
060a0     37 71 02 FB | 	rdlong	local05, local04
060a4     04 6E 06 F1 | 	add	local04, #4
060a8     37 73 02 FB | 	rdlong	local06, local04
060ac     34 5B 02 F6 | 	mov	arg01, local01
060b0     36 5F 02 F6 | 	mov	arg03, local03
060b4     07 75 02 F6 | 	mov	local07, objptr
060b8     38 0F 02 F6 | 	mov	objptr, local05
060bc     2D 72 62 FD | 	call	local06
060c0     3A 0F 02 F6 | 	mov	objptr, local07
060c4     80 00 90 FD | 	jmp	#LR__0332
060c8                 | LR__0330
060c8     08 6A 06 F1 | 	add	local02, #8
060cc     35 6F 02 FB | 	rdlong	local04, local02
060d0     08 6A 86 F1 | 	sub	local02, #8
060d4     01 6E CE F7 | 	test	local04, #1 wz
060d8     6C 00 90 AD |  if_e	jmp	#LR__0331
060dc     00 6C 0E F2 | 	cmp	local03, #0 wz
060e0     64 00 90 AD |  if_e	jmp	#LR__0331
060e4     2C 68 06 F1 | 	add	local01, #44
060e8     34 77 02 FB | 	rdlong	local08, local01
060ec     2C 68 86 F1 | 	sub	local01, #44
060f0     3B 6F 02 F6 | 	mov	local04, local08
060f4     37 71 02 FB | 	rdlong	local05, local04
060f8     04 6E 06 F1 | 	add	local04, #4
060fc     37 79 02 FB | 	rdlong	local09, local04
06100     04 6E 86 F1 | 	sub	local04, #4
06104     3C 73 02 F6 | 	mov	local06, local09
06108     34 7B 02 F6 | 	mov	local10, local01
0610c     36 7D 02 F6 | 	mov	local11, local03
06110     3E 7D 62 F6 | 	neg	local11, local11
06114     3E 7F 02 F6 | 	mov	local12, local11
06118     01 74 06 F6 | 	mov	local07, #1
0611c     3D 5B 02 F6 | 	mov	arg01, local10
06120     3F 5D 02 F6 | 	mov	arg02, local12
06124     01 5E 06 F6 | 	mov	arg03, #1
06128     07 81 02 F6 | 	mov	local13, objptr
0612c     38 0F 02 F6 | 	mov	objptr, local05
06130     2D 72 62 FD | 	call	local06
06134     40 0F 02 F6 | 	mov	objptr, local13
06138     14 83 02 F6 | 	mov	local14, result1
0613c     41 85 02 F6 | 	mov	local15, local14
06140     00 84 5E F2 | 	cmps	local15, #0 wcz
06144     36 85 02 36 |  if_ae	mov	local15, local03
06148                 | LR__0331
06148                 | LR__0332
06148     35 01 68 FC | 	wrlong	#0, local02
0614c     04 6A 06 F1 | 	add	local02, #4
06150     35 01 68 FC | 	wrlong	#0, local02
06154     04 6A 06 F1 | 	add	local02, #4
06158     35 01 68 FC | 	wrlong	#0, local02
0615c     00 28 06 F6 | 	mov	result1, #0
06160     AF F0 03 F6 | 	mov	ptra, fp
06164     BF 00 A0 FD | 	call	#popregs_
06168                 | __system____default_flush_ret
06168     2D 00 64 FD | 	ret
0616c                 | 
0616c                 | __system___rxtxioctl_0174
0616c     02 5A 05 F6 | 	mov	COUNT_, #2
06170     B0 00 A0 FD | 	call	#pushregs_
06174     2E 69 02 F6 | 	mov	local01, arg02
06178     2F 6B 02 F6 | 	mov	local02, arg03
0617c     00 69 0E F2 | 	cmp	local01, #256 wz
06180     0C 00 90 AD |  if_e	jmp	#LR__0333
06184     01 69 0E F2 | 	cmp	local01, #257 wz
06188     1C 00 90 AD |  if_e	jmp	#LR__0334
0618c     30 00 90 FD | 	jmp	#LR__0335
06190                 | LR__0333
06190     08 12 06 F1 | 	add	ptr___system__dat__, #8
06194     09 29 02 FB | 	rdlong	result1, ptr___system__dat__
06198     08 12 86 F1 | 	sub	ptr___system__dat__, #8
0619c     35 29 62 FC | 	wrlong	result1, local02
061a0     00 28 06 F6 | 	mov	result1, #0
061a4     30 00 90 FD | 	jmp	#LR__0336
061a8                 | LR__0334
061a8     35 5B 02 FB | 	rdlong	arg01, local02
061ac     08 12 06 F1 | 	add	ptr___system__dat__, #8
061b0     09 5B 62 FC | 	wrlong	arg01, ptr___system__dat__
061b4     08 12 86 F1 | 	sub	ptr___system__dat__, #8
061b8     00 28 06 F6 | 	mov	result1, #0
061bc     18 00 90 FD | 	jmp	#LR__0336
061c0                 | LR__0335
061c0     01 00 00 FF 
061c4     5C 12 06 F1 | 	add	ptr___system__dat__, ##604
061c8     09 15 68 FC | 	wrlong	#10, ptr___system__dat__
061cc     01 00 00 FF 
061d0     5C 12 86 F1 | 	sub	ptr___system__dat__, ##604
061d4     01 28 66 F6 | 	neg	result1, #1
061d8                 | LR__0336
061d8     AF F0 03 F6 | 	mov	ptra, fp
061dc     BF 00 A0 FD | 	call	#popregs_
061e0                 | __system___rxtxioctl_0174_ret
061e0     2D 00 64 FD | 	ret
061e4                 | 
061e4                 | __system____dummy_flush_0175
061e4     00 28 06 F6 | 	mov	result1, #0
061e8                 | __system____dummy_flush_0175_ret
061e8     2D 00 64 FD | 	ret
061ec                 | 
061ec                 | __system___vfswrite
061ec     0B 5A 05 F6 | 	mov	COUNT_, #11
061f0     B0 00 A0 FD | 	call	#pushregs_
061f4     2D 69 02 F6 | 	mov	local01, arg01
061f8     2E 6B 02 F6 | 	mov	local02, arg02
061fc     2F 6D 02 F6 | 	mov	local03, arg03
06200     35 6F 02 F6 | 	mov	local04, local02
06204     08 68 06 F1 | 	add	local01, #8
06208     34 71 02 FB | 	rdlong	local05, local01
0620c     08 68 86 F1 | 	sub	local01, #8
06210     02 70 CE F7 | 	test	local05, #2 wz
06214     1C 00 90 5D |  if_ne	jmp	#LR__0337
06218     01 00 00 FF 
0621c     5C 12 06 F1 | 	add	ptr___system__dat__, ##604
06220     09 0D 68 FC | 	wrlong	#6, ptr___system__dat__
06224     01 00 00 FF 
06228     5C 12 86 F1 | 	sub	ptr___system__dat__, ##604
0622c     01 28 66 F6 | 	neg	result1, #1
06230     70 01 90 FD | 	jmp	#LR__0345
06234                 | LR__0337
06234     08 68 06 F1 | 	add	local01, #8
06238     34 71 02 FB | 	rdlong	local05, local01
0623c     08 68 86 F1 | 	sub	local01, #8
06240     40 70 CE F7 | 	test	local05, #64 wz
06244     5C 00 90 AD |  if_e	jmp	#LR__0339
06248     08 68 06 F1 | 	add	local01, #8
0624c     34 71 02 FB | 	rdlong	local05, local01
06250     08 68 86 F1 | 	sub	local01, #8
06254     80 70 CE F7 | 	test	local05, #128 wz
06258     48 00 90 AD |  if_e	jmp	#LR__0338
0625c     2C 68 06 F1 | 	add	local01, #44
06260     34 71 02 FB | 	rdlong	local05, local01
06264     2C 68 86 F1 | 	sub	local01, #44
06268     38 73 02 FB | 	rdlong	local06, local05
0626c     04 70 06 F1 | 	add	local05, #4
06270     38 75 02 FB | 	rdlong	local07, local05
06274     34 5B 02 F6 | 	mov	arg01, local01
06278     00 5C 06 F6 | 	mov	arg02, #0
0627c     02 5E 06 F6 | 	mov	arg03, #2
06280     07 77 02 F6 | 	mov	local08, objptr
06284     39 0F 02 F6 | 	mov	objptr, local06
06288     2D 74 62 FD | 	call	local07
0628c     3B 0F 02 F6 | 	mov	objptr, local08
06290     08 68 06 F1 | 	add	local01, #8
06294     34 71 02 FB | 	rdlong	local05, local01
06298     80 70 26 F5 | 	andn	local05, #128
0629c     34 71 62 FC | 	wrlong	local05, local01
062a0     08 68 86 F1 | 	sub	local01, #8
062a4                 | LR__0338
062a4                 | LR__0339
062a4     14 68 06 F1 | 	add	local01, #20
062a8     34 71 0A FB | 	rdlong	local05, local01 wz
062ac     14 68 86 F1 | 	sub	local01, #20
062b0     7C 00 90 AD |  if_e	jmp	#LR__0341
062b4     14 68 06 F1 | 	add	local01, #20
062b8     34 71 02 FB | 	rdlong	local05, local01
062bc     14 68 86 F1 | 	sub	local01, #20
062c0     38 73 02 FB | 	rdlong	local06, local05
062c4     04 70 06 F1 | 	add	local05, #4
062c8     38 75 02 FB | 	rdlong	local07, local05
062cc     35 5D 02 F6 | 	mov	arg02, local02
062d0     36 5F 02 F6 | 	mov	arg03, local03
062d4     34 5B 02 F6 | 	mov	arg01, local01
062d8     07 77 02 F6 | 	mov	local08, objptr
062dc     39 0F 02 F6 | 	mov	objptr, local06
062e0     2D 74 62 FD | 	call	local07
062e4     3B 0F 02 F6 | 	mov	objptr, local08
062e8     14 79 02 F6 | 	mov	local09, result1
062ec     00 78 5E F2 | 	cmps	local09, #0 wcz
062f0     34 00 90 3D |  if_ae	jmp	#LR__0340
062f4     08 68 06 F1 | 	add	local01, #8
062f8     34 71 02 FB | 	rdlong	local05, local01
062fc     20 70 46 F5 | 	or	local05, #32
06300     34 71 62 FC | 	wrlong	local05, local01
06304     01 00 00 FF 
06308     5C 12 06 F1 | 	add	ptr___system__dat__, ##604
0630c     09 79 62 FC | 	wrlong	local09, ptr___system__dat__
06310     01 00 00 FF 
06314     5C 12 86 F1 | 	sub	ptr___system__dat__, ##604
06318     00 78 0E F2 | 	cmp	local09, #0 wz
0631c     01 28 66 56 |  if_ne	neg	result1, #1
06320     00 28 06 A6 |  if_e	mov	result1, #0
06324     7C 00 90 FD | 	jmp	#LR__0345
06328                 | LR__0340
06328     3C 29 02 F6 | 	mov	result1, local09
0632c     74 00 90 FD | 	jmp	#LR__0345
06330                 | LR__0341
06330     18 68 06 F1 | 	add	local01, #24
06334     34 7B 0A FB | 	rdlong	local10, local01 wz
06338     18 68 86 F1 | 	sub	local01, #24
0633c     1C 00 90 5D |  if_ne	jmp	#LR__0342
06340     01 00 00 FF 
06344     5C 12 06 F1 | 	add	ptr___system__dat__, ##604
06348     09 0D 68 FC | 	wrlong	#6, ptr___system__dat__
0634c     01 00 00 FF 
06350     5C 12 86 F1 | 	sub	ptr___system__dat__, ##604
06354     01 28 66 F6 | 	neg	result1, #1
06358     48 00 90 FD | 	jmp	#LR__0345
0635c                 | LR__0342
0635c     00 78 06 F6 | 	mov	local09, #0
06360                 | LR__0343
06360     00 6C 1E F2 | 	cmp	local03, #0 wcz
06364     38 00 90 ED |  if_be	jmp	#LR__0344
06368     3D 71 02 F6 | 	mov	local05, local10
0636c     38 73 02 FB | 	rdlong	local06, local05
06370     04 70 06 F1 | 	add	local05, #4
06374     38 75 02 FB | 	rdlong	local07, local05
06378     37 5B C2 FA | 	rdbyte	arg01, local04
0637c     34 5D 02 F6 | 	mov	arg02, local01
06380     07 7D 02 F6 | 	mov	local11, objptr
06384     39 0F 02 F6 | 	mov	objptr, local06
06388     01 6E 06 F1 | 	add	local04, #1
0638c     2D 74 62 FD | 	call	local07
06390     3E 0F 02 F6 | 	mov	objptr, local11
06394     14 79 02 F1 | 	add	local09, result1
06398     01 6C 86 F1 | 	sub	local03, #1
0639c     C0 FF 9F FD | 	jmp	#LR__0343
063a0                 | LR__0344
063a0     3C 29 02 F6 | 	mov	result1, local09
063a4                 | LR__0345
063a4     AF F0 03 F6 | 	mov	ptra, fp
063a8     BF 00 A0 FD | 	call	#popregs_
063ac                 | __system___vfswrite_ret
063ac     2D 00 64 FD | 	ret
063b0                 | 
063b0                 | __system___vfsread
063b0     0F 5A 05 F6 | 	mov	COUNT_, #15
063b4     B0 00 A0 FD | 	call	#pushregs_
063b8     2C F0 07 F1 | 	add	ptra, #44
063bc     04 5E 05 F1 | 	add	fp, #4
063c0     AF 5A 62 FC | 	wrlong	arg01, fp
063c4     04 5E 05 F1 | 	add	fp, #4
063c8     AF 5C 62 FC | 	wrlong	arg02, fp
063cc     04 5E 05 F1 | 	add	fp, #4
063d0     AF 5E 62 FC | 	wrlong	arg03, fp
063d4     04 5E 85 F1 | 	sub	fp, #4
063d8     AF 68 02 FB | 	rdlong	local01, fp
063dc     14 5E 05 F1 | 	add	fp, #20
063e0     AF 68 62 FC | 	wrlong	local01, fp
063e4     04 5E 05 F1 | 	add	fp, #4
063e8     AF 00 68 FC | 	wrlong	#0, fp
063ec     1C 5E 85 F1 | 	sub	fp, #28
063f0     AF 6A 02 FB | 	rdlong	local02, fp
063f4     04 5E 85 F1 | 	sub	fp, #4
063f8     08 6A 06 F1 | 	add	local02, #8
063fc     35 69 02 FB | 	rdlong	local01, local02
06400     01 68 CE F7 | 	test	local01, #1 wz
06404     1C 00 90 5D |  if_ne	jmp	#LR__0346
06408     01 00 00 FF 
0640c     5C 12 06 F1 | 	add	ptr___system__dat__, ##604
06410     09 0D 68 FC | 	wrlong	#6, ptr___system__dat__
06414     01 00 00 FF 
06418     5C 12 86 F1 | 	sub	ptr___system__dat__, ##604
0641c     01 28 66 F6 | 	neg	result1, #1
06420     9C 02 90 FD | 	jmp	#LR__0354
06424                 | LR__0346
06424     04 5E 05 F1 | 	add	fp, #4
06428     AF 68 02 FB | 	rdlong	local01, fp
0642c     04 5E 85 F1 | 	sub	fp, #4
06430     10 68 06 F1 | 	add	local01, #16
06434     34 6D 0A FB | 	rdlong	local03, local01 wz
06438     B4 00 90 AD |  if_e	jmp	#LR__0348
0643c     04 5E 05 F1 | 	add	fp, #4
06440     AF 6E 02 FB | 	rdlong	local04, fp
06444     10 6E 06 F1 | 	add	local04, #16
06448     37 69 02 FB | 	rdlong	local01, local04
0644c     34 6B 02 FB | 	rdlong	local02, local01
06450     04 68 06 F1 | 	add	local01, #4
06454     34 6D 02 FB | 	rdlong	local03, local01
06458     AF 5A 02 FB | 	rdlong	arg01, fp
0645c     04 5E 05 F1 | 	add	fp, #4
06460     AF 5C 02 FB | 	rdlong	arg02, fp
06464     04 5E 05 F1 | 	add	fp, #4
06468     AF 5E 02 FB | 	rdlong	arg03, fp
0646c     0C 5E 85 F1 | 	sub	fp, #12
06470     07 71 02 F6 | 	mov	local05, objptr
06474     35 0F 02 F6 | 	mov	objptr, local02
06478     2D 6C 62 FD | 	call	local03
0647c     38 0F 02 F6 | 	mov	objptr, local05
06480     10 5E 05 F1 | 	add	fp, #16
06484     AF 28 62 FC | 	wrlong	result1, fp
06488     10 5E 85 F1 | 	sub	fp, #16
0648c     00 28 5E F2 | 	cmps	result1, #0 wcz
06490     4C 00 90 3D |  if_ae	jmp	#LR__0347
06494     04 5E 05 F1 | 	add	fp, #4
06498     AF 68 02 FB | 	rdlong	local01, fp
0649c     34 6F 02 F6 | 	mov	local04, local01
064a0     08 6E 06 F1 | 	add	local04, #8
064a4     37 6D 02 FB | 	rdlong	local03, local04
064a8     20 6C 46 F5 | 	or	local03, #32
064ac     08 68 06 F1 | 	add	local01, #8
064b0     34 6D 62 FC | 	wrlong	local03, local01
064b4     0C 5E 05 F1 | 	add	fp, #12
064b8     AF 5A 0A FB | 	rdlong	arg01, fp wz
064bc     10 5E 85 F1 | 	sub	fp, #16
064c0     01 00 00 FF 
064c4     5C 12 06 F1 | 	add	ptr___system__dat__, ##604
064c8     09 5B 62 FC | 	wrlong	arg01, ptr___system__dat__
064cc     01 00 00 FF 
064d0     5C 12 86 F1 | 	sub	ptr___system__dat__, ##604
064d4     01 28 66 56 |  if_ne	neg	result1, #1
064d8     00 28 06 A6 |  if_e	mov	result1, #0
064dc     E0 01 90 FD | 	jmp	#LR__0354
064e0                 | LR__0347
064e0     10 5E 05 F1 | 	add	fp, #16
064e4     AF 28 02 FB | 	rdlong	result1, fp
064e8     10 5E 85 F1 | 	sub	fp, #16
064ec     D0 01 90 FD | 	jmp	#LR__0354
064f0                 | LR__0348
064f0     04 5E 05 F1 | 	add	fp, #4
064f4     AF 68 02 FB | 	rdlong	local01, fp
064f8     1C 68 06 F1 | 	add	local01, #28
064fc     34 6D 02 FB | 	rdlong	local03, local01
06500     14 5E 05 F1 | 	add	fp, #20
06504     AF 6C 62 FC | 	wrlong	local03, fp
06508     AF 68 0A FB | 	rdlong	local01, fp wz
0650c     18 5E 85 F1 | 	sub	fp, #24
06510     1C 00 90 5D |  if_ne	jmp	#LR__0349
06514     01 00 00 FF 
06518     5C 12 06 F1 | 	add	ptr___system__dat__, ##604
0651c     09 0D 68 FC | 	wrlong	#6, ptr___system__dat__
06520     01 00 00 FF 
06524     5C 12 86 F1 | 	sub	ptr___system__dat__, ##604
06528     01 28 66 F6 | 	neg	result1, #1
0652c     90 01 90 FD | 	jmp	#LR__0354
06530                 | LR__0349
06530     04 5E 05 F1 | 	add	fp, #4
06534     AF 68 02 FB | 	rdlong	local01, fp
06538     04 5E 85 F1 | 	sub	fp, #4
0653c     24 68 06 F1 | 	add	local01, #36
06540     34 6D 0A FB | 	rdlong	local03, local01 wz
06544     A0 00 90 AD |  if_e	jmp	#LR__0351
06548     24 5E 05 F1 | 	add	fp, #36
0654c     AF 72 02 F6 | 	mov	local06, fp
06550     20 5E 85 F1 | 	sub	fp, #32
06554     AF 74 02 FB | 	rdlong	local07, fp
06558     3A 6F 02 F6 | 	mov	local04, local07
0655c     24 6E 06 F1 | 	add	local04, #36
06560     37 77 02 FB | 	rdlong	local08, local04
06564     3B 69 02 F6 | 	mov	local01, local08
06568     34 6B 02 FB | 	rdlong	local02, local01
0656c     04 68 06 F1 | 	add	local01, #4
06570     34 79 02 FB | 	rdlong	local09, local01
06574     3C 6D 02 F6 | 	mov	local03, local09
06578     3A 7B 02 F6 | 	mov	local10, local07
0657c     04 5E 85 F1 | 	sub	fp, #4
06580     3D 7D 02 F6 | 	mov	local11, local10
06584     00 7F 06 F6 | 	mov	local12, #256
06588     39 81 02 F6 | 	mov	local13, local06
0658c     3E 5B 02 F6 | 	mov	arg01, local11
06590     00 5D 06 F6 | 	mov	arg02, #256
06594     40 5F 02 F6 | 	mov	arg03, local13
06598     07 83 02 F6 | 	mov	local14, objptr
0659c     35 0F 02 F6 | 	mov	objptr, local02
065a0     2D 6C 62 FD | 	call	local03
065a4     41 0F 02 F6 | 	mov	objptr, local14
065a8     14 85 02 F6 | 	mov	local15, result1
065ac     10 5E 05 F1 | 	add	fp, #16
065b0     AF 84 62 FC | 	wrlong	local15, fp
065b4     AF 6A 0A FB | 	rdlong	local02, fp wz
065b8     10 5E 85 F1 | 	sub	fp, #16
065bc     28 00 90 5D |  if_ne	jmp	#LR__0350
065c0     24 5E 05 F1 | 	add	fp, #36
065c4     AF 6E 02 FB | 	rdlong	local04, fp
065c8     24 5E 85 F1 | 	sub	fp, #36
065cc     37 6D 02 F6 | 	mov	local03, local04
065d0     02 6C 0E F5 | 	and	local03, #2 wz
065d4     10 00 90 AD |  if_e	jmp	#LR__0350
065d8     01 68 06 F6 | 	mov	local01, #1
065dc     20 5E 05 F1 | 	add	fp, #32
065e0     AF 02 68 FC | 	wrlong	#1, fp
065e4     20 5E 85 F1 | 	sub	fp, #32
065e8                 | LR__0350
065e8                 | LR__0351
065e8     10 5E 05 F1 | 	add	fp, #16
065ec     AF 00 68 FC | 	wrlong	#0, fp
065f0     10 5E 85 F1 | 	sub	fp, #16
065f4                 | LR__0352
065f4     0C 5E 05 F1 | 	add	fp, #12
065f8     AF 68 02 FB | 	rdlong	local01, fp
065fc     0C 5E 85 F1 | 	sub	fp, #12
06600     00 68 1E F2 | 	cmp	local01, #0 wcz
06604     AC 00 90 ED |  if_be	jmp	#LR__0353
06608     18 5E 05 F1 | 	add	fp, #24
0660c     AF 68 02 FB | 	rdlong	local01, fp
06610     34 6B 02 FB | 	rdlong	local02, local01
06614     04 68 06 F1 | 	add	local01, #4
06618     34 6D 02 FB | 	rdlong	local03, local01
0661c     14 5E 85 F1 | 	sub	fp, #20
06620     AF 5A 02 FB | 	rdlong	arg01, fp
06624     04 5E 85 F1 | 	sub	fp, #4
06628     07 7D 02 F6 | 	mov	local11, objptr
0662c     35 0F 02 F6 | 	mov	objptr, local02
06630     2D 6C 62 FD | 	call	local03
06634     3E 0F 02 F6 | 	mov	objptr, local11
06638     14 7B 02 F6 | 	mov	local10, result1
0663c     14 5E 05 F1 | 	add	fp, #20
06640     AF 7A 62 FC | 	wrlong	local10, fp
06644     14 5E 85 F1 | 	sub	fp, #20
06648     00 7A 5E F2 | 	cmps	local10, #0 wcz
0664c     64 00 90 CD |  if_b	jmp	#LR__0353
06650     1C 5E 05 F1 | 	add	fp, #28
06654     AF 68 02 FB | 	rdlong	local01, fp
06658     34 6D 02 F6 | 	mov	local03, local01
0665c     01 6C 06 F1 | 	add	local03, #1
06660     AF 6C 62 FC | 	wrlong	local03, fp
06664     08 5E 85 F1 | 	sub	fp, #8
06668     AF 74 02 FB | 	rdlong	local07, fp
0666c     34 75 42 FC | 	wrbyte	local07, local01
06670     04 5E 85 F1 | 	sub	fp, #4
06674     AF 68 02 FB | 	rdlong	local01, fp
06678     01 68 06 F1 | 	add	local01, #1
0667c     AF 68 62 FC | 	wrlong	local01, fp
06680     04 5E 85 F1 | 	sub	fp, #4
06684     AF 68 02 FB | 	rdlong	local01, fp
06688     01 68 86 F1 | 	sub	local01, #1
0668c     AF 68 62 FC | 	wrlong	local01, fp
06690     14 5E 05 F1 | 	add	fp, #20
06694     AF 68 0A FB | 	rdlong	local01, fp wz
06698     20 5E 85 F1 | 	sub	fp, #32
0669c     54 FF 9F AD |  if_e	jmp	#LR__0352
066a0     14 5E 05 F1 | 	add	fp, #20
066a4     AF 6C 02 FB | 	rdlong	local03, fp
066a8     14 5E 85 F1 | 	sub	fp, #20
066ac     0A 6C 0E F2 | 	cmp	local03, #10 wz
066b0     40 FF 9F 5D |  if_ne	jmp	#LR__0352
066b4                 | LR__0353
066b4     10 5E 05 F1 | 	add	fp, #16
066b8     AF 28 02 FB | 	rdlong	result1, fp
066bc     10 5E 85 F1 | 	sub	fp, #16
066c0                 | LR__0354
066c0     AF F0 03 F6 | 	mov	ptra, fp
066c4     BF 00 A0 FD | 	call	#popregs_
066c8                 | __system___vfsread_ret
066c8     2D 00 64 FD | 	ret
066cc                 | 
066cc                 | __struct__s_vfs_file_t_putchar
066cc     04 5A 05 F6 | 	mov	COUNT_, #4
066d0     B0 00 A0 FD | 	call	#pushregs_
066d4     18 0E 06 F1 | 	add	objptr, #24
066d8     07 69 0A FB | 	rdlong	local01, objptr wz
066dc     18 0E 86 F1 | 	sub	objptr, #24
066e0     00 28 06 A6 |  if_e	mov	result1, #0
066e4     3C 00 90 AD |  if_e	jmp	#LR__0355
066e8     18 0E 06 F1 | 	add	objptr, #24
066ec     07 69 02 FB | 	rdlong	local01, objptr
066f0     18 0E 86 F1 | 	sub	objptr, #24
066f4     34 6B 02 FB | 	rdlong	local02, local01
066f8     04 68 06 F1 | 	add	local01, #4
066fc     34 6D 02 FB | 	rdlong	local03, local01
06700     07 5D 02 F6 | 	mov	arg02, objptr
06704     07 6F 02 F6 | 	mov	local04, objptr
06708     35 0F 02 F6 | 	mov	objptr, local02
0670c     2D 6C 62 FD | 	call	local03
06710     37 0F 02 F6 | 	mov	objptr, local04
06714     00 28 5E F2 | 	cmps	result1, #0 wcz
06718     00 68 06 C6 |  if_b	mov	local01, #0
0671c     01 68 06 36 |  if_ae	mov	local01, #1
06720     34 29 02 F6 | 	mov	result1, local01
06724                 | LR__0355
06724     AF F0 03 F6 | 	mov	ptra, fp
06728     BF 00 A0 FD | 	call	#popregs_
0672c                 | __struct__s_vfs_file_t_putchar_ret
0672c     2D 00 64 FD | 	ret
06730                 | 
06730                 | __struct__s_vfs_file_t_getchar
06730     04 5A 05 F6 | 	mov	COUNT_, #4
06734     B0 00 A0 FD | 	call	#pushregs_
06738     1C 0E 06 F1 | 	add	objptr, #28
0673c     07 69 0A FB | 	rdlong	local01, objptr wz
06740     1C 0E 86 F1 | 	sub	objptr, #28
06744     01 28 66 A6 |  if_e	neg	result1, #1
06748     2C 00 90 AD |  if_e	jmp	#LR__0356
0674c                 | '         return getcf(__this);
0674c     1C 0E 06 F1 | 	add	objptr, #28
06750     07 69 02 FB | 	rdlong	local01, objptr
06754     1C 0E 86 F1 | 	sub	objptr, #28
06758     34 6B 02 FB | 	rdlong	local02, local01
0675c     04 68 06 F1 | 	add	local01, #4
06760     34 6D 02 FB | 	rdlong	local03, local01
06764     07 5B 02 F6 | 	mov	arg01, objptr
06768     07 6F 02 F6 | 	mov	local04, objptr
0676c     35 0F 02 F6 | 	mov	objptr, local02
06770     2D 6C 62 FD | 	call	local03
06774     37 0F 02 F6 | 	mov	objptr, local04
06778                 | LR__0356
06778     AF F0 03 F6 | 	mov	ptra, fp
0677c     BF 00 A0 FD | 	call	#popregs_
06780                 | __struct__s_vfs_file_t_getchar_ret
06780     2D 00 64 FD | 	ret
06784                 | 
06784                 | __struct___bas_wrap_sender_tx
06784     04 5A 05 F6 | 	mov	COUNT_, #4
06788     B0 00 A0 FD | 	call	#pushregs_
0678c     07 69 02 FB | 	rdlong	local01, objptr
06790     34 6B 02 FB | 	rdlong	local02, local01
06794     04 68 06 F1 | 	add	local01, #4
06798     34 6D 02 FB | 	rdlong	local03, local01
0679c     07 6F 02 F6 | 	mov	local04, objptr
067a0     35 0F 02 F6 | 	mov	objptr, local02
067a4     2D 6C 62 FD | 	call	local03
067a8     37 0F 02 F6 | 	mov	objptr, local04
067ac     01 28 06 F6 | 	mov	result1, #1
067b0     AF F0 03 F6 | 	mov	ptra, fp
067b4     BF 00 A0 FD | 	call	#popregs_
067b8                 | __struct___bas_wrap_sender_tx_ret
067b8     2D 00 64 FD | 	ret
067bc                 | 
067bc                 | LR__0357
067bc     20 21 21 21 
067c0     20 63 6F 72 
067c4     72 75 70 74 
067c8     65 64 20 68 
067cc     65 61 70 3F 
067d0     3F 3F 20 21 
067d4     21 21 20    | 	byte	" !!! corrupted heap??? !!! "
067d7     00          | 	byte	0
067d8                 | LR__0358
067d8     20 21 21 21 
067dc     20 6F 75 74 
067e0     20 6F 66 20 
067e4     68 65 61 70 
067e8     20 6D 65 6D 
067ec     6F 72 79 20 
067f0     21 21 21 20 | 	byte	" !!! out of heap memory !!! "
067f4     00          | 	byte	0
067f5                 | LR__0359
067f5     20 21 21 21 
067f9     20 63 6F 72 
067fd     72 75 70 74 
06801     65 64 20 68 
06805     65 61 70 20 
06809     21 21 21 20 | 	byte	" !!! corrupted heap !!! "
0680d     00          | 	byte	0
0680e     00 00       | 	alignl
06810                 | _dat_
06810     68 79 6D 6E 
06814     20 74 6F 20 
06818     61 75 72 6F 
0681c     72 61 00 00 | module file "aurora.mod"
06820     00 00 00 00 
06824     73 74 2D 30 
06828     32 3A 6D 61 
0682c     74 74 61 2E | 	byte	$00, $00, $00, $00, $73, $74, $2d, $30, $32, $3a, $6d, $61, $74, $74, $61, $2e
06830     6D 61 6A 6F 
06834     72 00 00 00 
06838     00 00 13 76 
0683c     00 1E 00 00 | 	byte	$6d, $61, $6a, $6f, $72, $00, $00, $00, $00, $00, $13, $76, $00, $1e, $00, $00
06840     13 76 73 74 
06844     2D 30 32 3A 
06848     6D 61 74 74 
0684c     61 2E 6D 69 | 	byte	$13, $76, $73, $74, $2d, $30, $32, $3a, $6d, $61, $74, $74, $61, $2e, $6d, $69
06850     6E 6F 72 00 
06854     00 00 00 00 
06858     13 8A 00 1E 
0685c     00 00 13 8A | 	byte	$6e, $6f, $72, $00, $00, $00, $00, $00, $13, $8a, $00, $1e, $00, $00, $13, $8a
06860     73 74 2D 30 
06864     31 3A 70 65 
06868     72 63 2E 62 
0686c     61 73 73 64 | 	byte	$73, $74, $2d, $30, $31, $3a, $70, $65, $72, $63, $2e, $62, $61, $73, $73, $64
06870     72 75 6D 35 
06874     00 00 02 4E 
06878     00 40 00 00 
0687c     00 01 73 74 | 	byte	$72, $75, $6d, $35, $00, $00, $02, $4e, $00, $40, $00, $00, $00, $01, $73, $74
06880     2D 30 31 3A 
06884     70 65 72 63 
06888     2E 73 68 61 
0688c     6B 65 72 00 | 	byte	$2d, $30, $31, $3a, $70, $65, $72, $63, $2e, $73, $68, $61, $6b, $65, $72, $00
06890     00 00 00 00 
06894     04 7E 00 17 
06898     00 00 00 01 
0689c     73 74 2D 30 | 	byte	$00, $00, $00, $00, $04, $7e, $00, $17, $00, $00, $00, $01, $73, $74, $2d, $30
068a0     31 3A 70 65 
068a4     72 63 2E 73 
068a8     6E 61 72 65 
068ac     33 00 00 00 | 	byte	$31, $3a, $70, $65, $72, $63, $2e, $73, $6e, $61, $72, $65, $33, $00, $00, $00
068b0     00 00 07 9E 
068b4     00 26 00 00 
068b8     00 01 73 74 
068bc     2D 30 31 3A | 	byte	$00, $00, $07, $9e, $00, $26, $00, $00, $00, $01, $73, $74, $2d, $30, $31, $3a
068c0     62 61 73 73 
068c4     2E 66 6C 69 
068c8     63 6B 00 00 
068cc     00 00 00 00 | 	byte	$62, $61, $73, $73, $2e, $66, $6c, $69, $63, $6b, $00, $00, $00, $00, $00, $00
068d0     0F 10 00 23 
068d4     00 00 00 01 
068d8     73 74 2D 30 
068dc     31 3A 70 61 | 	byte	$0f, $10, $00, $23, $00, $00, $00, $01, $73, $74, $2d, $30, $31, $3a, $70, $61
068e0     73 73 69 6F 
068e4     6E 00 2E 32 
068e8     00 00 00 00 
068ec     00 00 08 9F | 	byte	$73, $73, $69, $6f, $6e, $00, $2e, $32, $00, $00, $00, $00, $00, $00, $08, $9f
068f0     00 23 00 00 
068f4     00 01 73 74 
068f8     2D 30 31 3A 
068fc     74 69 6E 65 | 	byte	$00, $23, $00, $00, $00, $01, $73, $74, $2d, $30, $31, $3a, $74, $69, $6e, $65
06900     77 61 76 65 
06904     00 00 00 00 
06908     00 00 00 00 
0690c     13 56 00 2B | 	byte	$77, $61, $76, $65, $00, $00, $00, $00, $00, $00, $00, $00, $13, $56, $00, $2b
06910     00 00 00 01 
06914     73 74 2D 30 
06918     31 3A 62 6C 
0691c     6F 77 65 72 | 	byte	$00, $00, $00, $01, $73, $74, $2d, $30, $31, $3a, $62, $6c, $6f, $77, $65, $72
06920     00 00 00 00 
06924     00 00 00 00 
06928     00 00       | 	byte	$00[10]
0692a     11 C6 00 40 
0692e     00 00 00 01 
06932     73 74 2D 30 
06936     32 3A 68 61 | 	byte	$11, $c6, $00, $40, $00, $00, $00, $01, $73, $74, $2d, $30, $32, $3a, $68, $61
0693a     6C 6C 2E 6D 
0693e     61 6A 6F 72 
06942     00 00 00 00 
06946     00 00 12 A7 | 	byte	$6c, $6c, $2e, $6d, $61, $6a, $6f, $72, $00, $00, $00, $00, $00, $00, $12, $a7
0694a     00 1C 00 00 
0694e     12 A7 73 74 
06952     2D 30 32 3A 
06956     68 61 6C 6C | 	byte	$00, $1c, $00, $00, $12, $a7, $73, $74, $2d, $30, $32, $3a, $68, $61, $6c, $6c
0695a     2E 6D 69 6E 
0695e     6F 72 00 00 
06962     00 00 00 00 
06966     13 59 00 1C | 	byte	$2e, $6d, $69, $6e, $6f, $72, $00, $00, $00, $00, $00, $00, $13, $59, $00, $1c
0696a     00 00 13 59 
0696e     73 74 2D 30 
06972     31 3A 73 68 
06976     61 6D 75 73 | 	byte	$00, $00, $13, $59, $73, $74, $2d, $30, $31, $3a, $73, $68, $61, $6d, $75, $73
0697a     00 00 00 00 
0697e     00 00 00 00 
06982     00 00       | 	byte	$00[10]
06984     11 94 00 40 
06988     00 00 00 01 
0698c     00 00 00 00 
06990     00 00 00 00 | 	byte	$11, $94, $00, $40, $00, $00, $00, $01, $00, $00, $00, $00, $00, $00, $00, $00
06994     00 00 00 00 
06998     00 00 00 00 
0699c     00 00 00 00 
069a0     00 00 00 00 
069a4     00 00 00 00 
069a8     00          | 	byte	$00[21]
069a9     01 00 00 00 
069ad     00 00 00 00 
069b1     00 00 00 00 
069b5     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
069b9     00 00 00 00 
069bd     00 00 00 00 
069c1     00 00 00 00 
069c5     00 00       | 	byte	$00[14]
069c7     01 00 00 00 
069cb     00 00 00 00 
069cf     00 00 00 00 
069d3     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
069d7     00 00 00 00 
069db     00 00 00 00 
069df     00 00 00 00 
069e3     00 00       | 	byte	$00[14]
069e5     01 00 00 00 
069e9     00 00 00 00 
069ed     00 00 00 00 
069f1     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
069f5     00 00 00 00 
      ...             
06bc1     00 00 00 00 
06bc5     00          | 	byte	$00[465]
06bc6     21 00 00 02 
06bca     03 04 05 05 
06bce     06 07 06 08 
06bd2     09 09 0A 0B | 	byte	$21, $00, $00, $02, $03, $04, $05, $05, $06, $07, $06, $08, $09, $09, $0a, $0b
06bd6     09 09 0C 0D 
06bda     0E 0F 10 11 
06bde     12 0F 13 14 
06be2     12 0F 15 16 | 	byte	$09, $09, $0c, $0d, $0e, $0f, $10, $11, $12, $0f, $13, $14, $12, $0f, $15, $16
06be6     17 12 0F 00 
06bea     00 00 00 00 
06bee     00 00 00 00 
06bf2     00 00 00 00 | 	byte	$17, $12, $0f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
06bf6     00 00 00 00 
      ...             
06c42     00 00 00 00 
06c46     00 00       | 	byte	$00[82]
06c48     4D 2E 4B 2E 
06c4c     00 FE 9E 01 
06c50     00 00 0F 06 
06c54     00 BE 2C 00 | 	byte	$4d, $2e, $4b, $2e, $00, $fe, $9e, $01, $00, $00, $0f, $06, $00, $be, $2c, $00
06c58     00 BE BC 00 
06c5c     00 00 00 00 
06c60     00 00 00 00 
06c64     00 00 0C 01 | 	byte	$00, $be, $bc, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0c, $01
06c68     00 00 0C 01 
06c6c     00 00 0C 07 
06c70     00 00 00 00 
06c74     00 00 0C 02 | 	byte	$00, $00, $0c, $01, $00, $00, $0c, $07, $00, $00, $00, $00, $00, $00, $0c, $02
06c78     00 00 0C 02 
06c7c     00 FE 9C 15 
06c80     00 00 00 00 
06c84     00 00 0C 03 | 	byte	$00, $00, $0c, $02, $00, $fe, $9c, $15, $00, $00, $00, $00, $00, $00, $0c, $03
06c88     00 00 0C 03 
06c8c     00 FE 90 00 
06c90     00 00 00 00 
06c94     00 00 0C 04 | 	byte	$00, $00, $0c, $03, $00, $fe, $90, $00, $00, $00, $00, $00, $00, $00, $0c, $04
06c98     00 00 0C 04 
06c9c     00 00 00 00 
06ca0     00 00 00 00 
06ca4     00 00 0C 05 | 	byte	$00, $00, $0c, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0c, $05
06ca8     00 00 0C 05 
06cac     01 1D 90 00 
06cb0     00 00 00 00 
06cb4     00 00 0C 06 | 	byte	$00, $00, $0c, $05, $01, $1d, $90, $00, $00, $00, $00, $00, $00, $00, $0c, $06
06cb8     00 00 0C 06 
06cbc     00 FE 9C 15 
06cc0     00 00 00 00 
06cc4     00 00 0C 07 | 	byte	$00, $00, $0c, $06, $00, $fe, $9c, $15, $00, $00, $00, $00, $00, $00, $0c, $07
06cc8     00 00 0C 07 
06ccc     00 FE 90 00 
06cd0     00 00 00 00 
06cd4     00 00 0C 08 | 	byte	$00, $00, $0c, $07, $00, $fe, $90, $00, $00, $00, $00, $00, $00, $00, $0c, $08
06cd8     00 00 0C 08 
06cdc     01 1D 9C 15 
06ce0     00 00 00 00 
06ce4     00 00 0C 09 | 	byte	$00, $00, $0c, $08, $01, $1d, $9c, $15, $00, $00, $00, $00, $00, $00, $0c, $09
06ce8     00 00 0C 09 
06cec     01 1D 90 00 
06cf0     00 00 00 00 
06cf4     00 00 0C 0A | 	byte	$00, $00, $0c, $09, $01, $1d, $90, $00, $00, $00, $00, $00, $00, $00, $0c, $0a
06cf8     00 00 0C 0A 
06cfc     00 FE 9C 15 
06d00     00 00 00 00 
06d04     00 00 0C 0B | 	byte	$00, $00, $0c, $0a, $00, $fe, $9c, $15, $00, $00, $00, $00, $00, $00, $0c, $0b
06d08     00 00 0C 0B 
06d0c     01 40 90 00 
06d10     00 00 00 00 
06d14     00 00 0C 0C | 	byte	$00, $00, $0c, $0b, $01, $40, $90, $00, $00, $00, $00, $00, $00, $00, $0c, $0c
06d18     00 00 0C 0C 
06d1c     01 1D 9C 15 
06d20     00 00 00 00 
06d24     00 00 0C 0D | 	byte	$00, $00, $0c, $0c, $01, $1d, $9c, $15, $00, $00, $00, $00, $00, $00, $0c, $0d
06d28     00 00 0C 0D 
06d2c     01 53 90 00 
06d30     00 00 00 00 
06d34     00 00 0C 0E | 	byte	$00, $00, $0c, $0d, $01, $53, $90, $00, $00, $00, $00, $00, $00, $00, $0c, $0e
06d38     00 00 0C 0E 
06d3c     01 40 9C 15 
06d40     00 00 00 00 
06d44     00 00 0C 0F | 	byte	$00, $00, $0c, $0e, $01, $40, $9c, $15, $00, $00, $00, $00, $00, $00, $0c, $0f
06d48     00 00 0C 0F 
06d4c     01 7D 90 00 
06d50     00 00 00 00 
06d54     00 00 0C 10 | 	byte	$00, $00, $0c, $0f, $01, $7d, $90, $00, $00, $00, $00, $00, $00, $00, $0c, $10
06d58     00 00 0C 10 
06d5c     01 53 9C 15 
06d60     00 00 00 00 
06d64     00 00 0C 11 | 	byte	$00, $00, $0c, $10, $01, $53, $9c, $15, $00, $00, $00, $00, $00, $00, $0c, $11
06d68     00 00 0C 11 
06d6c     01 40 9C 07 
06d70     00 00 00 00 
06d74     00 00 0C 12 | 	byte	$00, $00, $0c, $11, $01, $40, $9c, $07, $00, $00, $00, $00, $00, $00, $0c, $12
06d78     00 00 0C 12 
06d7c     01 7D 9C 15 
06d80     00 00 00 00 
06d84     00 00 0C 13 | 	byte	$00, $00, $0c, $12, $01, $7d, $9c, $15, $00, $00, $00, $00, $00, $00, $0c, $13
06d88     00 00 0C 13 
06d8c     01 53 9C 07 
06d90     00 00 00 00 
06d94     00 00 0C 14 | 	byte	$00, $00, $0c, $13, $01, $53, $9c, $07, $00, $00, $00, $00, $00, $00, $0c, $14
06d98     00 00 0C 14 
06d9c     01 53 9C 03 
06da0     00 00 00 00 
06da4     00 00 0C 15 | 	byte	$00, $00, $0c, $14, $01, $53, $9c, $03, $00, $00, $00, $00, $00, $00, $0c, $15
06da8     00 00 0C 15 
06dac     01 AC 90 00 
06db0     00 00 00 00 
06db4     00 00 0C 16 | 	byte	$00, $00, $0c, $15, $01, $ac, $90, $00, $00, $00, $00, $00, $00, $00, $0c, $16
06db8     00 00 0C 16 
06dbc     01 7D 9C 03 
06dc0     00 00 00 00 
06dc4     00 00 0C 17 | 	byte	$00, $00, $0c, $16, $01, $7d, $9c, $03, $00, $00, $00, $00, $00, $00, $0c, $17
06dc8     00 00 0C 17 
06dcc     01 7D 90 00 
06dd0     00 00 00 00 
06dd4     00 D6 1C 18 | 	byte	$00, $00, $0c, $17, $01, $7d, $90, $00, $00, $00, $00, $00, $00, $d6, $1c, $18
06dd8     00 D6 AC 18 
06ddc     01 AC 9C 15 
06de0     00 00 00 00 
06de4     00 00 0C 19 | 	byte	$00, $d6, $ac, $18, $01, $ac, $9c, $15, $00, $00, $00, $00, $00, $00, $0c, $19
06de8     00 00 0C 19 
06dec     01 40 90 00 
06df0     00 00 00 00 
06df4     00 00 0C 1A | 	byte	$00, $00, $0c, $19, $01, $40, $90, $00, $00, $00, $00, $00, $00, $00, $0c, $1a
06df8     00 00 0C 1A 
06dfc     01 7D 9C 15 
06e00     00 00 00 00 
06e04     00 00 0C 1B | 	byte	$00, $00, $0c, $1a, $01, $7d, $9c, $15, $00, $00, $00, $00, $00, $00, $0c, $1b
06e08     00 00 0C 1B 
06e0c     01 AC 90 00 
06e10     00 00 00 00 
06e14     00 00 0C 1C | 	byte	$00, $00, $0c, $1b, $01, $ac, $90, $00, $00, $00, $00, $00, $00, $00, $0c, $1c
06e18     00 00 0C 1C 
06e1c     01 40 9C 15 
06e20     00 00 00 00 
06e24     00 00 00 00 | 	byte	$00, $00, $0c, $1c, $01, $40, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
06e28     00 00 00 00 
06e2c     01 40 90 00 
06e30     00 00 00 00 
06e34     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $40, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00
06e38     00 00 00 00 
06e3c     01 AC 9C 15 
06e40     00 00 00 00 
06e44     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $ac, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
06e48     00 00 00 00 
06e4c     01 C5 90 00 
06e50     00 00 00 00 
06e54     00 8F 1C 1C | 	byte	$00, $00, $00, $00, $01, $c5, $90, $00, $00, $00, $00, $00, $00, $8f, $1c, $1c
06e58     00 8F AC 1C 
06e5c     01 40 9C 15 
06e60     00 00 00 00 
06e64     00 00 00 00 | 	byte	$00, $8f, $ac, $1c, $01, $40, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
06e68     00 00 00 00 
06e6c     01 AC 9C 07 
06e70     00 00 00 00 
06e74     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $ac, $9c, $07, $00, $00, $00, $00, $00, $00, $00, $00
06e78     00 00 00 00 
06e7c     01 C5 9C 15 
06e80     00 00 00 00 
06e84     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $c5, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
06e88     00 00 00 00 
06e8c     01 40 9C 07 
06e90     00 00 00 00 
06e94     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $40, $9c, $07, $00, $00, $00, $00, $00, $00, $00, $00
06e98     00 00 00 00 
06e9c     01 C5 9C 03 
06ea0     00 00 00 00 
06ea4     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $c5, $9c, $03, $00, $00, $00, $00, $00, $00, $00, $00
06ea8     00 00 00 00 
06eac     01 7D 90 00 
06eb0     00 00 00 00 
06eb4     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $7d, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00
06eb8     00 00 00 00 
06ebc     01 40 9C 03 
06ec0     00 00 00 00 
06ec4     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $40, $9c, $03, $00, $00, $00, $00, $00, $00, $00, $00
06ec8     00 00 00 00 
06ecc     01 E0 90 00 
06ed0     00 00 00 00 
06ed4     00 A0 1C 1C | 	byte	$00, $00, $00, $00, $01, $e0, $90, $00, $00, $00, $00, $00, $00, $a0, $1c, $1c
06ed8     00 A0 AC 1C 
06edc     01 7D 9C 15 
06ee0     00 00 00 00 
06ee4     00 00 00 00 | 	byte	$00, $a0, $ac, $1c, $01, $7d, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
06ee8     00 00 00 00 
06eec     01 40 90 00 
06ef0     00 00 00 00 
06ef4     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $40, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00
06ef8     00 00 00 00 
06efc     01 E0 9C 15 
06f00     00 00 00 00 
06f04     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $e0, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
06f08     00 00 00 00 
06f0c     01 53 90 00 
06f10     00 00 00 00 
06f14     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $53, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00
06f18     00 00 00 00 
06f1c     01 40 9C 15 
06f20     00 00 00 00 
06f24     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $40, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
06f28     00 00 00 00 
06f2c     01 40 90 00 
06f30     00 00 00 00 
06f34     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $40, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00
06f38     00 00 00 00 
06f3c     01 53 9C 15 
06f40     00 00 00 00 
06f44     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $53, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
06f48     00 00 00 00 
06f4c     01 7D 90 00 
06f50     00 00 00 00 
06f54     00 BE 2C 1C | 	byte	$00, $00, $00, $00, $01, $7d, $90, $00, $00, $00, $00, $00, $00, $be, $2c, $1c
06f58     00 BE BC 1C 
06f5c     01 40 9C 15 
06f60     00 00 00 00 
06f64     00 00 00 00 | 	byte	$00, $be, $bc, $1c, $01, $40, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
06f68     00 00 00 00 
06f6c     01 53 9C 07 
06f70     00 00 00 00 
06f74     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $53, $9c, $07, $00, $00, $00, $00, $00, $00, $00, $00
06f78     00 00 00 00 
06f7c     01 7D 9C 15 
06f80     00 00 00 00 
06f84     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $7d, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
06f88     00 00 00 00 
06f8c     01 40 9C 07 
06f90     00 00 00 00 
06f94     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $40, $9c, $07, $00, $00, $00, $00, $00, $00, $00, $00
06f98     00 00 00 00 
06f9c     01 53 9C 03 
06fa0     00 00 00 00 
06fa4     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $53, $9c, $03, $00, $00, $00, $00, $00, $00, $00, $00
06fa8     00 00 00 00 
06fac     01 7D 9C 07 
06fb0     00 00 00 00 
06fb4     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $7d, $9c, $07, $00, $00, $00, $00, $00, $00, $00, $00
06fb8     00 00 00 00 
06fbc     01 40 9C 03 
06fc0     00 00 00 00 
06fc4     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $40, $9c, $03, $00, $00, $00, $00, $00, $00, $00, $00
06fc8     00 00 00 00 
06fcc     01 53 9C 01 
06fd0     00 00 00 00 
06fd4     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $53, $9c, $01, $00, $00, $00, $00, $00, $00, $00, $00
06fd8     00 00 00 00 
06fdc     01 7D 9C 03 
06fe0     00 00 00 00 
06fe4     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $7d, $9c, $03, $00, $00, $00, $00, $00, $00, $00, $00
06fe8     00 00 00 00 
06fec     01 40 9C 01 
06ff0     00 00 00 00 
06ff4     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $40, $9c, $01, $00, $00, $00, $00, $00, $00, $00, $00
06ff8     00 00 00 00 
06ffc     00 00       | 	byte	$00[6]
06ffe     0C 00 00 00 
07002     00 00 00 00 
07006     00 00 00 00 
0700a     00 00 01 7D | 	byte	$0c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $7d
0700e     9C 01 00 00 
07012     00 00 00 00 
07016     00 00 00 00 
0701a     00 00 00 00 | 	byte	$9c, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0701e     0C 00 00 00 
07022     00 00 00 00 
07026     00 00 00 00 
0702a     00 00 00 00 | 	byte	$0c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0702e     00 00 00 00 
      ...             
07046     00 00 00 00 
0704a     00 00       | 	byte	$00[30]
0704c     01 7D 80 00 
07050     00 FE 30 00 
07054     00 BE 70 00 
07058     00 BE 20 00 | 	byte	$01, $7d, $80, $00, $00, $fe, $30, $00, $00, $be, $70, $00, $00, $be, $20, $00
0705c     00 00 00 00 
07060     00 00 00 00 
07064     00 00 00 00 
07068     00 00 00 00 
0706c     00 00 00 00 
07070     00          | 	byte	$00[21]
07071     BE 60 00 00 
07075     BE 7C 15 00 
07079     00 00 00 00 
0707d     00 00 00 01 | 	byte	$be, $60, $00, $00, $be, $7c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $01
07081     7D 60 00 00 
07085     00 00 00 00 
07089     00 00 00 00 
0708d     BE 40 00 00 | 	byte	$7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $be, $40, $00, $00
07091     BE 60 00 00 
07095     A0 70 00 00 
07099     00 00 00 00 
0709d     00 00 00 00 | 	byte	$be, $60, $00, $00, $a0, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
070a1     BE 60 00 00 
070a5     00 00 00 00 
070a9     00 00 00 00 
070ad     00 00 00 01 | 	byte	$be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
070b1     7D 60 00 00 
070b5     A0 7C 15 00 
070b9     00 00 00 00 
070bd     00 00 00 00 | 	byte	$7d, $60, $00, $00, $a0, $7c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00
070c1     BE 60 00 00 
070c5     00 00 00 00 
070c9     00 00 00 01 
070cd     7D 80 00 00 | 	byte	$be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $7d, $80, $00, $00
070d1     BE 50 00 00 
070d5     AA 70 00 00 
070d9     00 00 00 00 
070dd     00 00 00 00 | 	byte	$be, $50, $00, $00, $aa, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
070e1     00 00 00 00 
070e5     00 00 00 00 
070e9     00 00 00 00 
070ed     00 00 00 00 | 	byte	$00[16]
070f1     BE 60 00 00 
070f5     AA 7C 15 00 
070f9     00 00 00 00 
070fd     00 00 00 01 | 	byte	$be, $60, $00, $00, $aa, $7c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $01
07101     7D 60 00 00 
07105     00 00 00 00 
07109     00 00 00 01 
0710d     53 80 00 00 | 	byte	$7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $53, $80, $00, $00
07111     BE 60 00 00 
07115     A0 70 00 00 
07119     00 00 00 00 
0711d     00 00 00 00 | 	byte	$be, $60, $00, $00, $a0, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07121     BE 60 00 00 
07125     00 00 00 00 
07129     00 00 00 01 
0712d     40 80 00 00 | 	byte	$be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $40, $80, $00, $00
07131     FE 30 00 00 
07135     D6 70 00 00 
07139     00 00 00 00 
0713d     00 00 00 00 | 	byte	$fe, $30, $00, $00, $d6, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07141     00 00 00 00 
07145     00 00 00 00 
07149     00 00 00 00 
0714d     00 00 00 00 | 	byte	$00[16]
07151     FE 30 00 00 
07155     D6 7C 15 00 
07159     A0 10 00 00 
0715d     00 00 00 00 | 	byte	$fe, $30, $00, $00, $d6, $7c, $15, $00, $a0, $10, $00, $00, $00, $00, $00, $00
07161     00 00 00 00 
07165     00 00 00 00 
07169     00 00 00 00 
0716d     00 00 00 00 | 	byte	$00[16]
07171     D6 60 00 00 
07175     D6 7C 11 00 
07179     00 00 00 00 
0717d     00 00 00 01 | 	byte	$d6, $60, $00, $00, $d6, $7c, $11, $00, $00, $00, $00, $00, $00, $00, $00, $01
07181     40 60 00 00 
07185     00 00 00 00 
07189     00 00 00 00 
0718d     BE 40 00 00 | 	byte	$40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $be, $40, $00, $00
07191     D6 60 00 00 
07195     D6 7C 07 00 
07199     00 00 00 00 
0719d     00 00 00 00 | 	byte	$d6, $60, $00, $00, $d6, $7c, $07, $00, $00, $00, $00, $00, $00, $00, $00, $00
071a1     D6 60 00 00 
071a5     00 00 00 00 
071a9     00 00 00 00 
071ad     00 00 00 01 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
071b1     40 60 00 00 
071b5     D6 7C 03 00 
071b9     00 00 00 00 
071bd     00 00 00 00 | 	byte	$40, $60, $00, $00, $d6, $7c, $03, $00, $00, $00, $00, $00, $00, $00, $00, $00
071c1     D6 60 00 00 
071c5     00 00 00 00 
071c9     00 00 00 01 
071cd     40 80 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $40, $80, $00, $00
071d1     BE 50 00 00 
071d5     A0 70 00 00 
071d9     00 00 00 00 
071dd     00 00 00 00 | 	byte	$be, $50, $00, $00, $a0, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
071e1     00 00 00 00 
071e5     00 00 00 00 
071e9     00 00 00    | 	byte	$00[11]
071ec     01 1D 80 00 
071f0     00 D6 60 00 
071f4     00 8F 70 00 
071f8     00 00 00 00 | 	byte	$01, $1d, $80, $00, $00, $d6, $60, $00, $00, $8f, $70, $00, $00, $00, $00, $00
071fc     00 00 00 00 
07200     01 40 60 00 
07204     00 00 00 00 
07208     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00
0720c     00 FE 80 00 
07210     00 D6 60 00 
07214     00 7F 70 00 
07218     00 00 00 00 | 	byte	$00, $fe, $80, $00, $00, $d6, $60, $00, $00, $7f, $70, $00, $00, $00, $00, $00
0721c     00 00 00 00 
07220     00          | 	byte	$00[5]
07221     D6 60 00 00 
07225     00 00 00 00 
07229     00 00 00 01 
0722d     1D 80 00 01 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $1d, $80, $00, $01
07231     40 60 00 00 
07235     8F 70 00 00 
07239     00 00 00 00 
0723d     00 00 00 00 | 	byte	$40, $60, $00, $00, $8f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07241     D6 60 00 00 
07245     00 00 00 00 
07249     00 00 00 00 
0724d     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07251     FE 30 00 00 
07255     8F 7C 15 00 
07259     8F 10 00 00 
0725d     00 00 00 00 | 	byte	$fe, $30, $00, $00, $8f, $7c, $15, $00, $8f, $10, $00, $00, $00, $00, $00, $00
07261     00 00 00 00 
07265     00 00 00 00 
07269     00 00 00 00 
0726d     00 00 00 00 | 	byte	$00[16]
07271     BE 60 00 00 
07275     8F 7C 11 00 
07279     00 00 00 00 
0727d     00 00 00 01 | 	byte	$be, $60, $00, $00, $8f, $7c, $11, $00, $00, $00, $00, $00, $00, $00, $00, $01
07281     1D 60 00 00 
07285     00 00 00 00 
07289     00 00 00 00 
0728d     BE 40 00 00 | 	byte	$1d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $be, $40, $00, $00
07291     BE 60 00 00 
07295     BE 70 00 00 
07299     00 00 00 00 
0729d     00 00 00 00 | 	byte	$be, $60, $00, $00, $be, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
072a1     BE 60 00 00 
072a5     00 00 00 00 
072a9     00 00 00 01 
072ad     7D 80 00 01 | 	byte	$be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $7d, $80, $00, $01
072b1     1D 60 00 00 
072b5     BE 7C 15 00 
072b9     00 00 00 00 
072bd     00 00 00 00 | 	byte	$1d, $60, $00, $00, $be, $7c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00
072c1     BE 60 00 00 
072c5     00 00 00 00 
072c9     00 00 00 01 
072cd     1D 80 00 00 | 	byte	$be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $1d, $80, $00, $00
072d1     BE 50 00 00 
072d5     A0 70 00 00 
072d9     00 00 00 00 
072dd     00 00 00 00 | 	byte	$be, $50, $00, $00, $a0, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
072e1     00 00 00 00 
072e5     00 00 00 00 
072e9     00 00 00 00 
072ed     00 00 00 00 | 	byte	$00[16]
072f1     BE 60 00 00 
072f5     A0 7C 15 00 
072f9     00 00 00 00 
072fd     00 00 00 01 | 	byte	$be, $60, $00, $00, $a0, $7c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $01
07301     1D 60 00 00 
07305     00 00 00 00 
07309     00 00 00 01 
0730d     40 80 00 00 | 	byte	$1d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $40, $80, $00, $00
07311     FE 30 00 00 
07315     8F 70 00 00 
07319     00 00 00 00 
0731d     00 00 00 00 | 	byte	$fe, $30, $00, $00, $8f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07321     00 00 00 00 
07325     00 00 00 00 
07329     00 00 00    | 	byte	$00[11]
0732c     01 53 80 00 
07330     00 FE 30 00 
07334     00 8F 7C 15 
07338     00 00 00 00 | 	byte	$01, $53, $80, $00, $00, $fe, $30, $00, $00, $8f, $7c, $15, $00, $00, $00, $00
0733c     00 00 00 00 
07340     00 00 00 00 
07344     00 00 00 00 
07348     00 00 00 00 | 	byte	$00[16]
0734c     01 7D 80 00 
07350     00 FE 30 00 
07354     00 AA 70 00 
07358     00 BE 20 00 | 	byte	$01, $7d, $80, $00, $00, $fe, $30, $00, $00, $aa, $70, $00, $00, $be, $20, $00
0735c     00 00 00 00 
07360     01 7D 60 00 
07364     00 00 00 00 
07368     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00
0736c     00 00 00 00 
07370     00          | 	byte	$00[5]
07371     A0 60 00 00 
07375     AA 7C 15 00 
07379     00 00 00 00 
0737d     00 00 00 01 | 	byte	$a0, $60, $00, $00, $aa, $7c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $01
07381     7D 60 00 00 
07385     00 00 00 00 
07389     00 00 00 00 
0738d     BE 40 00 00 | 	byte	$7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $be, $40, $00, $00
07391     A0 60 00 00 
07395     A0 70 00 00 
07399     00 00 00 00 
0739d     00 00 00 00 | 	byte	$a0, $60, $00, $00, $a0, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
073a1     A0 60 00 00 
073a5     00 00 00 00 
073a9     00 00 00 00 
073ad     00 00 00 01 | 	byte	$a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
073b1     7D 60 00 00 
073b5     BE 70 00 00 
073b9     00 00 00 00 
073bd     00 00 00 00 | 	byte	$7d, $60, $00, $00, $be, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
073c1     A0 60 00 00 
073c5     00 00 00 00 
073c9     00 00 00 01 
073cd     7D 80 00 00 | 	byte	$a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $7d, $80, $00, $00
073d1     BE 50 00 00 
073d5     BE 7C 15 00 
073d9     00 00 00 00 
073dd     00 00 00 00 | 	byte	$be, $50, $00, $00, $be, $7c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00
073e1     00 00 00 00 
073e5     00 00 00 00 
073e9     00 00 00    | 	byte	$00[11]
073ec     01 FC 80 00 
073f0     00 A0 60 00 
073f4     00 BE 7C 11 
073f8     00 00 00 00 | 	byte	$01, $fc, $80, $00, $00, $a0, $60, $00, $00, $be, $7c, $11, $00, $00, $00, $00
073fc     00 00 00 00 
07400     01 7D 60 00 
07404     00 00 00 00 
07408     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00
0740c     01 AC 80 00 
07410     00 BE 50 00 
07414     00 BE 7C 07 
07418     00 00 00 00 | 	byte	$01, $ac, $80, $00, $00, $be, $50, $00, $00, $be, $7c, $07, $00, $00, $00, $00
0741c     00 00 00 00 
07420     00          | 	byte	$00[5]
07421     BE 50 00 00 
07425     00 00 00 00 
07429     00 00 00 01 
0742d     7D 80 00 00 | 	byte	$be, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $7d, $80, $00, $00
07431     00 00 00 00 
07435     BE 7C 03 00 
07439     00 00 00 00 
0743d     00 00 00 00 | 	byte	$00, $00, $00, $00, $be, $7c, $03, $00, $00, $00, $00, $00, $00, $00, $00, $00
07441     BE 50 00 00 
07445     00 00 00 00 
07449     00 00 00 00 
0744d     FE 90 00 01 | 	byte	$be, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $90, $00, $01
07451     40 90 00 00 
07455     00 00 00 00 
07459     00 00 00 00 
0745d     00 00 00 00 | 	byte	$40, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07461     00 00 00 00 
07465     00 00 00 00 
07469     00 00 00 00 
0746d     00          | 	byte	$00[13]
0746e     0C 07 00 00 
07472     0C 07 00 00 
07476     00 00 00 00 
0747a     00 00 00 FE | 	byte	$0c, $07, $00, $00, $0c, $07, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe
0747e     9C 15 01 40 
07482     9C 15 00 00 
07486     00 00 00 00 
0748a     00 00 00 FE | 	byte	$9c, $15, $01, $40, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe
0748e     90 00 01 40 
07492     90 00 00 00 
07496     00 00 00 00 
0749a     00 00 00 00 | 	byte	$90, $00, $01, $40, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0749e     00 00 00 00 
074a2     00 00 00 00 
074a6     00 00 00 00 
074aa     00 00       | 	byte	$00[14]
074ac     01 1D 90 00 
074b0     01 53 90 00 
074b4     00 00 00 00 
074b8     00 00 00 00 | 	byte	$01, $1d, $90, $00, $01, $53, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00
074bc     00 FE 9C 15 
074c0     01 40 9C 15 
074c4     00 00 00 00 
074c8     00 00 00 00 | 	byte	$00, $fe, $9c, $15, $01, $40, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
074cc     00 FE 90 00 
074d0     01 40 90 00 
074d4     00 00 00 00 
074d8     00 00 00 00 | 	byte	$00, $fe, $90, $00, $01, $40, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00
074dc     01 1D 9C 15 
074e0     01 53 9C 15 
074e4     00 00 00 00 
074e8     00 00 00 00 | 	byte	$01, $1d, $9c, $15, $01, $53, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
074ec     01 1D 90 00 
074f0     01 53 90 00 
074f4     00 00 00 00 
074f8     00 00 00 00 | 	byte	$01, $1d, $90, $00, $01, $53, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00
074fc     00 FE 9C 15 
07500     01 40 9C 15 
07504     00 00 00 00 
07508     00 00 00 00 | 	byte	$00, $fe, $9c, $15, $01, $40, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
0750c     01 40 90 00 
07510     01 7D 90 00 
07514     00 00 00 00 
07518     00 00 00 00 | 	byte	$01, $40, $90, $00, $01, $7d, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00
0751c     01 1D 9C 15 
07520     01 53 9C 15 
07524     00 00 00 00 
07528     00 00 00 00 | 	byte	$01, $1d, $9c, $15, $01, $53, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
0752c     01 53 90 00 
07530     01 AC 90 00 
07534     00 00 00 00 
07538     00 00 00 00 | 	byte	$01, $53, $90, $00, $01, $ac, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00
0753c     01 40 9C 15 
07540     01 7D 9C 15 
07544     00 00 00 00 
07548     00 00 00 00 | 	byte	$01, $40, $9c, $15, $01, $7d, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
0754c     01 7D 90 00 
07550     01 FC 90 00 
07554     00 00 00 00 
07558     00 00 00 00 | 	byte	$01, $7d, $90, $00, $01, $fc, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00
0755c     01 53 9C 15 
07560     01 AC 9C 15 
07564     00 00 00 00 
07568     00 00 00 00 | 	byte	$01, $53, $9c, $15, $01, $ac, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
0756c     01 40 9C 07 
07570     01 7D 9C 07 
07574     00 00 00 00 
07578     00 00 00 00 | 	byte	$01, $40, $9c, $07, $01, $7d, $9c, $07, $00, $00, $00, $00, $00, $00, $00, $00
0757c     01 7D 9C 15 
07580     01 FC 9C 15 
07584     00 00 00 00 
07588     00 00 00 00 | 	byte	$01, $7d, $9c, $15, $01, $fc, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
0758c     01 53 9C 07 
07590     01 AC 9C 07 
07594     00 00 00 00 
07598     00 00 00 00 | 	byte	$01, $53, $9c, $07, $01, $ac, $9c, $07, $00, $00, $00, $00, $00, $00, $00, $00
0759c     01 53 9C 03 
075a0     01 53 9C 03 
075a4     00 00 00 00 
075a8     00 00 00 00 | 	byte	$01, $53, $9c, $03, $01, $53, $9c, $03, $00, $00, $00, $00, $00, $00, $00, $00
075ac     01 AC 90 00 
075b0     02 3A 90 00 
075b4     00 00 00 00 
075b8     00 00 00 00 | 	byte	$01, $ac, $90, $00, $02, $3a, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00
075bc     01 7D 9C 03 
075c0     01 FC 9C 03 
075c4     00 00 00 00 
075c8     00 00 00 00 | 	byte	$01, $7d, $9c, $03, $01, $fc, $9c, $03, $00, $00, $00, $00, $00, $00, $00, $00
075cc     01 7D 90 00 
075d0     01 FC 90 00 
075d4     00 D6 1C 1C 
075d8     00 D6 AC 1C | 	byte	$01, $7d, $90, $00, $01, $fc, $90, $00, $00, $d6, $1c, $1c, $00, $d6, $ac, $1c
075dc     01 AC 9C 15 
075e0     02 3A 9C 15 
075e4     00 00 00 00 
075e8     00 00 00 00 | 	byte	$01, $ac, $9c, $15, $02, $3a, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
075ec     01 40 90 00 
075f0     01 7D 90 00 
075f4     00 00 00 00 
075f8     00 00 00 00 | 	byte	$01, $40, $90, $00, $01, $7d, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00
075fc     01 7D 9C 15 
07600     01 FC 9C 15 
07604     00 00 00 00 
07608     00 00 00 00 | 	byte	$01, $7d, $9c, $15, $01, $fc, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
0760c     01 AC 90 00 
07610     01 FC 90 00 
07614     00 00 00 00 
07618     00 00 00 00 | 	byte	$01, $ac, $90, $00, $01, $fc, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00
0761c     01 40 9C 15 
07620     01 7D 9C 15 
07624     00 00 00 00 
07628     00 00 00 00 | 	byte	$01, $40, $9c, $15, $01, $7d, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
0762c     01 40 90 00 
07630     01 AC 90 00 
07634     00 00 00 00 
07638     00 00 00 00 | 	byte	$01, $40, $90, $00, $01, $ac, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00
0763c     01 AC 9C 15 
07640     02 3A 9C 15 
07644     00 00 00 00 
07648     00 00 00 00 | 	byte	$01, $ac, $9c, $15, $02, $3a, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
0764c     01 C5 90 00 
07650     02 3A 90 00 
07654     00 8F 1C 1C 
07658     00 8F AC 1C | 	byte	$01, $c5, $90, $00, $02, $3a, $90, $00, $00, $8f, $1c, $1c, $00, $8f, $ac, $1c
0765c     01 40 9C 15 
07660     01 AC 9C 15 
07664     00 00 00 00 
07668     00 00 00 00 | 	byte	$01, $40, $9c, $15, $01, $ac, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
0766c     01 AC 9C 07 
07670     02 3A 9C 07 
07674     00 00 00 00 
07678     00 00 00 00 | 	byte	$01, $ac, $9c, $07, $02, $3a, $9c, $07, $00, $00, $00, $00, $00, $00, $00, $00
0767c     01 C5 9C 15 
07680     02 3A 9C 15 
07684     00 00 00 00 
07688     00 00 00 00 | 	byte	$01, $c5, $9c, $15, $02, $3a, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
0768c     01 40 9C 07 
07690     01 AC 9C 07 
07694     00 00 00 00 
07698     00 00 00 00 | 	byte	$01, $40, $9c, $07, $01, $ac, $9c, $07, $00, $00, $00, $00, $00, $00, $00, $00
0769c     01 C5 9C 03 
076a0     02 3A 9C 03 
076a4     00 00 00 00 
076a8     00 00 00 00 | 	byte	$01, $c5, $9c, $03, $02, $3a, $9c, $03, $00, $00, $00, $00, $00, $00, $00, $00
076ac     01 AC 90 00 
076b0     02 3A 90 00 
076b4     00 00 00 00 
076b8     00 00 00 00 | 	byte	$01, $ac, $90, $00, $02, $3a, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00
076bc     01 40 9C 03 
076c0     01 AC 9C 03 
076c4     00 00 00 00 
076c8     00 00 00 00 | 	byte	$01, $40, $9c, $03, $01, $ac, $9c, $03, $00, $00, $00, $00, $00, $00, $00, $00
076cc     01 E0 90 00 
076d0     02 3A 90 00 
076d4     00 A0 1C 1C 
076d8     00 A0 AC 1C | 	byte	$01, $e0, $90, $00, $02, $3a, $90, $00, $00, $a0, $1c, $1c, $00, $a0, $ac, $1c
076dc     01 7D 9C 15 
076e0     02 3A 9C 15 
076e4     00 00 00 00 
076e8     00 00 00 00 | 	byte	$01, $7d, $9c, $15, $02, $3a, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
076ec     01 40 90 00 
076f0     01 AC 90 00 
076f4     00 00 00 00 
076f8     00 00 00 00 | 	byte	$01, $40, $90, $00, $01, $ac, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00
076fc     01 E0 9C 15 
07700     02 3A 9C 15 
07704     00 00 00 00 
07708     00 00 00 00 | 	byte	$01, $e0, $9c, $15, $02, $3a, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
0770c     01 53 90 00 
07710     01 AC 90 00 
07714     00 00 00 00 
07718     00 00 00 00 | 	byte	$01, $53, $90, $00, $01, $ac, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00
0771c     01 40 9C 15 
07720     01 AC 9C 15 
07724     00 00 00 00 
07728     00 00 00 00 | 	byte	$01, $40, $9c, $15, $01, $ac, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
0772c     01 40 90 00 
07730     01 AC 90 00 
07734     00 00 00 00 
07738     00 00 00 00 | 	byte	$01, $40, $90, $00, $01, $ac, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00
0773c     01 53 9C 15 
07740     01 AC 9C 15 
07744     00 00 00 00 
07748     00 00 00 00 | 	byte	$01, $53, $9c, $15, $01, $ac, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
0774c     01 7D 90 00 
07750     01 FC 90 00 
07754     00 BE 2C 1C 
07758     00 BE BC 1C | 	byte	$01, $7d, $90, $00, $01, $fc, $90, $00, $00, $be, $2c, $1c, $00, $be, $bc, $1c
0775c     01 40 9C 15 
07760     01 AC 9C 15 
07764     00 00 00 00 
07768     00 00 00 00 | 	byte	$01, $40, $9c, $15, $01, $ac, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
0776c     01 53 9C 07 
07770     01 AC 9C 07 
07774     00 00 00 00 
07778     00 00 00 00 | 	byte	$01, $53, $9c, $07, $01, $ac, $9c, $07, $00, $00, $00, $00, $00, $00, $00, $00
0777c     01 7D 9C 15 
07780     01 FC 9C 15 
07784     00 00 00 00 
07788     00 00 00 00 | 	byte	$01, $7d, $9c, $15, $01, $fc, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00
0778c     01 40 9C 07 
07790     01 AC 9C 07 
07794     00 00 00 00 
07798     00 00 00 00 | 	byte	$01, $40, $9c, $07, $01, $ac, $9c, $07, $00, $00, $00, $00, $00, $00, $00, $00
0779c     01 53 9C 03 
077a0     01 AC 9C 03 
077a4     00 00 00 00 
077a8     00 00 00 00 | 	byte	$01, $53, $9c, $03, $01, $ac, $9c, $03, $00, $00, $00, $00, $00, $00, $00, $00
077ac     01 7D 9C 07 
077b0     01 FC 9C 07 
077b4     00 00 00 00 
077b8     00 00 00 00 | 	byte	$01, $7d, $9c, $07, $01, $fc, $9c, $07, $00, $00, $00, $00, $00, $00, $00, $00
077bc     01 40 9C 03 
077c0     01 AC 9C 03 
077c4     00 00 00 00 
077c8     00 00 00 00 | 	byte	$01, $40, $9c, $03, $01, $ac, $9c, $03, $00, $00, $00, $00, $00, $00, $00, $00
077cc     01 53 9C 01 
077d0     01 AC 9C 01 
077d4     00 00 00 00 
077d8     00 00 00 00 | 	byte	$01, $53, $9c, $01, $01, $ac, $9c, $01, $00, $00, $00, $00, $00, $00, $00, $00
077dc     01 7D 9C 03 
077e0     01 FC 9C 03 
077e4     00 00 00 00 
077e8     00 00 00 00 | 	byte	$01, $7d, $9c, $03, $01, $fc, $9c, $03, $00, $00, $00, $00, $00, $00, $00, $00
077ec     01 40 9C 01 
077f0     01 AC 9C 01 
077f4     00 00 00 00 
077f8     00 00 00 00 | 	byte	$01, $40, $9c, $01, $01, $ac, $9c, $01, $00, $00, $00, $00, $00, $00, $00, $00
077fc     00 00 0C 00 
07800     00 00 0C 00 
07804     00 00 00 00 
07808     00 00 00 00 | 	byte	$00, $00, $0c, $00, $00, $00, $0c, $00, $00, $00, $00, $00, $00, $00, $00, $00
0780c     01 7D 9C 01 
07810     01 FC 9C 01 
07814     00 00 00 00 
07818     00 00 00 00 | 	byte	$01, $7d, $9c, $01, $01, $fc, $9c, $01, $00, $00, $00, $00, $00, $00, $00, $00
0781c     00 00 0C 00 
07820     00 00 0C 00 
07824     00 00 00 00 
07828     00 00 00 00 | 	byte	$00, $00, $0c, $00, $00, $00, $0c, $00, $00, $00, $00, $00, $00, $00, $00, $00
0782c     00 00 00 00 
      ...             
07848     00 00 00 00 
0784c     00          | 	byte	$00[33]
0784d     FE 90 00 01 
07851     7D 60 00 00 
07855     00 00 00 00 
07859     00 00 00 00 | 	byte	$fe, $90, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0785d     00 00 00 00 
07861     00 00 00 00 
07865     00 00 00 00 
07869     00 00 00 00 
0786d     00          | 	byte	$00[17]
0786e     0C 07 00 BE 
07872     40 00 00 00 
07876     00 00 00 00 
0787a     00 00 00 FE | 	byte	$0c, $07, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe
0787e     9C 15 00 00 
07882     00 00 00 00 
07886     00 00 00 00 
0788a     00 00 00 FE | 	byte	$9c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe
0788e     90 00 00 BE 
07892     60 00 00 00 
07896     00 00 00 00 
0789a     00 00 00 00 | 	byte	$90, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0789e     00 00 00 00 
078a2     00 00 00 00 
078a6     00 00 00 00 
078aa     00 00       | 	byte	$00[14]
078ac     01 1D 90 00 
078b0     01 7D 60 00 
078b4     00 00 00 00 
078b8     00 00 00 00 | 	byte	$01, $1d, $90, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00
078bc     00 FE 9C 15 
078c0     00 00 00 00 
078c4     00 00 00 00 
078c8     00 00 00 00 | 	byte	$00, $fe, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
078cc     00 FE 90 00 
078d0     00 00 00 00 
078d4     00 00 00 00 
078d8     00 00 00 00 | 	byte	$00, $fe, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
078dc     01 1D 9C 15 
078e0     00 00 00 00 
078e4     00 00 00 00 
078e8     00 00 00 00 | 	byte	$01, $1d, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
078ec     01 1D 90 00 
078f0     01 7D 60 00 
078f4     00 00 00 00 
078f8     00 00 00 00 | 	byte	$01, $1d, $90, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00
078fc     00 FE 9C 15 
07900     00 00 00 00 
07904     00 00 00 00 
07908     00 00 00 00 | 	byte	$00, $fe, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0790c     01 40 90 00 
07910     00 BE 60 00 
07914     00 00 00 00 
07918     00 00 00 00 | 	byte	$01, $40, $90, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00
0791c     01 1D 9C 15 
07920     00 00 00 00 
07924     00 00 00 00 
07928     00 00 00 00 | 	byte	$01, $1d, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0792c     01 53 90 00 
07930     00 00 00 00 
07934     00 00 00 00 
07938     00 00 00 00 | 	byte	$01, $53, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0793c     01 40 9C 15 
07940     00 00 00 00 
07944     00 00 00 00 
07948     00 00 00 00 | 	byte	$01, $40, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0794c     01 7D 90 00 
07950     01 7D 60 00 
07954     00 00 00 00 
07958     00 00 00 00 | 	byte	$01, $7d, $90, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00
0795c     01 53 9C 15 
07960     00 00 00 00 
07964     00 00 00 00 
07968     00 00 00 00 | 	byte	$01, $53, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0796c     01 40 9C 07 
07970     00 BE 40 00 
07974     00 00 00 00 
07978     00 00 00 00 | 	byte	$01, $40, $9c, $07, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00
0797c     01 7D 9C 15 
07980     00 00 00 00 
07984     00 00 00 00 
07988     00 00 00 00 | 	byte	$01, $7d, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0798c     01 53 9C 07 
07990     00 BE 60 00 
07994     00 00 00 00 
07998     00 00 00 00 | 	byte	$01, $53, $9c, $07, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00
0799c     01 53 9C 03 
079a0     00 00 00 00 
079a4     00 00 00 00 
079a8     00 00 00 00 | 	byte	$01, $53, $9c, $03, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
079ac     01 AC 90 00 
079b0     01 7D 60 00 
079b4     00 00 00 00 
079b8     00 00 00 00 | 	byte	$01, $ac, $90, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00
079bc     01 7D 9C 03 
079c0     00 00 00 00 
079c4     00 00 00 00 
079c8     00 00 00 00 | 	byte	$01, $7d, $9c, $03, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
079cc     01 7D 90 00 
079d0     00 00 00 00 
079d4     00 D6 1C 1C 
079d8     00 D6 AC 1C | 	byte	$01, $7d, $90, $00, $00, $00, $00, $00, $00, $d6, $1c, $1c, $00, $d6, $ac, $1c
079dc     01 AC 9C 15 
079e0     00 00 00 00 
079e4     00 00 00 00 
079e8     00 00 00 00 | 	byte	$01, $ac, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
079ec     01 40 90 00 
079f0     01 7D 60 00 
079f4     00 00 00 00 
079f8     00 00 00 00 | 	byte	$01, $40, $90, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00
079fc     01 7D 9C 15 
07a00     00 00 00 00 
07a04     00 00 00 00 
07a08     00 00 00 00 | 	byte	$01, $7d, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07a0c     01 AC 90 00 
07a10     00 BE 60 00 
07a14     00 00 00 00 
07a18     00 00 00 00 | 	byte	$01, $ac, $90, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00
07a1c     01 40 9C 15 
07a20     00 00 00 00 
07a24     00 00 00 00 
07a28     00 00 00 00 | 	byte	$01, $40, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07a2c     01 40 90 00 
07a30     01 7D 60 00 
07a34     00 00 00 00 
07a38     00 00 00 00 | 	byte	$01, $40, $90, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00
07a3c     01 AC 9C 15 
07a40     00 00 00 00 
07a44     00 00 00 00 
07a48     00 00 00 00 | 	byte	$01, $ac, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07a4c     01 C5 90 00 
07a50     01 7D 60 00 
07a54     00 8F 1C 1C 
07a58     00 8F AC 1C | 	byte	$01, $c5, $90, $00, $01, $7d, $60, $00, $00, $8f, $1c, $1c, $00, $8f, $ac, $1c
07a5c     01 40 9C 15 
07a60     00 00 00 00 
07a64     00 00 00 00 
07a68     00 00 00 00 | 	byte	$01, $40, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07a6c     01 AC 9C 07 
07a70     00 BE 40 00 
07a74     00 00 00 00 
07a78     00 00 00 00 | 	byte	$01, $ac, $9c, $07, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00
07a7c     01 C5 9C 15 
07a80     00 00 00 00 
07a84     00 00 00 00 
07a88     00 00 00 00 | 	byte	$01, $c5, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07a8c     01 40 9C 07 
07a90     00 BE 60 00 
07a94     00 00 00 00 
07a98     00 00 00 00 | 	byte	$01, $40, $9c, $07, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00
07a9c     01 C5 9C 03 
07aa0     00 00 00 00 
07aa4     00 00 00 00 
07aa8     00 00 00 00 | 	byte	$01, $c5, $9c, $03, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07aac     01 7D 90 00 
07ab0     01 7D 60 00 
07ab4     00 00 00 00 
07ab8     00 00 00 00 | 	byte	$01, $7d, $90, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00
07abc     01 40 9C 03 
07ac0     00 00 00 00 
07ac4     00 00 00 00 
07ac8     00 00 00 00 | 	byte	$01, $40, $9c, $03, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07acc     01 E0 90 00 
07ad0     00 00 00 00 
07ad4     00 A0 1C 1C 
07ad8     00 A0 AC 1C | 	byte	$01, $e0, $90, $00, $00, $00, $00, $00, $00, $a0, $1c, $1c, $00, $a0, $ac, $1c
07adc     01 7D 9C 15 
07ae0     00 00 00 00 
07ae4     00 00 00 00 
07ae8     00 00 00 00 | 	byte	$01, $7d, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07aec     01 40 90 00 
07af0     01 7D 60 00 
07af4     00 00 00 00 
07af8     00 00 00 00 | 	byte	$01, $40, $90, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00
07afc     01 E0 9C 15 
07b00     00 00 00 00 
07b04     00 00 00 00 
07b08     00 00 00 00 | 	byte	$01, $e0, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07b0c     01 53 90 00 
07b10     00 BE 60 00 
07b14     00 00 00 00 
07b18     00 00 00 00 | 	byte	$01, $53, $90, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00
07b1c     01 40 9C 15 
07b20     00 00 00 00 
07b24     00 00 00 00 
07b28     00 00 00 00 | 	byte	$01, $40, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07b2c     01 40 90 00 
07b30     00 00 00 00 
07b34     00 00 00 00 
07b38     00 00 00 00 | 	byte	$01, $40, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07b3c     01 53 9C 15 
07b40     00 00 00 00 
07b44     00 00 00 00 
07b48     00 00 00 00 | 	byte	$01, $53, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07b4c     01 7D 90 00 
07b50     01 7D 60 00 
07b54     00 BE 2C 1C 
07b58     00 BE BC 1C | 	byte	$01, $7d, $90, $00, $01, $7d, $60, $00, $00, $be, $2c, $1c, $00, $be, $bc, $1c
07b5c     01 40 9C 15 
07b60     00 00 00 00 
07b64     00 00 00 00 
07b68     00 00 00 00 | 	byte	$01, $40, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07b6c     01 53 9C 07 
07b70     00 BE 40 00 
07b74     00 00 00 00 
07b78     00 00 00 00 | 	byte	$01, $53, $9c, $07, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00
07b7c     01 7D 9C 15 
07b80     00 00 00 00 
07b84     00 00 00 00 
07b88     00 00 00 00 | 	byte	$01, $7d, $9c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07b8c     01 40 9C 07 
07b90     00 BE 60 00 
07b94     00 00 00 00 
07b98     00 00 00 00 | 	byte	$01, $40, $9c, $07, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00
07b9c     01 53 9C 03 
07ba0     00 00 00 00 
07ba4     00 00 00 00 
07ba8     00 00 00 00 | 	byte	$01, $53, $9c, $03, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07bac     01 7D 9C 07 
07bb0     01 7D 60 00 
07bb4     00 00 00 00 
07bb8     00 00 00 00 | 	byte	$01, $7d, $9c, $07, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00
07bbc     01 40 9C 03 
07bc0     00 00 00 00 
07bc4     00 00 00 00 
07bc8     00 00 00 00 | 	byte	$01, $40, $9c, $03, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07bcc     01 53 9C 01 
07bd0     00 00 00 00 
07bd4     00 00 00 00 
07bd8     00 00 00 00 | 	byte	$01, $53, $9c, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07bdc     01 7D 9C 03 
07be0     01 7D 60 00 
07be4     00 00 00 00 
07be8     00 00 00 00 | 	byte	$01, $7d, $9c, $03, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00
07bec     01 40 9C 01 
07bf0     01 7D 60 00 
07bf4     00 00 00 00 
07bf8     00 00 00 00 | 	byte	$01, $40, $9c, $01, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00
07bfc     00 00 0C 00 
07c00     00 00 00 00 
07c04     00 00 00 00 
07c08     00 00 00 00 | 	byte	$00, $00, $0c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07c0c     01 7D 9C 01 
07c10     00 BE 60 00 
07c14     00 00 00 00 
07c18     00 00 00 00 | 	byte	$01, $7d, $9c, $01, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00
07c1c     00 00 0C 00 
07c20     00 00 00 00 
07c24     00 00 00 00 
07c28     00 00 00 00 | 	byte	$00, $00, $0c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07c2c     00 00 00 00 
07c30     01 7D 60 00 
07c34     00 00 00 00 
07c38     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00
07c3c     00 00 00 00 
07c40     00 00 00 00 
07c44     00 00 00 00 
07c48     00 00 00 00 
07c4c     00          | 	byte	$00[17]
07c4d     FE 90 00 01 
07c51     7D 60 00 00 
07c55     00 00 00 00 
07c59     00 00 00 00 | 	byte	$fe, $90, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07c5d     00 00 00 01 
07c61     7D 60 00 00 
07c65     00 00 00 00 
07c69     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07c6d     00 0C 07 00 
07c71     BE 40 00 00 
07c75     00 00 00 00 
07c79     00 00 00 00 | 	byte	$00, $0c, $07, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07c7d     FE 9C 15 01 
07c81     7D 60 00 00 
07c85     00 00 00 00 
07c89     00 00 00 00 | 	byte	$fe, $9c, $15, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07c8d     FE 90 00 00 
07c91     BE 60 00 00 
07c95     00 00 00 00 
07c99     00 00 00 00 | 	byte	$fe, $90, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07c9d     00 00 00 00 
07ca1     BE 60 00 00 
07ca5     00 00 00 00 
07ca9     00 00 00 01 | 	byte	$00, $00, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07cad     1D 90 00 01 
07cb1     7D 60 00 00 
07cb5     00 00 00 00 
07cb9     00 00 00 00 | 	byte	$1d, $90, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07cbd     FE 9C 15 00 
07cc1     BE 60 00 00 
07cc5     00 00 00 00 
07cc9     00 00 00 00 | 	byte	$fe, $9c, $15, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07ccd     FE 90 00 01 
07cd1     7D 60 00 00 
07cd5     00 00 00 00 
07cd9     00 00 00 01 | 	byte	$fe, $90, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07cdd     1D 9C 15 01 
07ce1     7D 60 00 00 
07ce5     00 00 00 00 
07ce9     00 00 00 01 | 	byte	$1d, $9c, $15, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07ced     1D 90 00 00 
07cf1     A0 60 00 00 
07cf5     00 00 00 00 
07cf9     00 00 00 00 | 	byte	$1d, $90, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07cfd     FE 9C 15 01 
07d01     7D 60 00 00 
07d05     00 00 00 00 
07d09     00 00 00 01 | 	byte	$fe, $9c, $15, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07d0d     40 90 00 00 
07d11     A0 60 00 00 
07d15     00 00 00 00 
07d19     00 00 00 01 | 	byte	$40, $90, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07d1d     1D 9C 15 00 
07d21     A0 60 00 00 
07d25     00 00 00 00 
07d29     00 00 00 01 | 	byte	$1d, $9c, $15, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07d2d     53 90 00 01 
07d31     7D 60 00 00 
07d35     00 00 00 00 
07d39     00 00 00 01 | 	byte	$53, $90, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07d3d     40 9C 15 00 
07d41     A0 60 00 00 
07d45     00 00 00 00 
07d49     00 00 00 01 | 	byte	$40, $9c, $15, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07d4d     7D 90 00 01 
07d51     7D 60 00 00 
07d55     00 00 00 00 
07d59     00 00 00 01 | 	byte	$7d, $90, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07d5d     53 9C 15 01 
07d61     7D 60 00 00 
07d65     00 00 00 00 
07d69     00 00 00 01 | 	byte	$53, $9c, $15, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07d6d     40 9C 07 00 
07d71     BE 40 00 00 
07d75     00 00 00 00 
07d79     00 00 00 01 | 	byte	$40, $9c, $07, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07d7d     7D 9C 15 01 
07d81     7D 60 00 00 
07d85     00 00 00 00 
07d89     00 00 00 01 | 	byte	$7d, $9c, $15, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07d8d     53 9C 07 00 
07d91     7F 60 00 00 
07d95     00 00 00 00 
07d99     00 00 00 01 | 	byte	$53, $9c, $07, $00, $7f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07d9d     53 9C 03 00 
07da1     7F 60 00 00 
07da5     00 00 00 00 
07da9     00 00 00 01 | 	byte	$53, $9c, $03, $00, $7f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07dad     AC 90 00 01 
07db1     7D 60 00 00 
07db5     00 00 00 00 
07db9     00 00 00 01 | 	byte	$ac, $90, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07dbd     7D 9C 03 00 
07dc1     7F 60 00 00 
07dc5     00 00 00 00 
07dc9     00 00 00 01 | 	byte	$7d, $9c, $03, $00, $7f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07dcd     7D 90 00 01 
07dd1     AC 60 00 00 
07dd5     D6 1C 1C 00 
07dd9     D6 AC 1C 01 | 	byte	$7d, $90, $00, $01, $ac, $60, $00, $00, $d6, $1c, $1c, $00, $d6, $ac, $1c, $01
07ddd     AC 9C 15 01 
07de1     AC 60 00 00 
07de5     00 00 00 00 
07de9     00 00 00 01 | 	byte	$ac, $9c, $15, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07ded     40 90 00 00 
07df1     AA 60 00 00 
07df5     00 00 00 00 
07df9     00 00 00 01 | 	byte	$40, $90, $00, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07dfd     7D 9C 15 01 
07e01     AC 60 00 00 
07e05     00 00 00 00 
07e09     00 00 00 01 | 	byte	$7d, $9c, $15, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07e0d     AC 90 00 00 
07e11     AA 60 00 00 
07e15     00 00 00 00 
07e19     00 00 00 01 | 	byte	$ac, $90, $00, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07e1d     40 9C 15 00 
07e21     AA 60 00 00 
07e25     00 00 00 00 
07e29     00 00 00 01 | 	byte	$40, $9c, $15, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07e2d     40 90 00 01 
07e31     AC 60 00 00 
07e35     00 00 00 00 
07e39     00 00 00 01 | 	byte	$40, $90, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07e3d     AC 9C 15 00 
07e41     AA 60 00 00 
07e45     00 00 00 00 
07e49     00 00 00 01 | 	byte	$ac, $9c, $15, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07e4d     C5 90 00 02 
07e51     3A 60 00 00 
07e55     8F 1C 1C 00 
07e59     8F AC 1C 01 | 	byte	$c5, $90, $00, $02, $3a, $60, $00, $00, $8f, $1c, $1c, $00, $8f, $ac, $1c, $01
07e5d     40 9C 15 02 
07e61     3A 60 00 00 
07e65     00 00 00 00 
07e69     00 00 00 01 | 	byte	$40, $9c, $15, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07e6d     AC 9C 07 00 
07e71     BE 40 00 00 
07e75     00 00 00 00 
07e79     00 00 00 01 | 	byte	$ac, $9c, $07, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07e7d     C5 9C 15 02 
07e81     3A 60 00 00 
07e85     00 00 00 00 
07e89     00 00 00 01 | 	byte	$c5, $9c, $15, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07e8d     40 9C 07 00 
07e91     E2 60 00 00 
07e95     00 00 00 00 
07e99     00 00 00 01 | 	byte	$40, $9c, $07, $00, $e2, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07e9d     C5 9C 03 00 
07ea1     E2 60 00 00 
07ea5     00 00 00 00 
07ea9     00 00 00 01 | 	byte	$c5, $9c, $03, $00, $e2, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07ead     7D 90 00 02 
07eb1     3A 60 00 00 
07eb5     00 00 00 00 
07eb9     00 00 00 01 | 	byte	$7d, $90, $00, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07ebd     40 9C 03 00 
07ec1     E2 60 00 00 
07ec5     00 00 00 00 
07ec9     00 00 00 01 | 	byte	$40, $9c, $03, $00, $e2, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07ecd     E0 90 00 02 
07ed1     80 60 00 00 
07ed5     A0 1C 1C 00 
07ed9     A0 AC 1C 01 | 	byte	$e0, $90, $00, $02, $80, $60, $00, $00, $a0, $1c, $1c, $00, $a0, $ac, $1c, $01
07edd     7D 9C 15 02 
07ee1     80 60 00 00 
07ee5     00 00 00 00 
07ee9     00 00 00 01 | 	byte	$7d, $9c, $15, $02, $80, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07eed     40 90 00 00 
07ef1     D6 60 00 00 
07ef5     00 00 00 00 
07ef9     00 00 00 01 | 	byte	$40, $90, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07efd     E0 9C 15 02 
07f01     80 60 00 00 
07f05     00 00 00 00 
07f09     00 00 00 01 | 	byte	$e0, $9c, $15, $02, $80, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07f0d     53 90 00 00 
07f11     D6 60 00 00 
07f15     00 00 00 00 
07f19     00 00 00 01 | 	byte	$53, $90, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07f1d     40 9C 15 00 
07f21     D6 60 00 00 
07f25     00 00 00 00 
07f29     00 00 00 01 | 	byte	$40, $9c, $15, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07f2d     40 90 00 01 
07f31     40 60 00 00 
07f35     00 00 00 00 
07f39     00 00 00 01 | 	byte	$40, $90, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07f3d     53 9C 15 01 
07f41     53 60 00 00 
07f45     00 00 00 00 
07f49     00 00 00 01 | 	byte	$53, $9c, $15, $01, $53, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07f4d     7D 90 00 01 
07f51     7D 60 00 00 
07f55     BE 2C 1C 00 
07f59     BE BC 1C 01 | 	byte	$7d, $90, $00, $01, $7d, $60, $00, $00, $be, $2c, $1c, $00, $be, $bc, $1c, $01
07f5d     40 9C 15 01 
07f61     7D 60 00 00 
07f65     00 00 00 00 
07f69     00 00 00 01 | 	byte	$40, $9c, $15, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07f6d     53 9C 07 00 
07f71     BE 40 00 00 
07f75     00 00 00 00 
07f79     00 00 00 01 | 	byte	$53, $9c, $07, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07f7d     7D 9C 15 01 
07f81     7D 60 00 00 
07f85     00 00 00 00 
07f89     00 00 00 01 | 	byte	$7d, $9c, $15, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07f8d     40 9C 07 00 
07f91     A0 60 00 00 
07f95     00 00 00 00 
07f99     00 00 00 01 | 	byte	$40, $9c, $07, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07f9d     53 9C 03 00 
07fa1     A0 60 00 00 
07fa5     00 00 00 00 
07fa9     00 00 00 01 | 	byte	$53, $9c, $03, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07fad     7D 9C 07 01 
07fb1     7D 60 00 00 
07fb5     00 00 00 00 
07fb9     00 00 00 01 | 	byte	$7d, $9c, $07, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07fbd     40 9C 03 00 
07fc1     A0 60 00 00 
07fc5     00 00 00 00 
07fc9     00 00 00 01 | 	byte	$40, $9c, $03, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07fcd     53 9C 01 01 
07fd1     7D 60 00 00 
07fd5     00 00 00 00 
07fd9     00 00 00 01 | 	byte	$53, $9c, $01, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07fdd     7D 9C 03 01 
07fe1     7D 50 00 00 
07fe5     00 00 00 00 
07fe9     00 00 00 01 | 	byte	$7d, $9c, $03, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
07fed     40 9C 01 01 
07ff1     7D 50 00 00 
07ff5     00 00 00 00 
07ff9     00 00 00 00 | 	byte	$40, $9c, $01, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07ffd     00 0C 00 01 
08001     7D 60 00 00 
08005     00 00 00 00 
08009     00 00 00 01 | 	byte	$00, $0c, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0800d     7D 9C 01 01 
08011     7D 50 00 00 
08015     00 00 00 00 
08019     00 00 00 00 | 	byte	$7d, $9c, $01, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0801d     00 0C 00 00 
08021     A0 60 00 00 
08025     00 00 00 00 
08029     00 00 00 00 | 	byte	$00, $0c, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0802d     00 00 00 01 
08031     7D 50 00 00 
08035     00 00 00 00 
08039     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0803d     00 00 00 01 
08041     7D 50 00 00 
08045     00 00 00 00 
08049     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0804d     FE 70 00 01 
08051     AC 30 00 00 
08055     BE 20 00 00 
08059     BE B0 00 00 | 	byte	$fe, $70, $00, $01, $ac, $30, $00, $00, $be, $20, $00, $00, $be, $b0, $00, $00
0805d     00 00 00 01 
08061     7D 60 00 00 
08065     00 00 00 00 
08069     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0806d     00 00 00 00 
08071     BE 40 00 00 
08075     00 00 00 00 
08079     00 00 00 00 | 	byte	$00, $00, $00, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0807d     FE 7C 10 01 
08081     7D 60 00 00 
08085     00 00 00 00 
08089     00 00 00 00 | 	byte	$fe, $7c, $10, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0808d     FE 70 00 01 
08091     7D 50 00 00 
08095     00 00 00 00 
08099     00 00 00 00 | 	byte	$fe, $70, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0809d     00 00 00 00 
080a1     BE 60 00 00 
080a5     00 00 00 00 
080a9     00 00 00 01 | 	byte	$00, $00, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
080ad     1D 70 00 01 
080b1     7D 60 00 00 
080b5     00 00 00 00 
080b9     00 00 00 00 | 	byte	$1d, $70, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
080bd     FE 7C 10 00 
080c1     BE 60 00 00 
080c5     00 00 00 00 
080c9     00 00 00 00 | 	byte	$fe, $7c, $10, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
080cd     FE 70 00 01 
080d1     AC 30 00 00 
080d5     00 00 00 00 
080d9     00 00 00 01 | 	byte	$fe, $70, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
080dd     1D 7C 10 01 
080e1     7D 60 00 00 
080e5     00 00 00 00 
080e9     00 00 00 01 | 	byte	$1d, $7c, $10, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
080ed     1D 70 00 00 
080f1     A0 60 00 00 
080f5     00 00 00 00 
080f9     00 00 00 00 | 	byte	$1d, $70, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
080fd     FE 7C 10 01 
08101     AC 30 00 00 
08105     00 00 00 00 
08109     00 00 00 01 | 	byte	$fe, $7c, $10, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0810d     40 70 00 01 
08111     7D 50 00 00 
08115     00 00 00 00 
08119     00 00 00 01 | 	byte	$40, $70, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0811d     1D 7C 10 00 
08121     A0 60 00 00 
08125     00 00 00 00 
08129     00 00 00 01 | 	byte	$1d, $7c, $10, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0812d     53 70 00 01 
08131     AC 30 00 00 
08135     00 00 00 00 
08139     00 00 00 01 | 	byte	$53, $70, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0813d     40 7C 10 00 
08141     A0 60 00 00 
08145     00 00 00 00 
08149     00 00 00 01 | 	byte	$40, $7c, $10, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0814d     7D 70 00 01 
08151     AC 30 00 00 
08155     00 00 00 00 
08159     00 00 00 01 | 	byte	$7d, $70, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0815d     53 7C 10 01 
08161     7D 60 00 00 
08165     00 00 00 00 
08169     00 00 00 01 | 	byte	$53, $7c, $10, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0816d     40 7C 06 00 
08171     BE 40 00 00 
08175     00 00 00 00 
08179     00 00 00 01 | 	byte	$40, $7c, $06, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0817d     7D 7C 10 01 
08181     7D 60 00 00 
08185     00 00 00 00 
08189     00 00 00 01 | 	byte	$7d, $7c, $10, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0818d     53 7C 06 01 
08191     7D 50 00 00 
08195     00 00 00 00 
08199     00 00 00 01 | 	byte	$53, $7c, $06, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0819d     53 7C 03 00 
081a1     7F 60 00 00 
081a5     00 00 00 00 
081a9     00 00 00 01 | 	byte	$53, $7c, $03, $00, $7f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
081ad     AC 70 00 01 
081b1     7D 60 00 00 
081b5     00 00 00 00 
081b9     00 00 00 01 | 	byte	$ac, $70, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
081bd     7D 7C 03 00 
081c1     7F 60 00 00 
081c5     00 00 00 00 
081c9     00 00 00 01 | 	byte	$7d, $7c, $03, $00, $7f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
081cd     7D 70 00 01 
081d1     AC 30 00 00 
081d5     D6 10 00 00 
081d9     D6 A0 00 01 | 	byte	$7d, $70, $00, $01, $ac, $30, $00, $00, $d6, $10, $00, $00, $d6, $a0, $00, $01
081dd     AC 7C 10 01 
081e1     AC 30 00 00 
081e5     00 00 00 00 
081e9     00 00 00 01 | 	byte	$ac, $7c, $10, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
081ed     40 70 00 01 
081f1     AC 30 00 00 
081f5     00 00 00 00 
081f9     00 00 00 01 | 	byte	$40, $70, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
081fd     7D 7C 10 01 
08201     AC 60 00 00 
08205     00 00 00 00 
08209     00 00 00 01 | 	byte	$7d, $7c, $10, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0820d     AC 70 00 01 
08211     7D 50 00 00 
08215     00 00 00 00 
08219     00 00 00 01 | 	byte	$ac, $70, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0821d     40 7C 10 00 
08221     AA 60 00 00 
08225     00 00 00 00 
08229     00 00 00 01 | 	byte	$40, $7c, $10, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0822d     40 70 00 01 
08231     AC 30 00 00 
08235     00 00 00 00 
08239     00 00 00 01 | 	byte	$40, $70, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0823d     AC 7C 10 00 
08241     AA 60 00 00 
08245     00 00 00 00 
08249     00 00 00 01 | 	byte	$ac, $7c, $10, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0824d     C5 70 00 01 
08251     AC 30 00 00 
08255     8F 10 00 00 
08259     8F A0 00 01 | 	byte	$c5, $70, $00, $01, $ac, $30, $00, $00, $8f, $10, $00, $00, $8f, $a0, $00, $01
0825d     40 7C 10 02 
08261     3A 60 00 00 
08265     00 00 00 00 
08269     00 00 00 01 | 	byte	$40, $7c, $10, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0826d     AC 7C 06 00 
08271     BE 40 00 00 
08275     00 00 00 00 
08279     00 00 00 01 | 	byte	$ac, $7c, $06, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0827d     C5 7C 10 02 
08281     3A 60 00 00 
08285     00 00 00 00 
08289     00 00 00 01 | 	byte	$c5, $7c, $10, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0828d     40 7C 06 01 
08291     7D 50 00 00 
08295     00 00 00 00 
08299     00 00 00 01 | 	byte	$40, $7c, $06, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0829d     C5 7C 03 00 
082a1     E2 60 00 00 
082a5     00 00 00 00 
082a9     00 00 00 01 | 	byte	$c5, $7c, $03, $00, $e2, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
082ad     7D 70 00 02 
082b1     3A 60 00 00 
082b5     00 00 00 00 
082b9     00 00 00 01 | 	byte	$7d, $70, $00, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
082bd     40 7C 03 00 
082c1     E2 60 00 00 
082c5     00 00 00 00 
082c9     00 00 00 01 | 	byte	$40, $7c, $03, $00, $e2, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
082cd     E0 70 00 01 
082d1     AC 30 00 00 
082d5     A0 10 00 00 
082d9     A0 A0 00 01 | 	byte	$e0, $70, $00, $01, $ac, $30, $00, $00, $a0, $10, $00, $00, $a0, $a0, $00, $01
082dd     7D 7C 10 02 
082e1     80 60 00 00 
082e5     00 00 00 00 
082e9     00 00 00 01 | 	byte	$7d, $7c, $10, $02, $80, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
082ed     40 70 00 00 
082f1     D6 60 00 00 
082f5     00 00 00 00 
082f9     00 00 00 01 | 	byte	$40, $70, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
082fd     E0 7C 10 01 
08301     AC 30 00 00 
08305     00 00 00 00 
08309     00 00 00 01 | 	byte	$e0, $7c, $10, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0830d     53 70 00 01 
08311     7D 50 00 00 
08315     00 00 00 00 
08319     00 00 00 01 | 	byte	$53, $70, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0831d     40 7C 10 00 
08321     D6 60 00 00 
08325     00 00 00 00 
08329     00 00 00 01 | 	byte	$40, $7c, $10, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0832d     40 70 00 01 
08331     AC 30 00 00 
08335     00 00 00 00 
08339     00 00 00 01 | 	byte	$40, $70, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0833d     53 7C 10 01 
08341     53 60 00 00 
08345     00 00 00 00 
08349     00 00 00 01 | 	byte	$53, $7c, $10, $01, $53, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0834d     7D 70 00 01 
08351     AC 30 00 00 
08355     BE 20 00 00 
08359     BE B0 00 01 | 	byte	$7d, $70, $00, $01, $ac, $30, $00, $00, $be, $20, $00, $00, $be, $b0, $00, $01
0835d     40 7C 10 01 
08361     7D 60 00 00 
08365     00 00 00 00 
08369     00 00 00 00 | 	byte	$40, $7c, $10, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0836d     7F 80 00 00 
08371     BE 40 00 00 
08375     00 00 00 00 
08379     00 00 00 00 | 	byte	$7f, $80, $00, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0837d     00 00 00 01 
08381     7D 60 00 00 
08385     00 00 00 00 
08389     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0838d     8F 80 00 01 
08391     7D 50 00 00 
08395     00 00 00 00 
08399     00 00 00 00 | 	byte	$8f, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0839d     00 00 00 00 
083a1     A0 60 00 00 
083a5     00 00 00 00 
083a9     00 00 00 00 | 	byte	$00, $00, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
083ad     7F 80 00 01 
083b1     7D 60 00 00 
083b5     00 00 00 00 
083b9     00 00 00 00 | 	byte	$7f, $80, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
083bd     A0 80 00 00 
083c1     A0 60 00 00 
083c5     00 00 00 00 
083c9     00 00 00 00 | 	byte	$a0, $80, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
083cd     00 00 00 01 
083d1     AC 30 00 00 
083d5     00 00 00 00 
083d9     00 00 00 00 | 	byte	$00, $00, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
083dd     A0 80 00 01 
083e1     AC 30 00 00 
083e5     00 00 00 00 
083e9     00 00 00 00 | 	byte	$a0, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
083ed     00 00 00 01 
083f1     AC 30 00 00 
083f5     00 00 00 00 
083f9     00 00 00 00 | 	byte	$00, $00, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
083fd     7F 80 00 01 
08401     AC 30 00 00 
08405     00 00 00 00 
08409     00 00 00 00 | 	byte	$7f, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0840d     AA 80 00 01 
08411     7D 50 00 00 
08415     00 00 00 00 
08419     00 00 00 00 | 	byte	$aa, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0841d     00 00 00 01 
08421     7D 50 00 00 
08425     00 00 00 00 
08429     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0842d     7F 80 00 01 
08431     7D 50 00 00 
08435     00 00 00 00 
08439     00 00 00 00 | 	byte	$7f, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0843d     00 00 00 01 
08441     7D 50 00 00 
08445     00 00 00 00 
08449     00 00 00 01 | 	byte	$00, $00, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0844d     53 80 00 01 
08451     AC 30 00 00 
08455     F0 10 00 00 
08459     F0 A0 00 00 | 	byte	$53, $80, $00, $01, $ac, $30, $00, $00, $f0, $10, $00, $00, $f0, $a0, $00, $00
0845d     00 00 00 01 
08461     E0 60 00 00 
08465     00 00 00 00 
08469     00 00 00 01 | 	byte	$00, $00, $00, $01, $e0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0846d     53 80 00 00 
08471     BE 40 00 00 
08475     00 00 00 00 
08479     00 00 00 00 | 	byte	$53, $80, $00, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0847d     00 00 00 01 
08481     E0 60 00 00 
08485     00 00 00 00 
08489     00 00 00 01 | 	byte	$00, $00, $00, $01, $e0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0848d     53 80 00 01 
08491     7D 50 00 00 
08495     00 00 00 00 
08499     00 00 00 00 | 	byte	$53, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0849d     00 00 00 00 
084a1     F0 60 00 00 
084a5     00 00 00 00 
084a9     00 00 00 01 | 	byte	$00, $00, $00, $00, $f0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
084ad     53 8C 15 01 
084b1     E0 60 00 00 
084b5     00 00 00 00 
084b9     00 00 00 00 | 	byte	$53, $8c, $15, $01, $e0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
084bd     00 00 00 00 
084c1     F0 60 00 00 
084c5     00 00 00 00 
084c9     00 00 00 01 | 	byte	$00, $00, $00, $00, $f0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
084cd     53 80 00 01 
084d1     AC 30 00 00 
084d5     00 00 00 00 
084d9     00 00 00 00 | 	byte	$53, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
084dd     00 00 00 01 
084e1     E0 60 00 00 
084e5     00 00 00 00 
084e9     00 00 00 01 | 	byte	$00, $00, $00, $01, $e0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
084ed     53 8C 15 00 
084f1     BE 60 00 00 
084f5     00 00 00 00 
084f9     00 00 00 00 | 	byte	$53, $8c, $15, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
084fd     00 00 00 01 
08501     AC 30 00 00 
08505     00 00 00 00 
08509     00 00 00 01 | 	byte	$00, $00, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0850d     40 80 00 01 
08511     7D 50 00 00 
08515     00 00 00 00 
08519     00 00 00 00 | 	byte	$40, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0851d     00 00 00 00 
08521     BE 60 00 00 
08525     00 00 00 00 
08529     00 00 00 01 | 	byte	$00, $00, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0852d     1D 80 00 01 
08531     AC 30 00 00 
08535     00 00 00 00 
08539     00 00 00 00 | 	byte	$1d, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0853d     00 00 00 00 
08541     BE 60 00 00 
08545     00 00 00 00 
08549     00 00 00 01 | 	byte	$00, $00, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0854d     1D 8C 15 01 
08551     AC 30 00 00 
08555     00 00 00 00 
08559     00 00 00 00 | 	byte	$1d, $8c, $15, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0855d     00 00 00 01 
08561     E0 60 00 00 
08565     00 00 00 00 
08569     00 00 00 01 | 	byte	$00, $00, $00, $01, $e0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0856d     1D 80 00 00 
08571     BE 40 00 00 
08575     00 00 00 00 
08579     00 00 00 00 | 	byte	$1d, $80, $00, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0857d     00 00 00 01 
08581     E0 60 00 00 
08585     00 00 00 00 
08589     00 00 00 01 | 	byte	$00, $00, $00, $01, $e0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0858d     1D 8C 15 01 
08591     7D 50 00 00 
08595     00 00 00 00 
08599     00 00 00 00 | 	byte	$1d, $8c, $15, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0859d     00 00 00 00 
085a1     A0 60 00 00 
085a5     00 00 00 00 
085a9     00 00 00 01 | 	byte	$00, $00, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
085ad     1D 80 00 01 
085b1     E0 60 00 00 
085b5     00 00 00 00 
085b9     00 00 00 00 | 	byte	$1d, $80, $00, $01, $e0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
085bd     00 00 00 00 
085c1     A0 60 00 00 
085c5     00 00 00 00 
085c9     00 00 00 01 | 	byte	$00, $00, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
085cd     1D 80 00 01 
085d1     AC 30 00 00 
085d5     00 00 00 00 
085d9     00 00 00 00 | 	byte	$1d, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
085dd     00 00 00 01 
085e1     AC 30 00 00 
085e5     00 00 00 00 
085e9     00 00 00 01 | 	byte	$00, $00, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
085ed     40 80 00 01 
085f1     AC 30 00 00 
085f5     00 00 00 00 
085f9     00 00 00 00 | 	byte	$40, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
085fd     00 00 00 01 
08601     E0 60 00 00 
08605     00 00 00 00 
08609     00 00 00 01 | 	byte	$00, $00, $00, $01, $e0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0860d     53 80 00 01 
08611     7D 50 00 00 
08615     00 00 00 00 
08619     00 00 00 00 | 	byte	$53, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0861d     00 00 00 00 
08621     BE 60 00 00 
08625     00 00 00 00 
08629     00 00 00 01 | 	byte	$00, $00, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0862d     40 80 00 01 
08631     AC 30 00 00 
08635     00 00 00 00 
08639     00 00 00 00 | 	byte	$40, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0863d     00 00 00 00 
08641     BE 60 00 00 
08645     00 00 00 00 
08649     00 00 00 01 | 	byte	$00, $00, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0864d     53 80 00 01 
08651     AC 30 00 00 
08655     8F 20 00 00 
08659     8F B0 00 00 | 	byte	$53, $80, $00, $01, $ac, $30, $00, $00, $8f, $20, $00, $00, $8f, $b0, $00, $00
0865d     00 00 00 02 
08661     3A 60 00 00 
08665     00 00 00 00 
08669     00 00 00 01 | 	byte	$00, $00, $00, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0866d     53 8C 15 00 
08671     BE 40 00 00 
08675     00 00 00 00 
08679     00 00 00 00 | 	byte	$53, $8c, $15, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0867d     00 00 00 02 
08681     3A 60 00 00 
08685     00 00 00 00 
08689     00 00 00 01 | 	byte	$00, $00, $00, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0868d     53 80 00 01 
08691     7D 50 00 00 
08695     00 00 00 00 
08699     00 00 00 00 | 	byte	$53, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0869d     00 00 00 01 
086a1     1D 60 00 00 
086a5     00 00 00 00 
086a9     00 00 00 01 | 	byte	$00, $00, $00, $01, $1d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
086ad     53 8C 15 02 
086b1     3A 60 00 00 
086b5     00 00 00 00 
086b9     00 00 00 00 | 	byte	$53, $8c, $15, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
086bd     00 00 00 01 
086c1     1D 60 00 00 
086c5     00 00 00 00 
086c9     00 00 00 01 | 	byte	$00, $00, $00, $01, $1d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
086cd     53 80 00 01 
086d1     AC 30 00 00 
086d5     00 00 00 00 
086d9     00 00 00 00 | 	byte	$53, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
086dd     00 00 00 02 
086e1     3A 60 00 00 
086e5     00 00 00 00 
086e9     00 00 00 01 | 	byte	$00, $00, $00, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
086ed     53 8C 15 00 
086f1     F0 60 00 00 
086f5     00 00 00 00 
086f9     00 00 00 00 | 	byte	$53, $8c, $15, $00, $f0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
086fd     00 00 00 01 
08701     AC 30 00 00 
08705     00 00 00 00 
08709     00 00 00 01 | 	byte	$00, $00, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0870d     40 80 00 01 
08711     7D 50 00 00 
08715     00 00 00 00 
08719     00 00 00 00 | 	byte	$40, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0871d     00 00 00 00 
08721     F0 60 00 00 
08725     00 00 00 00 
08729     00 00 00 01 | 	byte	$00, $00, $00, $00, $f0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0872d     1D 80 00 01 
08731     AC 30 00 00 
08735     00 00 00 00 
08739     00 00 00 00 | 	byte	$1d, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0873d     00 00 00 00 
08741     F0 60 00 00 
08745     00 00 00 00 
08749     00 00 00 01 | 	byte	$00, $00, $00, $00, $f0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0874d     1D 8C 15 01 
08751     AC 30 00 00 
08755     00 00 00 00 
08759     00 00 00 00 | 	byte	$1d, $8c, $15, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0875d     00 00 00 02 
08761     3A 60 00 00 
08765     00 00 00 00 
08769     00 00 00 01 | 	byte	$00, $00, $00, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0876d     1D 80 00 00 
08771     BE 40 00 00 
08775     00 00 00 00 
08779     00 00 00 00 | 	byte	$1d, $80, $00, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0877d     00 00 00 02 
08781     3A 60 00 00 
08785     00 00 00 00 
08789     00 00 00 01 | 	byte	$00, $00, $00, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0878d     1D 8C 15 01 
08791     7D 50 00 00 
08795     00 00 00 00 
08799     00 00 00 00 | 	byte	$1d, $8c, $15, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0879d     00 00 00 00 
087a1     BE 60 00 00 
087a5     00 00 00 00 
087a9     00 00 00 01 | 	byte	$00, $00, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
087ad     1D 80 00 02 
087b1     3A 60 00 00 
087b5     00 00 00 00 
087b9     00 00 00 00 | 	byte	$1d, $80, $00, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
087bd     00 00 00 00 
087c1     BE 60 00 00 
087c5     00 00 00 00 
087c9     00 00 00 01 | 	byte	$00, $00, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
087cd     40 80 00 01 
087d1     AC 30 00 00 
087d5     00 00 00 00 
087d9     00 00 00 00 | 	byte	$40, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
087dd     00 00 00 01 
087e1     AC 30 00 00 
087e5     00 00 00 00 
087e9     00 00 00 01 | 	byte	$00, $00, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
087ed     40 8C 15 01 
087f1     AC 30 00 00 
087f5     00 00 00 00 
087f9     00 00 00 00 | 	byte	$40, $8c, $15, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
087fd     00 00 00 02 
08801     3A 60 00 00 
08805     00 00 00 00 
08809     00 00 00 01 | 	byte	$00, $00, $00, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0880d     53 80 00 01 
08811     7D 50 00 00 
08815     00 00 00 00 
08819     00 00 00 00 | 	byte	$53, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0881d     00 00 00 00 
08821     F0 60 00 00 
08825     00 00 00 00 
08829     00 00 00 01 | 	byte	$00, $00, $00, $00, $f0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0882d     53 8C 15 01 
08831     7D 50 00 00 
08835     00 00 00 00 
08839     00 00 00 00 | 	byte	$53, $8c, $15, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0883d     00 00 00 01 
08841     7D 50 00 00 
08845     00 00 00 00 
08849     00 00 00 01 | 	byte	$00, $00, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0884d     53 80 00 01 
08851     AC 30 00 00 
08855     BE 20 00 00 
08859     BE B0 00 00 | 	byte	$53, $80, $00, $01, $ac, $30, $00, $00, $be, $20, $00, $00, $be, $b0, $00, $00
0885d     00 00 00 01 
08861     7D 60 00 00 
08865     00 00 00 00 
08869     00 00 00 01 | 	byte	$00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0886d     53 8C 15 00 
08871     BE 40 00 00 
08875     00 00 00 00 
08879     00 00 00 00 | 	byte	$53, $8c, $15, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0887d     00 00 00 01 
08881     7D 60 00 00 
08885     00 00 00 00 
08889     00 00 00 01 | 	byte	$00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0888d     40 80 00 01 
08891     7D 50 00 00 
08895     00 00 00 00 
08899     00 00 00 00 | 	byte	$40, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0889d     00 00 00 00 
088a1     BE 60 00 00 
088a5     00 00 00 00 
088a9     00 00 00 01 | 	byte	$00, $00, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
088ad     7D 80 00 01 
088b1     7D 60 00 00 
088b5     00 00 00 00 
088b9     00 00 00 00 | 	byte	$7d, $80, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
088bd     00 00 00 00 
088c1     BE 60 00 00 
088c5     00 00 00 00 
088c9     00 00 00 01 | 	byte	$00, $00, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
088cd     7D 8C 15 01 
088d1     AC 30 00 00 
088d5     00 00 00 00 
088d9     00 00 00 00 | 	byte	$7d, $8c, $15, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
088dd     00 00 00 01 
088e1     7D 60 00 00 
088e5     00 00 00 00 
088e9     00 00 00 01 | 	byte	$00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
088ed     7D 80 00 00 
088f1     BE 60 00 00 
088f5     00 00 00 00 
088f9     00 00 00 00 | 	byte	$7d, $80, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
088fd     00 00 00 01 
08901     AC 30 00 00 
08905     00 00 00 00 
08909     00 00 00 01 | 	byte	$00, $00, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0890d     7D 8C 15 01 
08911     7D 50 00 00 
08915     00 00 00 00 
08919     00 00 00 00 | 	byte	$7d, $8c, $15, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0891d     00 00 00 00 
08921     BE 60 00 00 
08925     00 00 00 00 
08929     00 00 00 01 | 	byte	$00, $00, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0892d     7D 80 00 01 
08931     AC 30 00 00 
08935     00 00 00 00 
08939     00 00 00 00 | 	byte	$7d, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0893d     00 00 00 00 
08941     D6 60 00 00 
08945     00 00 00 00 
08949     00 00 00 01 | 	byte	$00, $00, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0894d     53 80 00 01 
08951     AC 30 00 00 
08955     00 00 00 00 
08959     00 00 00 00 | 	byte	$53, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0895d     00 00 00 01 
08961     7D 60 00 00 
08965     00 00 00 00 
08969     00 00 00 01 | 	byte	$00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0896d     53 8C 15 00 
08971     BE 40 00 00 
08975     00 00 00 00 
08979     00 00 00 00 | 	byte	$53, $8c, $15, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0897d     00 00 00 01 
08981     7D 60 00 00 
08985     00 00 00 00 
08989     00 00 00 01 | 	byte	$00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0898d     40 80 00 01 
08991     7D 50 00 00 
08995     00 00 00 00 
08999     00 00 00 00 | 	byte	$40, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0899d     00 00 00 00 
089a1     BE 60 00 00 
089a5     00 00 00 00 
089a9     00 00 00 01 | 	byte	$00, $00, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
089ad     7D 80 00 01 
089b1     7D 60 00 00 
089b5     00 00 00 00 
089b9     00 00 00 00 | 	byte	$7d, $80, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
089bd     00 00 00 00 
089c1     BE 60 00 00 
089c5     00 00 00 00 
089c9     00 00 00 01 | 	byte	$00, $00, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
089cd     7D 8C 15 01 
089d1     AC 30 00 00 
089d5     00 00 00 00 
089d9     00 00 00 00 | 	byte	$7d, $8c, $15, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
089dd     00 00 00 01 
089e1     AC 30 00 00 
089e5     00 00 00 00 
089e9     00 00 00 01 | 	byte	$00, $00, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
089ed     7D 80 00 01 
089f1     AC 30 00 00 
089f5     00 00 00 00 
089f9     00 00 00 00 | 	byte	$7d, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
089fd     00 00 00 01 
08a01     7D 60 00 00 
08a05     00 00 00 00 
08a09     00 00 00 01 | 	byte	$00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08a0d     7D 8C 15 01 
08a11     7D 50 00 00 
08a15     00 00 00 00 
08a19     00 00 00 00 | 	byte	$7d, $8c, $15, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08a1d     00 00 00 00 
08a21     AA 60 00 00 
08a25     00 00 00 00 
08a29     00 00 00 01 | 	byte	$00, $00, $00, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08a2d     FC 80 00 01 
08a31     AC 30 00 00 
08a35     00 00 00 00 
08a39     00 00 00 00 | 	byte	$fc, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08a3d     00 00 00 00 
08a41     D6 60 00 00 
08a45     00 00 00 00 
08a49     00 00 00 01 | 	byte	$00, $00, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08a4d     7D 80 00 01 
08a51     AC 30 00 00 
08a55     00 00 00 00 
08a59     00 00 00 00 | 	byte	$7d, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08a5d     00 00 00 01 
08a61     7D 60 00 00 
08a65     00 00 00 00 
08a69     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08a6d     00 00 00 00 
08a71     BE 40 00 00 
08a75     00 00 00 00 
08a79     00 00 00 00 | 	byte	$00, $00, $00, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08a7d     00 00 00 01 
08a81     7D 60 00 00 
08a85     00 00 00 00 
08a89     00 00 00 01 | 	byte	$00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08a8d     7D 8C 15 01 
08a91     7D 50 00 00 
08a95     00 00 00 00 
08a99     00 00 00 00 | 	byte	$7d, $8c, $15, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08a9d     00 00 00 00 
08aa1     BE 60 00 00 
08aa5     00 00 00 00 
08aa9     00 00 00 00 | 	byte	$00, $00, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08aad     00 00 00 01 
08ab1     7D 60 00 00 
08ab5     00 00 00 00 
08ab9     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08abd     00 00 00 00 
08ac1     BE 60 00 00 
08ac5     00 00 00 00 
08ac9     00 00 00 01 | 	byte	$00, $00, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08acd     7D 8C 14 01 
08ad1     AC 30 00 00 
08ad5     00 00 00 00 
08ad9     00 00 00 00 | 	byte	$7d, $8c, $14, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08add     00 00 00 01 
08ae1     7D 60 00 00 
08ae5     00 00 00 00 
08ae9     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08aed     00 00 00 00 
08af1     BE 60 00 00 
08af5     00 00 00 00 
08af9     00 00 00 00 | 	byte	$00, $00, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08afd     00 00 00 01 
08b01     AC 30 00 00 
08b05     00 00 00 00 
08b09     00 00 00 01 | 	byte	$00, $00, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08b0d     7D 8C 12 01 
08b11     7D 50 00 00 
08b15     00 00 00 00 
08b19     00 00 00 00 | 	byte	$7d, $8c, $12, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08b1d     00 00 00 00 
08b21     BE 60 00 00 
08b25     00 00 00 00 
08b29     00 00 00 00 | 	byte	$00, $00, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08b2d     00 00 00 01 
08b31     AC 30 00 00 
08b35     00 00 00 00 
08b39     00 00 00 00 | 	byte	$00, $00, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08b3d     00 00 00 00 
08b41     AA 60 00 00 
08b45     00 00 00 00 
08b49     00 00 00 01 | 	byte	$00, $00, $00, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08b4d     7D 8C 10 01 
08b51     AC 30 00 00 
08b55     00 00 00 00 
08b59     00 00 00 00 | 	byte	$7d, $8c, $10, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08b5d     00 00 00 01 
08b61     7D 60 00 00 
08b65     00 00 00 00 
08b69     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08b6d     00 00 00 00 
08b71     BE 40 00 00 
08b75     00 00 00 00 
08b79     00 00 00 00 | 	byte	$00, $00, $00, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08b7d     00 00 00 01 
08b81     7D 60 00 00 
08b85     00 00 00 00 
08b89     00 00 00 01 | 	byte	$00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08b8d     7D 8C 08 01 
08b91     7D 50 00 00 
08b95     00 00 00 00 
08b99     00 00 00 00 | 	byte	$7d, $8c, $08, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08b9d     00 00 00 00 
08ba1     A0 60 00 00 
08ba5     00 00 00 00 
08ba9     00 00 00 00 | 	byte	$00, $00, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08bad     00 00 00 01 
08bb1     7D 60 00 00 
08bb5     00 00 00 00 
08bb9     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08bbd     00 00 00 00 
08bc1     A0 60 00 00 
08bc5     00 00 00 00 
08bc9     00 00 00 01 | 	byte	$00, $00, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08bcd     7D 8C 07 01 
08bd1     7D 50 00 00 
08bd5     00 00 00 00 
08bd9     00 00 00 00 | 	byte	$7d, $8c, $07, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08bdd     00 00 00 01 
08be1     7D 50 00 00 
08be5     00 00 00 00 
08be9     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08bed     00 00 00 01 
08bf1     AC 30 00 00 
08bf5     00 00 00 00 
08bf9     00 00 00 00 | 	byte	$00, $00, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08bfd     00 00 00 01 
08c01     7D 50 00 00 
08c05     00 00 00 00 
08c09     00 00 00 01 | 	byte	$00, $00, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08c0d     7D 8C 05 01 
08c11     7D 50 00 00 
08c15     00 00 00 00 
08c19     00 00 00 00 | 	byte	$7d, $8c, $05, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08c1d     00 00 00 01 
08c21     7D 50 00 00 
08c25     00 00 00 00 
08c29     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08c2d     00 00 00 01 
08c31     7D 50 00 00 
08c35     00 00 00 00 
08c39     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08c3d     00 00 00 01 
08c41     7D 50 00 00 
08c45     00 00 00 00 
08c49     00 00 00 01 | 	byte	$00, $00, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08c4d     53 80 00 01 
08c51     AC 30 00 00 
08c55     BE 20 00 00 
08c59     BE B0 00 00 | 	byte	$53, $80, $00, $01, $ac, $30, $00, $00, $be, $20, $00, $00, $be, $b0, $00, $00
08c5d     00 00 00 01 
08c61     7D 60 00 00 
08c65     00 00 00 00 
08c69     00 00 00 01 | 	byte	$00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08c6d     53 8C 15 00 
08c71     BE 40 00 00 
08c75     00 00 00 00 
08c79     00 00 00 00 | 	byte	$53, $8c, $15, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08c7d     00 00 00 01 
08c81     7D 60 00 00 
08c85     00 00 00 00 
08c89     00 00 00 01 | 	byte	$00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08c8d     40 80 00 01 
08c91     7D 50 00 00 
08c95     00 00 00 00 
08c99     00 00 00 00 | 	byte	$40, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08c9d     00 00 00 00 
08ca1     A0 60 00 00 
08ca5     00 00 00 00 
08ca9     00 00 00 01 | 	byte	$00, $00, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08cad     7D 80 00 01 
08cb1     7D 60 00 00 
08cb5     00 00 00 00 
08cb9     00 00 00 00 | 	byte	$7d, $80, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08cbd     00 00 00 00 
08cc1     A0 60 00 00 
08cc5     00 00 00 00 
08cc9     00 00 00 01 | 	byte	$00, $00, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08ccd     7D 8C 15 01 
08cd1     AC 30 00 00 
08cd5     00 00 00 00 
08cd9     00 00 00 00 | 	byte	$7d, $8c, $15, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08cdd     00 00 00 01 
08ce1     7D 60 00 00 
08ce5     00 00 00 00 
08ce9     00 00 00 01 | 	byte	$00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08ced     7D 80 00 00 
08cf1     7F 60 00 00 
08cf5     00 00 00 00 
08cf9     00 00 00 00 | 	byte	$7d, $80, $00, $00, $7f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08cfd     00 00 00 01 
08d01     AC 30 00 00 
08d05     00 00 00 00 
08d09     00 00 00 01 | 	byte	$00, $00, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08d0d     7D 8C 15 01 
08d11     7D 50 00 00 
08d15     00 00 00 00 
08d19     00 00 00 00 | 	byte	$7d, $8c, $15, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08d1d     00 00 00 00 
08d21     7F 60 00 00 
08d25     00 00 00 00 
08d29     00 00 00 01 | 	byte	$00, $00, $00, $00, $7f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08d2d     7D 80 00 01 
08d31     AC 30 00 00 
08d35     00 00 00 00 
08d39     00 00 00 00 | 	byte	$7d, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08d3d     00 00 00 00 
08d41     7F 60 00 00 
08d45     00 00 00 00 
08d49     00 00 00 01 | 	byte	$00, $00, $00, $00, $7f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08d4d     7D 80 00 01 
08d51     AC 30 00 00 
08d55     D6 10 00 00 
08d59     D6 A0 00 00 | 	byte	$7d, $80, $00, $01, $ac, $30, $00, $00, $d6, $10, $00, $00, $d6, $a0, $00, $00
08d5d     00 00 00 01 
08d61     AC 60 00 00 
08d65     00 00 00 00 
08d69     00 00 00 01 | 	byte	$00, $00, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08d6d     7D 8C 15 00 
08d71     BE 40 00 00 
08d75     00 00 00 00 
08d79     00 00 00 00 | 	byte	$7d, $8c, $15, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08d7d     00 00 00 01 
08d81     AC 60 00 00 
08d85     00 00 00 00 
08d89     00 00 00 01 | 	byte	$00, $00, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08d8d     53 80 00 01 
08d91     7D 50 00 00 
08d95     00 00 00 00 
08d99     00 00 00 00 | 	byte	$53, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08d9d     00 00 00 00 
08da1     AA 60 00 00 
08da5     00 00 00 00 
08da9     00 00 00 01 | 	byte	$00, $00, $00, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08dad     AC 80 00 01 
08db1     AC 60 00 00 
08db5     00 00 00 00 
08db9     00 00 00 00 | 	byte	$ac, $80, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08dbd     00 00 00 00 
08dc1     AA 60 00 00 
08dc5     00 00 00 00 
08dc9     00 00 00 01 | 	byte	$00, $00, $00, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08dcd     AC 8C 15 01 
08dd1     AC 30 00 00 
08dd5     00 00 00 00 
08dd9     00 00 00 00 | 	byte	$ac, $8c, $15, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08ddd     00 00 00 01 
08de1     AC 30 00 00 
08de5     00 00 00 00 
08de9     00 00 00 01 | 	byte	$00, $00, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08ded     AC 80 00 01 
08df1     AC 30 00 00 
08df5     00 00 00 00 
08df9     00 00 00 00 | 	byte	$ac, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08dfd     00 00 00 01 
08e01     AC 60 00 00 
08e05     00 00 00 00 
08e09     00 00 00 01 | 	byte	$00, $00, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08e0d     AC 8C 15 01 
08e11     7D 50 00 00 
08e15     00 00 00 00 
08e19     00 00 00 00 | 	byte	$ac, $8c, $15, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08e1d     00 00 00 00 
08e21     8F 60 00 00 
08e25     00 00 00 00 
08e29     00 00 00 01 | 	byte	$00, $00, $00, $00, $8f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08e2d     AC 80 00 01 
08e31     AC 30 00 00 
08e35     00 00 00 00 
08e39     00 00 00 00 | 	byte	$ac, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08e3d     00 00 00 00 
08e41     8F 60 00 00 
08e45     00 00 00 00 
08e49     00 00 00 01 | 	byte	$00, $00, $00, $00, $8f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08e4d     AC 80 00 01 
08e51     AC 30 00 00 
08e55     8F 10 00 00 
08e59     8F A0 00 00 | 	byte	$ac, $80, $00, $01, $ac, $30, $00, $00, $8f, $10, $00, $00, $8f, $a0, $00, $00
08e5d     00 00 00 02 
08e61     3A 60 00 00 
08e65     00 00 00 00 
08e69     00 00 00 01 | 	byte	$00, $00, $00, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08e6d     AC 8C 15 00 
08e71     BE 40 00 00 
08e75     00 00 00 00 
08e79     00 00 00 00 | 	byte	$ac, $8c, $15, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08e7d     00 00 00 02 
08e81     3A 60 00 00 
08e85     00 00 00 00 
08e89     00 00 00 01 | 	byte	$00, $00, $00, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08e8d     C5 80 00 01 
08e91     7D 50 00 00 
08e95     00 00 00 00 
08e99     00 00 00 00 | 	byte	$c5, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08e9d     00 00 00 00 
08ea1     BE 60 00 00 
08ea5     00 00 00 00 
08ea9     00 00 00 02 | 	byte	$00, $00, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $02
08ead     3A 80 00 02 
08eb1     3A 60 00 00 
08eb5     00 00 00 00 
08eb9     00 00 00 00 | 	byte	$3a, $80, $00, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08ebd     00 00 00 00 
08ec1     BE 60 00 00 
08ec5     00 00 00 00 
08ec9     00 00 00 02 | 	byte	$00, $00, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $02
08ecd     3A 8C 15 01 
08ed1     AC 30 00 00 
08ed5     00 00 00 00 
08ed9     00 00 00 00 | 	byte	$3a, $8c, $15, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08edd     00 00 00 02 
08ee1     3A 60 00 00 
08ee5     00 00 00 00 
08ee9     00 00 00 02 | 	byte	$00, $00, $00, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $02
08eed     3A 80 00 00 
08ef1     E2 60 00 00 
08ef5     00 00 00 00 
08ef9     00 00 00 00 | 	byte	$3a, $80, $00, $00, $e2, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08efd     00 00 00 01 
08f01     AC 30 00 00 
08f05     00 00 00 00 
08f09     00 00 00 02 | 	byte	$00, $00, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $02
08f0d     3A 8C 15 01 
08f11     7D 50 00 00 
08f15     00 00 00 00 
08f19     00 00 00 00 | 	byte	$3a, $8c, $15, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08f1d     00 00 00 00 
08f21     E2 60 00 00 
08f25     00 00 00 00 
08f29     00 00 00 02 | 	byte	$00, $00, $00, $00, $e2, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $02
08f2d     3A 80 00 01 
08f31     AC 30 00 00 
08f35     00 00 00 00 
08f39     00 00 00 00 | 	byte	$3a, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08f3d     00 00 00 00 
08f41     E2 60 00 00 
08f45     00 00 00 00 
08f49     00 00 00 01 | 	byte	$00, $00, $00, $00, $e2, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08f4d     FC 80 00 01 
08f51     AC 30 00 00 
08f55     7F 10 00 00 
08f59     7F A0 00 00 | 	byte	$fc, $80, $00, $01, $ac, $30, $00, $00, $7f, $10, $00, $00, $7f, $a0, $00, $00
08f5d     00 00 00 01 
08f61     FC 60 00 00 
08f65     00 00 00 00 
08f69     00 00 00 01 | 	byte	$00, $00, $00, $01, $fc, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08f6d     FC 80 00 00 
08f71     BE 40 00 00 
08f75     00 00 00 00 
08f79     00 00 00 00 | 	byte	$fc, $80, $00, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08f7d     00 00 00 01 
08f81     FC 60 00 00 
08f85     00 00 00 00 
08f89     00 00 00 01 | 	byte	$00, $00, $00, $01, $fc, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08f8d     C5 80 00 01 
08f91     7D 50 00 00 
08f95     00 00 00 00 
08f99     00 00 00 00 | 	byte	$c5, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08f9d     00 00 00 00 
08fa1     CA 60 00 00 
08fa5     00 00 00 00 
08fa9     00 00 00 01 | 	byte	$00, $00, $00, $00, $ca, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08fad     94 80 00 01 
08fb1     FC 60 00 00 
08fb5     00 00 00 00 
08fb9     00 00 00 00 | 	byte	$94, $80, $00, $01, $fc, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08fbd     00 00 00 00 
08fc1     CA 60 00 00 
08fc5     00 00 00 00 
08fc9     00 00 00 01 | 	byte	$00, $00, $00, $00, $ca, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08fcd     94 8C 15 01 
08fd1     AC 30 00 00 
08fd5     00 00 00 00 
08fd9     00 00 00 00 | 	byte	$94, $8c, $15, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08fdd     00 00 00 01 
08fe1     AC 30 00 00 
08fe5     00 00 00 00 
08fe9     00 00 00 01 | 	byte	$00, $00, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08fed     FC 80 00 01 
08ff1     AC 30 00 00 
08ff5     00 00 00 00 
08ff9     00 00 00 00 | 	byte	$fc, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08ffd     00 00 00 01 
09001     AC 30 00 00 
09005     00 00 00 00 
09009     00 00 00 01 | 	byte	$00, $00, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0900d     C5 80 00 01 
09011     7D 50 00 00 
09015     00 00 00 00 
09019     00 00 00 00 | 	byte	$c5, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0901d     00 00 00 01 
09021     7D 50 00 00 
09025     00 00 00 00 
09029     00 00 00 01 | 	byte	$00, $00, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0902d     94 80 00 01 
09031     7D 50 00 00 
09035     00 00 00 00 
09039     00 00 00 00 | 	byte	$94, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0903d     00 00 00 01 
09041     7D 50 00 00 
09045     00 00 00 00 
09049     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0904d     FE 90 00 01 
09051     AC 30 00 00 
09055     BE 20 00 00 
09059     BE B0 00 00 | 	byte	$fe, $90, $00, $01, $ac, $30, $00, $00, $be, $20, $00, $00, $be, $b0, $00, $00
0905d     00 00 00 01 
09061     7D 60 00 00 
09065     00 00 00 00 
09069     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0906d     00 0C 07 00 
09071     BE 40 00 00 
09075     00 00 00 00 
09079     00 00 00 00 | 	byte	$00, $0c, $07, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0907d     FE 9C 15 01 
09081     7D 60 00 00 
09085     00 00 00 00 
09089     00 00 00 00 | 	byte	$fe, $9c, $15, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0908d     FE 90 00 01 
09091     7D 50 00 00 
09095     00 00 00 00 
09099     00 00 00 00 | 	byte	$fe, $90, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0909d     00 00 00 00 
090a1     BE 60 00 00 
090a5     00 00 00 00 
090a9     00 00 00 01 | 	byte	$00, $00, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
090ad     1D 90 00 01 
090b1     7D 60 00 00 
090b5     00 00 00 00 
090b9     00 00 00 00 | 	byte	$1d, $90, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
090bd     FE 9C 15 00 
090c1     BE 60 00 00 
090c5     00 00 00 00 
090c9     00 00 00 00 | 	byte	$fe, $9c, $15, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
090cd     FE 90 00 01 
090d1     AC 30 00 00 
090d5     00 00 00 00 
090d9     00 00 00 01 | 	byte	$fe, $90, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
090dd     1D 9C 15 01 
090e1     7D 60 00 00 
090e5     00 00 00 00 
090e9     00 00 00 01 | 	byte	$1d, $9c, $15, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
090ed     1D 90 00 00 
090f1     A0 60 00 00 
090f5     00 00 00 00 
090f9     00 00 00 00 | 	byte	$1d, $90, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
090fd     FE 9C 15 01 
09101     AC 30 00 00 
09105     00 00 00 00 
09109     00 00 00 01 | 	byte	$fe, $9c, $15, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0910d     40 90 00 01 
09111     7D 50 00 00 
09115     00 00 00 00 
09119     00 00 00 01 | 	byte	$40, $90, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0911d     1D 9C 15 00 
09121     A0 60 00 00 
09125     00 00 00 00 
09129     00 00 00 01 | 	byte	$1d, $9c, $15, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0912d     53 90 00 01 
09131     AC 30 00 00 
09135     00 00 00 00 
09139     00 00 00 01 | 	byte	$53, $90, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0913d     40 9C 15 00 
09141     A0 60 00 00 
09145     00 00 00 00 
09149     00 00 00 01 | 	byte	$40, $9c, $15, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0914d     7D 90 00 01 
09151     AC 30 00 00 
09155     00 00 00 00 
09159     00 00 00 01 | 	byte	$7d, $90, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0915d     53 9C 15 01 
09161     7D 60 00 00 
09165     00 00 00 00 
09169     00 00 00 01 | 	byte	$53, $9c, $15, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0916d     40 9C 07 00 
09171     BE 40 00 00 
09175     00 00 00 00 
09179     00 00 00 01 | 	byte	$40, $9c, $07, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0917d     7D 9C 15 01 
09181     7D 60 00 00 
09185     00 00 00 00 
09189     00 00 00 01 | 	byte	$7d, $9c, $15, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0918d     53 9C 07 01 
09191     7D 50 00 00 
09195     00 00 00 00 
09199     00 00 00 01 | 	byte	$53, $9c, $07, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0919d     53 9C 03 00 
091a1     7F 60 00 00 
091a5     00 00 00 00 
091a9     00 00 00 01 | 	byte	$53, $9c, $03, $00, $7f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
091ad     AC 90 00 01 
091b1     7D 60 00 00 
091b5     00 00 00 00 
091b9     00 00 00 01 | 	byte	$ac, $90, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
091bd     7D 9C 03 00 
091c1     7F 60 00 00 
091c5     00 00 00 00 
091c9     00 00 00 01 | 	byte	$7d, $9c, $03, $00, $7f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
091cd     7D 90 00 01 
091d1     AC 30 00 00 
091d5     D6 10 00 00 
091d9     D6 A0 00 01 | 	byte	$7d, $90, $00, $01, $ac, $30, $00, $00, $d6, $10, $00, $00, $d6, $a0, $00, $01
091dd     AC 9C 15 01 
091e1     AC 30 00 00 
091e5     00 00 00 00 
091e9     00 00 00 01 | 	byte	$ac, $9c, $15, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
091ed     40 90 00 01 
091f1     AC 30 00 00 
091f5     00 00 00 00 
091f9     00 00 00 01 | 	byte	$40, $90, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
091fd     7D 9C 15 01 
09201     AC 60 00 00 
09205     00 00 00 00 
09209     00 00 00 01 | 	byte	$7d, $9c, $15, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0920d     AC 90 00 01 
09211     7D 50 00 00 
09215     00 00 00 00 
09219     00 00 00 01 | 	byte	$ac, $90, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0921d     40 9C 15 00 
09221     AA 60 00 00 
09225     00 00 00 00 
09229     00 00 00 01 | 	byte	$40, $9c, $15, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0922d     40 90 00 01 
09231     AC 30 00 00 
09235     00 00 00 00 
09239     00 00 00 01 | 	byte	$40, $90, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0923d     AC 9C 15 00 
09241     AA 60 00 00 
09245     00 00 00 00 
09249     00 00 00 01 | 	byte	$ac, $9c, $15, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0924d     C5 90 00 01 
09251     AC 30 00 00 
09255     8F 10 00 00 
09259     8F A0 00 01 | 	byte	$c5, $90, $00, $01, $ac, $30, $00, $00, $8f, $10, $00, $00, $8f, $a0, $00, $01
0925d     40 9C 15 02 
09261     3A 60 00 00 
09265     00 00 00 00 
09269     00 00 00 01 | 	byte	$40, $9c, $15, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0926d     AC 9C 07 00 
09271     BE 40 00 00 
09275     00 00 00 00 
09279     00 00 00 01 | 	byte	$ac, $9c, $07, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0927d     C5 9C 15 02 
09281     3A 60 00 00 
09285     00 00 00 00 
09289     00 00 00 01 | 	byte	$c5, $9c, $15, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0928d     40 9C 07 01 
09291     7D 50 00 00 
09295     00 00 00 00 
09299     00 00 00 01 | 	byte	$40, $9c, $07, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0929d     C5 9C 03 00 
092a1     E2 60 00 00 
092a5     00 00 00 00 
092a9     00 00 00 01 | 	byte	$c5, $9c, $03, $00, $e2, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
092ad     7D 90 00 02 
092b1     3A 60 00 00 
092b5     00 00 00 00 
092b9     00 00 00 01 | 	byte	$7d, $90, $00, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
092bd     40 9C 03 00 
092c1     E2 60 00 00 
092c5     00 00 00 00 
092c9     00 00 00 01 | 	byte	$40, $9c, $03, $00, $e2, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
092cd     E0 90 00 01 
092d1     AC 30 00 00 
092d5     A0 10 00 00 
092d9     A0 A0 00 01 | 	byte	$e0, $90, $00, $01, $ac, $30, $00, $00, $a0, $10, $00, $00, $a0, $a0, $00, $01
092dd     7D 9C 15 02 
092e1     80 60 00 00 
092e5     00 00 00 00 
092e9     00 00 00 01 | 	byte	$7d, $9c, $15, $02, $80, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
092ed     40 90 00 00 
092f1     D6 60 00 00 
092f5     00 00 00 00 
092f9     00 00 00 01 | 	byte	$40, $90, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
092fd     E0 9C 15 01 
09301     AC 30 00 00 
09305     00 00 00 00 
09309     00 00 00 01 | 	byte	$e0, $9c, $15, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0930d     53 90 00 01 
09311     7D 50 00 00 
09315     00 00 00 00 
09319     00 00 00 01 | 	byte	$53, $90, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0931d     40 9C 15 00 
09321     D6 60 00 00 
09325     00 00 00 00 
09329     00 00 00 01 | 	byte	$40, $9c, $15, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0932d     40 90 00 01 
09331     AC 30 00 00 
09335     00 00 00 00 
09339     00 00 00 01 | 	byte	$40, $90, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0933d     53 9C 15 01 
09341     53 60 00 00 
09345     00 00 00 00 
09349     00 00 00 01 | 	byte	$53, $9c, $15, $01, $53, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0934d     7D 90 00 01 
09351     AC 30 00 00 
09355     BE 20 00 00 
09359     BE B0 00 01 | 	byte	$7d, $90, $00, $01, $ac, $30, $00, $00, $be, $20, $00, $00, $be, $b0, $00, $01
0935d     40 9C 15 01 
09361     7D 60 00 00 
09365     00 00 00 00 
09369     00 00 00 01 | 	byte	$40, $9c, $15, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0936d     53 9C 07 00 
09371     BE 40 00 00 
09375     00 00 00 00 
09379     00 00 00 01 | 	byte	$53, $9c, $07, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0937d     7D 9C 15 01 
09381     7D 60 00 00 
09385     00 00 00 00 
09389     00 00 00 01 | 	byte	$7d, $9c, $15, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0938d     40 9C 07 01 
09391     7D 50 00 00 
09395     00 00 00 00 
09399     00 00 00 01 | 	byte	$40, $9c, $07, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0939d     53 9C 03 00 
093a1     A0 60 00 00 
093a5     00 00 00 00 
093a9     00 00 00 01 | 	byte	$53, $9c, $03, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
093ad     7D 9C 07 01 
093b1     7D 60 00 00 
093b5     00 00 00 00 
093b9     00 00 00 01 | 	byte	$7d, $9c, $07, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
093bd     40 9C 03 00 
093c1     A0 60 00 00 
093c5     00 00 00 00 
093c9     00 00 00 01 | 	byte	$40, $9c, $03, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
093cd     53 9C 01 01 
093d1     AC 30 00 00 
093d5     00 00 00 00 
093d9     00 00 00 01 | 	byte	$53, $9c, $01, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
093dd     7D 9C 03 01 
093e1     AC 30 00 00 
093e5     00 00 00 00 
093e9     00 00 00 01 | 	byte	$7d, $9c, $03, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
093ed     40 9C 01 01 
093f1     AC 30 00 00 
093f5     00 00 00 00 
093f9     00 00 00 00 | 	byte	$40, $9c, $01, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
093fd     00 0C 00 01 
09401     AC 30 00 00 
09405     00 00 00 00 
09409     00 00 00 01 | 	byte	$00, $0c, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0940d     7D 9C 01 01 
09411     7D 50 00 00 
09415     00 00 00 00 
09419     00 00 00 00 | 	byte	$7d, $9c, $01, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0941d     00 0C 00 01 
09421     7D 50 00 00 
09425     00 00 00 00 
09429     00 00 00 00 | 	byte	$00, $0c, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0942d     00 00 00 01 
09431     7D 50 00 00 
09435     00 00 00 00 
09439     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0943d     00 00 00 01 
09441     7D 50 00 00 
09445     00 00 00 00 
09449     00 00 00 01 | 	byte	$00, $00, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0944d     E0 80 00 01 
09451     AC 30 00 00 
09455     F0 10 00 00 
09459     F0 A0 00 01 | 	byte	$e0, $80, $00, $01, $ac, $30, $00, $00, $f0, $10, $00, $00, $f0, $a0, $00, $01
0945d     7D 80 00 01 
09461     E0 60 00 00 
09465     00 00 00 00 
09469     00 00 00 01 | 	byte	$7d, $80, $00, $01, $e0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0946d     40 80 00 00 
09471     BE 40 00 00 
09475     00 00 00 00 
09479     00 00 00 00 | 	byte	$40, $80, $00, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0947d     FE 80 00 01 
09481     E0 60 00 00 
09485     00 00 00 00 
09489     00 00 00 00 | 	byte	$fe, $80, $00, $01, $e0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0948d     F0 80 00 01 
09491     7D 50 00 00 
09495     00 00 00 00 
09499     00 00 00 00 | 	byte	$f0, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0949d     FE 80 00 00 
094a1     F0 60 00 00 
094a5     00 00 00 00 
094a9     00 00 00 01 | 	byte	$fe, $80, $00, $00, $f0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
094ad     40 80 00 01 
094b1     E0 60 00 00 
094b5     00 00 00 00 
094b9     00 00 00 01 | 	byte	$40, $80, $00, $01, $e0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
094bd     7D 80 00 00 
094c1     F0 60 00 00 
094c5     00 00 00 00 
094c9     00 00 00 01 | 	byte	$7d, $80, $00, $00, $f0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
094cd     E0 80 00 01 
094d1     AC 30 00 00 
094d5     00 00 00 00 
094d9     00 00 00 01 | 	byte	$e0, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
094dd     7D 80 00 01 
094e1     E0 60 00 00 
094e5     00 00 00 00 
094e9     00 00 00 01 | 	byte	$7d, $80, $00, $01, $e0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
094ed     40 80 00 00 
094f1     BE 60 00 00 
094f5     00 00 00 00 
094f9     00 00 00 00 | 	byte	$40, $80, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
094fd     FE 80 00 01 
09501     AC 30 00 00 
09505     00 00 00 00 
09509     00 00 00 00 | 	byte	$fe, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0950d     F0 80 00 01 
09511     7D 50 00 00 
09515     00 00 00 00 
09519     00 00 00 00 | 	byte	$f0, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0951d     FE 80 00 00 
09521     BE 60 00 00 
09525     00 00 00 00 
09529     00 00 00 01 | 	byte	$fe, $80, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0952d     40 80 00 01 
09531     AC 30 00 00 
09535     00 00 00 00 
09539     00 00 00 01 | 	byte	$40, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0953d     7D 80 00 00 
09541     BE 60 00 00 
09545     00 00 00 00 
09549     00 00 00 01 | 	byte	$7d, $80, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0954d     E0 80 00 01 
09551     AC 30 00 00 
09555     00 00 00 00 
09559     00 00 00 01 | 	byte	$e0, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0955d     7D 80 00 01 
09561     E0 60 00 00 
09565     00 00 00 00 
09569     00 00 00 01 | 	byte	$7d, $80, $00, $01, $e0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0956d     40 80 00 00 
09571     BE 40 00 00 
09575     00 00 00 00 
09579     00 00 00 00 | 	byte	$40, $80, $00, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0957d     FE 80 00 01 
09581     E0 60 00 00 
09585     00 00 00 00 
09589     00 00 00 00 | 	byte	$fe, $80, $00, $01, $e0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0958d     F0 80 00 01 
09591     7D 50 00 00 
09595     00 00 00 00 
09599     00 00 00 00 | 	byte	$f0, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0959d     FE 80 00 00 
095a1     A0 60 00 00 
095a5     00 00 00 00 
095a9     00 00 00 01 | 	byte	$fe, $80, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
095ad     40 80 00 01 
095b1     E0 60 00 00 
095b5     00 00 00 00 
095b9     00 00 00 01 | 	byte	$40, $80, $00, $01, $e0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
095bd     7D 80 00 00 
095c1     A0 60 00 00 
095c5     00 00 00 00 
095c9     00 00 00 01 | 	byte	$7d, $80, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
095cd     E0 80 00 01 
095d1     AC 30 00 00 
095d5     00 00 00 00 
095d9     00 00 00 01 | 	byte	$e0, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
095dd     7D 80 00 01 
095e1     AC 30 00 00 
095e5     00 00 00 00 
095e9     00 00 00 01 | 	byte	$7d, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
095ed     40 80 00 01 
095f1     AC 30 00 00 
095f5     00 00 00 00 
095f9     00 00 00 00 | 	byte	$40, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
095fd     FE 80 00 01 
09601     E0 60 00 00 
09605     00 00 00 00 
09609     00 00 00 00 | 	byte	$fe, $80, $00, $01, $e0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0960d     F0 80 00 01 
09611     7D 50 00 00 
09615     00 00 00 00 
09619     00 00 00 00 | 	byte	$f0, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0961d     FE 80 00 00 
09621     BE 60 00 00 
09625     00 00 00 00 
09629     00 00 00 01 | 	byte	$fe, $80, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0962d     40 80 00 01 
09631     AC 30 00 00 
09635     00 00 00 00 
09639     00 00 00 01 | 	byte	$40, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0963d     7D 80 00 00 
09641     BE 60 00 00 
09645     00 00 00 00 
09649     00 00 00 02 | 	byte	$7d, $80, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $02
0964d     3A 80 00 01 
09651     AC 30 00 00 
09655     8F 20 00 00 
09659     8F B0 00 01 | 	byte	$3a, $80, $00, $01, $ac, $30, $00, $00, $8f, $20, $00, $00, $8f, $b0, $00, $01
0965d     E0 80 00 02 
09661     3A 60 00 00 
09665     00 00 00 00 
09669     00 00 00 01 | 	byte	$e0, $80, $00, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0966d     7D 80 00 00 
09671     BE 40 00 00 
09675     00 00 00 00 
09679     00 00 00 01 | 	byte	$7d, $80, $00, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0967d     1D 80 00 02 
09681     3A 60 00 00 
09685     00 00 00 00 
09689     00 00 00 00 | 	byte	$1d, $80, $00, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0968d     F0 80 00 01 
09691     7D 50 00 00 
09695     00 00 00 00 
09699     00 00 00 01 | 	byte	$f0, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0969d     1D 80 00 01 
096a1     1D 60 00 00 
096a5     00 00 00 00 
096a9     00 00 00 01 | 	byte	$1d, $80, $00, $01, $1d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
096ad     7D 80 00 02 
096b1     3A 60 00 00 
096b5     00 00 00 00 
096b9     00 00 00 01 | 	byte	$7d, $80, $00, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
096bd     E0 80 00 01 
096c1     1D 60 00 00 
096c5     00 00 00 00 
096c9     00 00 00 02 | 	byte	$e0, $80, $00, $01, $1d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $02
096cd     3A 80 00 01 
096d1     AC 30 00 00 
096d5     00 00 00 00 
096d9     00 00 00 01 | 	byte	$3a, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
096dd     E0 80 00 02 
096e1     3A 60 00 00 
096e5     00 00 00 00 
096e9     00 00 00 01 | 	byte	$e0, $80, $00, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
096ed     7D 80 00 00 
096f1     F0 60 00 00 
096f5     00 00 00 00 
096f9     00 00 00 01 | 	byte	$7d, $80, $00, $00, $f0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
096fd     1D 80 00 01 
09701     AC 30 00 00 
09705     00 00 00 00 
09709     00 00 00 00 | 	byte	$1d, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0970d     F0 80 00 01 
09711     7D 50 00 00 
09715     00 00 00 00 
09719     00 00 00 01 | 	byte	$f0, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0971d     1D 80 00 00 
09721     F0 60 00 00 
09725     00 00 00 00 
09729     00 00 00 01 | 	byte	$1d, $80, $00, $00, $f0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0972d     7D 80 00 01 
09731     AC 30 00 00 
09735     00 00 00 00 
09739     00 00 00 01 | 	byte	$7d, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0973d     E0 80 00 00 
09741     F0 60 00 00 
09745     00 00 00 00 
09749     00 00 00 02 | 	byte	$e0, $80, $00, $00, $f0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $02
0974d     3A 80 00 01 
09751     AC 30 00 00 
09755     00 00 00 00 
09759     00 00 00 01 | 	byte	$3a, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0975d     E0 80 00 02 
09761     3A 60 00 00 
09765     00 00 00 00 
09769     00 00 00 01 | 	byte	$e0, $80, $00, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0976d     7D 80 00 00 
09771     BE 40 00 00 
09775     00 00 00 00 
09779     00 00 00 01 | 	byte	$7d, $80, $00, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0977d     1D 80 00 02 
09781     3A 60 00 00 
09785     00 00 00 00 
09789     00 00 00 00 | 	byte	$1d, $80, $00, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0978d     F0 80 00 01 
09791     7D 50 00 00 
09795     00 00 00 00 
09799     00 00 00 01 | 	byte	$f0, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0979d     1D 80 00 00 
097a1     BE 60 00 00 
097a5     00 00 00 00 
097a9     00 00 00 01 | 	byte	$1d, $80, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
097ad     7D 80 00 02 
097b1     3A 60 00 00 
097b5     00 00 00 00 
097b9     00 00 00 01 | 	byte	$7d, $80, $00, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
097bd     E0 80 00 00 
097c1     BE 60 00 00 
097c5     00 00 00 00 
097c9     00 00 00 02 | 	byte	$e0, $80, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $02
097cd     3A 80 00 01 
097d1     AC 30 00 00 
097d5     00 00 00 00 
097d9     00 00 00 01 | 	byte	$3a, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
097dd     E0 80 00 01 
097e1     AC 30 00 00 
097e5     00 00 00 00 
097e9     00 00 00 01 | 	byte	$e0, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
097ed     7D 80 00 01 
097f1     AC 30 00 00 
097f5     00 00 00 00 
097f9     00 00 00 01 | 	byte	$7d, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
097fd     1D 80 00 02 
09801     3A 60 00 00 
09805     00 00 00 00 
09809     00 00 00 00 | 	byte	$1d, $80, $00, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0980d     F0 80 00 01 
09811     7D 50 00 00 
09815     00 00 00 00 
09819     00 00 00 01 | 	byte	$f0, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0981d     1D 80 00 00 
09821     F0 60 00 00 
09825     00 00 00 00 
09829     00 00 00 01 | 	byte	$1d, $80, $00, $00, $f0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0982d     7D 80 00 01 
09831     7D 50 00 00 
09835     00 00 00 00 
09839     00 00 00 01 | 	byte	$7d, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0983d     E0 80 00 01 
09841     7D 50 00 00 
09845     00 00 00 00 
09849     00 00 00 01 | 	byte	$e0, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0984d     FC 80 00 01 
09851     AC 30 00 00 
09855     BE 20 00 00 
09859     BE B0 00 01 | 	byte	$fc, $80, $00, $01, $ac, $30, $00, $00, $be, $20, $00, $00, $be, $b0, $00, $01
0985d     7D 80 00 01 
09861     7D 60 00 00 
09865     00 00 00 00 
09869     00 00 00 01 | 	byte	$7d, $80, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0986d     40 80 00 00 
09871     BE 40 00 00 
09875     00 00 00 00 
09879     00 00 00 00 | 	byte	$40, $80, $00, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0987d     FE 80 00 01 
09881     7D 60 00 00 
09885     00 00 00 00 
09889     00 00 00 00 | 	byte	$fe, $80, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0988d     BE 80 00 01 
09891     7D 50 00 00 
09895     00 00 00 00 
09899     00 00 00 00 | 	byte	$be, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0989d     FE 80 00 00 
098a1     A0 60 00 00 
098a5     00 00 00 00 
098a9     00 00 00 01 | 	byte	$fe, $80, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
098ad     40 80 00 01 
098b1     7D 60 00 00 
098b5     00 00 00 00 
098b9     00 00 00 01 | 	byte	$40, $80, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
098bd     7D 80 00 00 
098c1     A0 60 00 00 
098c5     00 00 00 00 
098c9     00 00 00 01 | 	byte	$7d, $80, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
098cd     FC 80 00 01 
098d1     AC 30 00 00 
098d5     00 00 00 00 
098d9     00 00 00 01 | 	byte	$fc, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
098dd     7D 80 00 01 
098e1     7D 60 00 00 
098e5     00 00 00 00 
098e9     00 00 00 01 | 	byte	$7d, $80, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
098ed     40 80 00 00 
098f1     7F 60 00 00 
098f5     00 00 00 00 
098f9     00 00 00 00 | 	byte	$40, $80, $00, $00, $7f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
098fd     FE 80 00 01 
09901     AC 30 00 00 
09905     00 00 00 00 
09909     00 00 00 00 | 	byte	$fe, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0990d     BE 80 00 01 
09911     7D 50 00 00 
09915     00 00 00 00 
09919     00 00 00 00 | 	byte	$be, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0991d     FE 80 00 00 
09921     7F 60 00 00 
09925     00 00 00 00 
09929     00 00 00 01 | 	byte	$fe, $80, $00, $00, $7f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0992d     40 80 00 01 
09931     AC 30 00 00 
09935     00 00 00 00 
09939     00 00 00 01 | 	byte	$40, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0993d     7D 80 00 00 
09941     7F 60 00 00 
09945     00 00 00 00 
09949     00 00 00 02 | 	byte	$7d, $80, $00, $00, $7f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $02
0994d     3A 80 00 01 
09951     AC 30 00 00 
09955     D6 10 00 00 
09959     D6 A0 00 01 | 	byte	$3a, $80, $00, $01, $ac, $30, $00, $00, $d6, $10, $00, $00, $d6, $a0, $00, $01
0995d     AC 80 00 01 
09961     AC 60 00 00 
09965     00 00 00 00 
09969     00 00 00 01 | 	byte	$ac, $80, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0996d     53 80 00 00 
09971     BE 40 00 00 
09975     00 00 00 00 
09979     00 00 00 01 | 	byte	$53, $80, $00, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0997d     1D 80 00 01 
09981     AC 60 00 00 
09985     00 00 00 00 
09989     00 00 00 00 | 	byte	$1d, $80, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0998d     D6 80 00 01 
09991     7D 50 00 00 
09995     00 00 00 00 
09999     00 00 00 01 | 	byte	$d6, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0999d     1D 80 00 00 
099a1     AA 60 00 00 
099a5     00 00 00 00 
099a9     00 00 00 01 | 	byte	$1d, $80, $00, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
099ad     53 80 00 01 
099b1     AC 60 00 00 
099b5     00 00 00 00 
099b9     00 00 00 01 | 	byte	$53, $80, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
099bd     AC 80 00 00 
099c1     AA 60 00 00 
099c5     00 00 00 00 
099c9     00 00 00 02 | 	byte	$ac, $80, $00, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $02
099cd     3A 80 00 01 
099d1     AC 30 00 00 
099d5     00 00 00 00 
099d9     00 00 00 01 | 	byte	$3a, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
099dd     AC 80 00 01 
099e1     AC 30 00 00 
099e5     00 00 00 00 
099e9     00 00 00 01 | 	byte	$ac, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
099ed     53 80 00 01 
099f1     AC 30 00 00 
099f5     00 00 00 00 
099f9     00 00 00 01 | 	byte	$53, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
099fd     1D 80 00 01 
09a01     AC 60 00 00 
09a05     00 00 00 00 
09a09     00 00 00 00 | 	byte	$1d, $80, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09a0d     D6 80 00 01 
09a11     7D 50 00 00 
09a15     00 00 00 00 
09a19     00 00 00 01 | 	byte	$d6, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
09a1d     1D 80 00 00 
09a21     8F 60 00 00 
09a25     00 00 00 00 
09a29     00 00 00 01 | 	byte	$1d, $80, $00, $00, $8f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
09a2d     53 80 00 01 
09a31     AC 30 00 00 
09a35     00 00 00 00 
09a39     00 00 00 01 | 	byte	$53, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
09a3d     AC 80 00 00 
09a41     8F 60 00 00 
09a45     00 00 00 00 
09a49     00 00 00 02 | 	byte	$ac, $80, $00, $00, $8f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $02
09a4d     3A 80 00 01 
09a51     AC 30 00 00 
09a55     8F 10 00 00 
09a59     8F A0 00 01 | 	byte	$3a, $80, $00, $01, $ac, $30, $00, $00, $8f, $10, $00, $00, $8f, $a0, $00, $01
09a5d     C5 80 00 02 
09a61     3A 60 00 00 
09a65     00 00 00 00 
09a69     00 00 00 01 | 	byte	$c5, $80, $00, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
09a6d     7D 80 00 00 
09a71     BE 40 00 00 
09a75     00 00 00 00 
09a79     00 00 00 01 | 	byte	$7d, $80, $00, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
09a7d     1D 80 00 02 
09a81     3A 60 00 00 
09a85     00 00 00 00 
09a89     00 00 00 00 | 	byte	$1d, $80, $00, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09a8d     E2 80 00 01 
09a91     7D 50 00 00 
09a95     00 00 00 00 
09a99     00 00 00 01 | 	byte	$e2, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
09a9d     1D 80 00 00 
09aa1     BE 60 00 00 
09aa5     00 00 00 00 
09aa9     00 00 00 01 | 	byte	$1d, $80, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
09aad     7D 80 00 02 
09ab1     3A 60 00 00 
09ab5     00 00 00 00 
09ab9     00 00 00 01 | 	byte	$7d, $80, $00, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
09abd     C5 80 00 00 
09ac1     BE 60 00 00 
09ac5     00 00 00 00 
09ac9     00 00 00 02 | 	byte	$c5, $80, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $02
09acd     3A 80 00 01 
09ad1     AC 30 00 00 
09ad5     00 00 00 00 
09ad9     00 00 00 01 | 	byte	$3a, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
09add     C5 80 00 02 
09ae1     3A 60 00 00 
09ae5     00 00 00 00 
09ae9     00 00 00 01 | 	byte	$c5, $80, $00, $02, $3a, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
09aed     7D 80 00 00 
09af1     E2 60 00 00 
09af5     00 00 00 00 
09af9     00 00 00 01 | 	byte	$7d, $80, $00, $00, $e2, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
09afd     1D 80 00 01 
09b01     AC 30 00 00 
09b05     00 00 00 00 
09b09     00 00 00 00 | 	byte	$1d, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09b0d     E2 80 00 01 
09b11     7D 50 00 00 
09b15     00 00 00 00 
09b19     00 00 00 01 | 	byte	$e2, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
09b1d     1D 80 00 00 
09b21     E2 60 00 00 
09b25     00 00 00 00 
09b29     00 00 00 01 | 	byte	$1d, $80, $00, $00, $e2, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
09b2d     7D 80 00 01 
09b31     AC 30 00 00 
09b35     00 00 00 00 
09b39     00 00 00 01 | 	byte	$7d, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
09b3d     C5 80 00 00 
09b41     E2 60 00 00 
09b45     00 00 00 00 
09b49     00 00 00 01 | 	byte	$c5, $80, $00, $00, $e2, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
09b4d     FC 80 00 01 
09b51     AC 30 00 00 
09b55     7F 10 00 00 
09b59     7F A0 00 01 | 	byte	$fc, $80, $00, $01, $ac, $30, $00, $00, $7f, $10, $00, $00, $7f, $a0, $00, $01
09b5d     94 80 00 01 
09b61     FC 60 00 00 
09b65     00 00 00 00 
09b69     00 00 00 01 | 	byte	$94, $80, $00, $01, $fc, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
09b6d     53 80 00 00 
09b71     BE 40 00 00 
09b75     00 00 00 00 
09b79     00 00 00 01 | 	byte	$53, $80, $00, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
09b7d     1D 80 00 01 
09b81     FC 60 00 00 
09b85     00 00 00 00 
09b89     00 00 00 00 | 	byte	$1d, $80, $00, $01, $fc, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09b8d     FE 80 00 01 
09b91     7D 50 00 00 
09b95     00 00 00 00 
09b99     00 00 00 01 | 	byte	$fe, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
09b9d     1D 80 00 00 
09ba1     CA 60 00 00 
09ba5     00 00 00 00 
09ba9     00 00 00 00 | 	byte	$1d, $80, $00, $00, $ca, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09bad     FE 80 00 01 
09bb1     FC 60 00 00 
09bb5     00 00 00 00 
09bb9     00 00 00 00 | 	byte	$fe, $80, $00, $01, $fc, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09bbd     CA 80 00 00 
09bc1     CA 60 00 00 
09bc5     00 00 00 00 
09bc9     00 00 00 00 | 	byte	$ca, $80, $00, $00, $ca, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09bcd     AA 80 00 01 
09bd1     AC 30 00 00 
09bd5     00 00 00 00 
09bd9     00 00 00 00 | 	byte	$aa, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09bdd     CA 80 00 01 
09be1     AC 30 00 00 
09be5     00 00 00 00 
09be9     00 00 00 00 | 	byte	$ca, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09bed     FE 80 00 01 
09bf1     AC 30 00 00 
09bf5     00 00 00 00 
09bf9     00 00 00 01 | 	byte	$fe, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
09bfd     1D 80 00 01 
09c01     AC 30 00 00 
09c05     00 00 00 00 
09c09     00 00 00 01 | 	byte	$1d, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
09c0d     53 80 00 01 
09c11     7D 50 00 00 
09c15     00 00 00 00 
09c19     00 00 00 01 | 	byte	$53, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
09c1d     94 80 00 01 
09c21     7D 50 00 00 
09c25     00 00 00 00 
09c29     00 00 00 01 | 	byte	$94, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
09c2d     C5 80 00 01 
09c31     7D 50 00 00 
09c35     00 00 00 00 
09c39     00 00 00 01 | 	byte	$c5, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
09c3d     FC 80 00 01 
09c41     7D 50 00 00 
09c45     00 00 00 00 
09c49     00 00 00 00 | 	byte	$fc, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09c4d     FE 80 00 01 
09c51     AC 30 00 00 
09c55     BE 20 00 00 
09c59     BE B0 00 00 | 	byte	$fe, $80, $00, $01, $ac, $30, $00, $00, $be, $20, $00, $00, $be, $b0, $00, $00
09c5d     00 00 00 00 
09c61     00 00 00 00 
09c65     00 00 00 00 
09c69     00 00 00 00 
09c6d     00          | 	byte	$00[17]
09c6e     0C 07 00 00 
09c72     00 00 00 00 
09c76     00 00 00 00 
09c7a     00 00 00 FE | 	byte	$0c, $07, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe
09c7e     8C 15 00 00 
09c82     00 00 00 00 
09c86     00 00 00 00 
09c8a     00 00 00 FE | 	byte	$8c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe
09c8e     80 00 01 AC 
09c92     30 00 00 00 
09c96     00 00 00 00 
09c9a     00 00 00 00 | 	byte	$80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09c9e     00 00 00 00 
09ca2     00 00 00 00 
09ca6     00 00 00 00 
09caa     00 00       | 	byte	$00[14]
09cac     01 1D 80 00 
09cb0     00 00 00 00 
09cb4     00 00 00 00 
09cb8     00 00 00 00 | 	byte	$01, $1d, $80, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09cbc     00 FE 8C 15 
09cc0     00 00 00 00 
09cc4     00 00 00 00 
09cc8     00 00 00 00 | 	byte	$00, $fe, $8c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09ccc     00 FE 80 00 
09cd0     01 AC 30 00 
09cd4     00 00 00 00 
09cd8     00 00 00 00 | 	byte	$00, $fe, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00
09cdc     01 1D 8C 15 
09ce0     01 AC 30 00 
09ce4     00 00 00 00 
09ce8     00 00 00 00 | 	byte	$01, $1d, $8c, $15, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00
09cec     01 1D 80 00 
09cf0     01 AC 30 00 
09cf4     00 00 00 00 
09cf8     00 00 00 00 | 	byte	$01, $1d, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00
09cfc     00 FE 8C 15 
09d00     00 00 00 00 
09d04     00 00 00 00 
09d08     00 00 00 00 | 	byte	$00, $fe, $8c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09d0c     01 40 80 00 
09d10     01 AC 30 00 
09d14     00 00 00 00 
09d18     00 00 00 00 | 	byte	$01, $40, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00
09d1c     01 1D 8C 15 
09d20     00 00 00 00 
09d24     00 00 00 00 
09d28     00 00 00 00 | 	byte	$01, $1d, $8c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09d2c     01 53 80 00 
09d30     00 00 00 00 
09d34     00 00 00 00 
09d38     00 00 00 00 | 	byte	$01, $53, $80, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09d3c     01 40 8C 15 
09d40     00 00 00 00 
09d44     00 00 00 00 
09d48     00 00 00 00 | 	byte	$01, $40, $8c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09d4c     01 7D 80 00 
09d50     01 AC 30 00 
09d54     00 00 00 00 
09d58     00 00 00 00 | 	byte	$01, $7d, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00
09d5c     01 53 8C 15 
09d60     00 00 00 00 
09d64     00 00 00 00 
09d68     00 00 00 00 | 	byte	$01, $53, $8c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09d6c     01 40 8C 07 
09d70     00 00 00 00 
09d74     00 00 00 00 
09d78     00 00 00 00 | 	byte	$01, $40, $8c, $07, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09d7c     01 7D 8C 15 
09d80     00 00 00 00 
09d84     00 00 00 00 
09d88     00 00 00 00 | 	byte	$01, $7d, $8c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09d8c     01 53 8C 07 
09d90     01 AC 30 00 
09d94     00 00 00 00 
09d98     00 00 00 00 | 	byte	$01, $53, $8c, $07, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00
09d9c     01 53 8C 03 
09da0     00 00 00 00 
09da4     00 00 00 00 
09da8     00 00 00 00 | 	byte	$01, $53, $8c, $03, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09dac     01 AC 80 00 
09db0     00 00 00 00 
09db4     00 00 00 00 
09db8     00 00 00 00 | 	byte	$01, $ac, $80, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09dbc     01 7D 8C 03 
09dc0     00 00 00 00 
09dc4     00 00 00 00 
09dc8     00 00 00 00 | 	byte	$01, $7d, $8c, $03, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09dcc     01 7D 80 00 
09dd0     01 AC 30 00 
09dd4     00 D6 10 00 
09dd8     00 D6 A0 00 | 	byte	$01, $7d, $80, $00, $01, $ac, $30, $00, $00, $d6, $10, $00, $00, $d6, $a0, $00
09ddc     01 AC 8C 15 
09de0     01 AC 30 00 
09de4     00 00 00 00 
09de8     00 00 00 00 | 	byte	$01, $ac, $8c, $15, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00
09dec     01 40 80 00 
09df0     01 AC 30 00 
09df4     00 00 00 00 
09df8     00 00 00 00 | 	byte	$01, $40, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00
09dfc     01 7D 8C 15 
09e00     00 00 00 00 
09e04     00 00 00 00 
09e08     00 00 00 00 | 	byte	$01, $7d, $8c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09e0c     01 AC 80 00 
09e10     01 AC 30 00 
09e14     00 00 00 00 
09e18     00 00 00 00 | 	byte	$01, $ac, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00
09e1c     01 40 8C 15 
09e20     00 00 00 00 
09e24     00 00 00 00 
09e28     00 00 00 00 | 	byte	$01, $40, $8c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09e2c     01 40 80 00 
09e30     00 00 00 00 
09e34     00 00 00 00 
09e38     00 00 00 00 | 	byte	$01, $40, $80, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09e3c     01 AC 8C 15 
09e40     00 00 00 00 
09e44     00 00 00 00 
09e48     00 00 00 00 | 	byte	$01, $ac, $8c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09e4c     01 C5 80 00 
09e50     01 AC 30 00 
09e54     00 8F 10 00 
09e58     00 8F A0 00 | 	byte	$01, $c5, $80, $00, $01, $ac, $30, $00, $00, $8f, $10, $00, $00, $8f, $a0, $00
09e5c     01 40 8C 15 
09e60     00 00 00 00 
09e64     00 00 00 00 
09e68     00 00 00 00 | 	byte	$01, $40, $8c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09e6c     01 AC 8C 07 
09e70     00 00 00 00 
09e74     00 00 00 00 
09e78     00 00 00 00 | 	byte	$01, $ac, $8c, $07, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09e7c     01 C5 8C 15 
09e80     00 00 00 00 
09e84     00 00 00 00 
09e88     00 00 00 00 | 	byte	$01, $c5, $8c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09e8c     01 40 8C 07 
09e90     01 AC 30 00 
09e94     00 00 00 00 
09e98     00 00 00 00 | 	byte	$01, $40, $8c, $07, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00
09e9c     01 C5 8C 03 
09ea0     00 00 00 00 
09ea4     00 00 00 00 
09ea8     00 00 00 00 | 	byte	$01, $c5, $8c, $03, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09eac     01 7D 80 00 
09eb0     00 00 00 00 
09eb4     00 00 00 00 
09eb8     00 00 00 00 | 	byte	$01, $7d, $80, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09ebc     01 40 8C 03 
09ec0     00 00 00 00 
09ec4     00 00 00 00 
09ec8     00 00 00 00 | 	byte	$01, $40, $8c, $03, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09ecc     01 AC 80 00 
09ed0     01 AC 30 00 
09ed4     00 A0 10 00 
09ed8     00 A0 A0 00 | 	byte	$01, $ac, $80, $00, $01, $ac, $30, $00, $00, $a0, $10, $00, $00, $a0, $a0, $00
09edc     01 7D 8C 15 
09ee0     01 AC 30 00 
09ee4     00 00 00 00 
09ee8     00 00 00 00 | 	byte	$01, $7d, $8c, $15, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00
09eec     01 40 80 00 
09ef0     01 AC 30 00 
09ef4     00 00 00 00 
09ef8     00 00 00 00 | 	byte	$01, $40, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00
09efc     01 AC 8C 15 
09f00     00 00 00 00 
09f04     00 00 00 00 
09f08     00 00 00 00 | 	byte	$01, $ac, $8c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09f0c     01 53 80 00 
09f10     01 AC 30 00 
09f14     00 00 00 00 
09f18     00 00 00 00 | 	byte	$01, $53, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00
09f1c     01 40 8C 15 
09f20     00 00 00 00 
09f24     00 00 00 00 
09f28     00 00 00 00 | 	byte	$01, $40, $8c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09f2c     01 40 80 00 
09f30     00 00 00 00 
09f34     00 00 00 00 
09f38     00 00 00 00 | 	byte	$01, $40, $80, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09f3c     01 53 8C 15 
09f40     00 00 00 00 
09f44     00 00 00 00 
09f48     00 00 00 00 | 	byte	$01, $53, $8c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09f4c     01 7D 80 00 
09f50     01 AC 30 00 
09f54     00 BE 20 00 
09f58     00 BE B0 00 | 	byte	$01, $7d, $80, $00, $01, $ac, $30, $00, $00, $be, $20, $00, $00, $be, $b0, $00
09f5c     01 40 8C 15 
09f60     00 00 00 00 
09f64     00 00 00 00 
09f68     00 00 00 00 | 	byte	$01, $40, $8c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09f6c     01 53 8C 07 
09f70     00 00 00 00 
09f74     00 00 00 00 
09f78     00 00 00 00 | 	byte	$01, $53, $8c, $07, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09f7c     01 7D 8C 15 
09f80     00 00 00 00 
09f84     00 00 00 00 
09f88     00 00 00 00 | 	byte	$01, $7d, $8c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09f8c     01 40 8C 07 
09f90     01 AC 30 00 
09f94     00 00 00 00 
09f98     00 00 00 00 | 	byte	$01, $40, $8c, $07, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00
09f9c     01 53 8C 03 
09fa0     00 00 00 00 
09fa4     00 00 00 00 
09fa8     00 00 00 00 | 	byte	$01, $53, $8c, $03, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09fac     01 7D 8C 07 
09fb0     00 00 00 00 
09fb4     00 00 00 00 
09fb8     00 00 00 00 | 	byte	$01, $7d, $8c, $07, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09fbc     01 40 8C 03 
09fc0     00 00 00 00 
09fc4     00 00 00 00 
09fc8     00 00 00 00 | 	byte	$01, $40, $8c, $03, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09fcc     01 53 8C 01 
09fd0     01 AC 30 00 
09fd4     00 00 00 00 
09fd8     00 00 00 00 | 	byte	$01, $53, $8c, $01, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00
09fdc     01 7D 8C 03 
09fe0     01 AC 30 00 
09fe4     00 00 00 00 
09fe8     00 00 00 00 | 	byte	$01, $7d, $8c, $03, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00
09fec     01 40 8C 01 
09ff0     01 AC 30 00 
09ff4     00 00 00 00 
09ff8     00 00 00 00 | 	byte	$01, $40, $8c, $01, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00
09ffc     00 00 0C 00 
0a000     00 00 00 00 
0a004     00 00 00 00 
0a008     00 00 00 00 | 	byte	$00, $00, $0c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a00c     01 7D 8C 01 
0a010     01 AC 30 00 
0a014     00 00 00 00 
0a018     00 00 00 00 | 	byte	$01, $7d, $8c, $01, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a01c     00 00 0C 00 
0a020     00 00 00 00 
0a024     00 00 00 00 
0a028     00 00 00 00 | 	byte	$00, $00, $0c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a02c     00 00 00 00 
0a030     01 AC 30 00 
0a034     00 00 00 00 
0a038     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a03c     00 00 00 00 
0a040     00 00 00 00 
0a044     00 00 00 00 
0a048     00 00 00 00 
0a04c     00 00 00 00 | 	byte	$00[20]
0a050     01 AC 30 00 
0a054     00 00 00 00 
0a058     00 00 00 00 
0a05c     00 00 00 00 | 	byte	$01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a060     00 00 0C 02 
0a064     00 00 00 00 
0a068     00 00 00 00 
0a06c     00 00 00 00 | 	byte	$00, $00, $0c, $02, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a070     01 7D 6C 03 
0a074     00 00 00 00 
0a078     00 00 00 00 
0a07c     00 00 00 00 | 	byte	$01, $7d, $6c, $03, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a080     01 7D 6C 04 
0a084     00 00 00 00 
0a088     00 00 00 00 
0a08c     00 00 00 00 | 	byte	$01, $7d, $6c, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a090     01 7D 6C 05 
0a094     00 00 00 00 
0a098     00 00 00 00 
0a09c     00 00 00 00 | 	byte	$01, $7d, $6c, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a0a0     00 00 0C 06 
0a0a4     00 00 00 00 
0a0a8     00 00 00 00 
0a0ac     00 00 00 00 | 	byte	$00, $00, $0c, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a0b0     01 7D 6C 07 
0a0b4     00 00 00 00 
0a0b8     00 00 00 00 
0a0bc     00 00 00 00 | 	byte	$01, $7d, $6c, $07, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a0c0     01 7D 6C 08 
0a0c4     00 00 00 00 
0a0c8     00 00 00 00 
0a0cc     00 00 00 00 | 	byte	$01, $7d, $6c, $08, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a0d0     01 7D 6C 09 
0a0d4     00 00 00 00 
0a0d8     00 00 00 00 
0a0dc     00 00 00 00 | 	byte	$01, $7d, $6c, $09, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a0e0     00 00 0C 0A 
0a0e4     00 00 00 00 
0a0e8     00 00 00 00 
0a0ec     00 00 00 00 | 	byte	$00, $00, $0c, $0a, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a0f0     01 7D 6C 0B 
0a0f4     00 00 00 00 
0a0f8     00 00 00 00 
0a0fc     00 00 00 00 | 	byte	$01, $7d, $6c, $0b, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a100     01 7D 6C 0C 
0a104     00 00 00 00 
0a108     00 00 00 00 
0a10c     00 00 00 00 | 	byte	$01, $7d, $6c, $0c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a110     01 7D 6C 0D 
0a114     00 00 00 00 
0a118     00 00 00 00 
0a11c     00 00 00 00 | 	byte	$01, $7d, $6c, $0d, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a120     00 00 0C 0E 
0a124     00 00 00 00 
0a128     00 00 00 00 
0a12c     00 00 00 00 | 	byte	$00, $00, $0c, $0e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a130     01 7D 6C 0F 
0a134     00 00 00 00 
0a138     00 00 00 00 
0a13c     00 00 00 00 | 	byte	$01, $7d, $6c, $0f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a140     01 7D 6C 10 
0a144     00 00 00 00 
0a148     00 00 00 00 
0a14c     00 00 00 00 | 	byte	$01, $7d, $6c, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a150     01 7D 6C 11 
0a154     00 00 00 00 
0a158     00 00 00 00 
0a15c     00 00 00 00 | 	byte	$01, $7d, $6c, $11, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a160     00 00 0C 12 
0a164     00 00 00 00 
0a168     00 00 00 00 
0a16c     00 00 00 00 | 	byte	$00, $00, $0c, $12, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a170     01 7D 6C 13 
0a174     00 00 00 00 
0a178     00 00 00 00 
0a17c     00 00 00 00 | 	byte	$01, $7d, $6c, $13, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a180     01 7D 6C 14 
0a184     00 00 00 00 
0a188     00 00 00 00 
0a18c     00 00 00 00 | 	byte	$01, $7d, $6c, $14, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a190     01 7D 6C 15 
0a194     00 00 00 00 
0a198     00 00 00 00 
0a19c     00 00 00 00 | 	byte	$01, $7d, $6c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a1a0     00 00 0C 16 
0a1a4     00 00 00 00 
0a1a8     00 00 00 00 
0a1ac     00 00 00 00 | 	byte	$00, $00, $0c, $16, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a1b0     01 7D 6C 17 
0a1b4     00 00 00 00 
0a1b8     00 00 00 00 
0a1bc     00 00 00 00 | 	byte	$01, $7d, $6c, $17, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a1c0     01 7D 6C 18 
0a1c4     00 00 00 00 
0a1c8     00 00 00 00 
0a1cc     00 00 00 00 | 	byte	$01, $7d, $6c, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a1d0     01 7D 6C 19 
0a1d4     00 00 00 00 
0a1d8     00 00 00 00 
0a1dc     00 00 00 00 | 	byte	$01, $7d, $6c, $19, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a1e0     00 00 0C 1A 
0a1e4     00 00 00 00 
0a1e8     00 00 00 00 
0a1ec     00 00 00 00 | 	byte	$00, $00, $0c, $1a, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a1f0     01 7D 6C 1B 
0a1f4     00 00 00 00 
0a1f8     00 00 00 00 
0a1fc     00 00 00 00 | 	byte	$01, $7d, $6c, $1b, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a200     01 7D 6C 1C 
0a204     00 00 00 00 
0a208     00 00 00 00 
0a20c     00 00 00 00 | 	byte	$01, $7d, $6c, $1c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a210     01 7D 6C 1D 
0a214     00 00 00 00 
0a218     00 00 00 00 
0a21c     00 00 00 00 | 	byte	$01, $7d, $6c, $1d, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a220     00 00 0C 1E 
0a224     00 00 00 00 
0a228     00 00 00 00 
0a22c     00 00 00 00 | 	byte	$00, $00, $0c, $1e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a230     01 7D 6C 1F 
0a234     00 00 00 00 
0a238     00 00 00 00 
0a23c     00 00 00 00 | 	byte	$01, $7d, $6c, $1f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a240     01 7D 6C 20 
0a244     00 00 00 00 
0a248     00 00 00 00 
0a24c     00 00 00 00 | 	byte	$01, $7d, $6c, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a250     01 7D 6C 21 
0a254     00 00 00 00 
0a258     00 00 00 00 
0a25c     00 00 00 00 | 	byte	$01, $7d, $6c, $21, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a260     00 00 0C 22 
0a264     00 00 00 00 
0a268     00 00 00 00 
0a26c     00 00 00 00 | 	byte	$00, $00, $0c, $22, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a270     01 7D 6C 23 
0a274     00 00 00 00 
0a278     00 00 00 00 
0a27c     00 00 00 00 | 	byte	$01, $7d, $6c, $23, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a280     01 7D 6C 24 
0a284     00 00 00 00 
0a288     00 00 00 00 
0a28c     00 00 00 00 | 	byte	$01, $7d, $6c, $24, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a290     01 7D 6C 25 
0a294     00 00 00 00 
0a298     00 00 00 00 
0a29c     00 00 00 00 | 	byte	$01, $7d, $6c, $25, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a2a0     00 00 0C 26 
0a2a4     00 00 00 00 
0a2a8     00 00 00 00 
0a2ac     00 00 00 00 | 	byte	$00, $00, $0c, $26, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a2b0     01 7D 6C 27 
0a2b4     00 00 00 00 
0a2b8     00 00 00 00 
0a2bc     00 00 00 00 | 	byte	$01, $7d, $6c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a2c0     01 7D 6C 28 
0a2c4     00 00 00 00 
0a2c8     00 00 00 00 
0a2cc     00 00 00 00 | 	byte	$01, $7d, $6c, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a2d0     01 7D 6C 29 
0a2d4     00 00 00 00 
0a2d8     00 00 00 00 
0a2dc     00 00 00 00 | 	byte	$01, $7d, $6c, $29, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a2e0     00 00 0C 2A 
0a2e4     00 00 00 00 
0a2e8     00 00 00 00 
0a2ec     00 00 00 00 | 	byte	$00, $00, $0c, $2a, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a2f0     01 7D 6C 2B 
0a2f4     00 00 00 00 
0a2f8     00 00 00 00 
0a2fc     00 00 00 00 | 	byte	$01, $7d, $6c, $2b, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a300     01 7D 6C 2C 
0a304     00 00 00 00 
0a308     00 00 00 00 
0a30c     00 00 00 00 | 	byte	$01, $7d, $6c, $2c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a310     01 7D 6C 2D 
0a314     00 00 00 00 
0a318     00 00 00 00 
0a31c     00 00 00 00 | 	byte	$01, $7d, $6c, $2d, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a320     00 00 0C 2C 
0a324     00 00 00 00 
0a328     00 00 00 00 
0a32c     00 00 00 00 | 	byte	$00, $00, $0c, $2c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a330     01 7D 6C 2B 
0a334     00 00 00 00 
0a338     00 00 00 00 
0a33c     00 00 00 00 | 	byte	$01, $7d, $6c, $2b, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a340     01 7D 6C 2A 
0a344     00 00 00 00 
0a348     00 00 00 00 
0a34c     00 00 00 00 | 	byte	$01, $7d, $6c, $2a, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a350     01 7D 6C 29 
0a354     00 00 00 00 
0a358     00 00 00 00 
0a35c     00 00 00 00 | 	byte	$01, $7d, $6c, $29, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a360     00 00 0C 28 
0a364     00 00 00 00 
0a368     00 00 00 00 
0a36c     00 00 00 00 | 	byte	$00, $00, $0c, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a370     01 7D 6C 27 
0a374     00 00 00 00 
0a378     00 00 00 00 
0a37c     00 00 00 00 | 	byte	$01, $7d, $6c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a380     01 7D 6C 26 
0a384     00 00 00 00 
0a388     00 00 00 00 
0a38c     00 00 00 00 | 	byte	$01, $7d, $6c, $26, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a390     01 7D 6C 25 
0a394     00 00 00 00 
0a398     00 00 00 00 
0a39c     00 00 00 00 | 	byte	$01, $7d, $6c, $25, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a3a0     00 00 00 00 
0a3a4     00 00 00 00 
0a3a8     00 00 00 00 
0a3ac     00 00 00 00 | 	byte	$00[16]
0a3b0     01 7D 60 00 
0a3b4     00 00 00 00 
0a3b8     00 00 00 00 
0a3bc     00 00 00 00 | 	byte	$01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a3c0     01 7D 60 00 
0a3c4     00 00 00 00 
0a3c8     00 00 00 00 
0a3cc     00 00 00 00 | 	byte	$01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a3d0     01 7D 60 00 
0a3d4     00 00 00 00 
0a3d8     00 00 00 00 
0a3dc     00 00 00 00 | 	byte	$01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a3e0     00 00 00 00 
0a3e4     00 00 00 00 
0a3e8     00 00 00 00 
0a3ec     00 00 00 00 | 	byte	$00[16]
0a3f0     01 7D 60 00 
0a3f4     00 00 00 00 
0a3f8     00 00 00 00 
0a3fc     00 00 00 00 | 	byte	$01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a400     01 7D 60 00 
0a404     00 00 00 00 
0a408     00 00 00 00 
0a40c     00 00 00 00 | 	byte	$01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a410     01 7D 60 00 
0a414     00 00 00 00 
0a418     00 00 00 00 
0a41c     00 00 00 00 | 	byte	$01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a420     00 00 00 00 
0a424     00 00 00 00 
0a428     00 00 00 00 
0a42c     00 00 00 00 | 	byte	$00[16]
0a430     01 7D 60 00 
0a434     00 00 00 00 
0a438     00 00 00 00 
0a43c     00 00 00 00 | 	byte	$01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a440     01 7D 60 00 
0a444     00 00 00 00 
0a448     00 00 00 00 
0a44c     00 BE C0 00 | 	byte	$01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $be, $c0, $00
0a450     01 7D 60 00 
0a454     00 00 00 00 
0a458     00 00 00 00 
0a45c     00 00 00 00 | 	byte	$01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a460     00 00 00 00 
0a464     00 00 00 00 
0a468     00 00 00 00 
0a46c     00 00 00 00 | 	byte	$00[16]
0a470     01 7D 60 00 
0a474     00 00 00 00 
0a478     00 00 00 00 
0a47c     00 BE CC 15 | 	byte	$01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $be, $cc, $15
0a480     01 7D 60 00 
0a484     00 00 00 00 
0a488     00 00 00 00 
0a48c     00 A0 C0 00 | 	byte	$01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $a0, $c0, $00
0a490     01 7D 60 00 
0a494     00 00 00 00 
0a498     00 00 00 00 
0a49c     00 00 00 00 | 	byte	$01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a4a0     00 00 00 00 
0a4a4     00 00 00 00 
0a4a8     00 00 00 00 
0a4ac     00          | 	byte	$00[13]
0a4ad     AA C0 00 01 
0a4b1     7D 60 00 00 
0a4b5     00 00 00 00 
0a4b9     00 00 00 00 | 	byte	$aa, $c0, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a4bd     A0 CC 15 01 
0a4c1     7D 60 00 00 
0a4c5     00 00 00 00 
0a4c9     00 00 00 00 | 	byte	$a0, $cc, $15, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a4cd     BE C0 00 01 
0a4d1     7D 60 00 00 
0a4d5     00 00 00 00 
0a4d9     00 00 00 00 | 	byte	$be, $c0, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a4dd     AA CC 15 00 
0a4e1     00 00 00 00 
0a4e5     00 00 00 00 
0a4e9     00 00 00 00 | 	byte	$aa, $cc, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a4ed     A0 CC 07 01 
0a4f1     7D 60 00 00 
0a4f5     00 00 00 00 
0a4f9     00 00 00 00 | 	byte	$a0, $cc, $07, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a4fd     BE CC 15 01 
0a501     7D 60 00 00 
0a505     00 00 00 00 
0a509     00 00 00 00 | 	byte	$be, $cc, $15, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a50d     D6 C0 00 01 
0a511     7D 60 00 00 
0a515     00 00 00 00 
0a519     00 00 00 00 | 	byte	$d6, $c0, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a51d     A0 CC 04 00 
0a521     00 00 00 00 
0a525     00 00 00 00 
0a529     00 00 00 00 | 	byte	$a0, $cc, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a52d     BE CC 07 01 
0a531     7D 60 00 00 
0a535     00 00 00 00 
0a539     00 00 00 00 | 	byte	$be, $cc, $07, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a53d     D6 CC 15 01 
0a541     7D 60 00 00 
0a545     00 00 00 00 
0a549     00 00 00 00 | 	byte	$d6, $cc, $15, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a54d     FE C0 00 01 
0a551     40 60 00 00 
0a555     A0 10 00 00 
0a559     A0 A0 00 00 | 	byte	$fe, $c0, $00, $01, $40, $60, $00, $00, $a0, $10, $00, $00, $a0, $a0, $00, $00
0a55d     BE CC 04 00 
0a561     00 00 00 00 
0a565     00 00 00 00 
0a569     00 00 00 00 | 	byte	$be, $cc, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a56d     D6 CC 07 01 
0a571     40 60 00 00 
0a575     00 00 00 00 
0a579     00 00 00 00 | 	byte	$d6, $cc, $07, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a57d     FE CC 15 01 
0a581     40 60 00 00 
0a585     00 00 00 00 
0a589     00 00 00 01 | 	byte	$fe, $cc, $15, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a58d     40 C0 00 01 
0a591     40 60 00 00 
0a595     00 00 00 00 
0a599     00 00 00 00 | 	byte	$40, $c0, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a59d     D6 CC 04 00 
0a5a1     00 00 00 00 
0a5a5     00 00 00 00 
0a5a9     00 00 00 00 | 	byte	$d6, $cc, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a5ad     FE C0 00 01 
0a5b1     40 60 00 00 
0a5b5     00 00 00 00 
0a5b9     00 00 00 01 | 	byte	$fe, $c0, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a5bd     40 CC 15 01 
0a5c1     40 60 00 00 
0a5c5     00 00 00 00 
0a5c9     00 00 00 00 | 	byte	$40, $cc, $15, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a5cd     D6 C0 00 01 
0a5d1     40 60 00 00 
0a5d5     00 00 00 00 
0a5d9     00 00 00 00 | 	byte	$d6, $c0, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a5dd     FE CC 15 00 
0a5e1     00 00 00 00 
0a5e5     00 00 00 00 
0a5e9     00 00 00 01 | 	byte	$fe, $cc, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a5ed     AC C0 00 01 
0a5f1     40 60 00 00 
0a5f5     00 00 00 00 
0a5f9     00 00 00 01 | 	byte	$ac, $c0, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a5fd     40 C0 00 01 
0a601     40 60 00 00 
0a605     00 00 00 00 
0a609     00 00 00 00 | 	byte	$40, $c0, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a60d     FE C0 00 01 
0a611     40 60 00 00 
0a615     00 00 00 00 
0a619     00 00 00 01 | 	byte	$fe, $c0, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a61d     AC CC 15 00 
0a621     00 00 00 00 
0a625     00 00 00 00 
0a629     00 00 00 01 | 	byte	$ac, $cc, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a62d     AC C0 00 01 
0a631     40 60 00 00 
0a635     00 00 00 00 
0a639     00 00 00 01 | 	byte	$ac, $c0, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a63d     40 C0 00 01 
0a641     40 60 00 00 
0a645     00 00 00 00 
0a649     00 00 00 01 | 	byte	$40, $c0, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a64d     1D C0 00 01 
0a651     AC 60 00 00 
0a655     D6 10 00 00 
0a659     D6 A0 00 01 | 	byte	$1d, $c0, $00, $01, $ac, $60, $00, $00, $d6, $10, $00, $00, $d6, $a0, $00, $01
0a65d     AC CC 15 00 
0a661     00 00 00 00 
0a665     00 00 00 00 
0a669     00 00 00 01 | 	byte	$ac, $cc, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a66d     40 CC 15 01 
0a671     AC 60 00 00 
0a675     00 00 00 00 
0a679     00 00 00 01 | 	byte	$40, $cc, $15, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a67d     1D CC 15 01 
0a681     AC 60 00 00 
0a685     00 00 00 00 
0a689     00 00 00 01 | 	byte	$1d, $cc, $15, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a68d     1D C0 00 01 
0a691     AC 60 00 00 
0a695     00 00 00 00 
0a699     00 00 00 01 | 	byte	$1d, $c0, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a69d     40 CC 05 00 
0a6a1     00 00 00 00 
0a6a5     00 00 00 00 
0a6a9     00 00 00 01 | 	byte	$40, $cc, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a6ad     1D C0 00 01 
0a6b1     AC 60 00 00 
0a6b5     00 00 00 00 
0a6b9     00 00 00 01 | 	byte	$1d, $c0, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a6bd     40 C0 00 01 
0a6c1     AC 60 00 00 
0a6c5     00 00 00 00 
0a6c9     00 00 00 01 | 	byte	$40, $c0, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a6cd     53 C0 00 01 
0a6d1     AC 60 00 00 
0a6d5     00 00 00 00 
0a6d9     00 00 00 01 | 	byte	$53, $c0, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a6dd     1D CC 15 00 
0a6e1     00 00 00 00 
0a6e5     00 00 00 00 
0a6e9     00 00 00 01 | 	byte	$1d, $cc, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a6ed     40 CC 15 01 
0a6f1     AC 60 00 00 
0a6f5     00 00 00 00 
0a6f9     00 00 00 01 | 	byte	$40, $cc, $15, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a6fd     53 CC 15 01 
0a701     AC 60 00 00 
0a705     00 00 00 00 
0a709     00 00 00 01 | 	byte	$53, $cc, $15, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a70d     53 C0 00 01 
0a711     AC 60 00 00 
0a715     00 00 00 00 
0a719     00 00 00 01 | 	byte	$53, $c0, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a71d     40 C0 00 00 
0a721     00 00 00 00 
0a725     00 00 00 00 
0a729     00 00 00 01 | 	byte	$40, $c0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a72d     53 C0 00 01 
0a731     AC 60 00 00 
0a735     00 00 00 00 
0a739     00 00 00 01 | 	byte	$53, $c0, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a73d     7D C0 00 01 
0a741     AC 60 00 00 
0a745     00 00 00 00 
0a749     00 00 00 01 | 	byte	$7d, $c0, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a74d     68 C0 00 01 
0a751     68 60 00 00 
0a755     D6 20 00 00 
0a759     D6 B0 00 01 | 	byte	$68, $c0, $00, $01, $68, $60, $00, $00, $d6, $20, $00, $00, $d6, $b0, $00, $01
0a75d     53 CC 15 00 
0a761     00 00 00 00 
0a765     00 00 00 00 
0a769     00 00 00 01 | 	byte	$53, $cc, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a76d     7D CC 15 01 
0a771     68 60 00 00 
0a775     00 00 00 00 
0a779     00 00 00 01 | 	byte	$7d, $cc, $15, $01, $68, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a77d     68 CC 15 01 
0a781     68 60 00 00 
0a785     00 00 00 00 
0a789     00 00 00 01 | 	byte	$68, $cc, $15, $01, $68, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a78d     68 C0 00 01 
0a791     68 60 00 00 
0a795     00 00 00 00 
0a799     00 00 00 01 | 	byte	$68, $c0, $00, $01, $68, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a79d     7D CC 07 00 
0a7a1     00 00 00 00 
0a7a5     00 00 00 00 
0a7a9     00 00 00 01 | 	byte	$7d, $cc, $07, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a7ad     68 CC 07 01 
0a7b1     68 60 00 00 
0a7b5     00 00 00 00 
0a7b9     00 00 00 01 | 	byte	$68, $cc, $07, $01, $68, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a7bd     68 CC 15 01 
0a7c1     68 60 00 00 
0a7c5     00 00 00 00 
0a7c9     00 00 00 01 | 	byte	$68, $cc, $15, $01, $68, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a7cd     40 C0 00 01 
0a7d1     40 60 00 00 
0a7d5     A0 10 00 00 
0a7d9     A0 A0 00 01 | 	byte	$40, $c0, $00, $01, $40, $60, $00, $00, $a0, $10, $00, $00, $a0, $a0, $00, $01
0a7dd     68 CC 04 00 
0a7e1     00 00 00 00 
0a7e5     00 00 00 00 
0a7e9     00 00 00 01 | 	byte	$68, $cc, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a7ed     40 C0 00 01 
0a7f1     40 60 00 00 
0a7f5     00 00 00 00 
0a7f9     00 00 00 01 | 	byte	$40, $c0, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a7fd     7D C0 00 01 
0a801     40 60 00 00 
0a805     00 00 00 00 
0a809     00 00 00 01 | 	byte	$7d, $c0, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a80d     40 C0 00 01 
0a811     40 60 00 00 
0a815     00 00 00 00 
0a819     00 00 00 01 | 	byte	$40, $c0, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a81d     40 CC 15 00 
0a821     00 00 00 00 
0a825     00 00 00 00 
0a829     00 00 00 01 | 	byte	$40, $cc, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a82d     40 C0 00 01 
0a831     40 60 00 00 
0a835     00 00 00 00 
0a839     00 00 00 00 | 	byte	$40, $c0, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a83d     FE C0 00 01 
0a841     40 60 00 00 
0a845     00 00 00 00 
0a849     00 00 00 00 | 	byte	$fe, $c0, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a84d     BE C0 00 01 
0a851     AC 30 00 00 
0a855     BE 20 00 00 
0a859     BE B0 00 00 | 	byte	$be, $c0, $00, $01, $ac, $30, $00, $00, $be, $20, $00, $00, $be, $b0, $00, $00
0a85d     00 00 00 00 
0a861     00 00 00 00 
0a865     00 00 00 00 
0a869     00 00 00 00 
0a86d     00 00 00    | 	byte	$00[19]
0a870     01 7D 60 00 
0a874     00 00 00 00 
0a878     00 00 00 00 
0a87c     00 BE CC 15 | 	byte	$01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $be, $cc, $15
0a880     01 7D 60 00 
0a884     00 00 00 00 
0a888     00 00 00 00 
0a88c     00 A0 C0 00 | 	byte	$01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $a0, $c0, $00
0a890     01 7D 60 00 
0a894     00 00 00 00 
0a898     00 00 00 00 
0a89c     00 00 00 00 | 	byte	$01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a8a0     00 BE 60 00 
0a8a4     00 00 00 00 
0a8a8     00 00 00 00 
0a8ac     00 AA C0 00 | 	byte	$00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $aa, $c0, $00
0a8b0     01 7D 60 00 
0a8b4     00 00 00 00 
0a8b8     00 00 00 00 
0a8bc     00 A0 CC 15 | 	byte	$01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $a0, $cc, $15
0a8c0     01 7D 60 00 
0a8c4     00 00 00 00 
0a8c8     00 00 00 00 
0a8cc     00 BE C0 00 | 	byte	$01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $be, $c0, $00
0a8d0     01 AC 30 00 
0a8d4     00 00 00 00 
0a8d8     00 00 00 00 
0a8dc     00 AA CC 15 | 	byte	$01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $aa, $cc, $15
0a8e0     00 00 00 00 
0a8e4     00 00 00 00 
0a8e8     00 00 00 00 
0a8ec     00          | 	byte	$00[13]
0a8ed     A0 CC 07 01 
0a8f1     7D 60 00 00 
0a8f5     00 00 00 00 
0a8f9     00 00 00 00 | 	byte	$a0, $cc, $07, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a8fd     BE CC 15 01 
0a901     7D 60 00 00 
0a905     00 00 00 00 
0a909     00 00 00 00 | 	byte	$be, $cc, $15, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a90d     D6 C0 00 01 
0a911     7D 60 00 00 
0a915     00 00 00 00 
0a919     00 00 00 00 | 	byte	$d6, $c0, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a91d     A0 CC 04 00 
0a921     BE 60 00 00 
0a925     00 00 00 00 
0a929     00 00 00 00 | 	byte	$a0, $cc, $04, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a92d     BE CC 07 01 
0a931     7D 60 00 00 
0a935     00 00 00 00 
0a939     00 00 00 00 | 	byte	$be, $cc, $07, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a93d     D6 CC 15 01 
0a941     7D 60 00 00 
0a945     00 00 00 00 
0a949     00 00 00 00 | 	byte	$d6, $cc, $15, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a94d     FE C0 00 01 
0a951     AC 30 00 00 
0a955     A0 10 00 00 
0a959     A0 A0 00 00 | 	byte	$fe, $c0, $00, $01, $ac, $30, $00, $00, $a0, $10, $00, $00, $a0, $a0, $00, $00
0a95d     BE CC 04 00 
0a961     00 00 00 00 
0a965     00 00 00 00 
0a969     00 00 00 00 | 	byte	$be, $cc, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a96d     D6 CC 07 01 
0a971     40 60 00 00 
0a975     00 00 00 00 
0a979     00 00 00 00 | 	byte	$d6, $cc, $07, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a97d     FE CC 15 01 
0a981     40 60 00 00 
0a985     00 00 00 00 
0a989     00 00 00 01 | 	byte	$fe, $cc, $15, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a98d     40 C0 00 01 
0a991     40 60 00 00 
0a995     00 00 00 00 
0a999     00 00 00 00 | 	byte	$40, $c0, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a99d     D6 CC 04 00 
0a9a1     A0 60 00 00 
0a9a5     00 00 00 00 
0a9a9     00 00 00 00 | 	byte	$d6, $cc, $04, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a9ad     FE C0 00 01 
0a9b1     40 60 00 00 
0a9b5     00 00 00 00 
0a9b9     00 00 00 01 | 	byte	$fe, $c0, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a9bd     40 CC 15 01 
0a9c1     40 60 00 00 
0a9c5     00 00 00 00 
0a9c9     00 00 00 00 | 	byte	$40, $cc, $15, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a9cd     D6 C0 00 01 
0a9d1     AC 30 00 00 
0a9d5     00 00 00 00 
0a9d9     00 00 00 00 | 	byte	$d6, $c0, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a9dd     FE CC 15 00 
0a9e1     00 00 00 00 
0a9e5     00 00 00 00 
0a9e9     00 00 00 01 | 	byte	$fe, $cc, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a9ed     AC C0 00 01 
0a9f1     40 60 00 00 
0a9f5     00 00 00 00 
0a9f9     00 00 00 01 | 	byte	$ac, $c0, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0a9fd     40 C0 00 01 
0aa01     40 60 00 00 
0aa05     00 00 00 00 
0aa09     00 00 00 00 | 	byte	$40, $c0, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0aa0d     FE C0 00 01 
0aa11     40 60 00 00 
0aa15     00 00 00 00 
0aa19     00 00 00 01 | 	byte	$fe, $c0, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0aa1d     AC CC 15 00 
0aa21     A0 60 00 00 
0aa25     00 00 00 00 
0aa29     00 00 00 01 | 	byte	$ac, $cc, $15, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0aa2d     AC C0 00 01 
0aa31     40 60 00 00 
0aa35     00 00 00 00 
0aa39     00 00 00 01 | 	byte	$ac, $c0, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0aa3d     40 C0 00 01 
0aa41     40 60 00 00 
0aa45     00 00 00 00 
0aa49     00 00 00 01 | 	byte	$40, $c0, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0aa4d     1D C0 00 01 
0aa51     AC 30 00 00 
0aa55     D6 10 00 00 
0aa59     D6 A0 00 01 | 	byte	$1d, $c0, $00, $01, $ac, $30, $00, $00, $d6, $10, $00, $00, $d6, $a0, $00, $01
0aa5d     AC CC 15 00 
0aa61     00 00 00 00 
0aa65     00 00 00 00 
0aa69     00 00 00 01 | 	byte	$ac, $cc, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0aa6d     40 CC 15 01 
0aa71     AC 60 00 00 
0aa75     00 00 00 00 
0aa79     00 00 00 01 | 	byte	$40, $cc, $15, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0aa7d     1D CC 15 01 
0aa81     AC 60 00 00 
0aa85     00 00 00 00 
0aa89     00 00 00 01 | 	byte	$1d, $cc, $15, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0aa8d     1D C0 00 01 
0aa91     AC 60 00 00 
0aa95     00 00 00 00 
0aa99     00 00 00 01 | 	byte	$1d, $c0, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0aa9d     40 CC 05 00 
0aaa1     D6 60 00 00 
0aaa5     00 00 00 00 
0aaa9     00 00 00 01 | 	byte	$40, $cc, $05, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0aaad     1D C0 00 01 
0aab1     AC 60 00 00 
0aab5     00 00 00 00 
0aab9     00 00 00 01 | 	byte	$1d, $c0, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0aabd     40 C0 00 01 
0aac1     AC 60 00 00 
0aac5     00 00 00 00 
0aac9     00 00 00 01 | 	byte	$40, $c0, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0aacd     53 C0 00 01 
0aad1     AC 30 00 00 
0aad5     00 00 00 00 
0aad9     00 00 00 01 | 	byte	$53, $c0, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0aadd     1D CC 15 00 
0aae1     00 00 00 00 
0aae5     00 00 00 00 
0aae9     00 00 00 01 | 	byte	$1d, $cc, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0aaed     40 CC 15 01 
0aaf1     AC 60 00 00 
0aaf5     00 00 00 00 
0aaf9     00 00 00 01 | 	byte	$40, $cc, $15, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0aafd     53 CC 15 01 
0ab01     AC 60 00 00 
0ab05     00 00 00 00 
0ab09     00 00 00 01 | 	byte	$53, $cc, $15, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0ab0d     53 C0 00 01 
0ab11     AC 60 00 00 
0ab15     00 00 00 00 
0ab19     00 00 00 01 | 	byte	$53, $c0, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0ab1d     40 C0 00 00 
0ab21     D6 60 00 00 
0ab25     00 00 00 00 
0ab29     00 00 00 01 | 	byte	$40, $c0, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0ab2d     53 C0 00 01 
0ab31     AC 30 00 00 
0ab35     00 00 00 00 
0ab39     00 00 00 01 | 	byte	$53, $c0, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0ab3d     7D C0 00 01 
0ab41     AC 60 00 00 
0ab45     00 00 00 00 
0ab49     00 00 00 01 | 	byte	$7d, $c0, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0ab4d     68 C0 00 01 
0ab51     AC 30 00 00 
0ab55     D6 20 00 00 
0ab59     D6 B0 00 01 | 	byte	$68, $c0, $00, $01, $ac, $30, $00, $00, $d6, $20, $00, $00, $d6, $b0, $00, $01
0ab5d     53 CC 15 00 
0ab61     00 00 00 00 
0ab65     00 00 00 00 
0ab69     00 00 00 01 | 	byte	$53, $cc, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0ab6d     7D CC 15 01 
0ab71     68 60 00 00 
0ab75     00 00 00 00 
0ab79     00 00 00 01 | 	byte	$7d, $cc, $15, $01, $68, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0ab7d     68 CC 15 01 
0ab81     68 60 00 00 
0ab85     00 00 00 00 
0ab89     00 00 00 01 | 	byte	$68, $cc, $15, $01, $68, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0ab8d     68 C0 00 01 
0ab91     68 60 00 00 
0ab95     00 00 00 00 
0ab99     00 00 00 01 | 	byte	$68, $c0, $00, $01, $68, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0ab9d     7D CC 07 00 
0aba1     B4 60 00 00 
0aba5     00 00 00 00 
0aba9     00 00 00 01 | 	byte	$7d, $cc, $07, $00, $b4, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0abad     68 CC 07 01 
0abb1     AC 30 00 00 
0abb5     00 00 00 00 
0abb9     00 00 00 01 | 	byte	$68, $cc, $07, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0abbd     68 CC 15 01 
0abc1     68 60 00 00 
0abc5     00 00 00 00 
0abc9     00 00 00 01 | 	byte	$68, $cc, $15, $01, $68, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0abcd     40 C0 00 01 
0abd1     AC 30 00 00 
0abd5     A0 10 00 00 
0abd9     A0 A0 00 01 | 	byte	$40, $c0, $00, $01, $ac, $30, $00, $00, $a0, $10, $00, $00, $a0, $a0, $00, $01
0abdd     68 CC 04 00 
0abe1     00 00 00 00 
0abe5     00 00 00 00 
0abe9     00 00 00 01 | 	byte	$68, $cc, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0abed     40 C0 00 01 
0abf1     40 60 00 00 
0abf5     00 00 00 00 
0abf9     00 00 00 01 | 	byte	$40, $c0, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0abfd     7D C0 00 01 
0ac01     40 60 00 00 
0ac05     00 00 00 00 
0ac09     00 00 00 01 | 	byte	$7d, $c0, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0ac0d     40 C0 00 01 
0ac11     7D 5C 35 00 
0ac15     00 00 00 00 
0ac19     00 00 00 01 | 	byte	$40, $c0, $00, $01, $7d, $5c, $35, $00, $00, $00, $00, $00, $00, $00, $00, $01
0ac1d     40 CC 15 00 
0ac21     A0 60 00 00 
0ac25     00 00 00 00 
0ac29     00 00 00 01 | 	byte	$40, $cc, $15, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0ac2d     40 C0 00 01 
0ac31     7D 5C 35 00 
0ac35     00 00 00 00 
0ac39     00 00 00 00 | 	byte	$40, $c0, $00, $01, $7d, $5c, $35, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ac3d     FE C0 00 01 
0ac41     7D 5C 35 00 
0ac45     00 00 00 00 
0ac49     00 00 00 01 | 	byte	$fe, $c0, $00, $01, $7d, $5c, $35, $00, $00, $00, $00, $00, $00, $00, $00, $01
0ac4d     FC 90 00 01 
0ac51     AC 30 00 00 
0ac55     BE 20 00 00 
0ac59     BE B0 00 01 | 	byte	$fc, $90, $00, $01, $ac, $30, $00, $00, $be, $20, $00, $00, $be, $b0, $00, $01
0ac5d     7D 90 00 01 
0ac61     7D 60 00 00 
0ac65     00 00 00 00 
0ac69     00 00 00 01 | 	byte	$7d, $90, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0ac6d     40 90 00 00 
0ac71     BE 60 00 00 
0ac75     00 00 00 00 
0ac79     00 00 00 00 | 	byte	$40, $90, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ac7d     FE 90 00 01 
0ac81     7D 60 00 00 
0ac85     00 00 00 00 
0ac89     00 00 00 00 | 	byte	$fe, $90, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ac8d     BE 90 00 01 
0ac91     7D 50 00 00 
0ac95     00 00 00 00 
0ac99     00 00 00 00 | 	byte	$be, $90, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ac9d     FE 90 00 00 
0aca1     BE 60 00 00 
0aca5     00 00 00 00 
0aca9     00 00 00 00 | 	byte	$fe, $90, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0acad     BE 90 00 01 
0acb1     7D 60 00 00 
0acb5     00 00 00 00 
0acb9     00 00 00 00 | 	byte	$be, $90, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0acbd     A0 90 00 00 
0acc1     BE 60 00 00 
0acc5     00 00 00 00 
0acc9     00 00 00 00 | 	byte	$a0, $90, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0accd     BE 90 00 01 
0acd1     AC 30 00 00 
0acd5     00 00 00 00 
0acd9     00 00 00 00 | 	byte	$be, $90, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0acdd     00 00 00 01 
0ace1     7D 60 00 00 
0ace5     00 00 00 00 
0ace9     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0aced     00 00 00 01 
0acf1     AC 30 00 00 
0acf5     00 00 00 00 
0acf9     00 00 00 00 | 	byte	$00, $00, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0acfd     00 00 00 01 
0ad01     7D 60 00 00 
0ad05     00 00 00 00 
0ad09     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ad0d     00 00 00 01 
0ad11     7D 50 00 00 
0ad15     00 00 00 00 
0ad19     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ad1d     00 00 00 00 
0ad21     A0 60 00 00 
0ad25     00 00 00 00 
0ad29     00 00 00 00 | 	byte	$00, $00, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ad2d     AA 90 00 01 
0ad31     7D 60 00 00 
0ad35     00 00 00 00 
0ad39     00 00 00 00 | 	byte	$aa, $90, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ad3d     00 00 00 00 
0ad41     A0 60 00 00 
0ad45     00 00 00 00 
0ad49     00 00 00 00 | 	byte	$00, $00, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ad4d     A0 90 00 01 
0ad51     AC 30 00 00 
0ad55     A0 10 00 00 
0ad59     A0 A0 00 00 | 	byte	$a0, $90, $00, $01, $ac, $30, $00, $00, $a0, $10, $00, $00, $a0, $a0, $00, $00
0ad5d     00 00 00 01 
0ad61     40 60 00 00 
0ad65     00 00 00 00 
0ad69     00 00 00 00 | 	byte	$00, $00, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ad6d     00 00 00 00 
0ad71     A0 60 00 00 
0ad75     00 00 00 00 
0ad79     00 00 00 00 | 	byte	$00, $00, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ad7d     00 00 00 01 
0ad81     40 60 00 00 
0ad85     00 00 00 00 
0ad89     00 00 00 00 | 	byte	$00, $00, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ad8d     00 00 00 01 
0ad91     7D 50 00 00 
0ad95     00 00 00 00 
0ad99     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ad9d     00 00 00 00 
0ada1     A0 60 00 00 
0ada5     00 00 00 00 
0ada9     00 00 00 00 | 	byte	$00, $00, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0adad     D6 90 00 01 
0adb1     40 60 00 00 
0adb5     00 00 00 00 
0adb9     00 00 00 00 | 	byte	$d6, $90, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0adbd     00 00 00 00 
0adc1     A0 60 00 00 
0adc5     00 00 00 00 
0adc9     00 00 00 00 | 	byte	$00, $00, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0adcd     7F 90 00 01 
0add1     AC 30 00 00 
0add5     00 00 00 00 
0add9     00 00 00 00 | 	byte	$7f, $90, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0addd     00 00 00 01 
0ade1     40 60 00 00 
0ade5     00 00 00 00 
0ade9     00 00 00 00 | 	byte	$00, $00, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0aded     A0 90 00 00 
0adf1     7F 60 00 00 
0adf5     00 00 00 00 
0adf9     00 00 00 00 | 	byte	$a0, $90, $00, $00, $7f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0adfd     00 00 00 01 
0ae01     AC 30 00 00 
0ae05     00 00 00 00 
0ae09     00 00 00 00 | 	byte	$00, $00, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ae0d     D6 90 00 01 
0ae11     7D 50 00 00 
0ae15     00 00 00 00 
0ae19     00 00 00 00 | 	byte	$d6, $90, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ae1d     00 00 00 00 
0ae21     7F 60 00 00 
0ae25     00 00 00 00 
0ae29     00 00 00 00 | 	byte	$00, $00, $00, $00, $7f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ae2d     7F 90 00 01 
0ae31     AC 30 00 00 
0ae35     00 00 00 00 
0ae39     00 00 00 00 | 	byte	$7f, $90, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ae3d     00 00 00 00 
0ae41     7F 60 00 00 
0ae45     00 00 00 00 
0ae49     00 00 00 00 | 	byte	$00, $00, $00, $00, $7f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ae4d     8F 90 00 01 
0ae51     AC 30 00 00 
0ae55     D6 10 00 00 
0ae59     D6 A0 00 00 | 	byte	$8f, $90, $00, $01, $ac, $30, $00, $00, $d6, $10, $00, $00, $d6, $a0, $00, $00
0ae5d     00 00 00 01 
0ae61     AC 60 00 00 
0ae65     00 00 00 00 
0ae69     00 00 00 00 | 	byte	$00, $00, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ae6d     00 00 00 00 
0ae71     AA 60 00 00 
0ae75     00 00 00 00 
0ae79     00 00 00 00 | 	byte	$00, $00, $00, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ae7d     00 00 00 01 
0ae81     AC 60 00 00 
0ae85     00 00 00 00 
0ae89     00 00 00 00 | 	byte	$00, $00, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ae8d     00 00 00 01 
0ae91     7D 50 00 00 
0ae95     00 00 00 00 
0ae99     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ae9d     00 00 00 00 
0aea1     AA 60 00 00 
0aea5     00 00 00 00 
0aea9     00 00 00 00 | 	byte	$00, $00, $00, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0aead     00 00 00 01 
0aeb1     AC 60 00 00 
0aeb5     00 00 00 00 
0aeb9     00 00 00 00 | 	byte	$00, $00, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0aebd     00 00 00 00 
0aec1     AA 60 00 00 
0aec5     00 00 00 00 
0aec9     00 00 00 00 | 	byte	$00, $00, $00, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0aecd     8F 90 00 01 
0aed1     AC 30 00 00 
0aed5     00 00 00 00 
0aed9     00 00 00 00 | 	byte	$8f, $90, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0aedd     00 00 00 01 
0aee1     AC 60 00 00 
0aee5     00 00 00 00 
0aee9     00 00 00 00 | 	byte	$00, $00, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0aeed     A0 90 00 01 
0aef1     AC 30 00 00 
0aef5     00 00 00 00 
0aef9     00 00 00 00 | 	byte	$a0, $90, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0aefd     00 00 00 01 
0af01     AC 60 00 00 
0af05     00 00 00 00 
0af09     00 00 00 00 | 	byte	$00, $00, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0af0d     AA 90 00 01 
0af11     7D 50 00 00 
0af15     00 00 00 00 
0af19     00 00 00 00 | 	byte	$aa, $90, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0af1d     A0 90 00 00 
0af21     8F 60 00 00 
0af25     00 00 00 00 
0af29     00 00 00 00 | 	byte	$a0, $90, $00, $00, $8f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0af2d     AA 90 00 01 
0af31     AC 30 00 00 
0af35     00 00 00 00 
0af39     00 00 00 00 | 	byte	$aa, $90, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0af3d     BE 90 00 00 
0af41     8F 60 00 00 
0af45     00 00 00 00 
0af49     00 00 00 00 | 	byte	$be, $90, $00, $00, $8f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0af4d     B4 90 00 01 
0af51     AC 30 00 00 
0af55     D6 20 00 00 
0af59     D6 B0 00 00 | 	byte	$b4, $90, $00, $01, $ac, $30, $00, $00, $d6, $20, $00, $00, $d6, $b0, $00, $00
0af5d     00 00 00 01 
0af61     68 60 00 00 
0af65     00 00 00 00 
0af69     00 00 00 00 | 	byte	$00, $00, $00, $01, $68, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0af6d     00 00 00 00 
0af71     D6 60 00 00 
0af75     00 00 00 00 
0af79     00 00 00 00 | 	byte	$00, $00, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0af7d     00 00 00 01 
0af81     68 60 00 00 
0af85     00 00 00 00 
0af89     00 00 00 00 | 	byte	$00, $00, $00, $01, $68, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0af8d     D6 90 00 01 
0af91     7D 50 00 00 
0af95     00 00 00 00 
0af99     00 00 00 00 | 	byte	$d6, $90, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0af9d     BE 90 00 00 
0afa1     D6 60 00 00 
0afa5     00 00 00 00 
0afa9     00 00 00 00 | 	byte	$be, $90, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0afad     B4 90 00 01 
0afb1     AC 30 00 00 
0afb5     00 00 00 00 
0afb9     00 00 00 00 | 	byte	$b4, $90, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0afbd     8F 90 00 00 
0afc1     8F 60 00 00 
0afc5     00 00 00 00 
0afc9     00 00 00 00 | 	byte	$8f, $90, $00, $00, $8f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0afcd     A0 90 00 01 
0afd1     AC 30 00 00 
0afd5     A0 10 00 00 
0afd9     A0 A0 00 00 | 	byte	$a0, $90, $00, $01, $ac, $30, $00, $00, $a0, $10, $00, $00, $a0, $a0, $00, $00
0afdd     00 00 00 01 
0afe1     AC 30 00 00 
0afe5     00 00 00 00 
0afe9     00 00 00 00 | 	byte	$00, $00, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0afed     00 00 00 00 
0aff1     D6 60 00 00 
0aff5     00 00 00 00 
0aff9     00 00 00 00 | 	byte	$00, $00, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0affd     BE 90 00 01 
0b001     40 60 00 00 
0b005     00 00 00 00 
0b009     00 00 00 00 | 	byte	$be, $90, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b00d     A0 90 00 01 
0b011     7D 50 00 00 
0b015     00 00 00 00 
0b019     00 00 00 00 | 	byte	$a0, $90, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b01d     00 00 00 00 
0b021     D6 60 00 00 
0b025     00 00 00 00 
0b029     00 00 00 00 | 	byte	$00, $00, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b02d     7F 90 00 01 
0b031     7D 50 00 00 
0b035     00 00 00 00 
0b039     00 00 00 00 | 	byte	$7f, $90, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b03d     00 00 00 01 
0b041     7D 50 00 00 
0b045     00 00 00 00 
0b049     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b04d     BE 90 00 01 
0b051     AC 30 00 00 
0b055     BE 20 00 00 
0b059     BE B0 00 00 | 	byte	$be, $90, $00, $01, $ac, $30, $00, $00, $be, $20, $00, $00, $be, $b0, $00, $00
0b05d     00 00 00 01 
0b061     7D 60 00 00 
0b065     00 00 00 00 
0b069     00 00 00 01 | 	byte	$00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b06d     7D 80 00 00 
0b071     BE 60 00 00 
0b075     00 00 00 00 
0b079     00 00 00 00 | 	byte	$7d, $80, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b07d     00 00 00 01 
0b081     7D 60 00 00 
0b085     00 00 00 00 
0b089     00 00 00 01 | 	byte	$00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b08d     7D 80 00 01 
0b091     7D 50 00 00 
0b095     00 00 00 00 
0b099     00 00 00 00 | 	byte	$7d, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b09d     00 00 00 00 
0b0a1     BE 60 00 00 
0b0a5     00 00 00 00 
0b0a9     00 00 00 01 | 	byte	$00, $00, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b0ad     53 80 00 01 
0b0b1     7D 60 00 00 
0b0b5     00 00 00 00 
0b0b9     00 00 00 00 | 	byte	$53, $80, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b0bd     00 00 00 00 
0b0c1     BE 60 00 00 
0b0c5     00 00 00 00 
0b0c9     00 00 00 01 | 	byte	$00, $00, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b0cd     40 80 00 01 
0b0d1     AC 30 00 00 
0b0d5     00 00 00 00 
0b0d9     00 00 00 00 | 	byte	$40, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b0dd     00 00 00 01 
0b0e1     7D 60 00 00 
0b0e5     00 00 00 00 
0b0e9     00 00 00 01 | 	byte	$00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b0ed     53 80 00 01 
0b0f1     AC 30 00 00 
0b0f5     00 00 00 00 
0b0f9     00 00 00 00 | 	byte	$53, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b0fd     00 00 00 01 
0b101     7D 60 00 00 
0b105     00 00 00 00 
0b109     00 00 00 01 | 	byte	$00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b10d     40 80 00 01 
0b111     7D 50 00 00 
0b115     00 00 00 00 
0b119     00 00 00 00 | 	byte	$40, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b11d     00 00 00 00 
0b121     A0 60 00 00 
0b125     00 00 00 00 
0b129     00 00 00 01 | 	byte	$00, $00, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b12d     1D 80 00 01 
0b131     7D 60 00 00 
0b135     00 00 00 00 
0b139     00 00 00 00 | 	byte	$1d, $80, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b13d     00 00 00 00 
0b141     A0 60 00 00 
0b145     00 00 00 00 
0b149     00 00 00 00 | 	byte	$00, $00, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b14d     00 00 00 01 
0b151     AC 30 00 00 
0b155     A0 10 00 00 
0b159     A0 A0 00 00 | 	byte	$00, $00, $00, $01, $ac, $30, $00, $00, $a0, $10, $00, $00, $a0, $a0, $00, $00
0b15d     00 00 00 01 
0b161     40 60 00 00 
0b165     00 00 00 00 
0b169     00 00 00 00 | 	byte	$00, $00, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b16d     FE 80 00 00 
0b171     A0 60 00 00 
0b175     00 00 00 00 
0b179     00 00 00 00 | 	byte	$fe, $80, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b17d     00 00 00 01 
0b181     40 60 00 00 
0b185     00 00 00 00 
0b189     00 00 00 00 | 	byte	$00, $00, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b18d     FE 80 00 01 
0b191     7D 50 00 00 
0b195     00 00 00 00 
0b199     00 00 00 00 | 	byte	$fe, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b19d     00 00 00 00 
0b1a1     A0 60 00 00 
0b1a5     00 00 00 00 
0b1a9     00 00 00 01 | 	byte	$00, $00, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b1ad     1D 80 00 01 
0b1b1     40 60 00 00 
0b1b5     00 00 00 00 
0b1b9     00 00 00 00 | 	byte	$1d, $80, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b1bd     00 00 00 00 
0b1c1     A0 60 00 00 
0b1c5     00 00 00 00 
0b1c9     00 00 00 00 | 	byte	$00, $00, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b1cd     FE 80 00 01 
0b1d1     AC 30 00 00 
0b1d5     00 00 00 00 
0b1d9     00 00 00 00 | 	byte	$fe, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b1dd     00 00 00 01 
0b1e1     40 60 00 00 
0b1e5     00 00 00 00 
0b1e9     00 00 00 01 | 	byte	$00, $00, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b1ed     40 80 00 00 
0b1f1     7F 60 00 00 
0b1f5     00 00 00 00 
0b1f9     00 00 00 00 | 	byte	$40, $80, $00, $00, $7f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b1fd     00 00 00 01 
0b201     AC 30 00 00 
0b205     00 00 00 00 
0b209     00 00 00 01 | 	byte	$00, $00, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b20d     AC 80 00 01 
0b211     7D 50 00 00 
0b215     00 00 00 00 
0b219     00 00 00 00 | 	byte	$ac, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b21d     00 00 00 00 
0b221     7F 60 00 00 
0b225     00 00 00 00 
0b229     00 00 00 01 | 	byte	$00, $00, $00, $00, $7f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b22d     40 80 00 01 
0b231     AC 30 00 00 
0b235     00 00 00 00 
0b239     00 00 00 00 | 	byte	$40, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b23d     00 00 00 00 
0b241     7F 60 00 00 
0b245     00 00 00 00 
0b249     00 00 00 00 | 	byte	$00, $00, $00, $00, $7f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b24d     00 00 00 01 
0b251     AC 30 00 00 
0b255     D6 10 00 00 
0b259     D6 A0 00 00 | 	byte	$00, $00, $00, $01, $ac, $30, $00, $00, $d6, $10, $00, $00, $d6, $a0, $00, $00
0b25d     00 00 00 01 
0b261     AC 60 00 00 
0b265     00 00 00 00 
0b269     00 00 00 01 | 	byte	$00, $00, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b26d     1D 80 00 00 
0b271     AA 60 00 00 
0b275     00 00 00 00 
0b279     00 00 00 00 | 	byte	$1d, $80, $00, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b27d     00 00 00 01 
0b281     AC 60 00 00 
0b285     00 00 00 00 
0b289     00 00 00 01 | 	byte	$00, $00, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b28d     1D 80 00 01 
0b291     7D 50 00 00 
0b295     00 00 00 00 
0b299     00 00 00 00 | 	byte	$1d, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b29d     00 00 00 00 
0b2a1     AA 60 00 00 
0b2a5     00 00 00 00 
0b2a9     00 00 00 01 | 	byte	$00, $00, $00, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b2ad     1D 80 00 01 
0b2b1     AC 60 00 00 
0b2b5     00 00 00 00 
0b2b9     00 00 00 00 | 	byte	$1d, $80, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b2bd     00 00 00 00 
0b2c1     AA 60 00 00 
0b2c5     00 00 00 00 
0b2c9     00 00 00 01 | 	byte	$00, $00, $00, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b2cd     1D 80 00 01 
0b2d1     AC 30 00 00 
0b2d5     00 00 00 00 
0b2d9     00 00 00 00 | 	byte	$1d, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b2dd     00 00 00 01 
0b2e1     AC 60 00 00 
0b2e5     00 00 00 00 
0b2e9     00 00 00 01 | 	byte	$00, $00, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b2ed     1D 80 00 01 
0b2f1     AC 30 00 00 
0b2f5     00 00 00 00 
0b2f9     00 00 00 01 | 	byte	$1d, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b2fd     40 80 00 01 
0b301     AC 60 00 00 
0b305     00 00 00 00 
0b309     00 00 00 01 | 	byte	$40, $80, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b30d     53 80 00 01 
0b311     7D 50 00 00 
0b315     00 00 00 00 
0b319     00 00 00 00 | 	byte	$53, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b31d     00 00 00 00 
0b321     8F 60 00 00 
0b325     00 00 00 00 
0b329     00 00 00 01 | 	byte	$00, $00, $00, $00, $8f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b32d     7D 80 00 01 
0b331     AC 30 00 00 
0b335     00 00 00 00 
0b339     00 00 00 00 | 	byte	$7d, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b33d     00 00 00 00 
0b341     8F 60 00 00 
0b345     00 00 00 00 
0b349     00 00 00 00 | 	byte	$00, $00, $00, $00, $8f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b34d     00 00 00 01 
0b351     AC 30 00 00 
0b355     D6 20 00 00 
0b359     D6 B0 00 00 | 	byte	$00, $00, $00, $01, $ac, $30, $00, $00, $d6, $20, $00, $00, $d6, $b0, $00, $00
0b35d     00 00 00 01 
0b361     68 60 00 00 
0b365     00 00 00 00 
0b369     00 00 00 01 | 	byte	$00, $00, $00, $01, $68, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b36d     68 80 00 00 
0b371     D6 60 00 00 
0b375     00 00 00 00 
0b379     00 00 00 00 | 	byte	$68, $80, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b37d     00 00 00 01 
0b381     68 60 00 00 
0b385     00 00 00 00 
0b389     00 00 00 01 | 	byte	$00, $00, $00, $01, $68, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b38d     68 80 00 01 
0b391     7D 50 00 00 
0b395     00 00 00 00 
0b399     00 00 00 00 | 	byte	$68, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b39d     00 00 00 00 
0b3a1     D6 60 00 00 
0b3a5     00 00 00 00 
0b3a9     00 00 00 01 | 	byte	$00, $00, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b3ad     AC 80 00 01 
0b3b1     AC 30 00 00 
0b3b5     00 00 00 00 
0b3b9     00 00 00 00 | 	byte	$ac, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b3bd     00 00 00 00 
0b3c1     8F 60 00 00 
0b3c5     00 00 00 00 
0b3c9     00 00 00 01 | 	byte	$00, $00, $00, $00, $8f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b3cd     40 80 00 01 
0b3d1     AC 30 00 00 
0b3d5     A0 10 00 00 
0b3d9     A0 A0 00 00 | 	byte	$40, $80, $00, $01, $ac, $30, $00, $00, $a0, $10, $00, $00, $a0, $a0, $00, $00
0b3dd     00 00 00 01 
0b3e1     AC 30 00 00 
0b3e5     00 00 00 00 
0b3e9     00 00 00 01 | 	byte	$00, $00, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b3ed     40 80 00 00 
0b3f1     D6 60 00 00 
0b3f5     00 00 00 00 
0b3f9     00 00 00 01 | 	byte	$40, $80, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b3fd     7D 80 00 01 
0b401     40 60 00 00 
0b405     00 00 00 00 
0b409     00 00 00 01 | 	byte	$7d, $80, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b40d     40 80 00 01 
0b411     7D 50 00 00 
0b415     00 00 00 00 
0b419     00 00 00 01 | 	byte	$40, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b41d     7D 80 00 00 
0b421     D6 60 00 00 
0b425     00 00 00 00 
0b429     00 00 00 01 | 	byte	$7d, $80, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b42d     40 80 00 01 
0b431     7D 50 00 00 
0b435     00 00 00 00 
0b439     00 00 00 00 | 	byte	$40, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b43d     FE 80 00 01 
0b441     7D 50 00 00 
0b445     00 00 00 00 
0b449     00 00 00 00 | 	byte	$fe, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b44d     BE C0 00 01 
0b451     AC 30 00 00 
0b455     BE 20 00 00 
0b459     BE B0 00 00 | 	byte	$be, $c0, $00, $01, $ac, $30, $00, $00, $be, $20, $00, $00, $be, $b0, $00, $00
0b45d     00 00 00 01 
0b461     7D 60 00 00 
0b465     00 00 00 00 
0b469     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b46d     00 00 00 00 
0b471     BE 60 00 00 
0b475     00 00 00 00 
0b479     00 00 00 00 | 	byte	$00, $00, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b47d     BE CC 15 01 
0b481     7D 60 00 00 
0b485     00 00 00 00 
0b489     00 00 00 00 | 	byte	$be, $cc, $15, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b48d     A0 C0 00 01 
0b491     7D 50 00 00 
0b495     00 00 00 00 
0b499     00 00 00 00 | 	byte	$a0, $c0, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b49d     00 00 00 00 
0b4a1     BE 60 00 00 
0b4a5     00 00 00 00 
0b4a9     00 00 00 00 | 	byte	$00, $00, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b4ad     AA C0 00 01 
0b4b1     7D 60 00 00 
0b4b5     00 00 00 00 
0b4b9     00 00 00 00 | 	byte	$aa, $c0, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b4bd     A0 CC 15 00 
0b4c1     BE 60 00 00 
0b4c5     00 00 00 00 
0b4c9     00 00 00 00 | 	byte	$a0, $cc, $15, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b4cd     BE C0 00 01 
0b4d1     AC 30 00 00 
0b4d5     00 00 00 00 
0b4d9     00 00 00 00 | 	byte	$be, $c0, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b4dd     AA CC 15 01 
0b4e1     7D 60 00 00 
0b4e5     00 00 00 00 
0b4e9     00 00 00 00 | 	byte	$aa, $cc, $15, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b4ed     A0 CC 07 01 
0b4f1     AC 30 00 00 
0b4f5     00 00 00 00 
0b4f9     00 00 00 00 | 	byte	$a0, $cc, $07, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b4fd     BE CC 15 01 
0b501     7D 60 00 00 
0b505     00 00 00 00 
0b509     00 00 00 00 | 	byte	$be, $cc, $15, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b50d     D6 C0 00 01 
0b511     7D 50 00 00 
0b515     00 00 00 00 
0b519     00 00 00 00 | 	byte	$d6, $c0, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b51d     A0 CC 04 00 
0b521     A0 60 00 00 
0b525     00 00 00 00 
0b529     00 00 00 00 | 	byte	$a0, $cc, $04, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b52d     BE CC 07 01 
0b531     7D 60 00 00 
0b535     00 00 00 00 
0b539     00 00 00 00 | 	byte	$be, $cc, $07, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b53d     D6 CC 15 00 
0b541     A0 60 00 00 
0b545     00 00 00 00 
0b549     00 00 00 00 | 	byte	$d6, $cc, $15, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b54d     FE C0 00 01 
0b551     AC 30 00 00 
0b555     A0 10 00 00 
0b559     A0 A0 00 00 | 	byte	$fe, $c0, $00, $01, $ac, $30, $00, $00, $a0, $10, $00, $00, $a0, $a0, $00, $00
0b55d     BE CC 04 01 
0b561     40 60 00 00 
0b565     00 00 00 00 
0b569     00 00 00 00 | 	byte	$be, $cc, $04, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b56d     D6 CC 07 00 
0b571     A0 60 00 00 
0b575     00 00 00 00 
0b579     00 00 00 00 | 	byte	$d6, $cc, $07, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b57d     FE CC 15 01 
0b581     40 60 00 00 
0b585     00 00 00 00 
0b589     00 00 00 01 | 	byte	$fe, $cc, $15, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b58d     40 C0 00 01 
0b591     7D 50 00 00 
0b595     00 00 00 00 
0b599     00 00 00 00 | 	byte	$40, $c0, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b59d     D6 CC 04 00 
0b5a1     A0 60 00 00 
0b5a5     00 00 00 00 
0b5a9     00 00 00 00 | 	byte	$d6, $cc, $04, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b5ad     FE C0 00 01 
0b5b1     40 60 00 00 
0b5b5     00 00 00 00 
0b5b9     00 00 00 01 | 	byte	$fe, $c0, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b5bd     40 CC 15 00 
0b5c1     A0 60 00 00 
0b5c5     00 00 00 00 
0b5c9     00 00 00 00 | 	byte	$40, $cc, $15, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b5cd     D6 C0 00 01 
0b5d1     AC 30 00 00 
0b5d5     00 00 00 00 
0b5d9     00 00 00 00 | 	byte	$d6, $c0, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b5dd     FE CC 15 01 
0b5e1     40 60 00 00 
0b5e5     00 00 00 00 
0b5e9     00 00 00 01 | 	byte	$fe, $cc, $15, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b5ed     AC C0 00 00 
0b5f1     7F 60 00 00 
0b5f5     00 00 00 00 
0b5f9     00 00 00 01 | 	byte	$ac, $c0, $00, $00, $7f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b5fd     40 C0 00 01 
0b601     AC 30 00 00 
0b605     00 00 00 00 
0b609     00 00 00 00 | 	byte	$40, $c0, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b60d     FE C0 00 01 
0b611     7D 50 00 00 
0b615     00 00 00 00 
0b619     00 00 00 01 | 	byte	$fe, $c0, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b61d     AC CC 15 00 
0b621     7F 60 00 00 
0b625     00 00 00 00 
0b629     00 00 00 01 | 	byte	$ac, $cc, $15, $00, $7f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b62d     AC C0 00 01 
0b631     AC 30 00 00 
0b635     00 00 00 00 
0b639     00 00 00 01 | 	byte	$ac, $c0, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b63d     40 C0 00 00 
0b641     7F 60 00 00 
0b645     00 00 00 00 
0b649     00 00 00 01 | 	byte	$40, $c0, $00, $00, $7f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b64d     1D C0 00 01 
0b651     AC 30 00 00 
0b655     D6 10 00 00 
0b659     D6 A0 00 01 | 	byte	$1d, $c0, $00, $01, $ac, $30, $00, $00, $d6, $10, $00, $00, $d6, $a0, $00, $01
0b65d     AC CC 15 01 
0b661     AC 60 00 00 
0b665     00 00 00 00 
0b669     00 00 00 01 | 	byte	$ac, $cc, $15, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b66d     40 CC 15 00 
0b671     AA 60 00 00 
0b675     00 00 00 00 
0b679     00 00 00 01 | 	byte	$40, $cc, $15, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b67d     1D CC 15 01 
0b681     AC 60 00 00 
0b685     00 00 00 00 
0b689     00 00 00 01 | 	byte	$1d, $cc, $15, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b68d     1D C0 00 01 
0b691     7D 50 00 00 
0b695     00 00 00 00 
0b699     00 00 00 01 | 	byte	$1d, $c0, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b69d     40 CC 05 00 
0b6a1     AA 60 00 00 
0b6a5     00 00 00 00 
0b6a9     00 00 00 01 | 	byte	$40, $cc, $05, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b6ad     1D C0 00 01 
0b6b1     AC 60 00 00 
0b6b5     00 00 00 00 
0b6b9     00 00 00 01 | 	byte	$1d, $c0, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b6bd     40 C0 00 00 
0b6c1     AA 60 00 00 
0b6c5     00 00 00 00 
0b6c9     00 00 00 01 | 	byte	$40, $c0, $00, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b6cd     53 C0 00 01 
0b6d1     AC 30 00 00 
0b6d5     00 00 00 00 
0b6d9     00 00 00 01 | 	byte	$53, $c0, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b6dd     1D CC 15 01 
0b6e1     AC 60 00 00 
0b6e5     00 00 00 00 
0b6e9     00 00 00 01 | 	byte	$1d, $cc, $15, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b6ed     40 CC 15 01 
0b6f1     AC 30 00 00 
0b6f5     00 00 00 00 
0b6f9     00 00 00 01 | 	byte	$40, $cc, $15, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b6fd     53 CC 15 01 
0b701     AC 60 00 00 
0b705     00 00 00 00 
0b709     00 00 00 01 | 	byte	$53, $cc, $15, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b70d     53 C0 00 01 
0b711     7D 50 00 00 
0b715     00 00 00 00 
0b719     00 00 00 01 | 	byte	$53, $c0, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b71d     40 C0 00 00 
0b721     8F 60 00 00 
0b725     00 00 00 00 
0b729     00 00 00 01 | 	byte	$40, $c0, $00, $00, $8f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b72d     53 C0 00 01 
0b731     AC 30 00 00 
0b735     00 00 00 00 
0b739     00 00 00 01 | 	byte	$53, $c0, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b73d     7D C0 00 00 
0b741     8F 60 00 00 
0b745     00 00 00 00 
0b749     00 00 00 01 | 	byte	$7d, $c0, $00, $00, $8f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b74d     68 C0 00 01 
0b751     AC 30 00 00 
0b755     D6 20 00 00 
0b759     D6 B0 00 01 | 	byte	$68, $c0, $00, $01, $ac, $30, $00, $00, $d6, $20, $00, $00, $d6, $b0, $00, $01
0b75d     53 CC 15 01 
0b761     68 60 00 00 
0b765     00 00 00 00 
0b769     00 00 00 01 | 	byte	$53, $cc, $15, $01, $68, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b76d     7D CC 15 00 
0b771     D6 60 00 00 
0b775     00 00 00 00 
0b779     00 00 00 01 | 	byte	$7d, $cc, $15, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b77d     68 CC 15 01 
0b781     68 60 00 00 
0b785     00 00 00 00 
0b789     00 00 00 01 | 	byte	$68, $cc, $15, $01, $68, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b78d     68 C0 00 01 
0b791     7D 50 00 00 
0b795     00 00 00 00 
0b799     00 00 00 01 | 	byte	$68, $c0, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b79d     7D CC 07 00 
0b7a1     D6 60 00 00 
0b7a5     00 00 00 00 
0b7a9     00 00 00 01 | 	byte	$7d, $cc, $07, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b7ad     68 CC 07 01 
0b7b1     AC 30 00 00 
0b7b5     00 00 00 00 
0b7b9     00 00 00 01 | 	byte	$68, $cc, $07, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b7bd     68 CC 15 00 
0b7c1     8F 60 00 00 
0b7c5     00 00 00 00 
0b7c9     00 00 00 01 | 	byte	$68, $cc, $15, $00, $8f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b7cd     40 C0 00 01 
0b7d1     AC 30 00 00 
0b7d5     A0 10 00 00 
0b7d9     A0 A0 00 01 | 	byte	$40, $c0, $00, $01, $ac, $30, $00, $00, $a0, $10, $00, $00, $a0, $a0, $00, $01
0b7dd     68 CC 04 01 
0b7e1     AC 30 00 00 
0b7e5     00 00 00 00 
0b7e9     00 00 00 01 | 	byte	$68, $cc, $04, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b7ed     40 C0 00 00 
0b7f1     D6 60 00 00 
0b7f5     00 00 00 00 
0b7f9     00 00 00 01 | 	byte	$40, $c0, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b7fd     7D C0 00 01 
0b801     40 60 00 00 
0b805     00 00 00 00 
0b809     00 00 00 01 | 	byte	$7d, $c0, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b80d     40 C0 00 01 
0b811     7D 50 00 00 
0b815     00 00 00 00 
0b819     00 00 00 01 | 	byte	$40, $c0, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b81d     40 CC 15 00 
0b821     D6 60 00 00 
0b825     00 00 00 00 
0b829     00 00 00 01 | 	byte	$40, $cc, $15, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b82d     40 C0 00 01 
0b831     7D 50 00 00 
0b835     00 00 00 00 
0b839     00 00 00 00 | 	byte	$40, $c0, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b83d     FE C0 00 01 
0b841     7D 50 00 00 
0b845     00 00 00 00 
0b849     00 00 00 01 | 	byte	$fe, $c0, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b84d     7D 80 00 01 
0b851     AC 30 00 00 
0b855     BE 20 00 00 
0b859     BE B0 00 00 | 	byte	$7d, $80, $00, $01, $ac, $30, $00, $00, $be, $20, $00, $00, $be, $b0, $00, $00
0b85d     FE 80 00 01 
0b861     7D 60 00 00 
0b865     00 00 00 00 
0b869     00 00 00 01 | 	byte	$fe, $80, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b86d     1D 80 00 00 
0b871     BE 60 00 00 
0b875     00 00 00 00 
0b879     00 00 00 00 | 	byte	$1d, $80, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b87d     FE 80 00 01 
0b881     7D 60 00 00 
0b885     00 00 00 00 
0b889     00 00 00 01 | 	byte	$fe, $80, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b88d     40 80 00 01 
0b891     7D 50 00 00 
0b895     00 00 00 00 
0b899     00 00 00 00 | 	byte	$40, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b89d     FE 80 00 00 
0b8a1     BE 60 00 00 
0b8a5     00 00 00 00 
0b8a9     00 00 00 01 | 	byte	$fe, $80, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b8ad     53 80 00 01 
0b8b1     7D 60 00 00 
0b8b5     00 00 00 00 
0b8b9     00 00 00 00 | 	byte	$53, $80, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b8bd     FE 80 00 00 
0b8c1     BE 60 00 00 
0b8c5     00 00 00 00 
0b8c9     00 00 00 01 | 	byte	$fe, $80, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b8cd     7D 80 00 01 
0b8d1     AC 30 00 00 
0b8d5     00 00 00 00 
0b8d9     00 00 00 00 | 	byte	$7d, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b8dd     FE 80 00 01 
0b8e1     7D 60 00 00 
0b8e5     00 00 00 00 
0b8e9     00 00 00 01 | 	byte	$fe, $80, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b8ed     1D 80 00 01 
0b8f1     AC 30 00 00 
0b8f5     00 00 00 00 
0b8f9     00 00 00 00 | 	byte	$1d, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b8fd     FE 80 00 01 
0b901     7D 60 00 00 
0b905     00 00 00 00 
0b909     00 00 00 01 | 	byte	$fe, $80, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b90d     40 80 00 01 
0b911     7D 50 00 00 
0b915     00 00 00 00 
0b919     00 00 00 00 | 	byte	$40, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b91d     FE 80 00 00 
0b921     A0 60 00 00 
0b925     00 00 00 00 
0b929     00 00 00 01 | 	byte	$fe, $80, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b92d     53 80 00 01 
0b931     7D 60 00 00 
0b935     00 00 00 00 
0b939     00 00 00 00 | 	byte	$53, $80, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b93d     FE 80 00 00 
0b941     A0 60 00 00 
0b945     00 00 00 00 
0b949     00 00 00 01 | 	byte	$fe, $80, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b94d     40 80 00 01 
0b951     AC 30 00 00 
0b955     A0 10 00 00 
0b959     A0 A0 00 00 | 	byte	$40, $80, $00, $01, $ac, $30, $00, $00, $a0, $10, $00, $00, $a0, $a0, $00, $00
0b95d     D6 80 00 01 
0b961     40 60 00 00 
0b965     00 00 00 00 
0b969     00 00 00 00 | 	byte	$d6, $80, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b96d     F0 80 00 00 
0b971     A0 60 00 00 
0b975     00 00 00 00 
0b979     00 00 00 00 | 	byte	$f0, $80, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b97d     D6 80 00 01 
0b981     40 60 00 00 
0b985     00 00 00 00 
0b989     00 00 00 00 | 	byte	$d6, $80, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b98d     FE 80 00 01 
0b991     7D 50 00 00 
0b995     00 00 00 00 
0b999     00 00 00 00 | 	byte	$fe, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b99d     D6 80 00 00 
0b9a1     A0 60 00 00 
0b9a5     00 00 00 00 
0b9a9     00 00 00 01 | 	byte	$d6, $80, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b9ad     1D 80 00 01 
0b9b1     40 60 00 00 
0b9b5     00 00 00 00 
0b9b9     00 00 00 00 | 	byte	$1d, $80, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b9bd     D6 80 00 00 
0b9c1     A0 60 00 00 
0b9c5     00 00 00 00 
0b9c9     00 00 00 01 | 	byte	$d6, $80, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b9cd     40 80 00 01 
0b9d1     AC 30 00 00 
0b9d5     00 00 00 00 
0b9d9     00 00 00 00 | 	byte	$40, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b9dd     D6 80 00 01 
0b9e1     40 60 00 00 
0b9e5     00 00 00 00 
0b9e9     00 00 00 00 | 	byte	$d6, $80, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b9ed     F0 80 00 00 
0b9f1     7F 60 00 00 
0b9f5     00 00 00 00 
0b9f9     00 00 00 00 | 	byte	$f0, $80, $00, $00, $7f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b9fd     D6 80 00 01 
0ba01     AC 30 00 00 
0ba05     00 00 00 00 
0ba09     00 00 00 00 | 	byte	$d6, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ba0d     FE 80 00 01 
0ba11     7D 50 00 00 
0ba15     00 00 00 00 
0ba19     00 00 00 00 | 	byte	$fe, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ba1d     D6 80 00 00 
0ba21     7F 60 00 00 
0ba25     00 00 00 00 
0ba29     00 00 00 01 | 	byte	$d6, $80, $00, $00, $7f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0ba2d     1D 80 00 01 
0ba31     AC 30 00 00 
0ba35     00 00 00 00 
0ba39     00 00 00 00 | 	byte	$1d, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ba3d     D6 80 00 00 
0ba41     7F 60 00 00 
0ba45     00 00 00 00 
0ba49     00 00 00 01 | 	byte	$d6, $80, $00, $00, $7f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0ba4d     AC 80 00 01 
0ba51     AC 30 00 00 
0ba55     D6 10 00 00 
0ba59     D6 A0 00 01 | 	byte	$ac, $80, $00, $01, $ac, $30, $00, $00, $d6, $10, $00, $00, $d6, $a0, $00, $01
0ba5d     1D 80 00 01 
0ba61     AC 60 00 00 
0ba65     00 00 00 00 
0ba69     00 00 00 01 | 	byte	$1d, $80, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0ba6d     40 80 00 00 
0ba71     AA 60 00 00 
0ba75     00 00 00 00 
0ba79     00 00 00 01 | 	byte	$40, $80, $00, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0ba7d     1D 80 00 01 
0ba81     AC 60 00 00 
0ba85     00 00 00 00 
0ba89     00 00 00 01 | 	byte	$1d, $80, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0ba8d     53 80 00 01 
0ba91     7D 50 00 00 
0ba95     00 00 00 00 
0ba99     00 00 00 01 | 	byte	$53, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0ba9d     1D 80 00 00 
0baa1     AA 60 00 00 
0baa5     00 00 00 00 
0baa9     00 00 00 01 | 	byte	$1d, $80, $00, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0baad     7D 80 00 01 
0bab1     AC 60 00 00 
0bab5     00 00 00 00 
0bab9     00 00 00 01 | 	byte	$7d, $80, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0babd     1D 80 00 00 
0bac1     AA 60 00 00 
0bac5     00 00 00 00 
0bac9     00 00 00 01 | 	byte	$1d, $80, $00, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bacd     AC 80 00 01 
0bad1     AC 30 00 00 
0bad5     00 00 00 00 
0bad9     00 00 00 01 | 	byte	$ac, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0badd     1D 80 00 01 
0bae1     AC 60 00 00 
0bae5     00 00 00 00 
0bae9     00 00 00 01 | 	byte	$1d, $80, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0baed     40 80 00 01 
0baf1     AC 30 00 00 
0baf5     00 00 00 00 
0baf9     00 00 00 01 | 	byte	$40, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bafd     1D 80 00 01 
0bb01     AC 60 00 00 
0bb05     00 00 00 00 
0bb09     00 00 00 01 | 	byte	$1d, $80, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bb0d     53 80 00 01 
0bb11     7D 50 00 00 
0bb15     00 00 00 00 
0bb19     00 00 00 01 | 	byte	$53, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bb1d     1D 80 00 00 
0bb21     8F 60 00 00 
0bb25     00 00 00 00 
0bb29     00 00 00 01 | 	byte	$1d, $80, $00, $00, $8f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bb2d     7D 80 00 01 
0bb31     AC 30 00 00 
0bb35     00 00 00 00 
0bb39     00 00 00 01 | 	byte	$7d, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bb3d     1D 80 00 00 
0bb41     8F 60 00 00 
0bb45     00 00 00 00 
0bb49     00 00 00 01 | 	byte	$1d, $80, $00, $00, $8f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bb4d     AC 80 00 01 
0bb51     AC 30 00 00 
0bb55     D6 20 00 00 
0bb59     D6 B0 00 01 | 	byte	$ac, $80, $00, $01, $ac, $30, $00, $00, $d6, $20, $00, $00, $d6, $b0, $00, $01
0bb5d     1D 80 00 01 
0bb61     68 60 00 00 
0bb65     00 00 00 00 
0bb69     00 00 00 01 | 	byte	$1d, $80, $00, $01, $68, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bb6d     40 80 00 00 
0bb71     D6 60 00 00 
0bb75     00 00 00 00 
0bb79     00 00 00 01 | 	byte	$40, $80, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bb7d     1D 80 00 01 
0bb81     68 60 00 00 
0bb85     00 00 00 00 
0bb89     00 00 00 01 | 	byte	$1d, $80, $00, $01, $68, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bb8d     68 80 00 01 
0bb91     7D 50 00 00 
0bb95     00 00 00 00 
0bb99     00 00 00 01 | 	byte	$68, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bb9d     1D 80 00 00 
0bba1     D6 60 00 00 
0bba5     00 00 00 00 
0bba9     00 00 00 01 | 	byte	$1d, $80, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bbad     AC 80 00 01 
0bbb1     AC 30 00 00 
0bbb5     00 00 00 00 
0bbb9     00 00 00 01 | 	byte	$ac, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bbbd     1D 80 00 00 
0bbc1     8F 60 00 00 
0bbc5     00 00 00 00 
0bbc9     00 00 00 01 | 	byte	$1d, $80, $00, $00, $8f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bbcd     AC 80 00 01 
0bbd1     AC 30 00 00 
0bbd5     A0 10 00 00 
0bbd9     A0 A0 00 00 | 	byte	$ac, $80, $00, $01, $ac, $30, $00, $00, $a0, $10, $00, $00, $a0, $a0, $00, $00
0bbdd     FE 80 00 01 
0bbe1     AC 30 00 00 
0bbe5     00 00 00 00 
0bbe9     00 00 00 01 | 	byte	$fe, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bbed     1D 80 00 00 
0bbf1     D6 60 00 00 
0bbf5     00 00 00 00 
0bbf9     00 00 00 00 | 	byte	$1d, $80, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0bbfd     FE 80 00 01 
0bc01     40 60 00 00 
0bc05     00 00 00 00 
0bc09     00 00 00 01 | 	byte	$fe, $80, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bc0d     40 80 00 01 
0bc11     7D 50 00 00 
0bc15     00 00 00 00 
0bc19     00 00 00 00 | 	byte	$40, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0bc1d     FE 80 00 00 
0bc21     D6 60 00 00 
0bc25     00 00 00 00 
0bc29     00 00 00 01 | 	byte	$fe, $80, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bc2d     53 80 00 01 
0bc31     7D 50 00 00 
0bc35     00 00 00 00 
0bc39     00 00 00 00 | 	byte	$53, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0bc3d     FE 80 00 01 
0bc41     7D 50 00 00 
0bc45     00 00 00 00 
0bc49     00 00 00 01 | 	byte	$fe, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bc4d     7D 80 00 01 
0bc51     AC 30 00 00 
0bc55     BE 20 00 00 
0bc59     BE B0 00 00 | 	byte	$7d, $80, $00, $01, $ac, $30, $00, $00, $be, $20, $00, $00, $be, $b0, $00, $00
0bc5d     FE 80 00 01 
0bc61     7D 60 00 00 
0bc65     00 00 00 00 
0bc69     00 00 00 01 | 	byte	$fe, $80, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bc6d     1D 80 00 00 
0bc71     BE 60 00 00 
0bc75     00 00 00 00 
0bc79     00 00 00 00 | 	byte	$1d, $80, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0bc7d     FE 80 00 01 
0bc81     7D 60 00 00 
0bc85     00 00 00 00 
0bc89     00 00 00 01 | 	byte	$fe, $80, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bc8d     40 80 00 01 
0bc91     7D 50 00 00 
0bc95     00 00 00 00 
0bc99     00 00 00 00 | 	byte	$40, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0bc9d     FE 80 00 00 
0bca1     BE 60 00 00 
0bca5     00 00 00 00 
0bca9     00 00 00 00 | 	byte	$fe, $80, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0bcad     BE 80 00 01 
0bcb1     7D 60 00 00 
0bcb5     00 00 00 00 
0bcb9     00 00 00 00 | 	byte	$be, $80, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0bcbd     AA 80 00 00 
0bcc1     BE 60 00 00 
0bcc5     00 00 00 00 
0bcc9     00 00 00 00 | 	byte	$aa, $80, $00, $00, $be, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0bccd     A0 80 00 01 
0bcd1     AC 30 00 00 
0bcd5     00 00 00 00 
0bcd9     00 00 00 00 | 	byte	$a0, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0bcdd     BE 80 00 01 
0bce1     7D 60 00 00 
0bce5     00 00 00 00 
0bce9     00 00 00 00 | 	byte	$be, $80, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0bced     FE 80 00 01 
0bcf1     AC 30 00 00 
0bcf5     00 00 00 00 
0bcf9     00 00 00 01 | 	byte	$fe, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bcfd     1D 80 00 01 
0bd01     7D 60 00 00 
0bd05     00 00 00 00 
0bd09     00 00 00 01 | 	byte	$1d, $80, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bd0d     40 80 00 01 
0bd11     7D 50 00 00 
0bd15     00 00 00 00 
0bd19     00 00 00 01 | 	byte	$40, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bd1d     7D 80 00 00 
0bd21     A0 60 00 00 
0bd25     00 00 00 00 
0bd29     00 00 00 01 | 	byte	$7d, $80, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bd2d     40 80 00 01 
0bd31     7D 60 00 00 
0bd35     00 00 00 00 
0bd39     00 00 00 01 | 	byte	$40, $80, $00, $01, $7d, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bd3d     1D 80 00 00 
0bd41     A0 60 00 00 
0bd45     00 00 00 00 
0bd49     00 00 00 01 | 	byte	$1d, $80, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bd4d     40 80 00 01 
0bd51     AC 30 00 00 
0bd55     A0 10 00 00 
0bd59     A0 A0 00 00 | 	byte	$40, $80, $00, $01, $ac, $30, $00, $00, $a0, $10, $00, $00, $a0, $a0, $00, $00
0bd5d     D6 80 00 01 
0bd61     40 60 00 00 
0bd65     00 00 00 00 
0bd69     00 00 00 00 | 	byte	$d6, $80, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0bd6d     F0 80 00 00 
0bd71     A0 60 00 00 
0bd75     00 00 00 00 
0bd79     00 00 00 00 | 	byte	$f0, $80, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0bd7d     D6 80 00 01 
0bd81     40 60 00 00 
0bd85     00 00 00 00 
0bd89     00 00 00 00 | 	byte	$d6, $80, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0bd8d     FE 80 00 01 
0bd91     7D 50 00 00 
0bd95     00 00 00 00 
0bd99     00 00 00 00 | 	byte	$fe, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0bd9d     D6 80 00 00 
0bda1     A0 60 00 00 
0bda5     00 00 00 00 
0bda9     00 00 00 00 | 	byte	$d6, $80, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0bdad     A0 80 00 01 
0bdb1     40 60 00 00 
0bdb5     00 00 00 00 
0bdb9     00 00 00 00 | 	byte	$a0, $80, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0bdbd     8F 80 00 00 
0bdc1     A0 60 00 00 
0bdc5     00 00 00 00 
0bdc9     00 00 00 00 | 	byte	$8f, $80, $00, $00, $a0, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0bdcd     7F 80 00 01 
0bdd1     AC 30 00 00 
0bdd5     00 00 00 00 
0bdd9     00 00 00 00 | 	byte	$7f, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0bddd     A0 80 00 01 
0bde1     40 60 00 00 
0bde5     00 00 00 00 
0bde9     00 00 00 00 | 	byte	$a0, $80, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0bded     D6 80 00 00 
0bdf1     7F 60 00 00 
0bdf5     00 00 00 00 
0bdf9     00 00 00 00 | 	byte	$d6, $80, $00, $00, $7f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0bdfd     FE 80 00 01 
0be01     AC 30 00 00 
0be05     00 00 00 00 
0be09     00 00 00 01 | 	byte	$fe, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0be0d     40 80 00 01 
0be11     7D 50 00 00 
0be15     00 00 00 00 
0be19     00 00 00 01 | 	byte	$40, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0be1d     AC 80 00 00 
0be21     7F 60 00 00 
0be25     00 00 00 00 
0be29     00 00 00 01 | 	byte	$ac, $80, $00, $00, $7f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0be2d     40 80 00 01 
0be31     AC 30 00 00 
0be35     00 00 00 00 
0be39     00 00 00 00 | 	byte	$40, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0be3d     FE 80 00 00 
0be41     7F 60 00 00 
0be45     00 00 00 00 
0be49     00 00 00 01 | 	byte	$fe, $80, $00, $00, $7f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0be4d     AC 80 00 01 
0be51     AC 30 00 00 
0be55     D6 10 00 00 
0be59     D6 A0 00 02 | 	byte	$ac, $80, $00, $01, $ac, $30, $00, $00, $d6, $10, $00, $00, $d6, $a0, $00, $02
0be5d     3A 80 00 01 
0be61     AC 60 00 00 
0be65     00 00 00 00 
0be69     00 00 00 01 | 	byte	$3a, $80, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0be6d     AC 80 00 00 
0be71     AA 60 00 00 
0be75     00 00 00 00 
0be79     00 00 00 01 | 	byte	$ac, $80, $00, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0be7d     7D 80 00 01 
0be81     AC 60 00 00 
0be85     00 00 00 00 
0be89     00 00 00 01 | 	byte	$7d, $80, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0be8d     53 80 00 01 
0be91     7D 50 00 00 
0be95     00 00 00 00 
0be99     00 00 00 01 | 	byte	$53, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0be9d     AC 80 00 00 
0bea1     AA 60 00 00 
0bea5     00 00 00 00 
0bea9     00 00 00 01 | 	byte	$ac, $80, $00, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bead     53 80 00 01 
0beb1     AC 60 00 00 
0beb5     00 00 00 00 
0beb9     00 00 00 01 | 	byte	$53, $80, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bebd     40 80 00 00 
0bec1     AA 60 00 00 
0bec5     00 00 00 00 
0bec9     00 00 00 01 | 	byte	$40, $80, $00, $00, $aa, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0becd     1D 80 00 01 
0bed1     AC 30 00 00 
0bed5     00 00 00 00 
0bed9     00 00 00 01 | 	byte	$1d, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bedd     53 80 00 01 
0bee1     AC 60 00 00 
0bee5     00 00 00 00 
0bee9     00 00 00 01 | 	byte	$53, $80, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0beed     7D 80 00 01 
0bef1     AC 30 00 00 
0bef5     00 00 00 00 
0bef9     00 00 00 01 | 	byte	$7d, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0befd     53 80 00 01 
0bf01     AC 60 00 00 
0bf05     00 00 00 00 
0bf09     00 00 00 01 | 	byte	$53, $80, $00, $01, $ac, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bf0d     AC 80 00 01 
0bf11     7D 50 00 00 
0bf15     00 00 00 00 
0bf19     00 00 00 02 | 	byte	$ac, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $02
0bf1d     3A 80 00 00 
0bf21     8F 60 00 00 
0bf25     00 00 00 00 
0bf29     00 00 00 01 | 	byte	$3a, $80, $00, $00, $8f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bf2d     AC 80 00 01 
0bf31     AC 30 00 00 
0bf35     00 00 00 00 
0bf39     00 00 00 01 | 	byte	$ac, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bf3d     53 80 00 00 
0bf41     8F 60 00 00 
0bf45     00 00 00 00 
0bf49     00 00 00 01 | 	byte	$53, $80, $00, $00, $8f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bf4d     68 80 00 01 
0bf51     AC 30 00 00 
0bf55     D6 20 00 00 
0bf59     D6 B0 00 01 | 	byte	$68, $80, $00, $01, $ac, $30, $00, $00, $d6, $20, $00, $00, $d6, $b0, $00, $01
0bf5d     AC 80 00 01 
0bf61     68 60 00 00 
0bf65     00 00 00 00 
0bf69     00 00 00 01 | 	byte	$ac, $80, $00, $01, $68, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bf6d     68 80 00 00 
0bf71     D6 60 00 00 
0bf75     00 00 00 00 
0bf79     00 00 00 01 | 	byte	$68, $80, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bf7d     1D 80 00 01 
0bf81     68 60 00 00 
0bf85     00 00 00 00 
0bf89     00 00 00 00 | 	byte	$1d, $80, $00, $01, $68, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0bf8d     D6 80 00 01 
0bf91     7D 50 00 00 
0bf95     00 00 00 00 
0bf99     00 00 00 01 | 	byte	$d6, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bf9d     1D 80 00 00 
0bfa1     D6 60 00 00 
0bfa5     00 00 00 00 
0bfa9     00 00 00 01 | 	byte	$1d, $80, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bfad     68 80 00 01 
0bfb1     AC 30 00 00 
0bfb5     00 00 00 00 
0bfb9     00 00 00 01 | 	byte	$68, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bfbd     AC 80 00 00 
0bfc1     8F 60 00 00 
0bfc5     00 00 00 00 
0bfc9     00 00 00 01 | 	byte	$ac, $80, $00, $00, $8f, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bfcd     40 80 00 01 
0bfd1     AC 30 00 00 
0bfd5     A0 10 00 00 
0bfd9     A0 A0 00 01 | 	byte	$40, $80, $00, $01, $ac, $30, $00, $00, $a0, $10, $00, $00, $a0, $a0, $00, $01
0bfdd     AC 80 00 01 
0bfe1     AC 30 00 00 
0bfe5     00 00 00 00 
0bfe9     00 00 00 01 | 	byte	$ac, $80, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0bfed     40 80 00 00 
0bff1     D6 60 00 00 
0bff5     00 00 00 00 
0bff9     00 00 00 00 | 	byte	$40, $80, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0bffd     FE 80 00 01 
0c001     40 60 00 00 
0c005     00 00 00 00 
0c009     00 00 00 00 | 	byte	$fe, $80, $00, $01, $40, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c00d     D6 80 00 01 
0c011     7D 50 00 00 
0c015     00 00 00 00 
0c019     00 00 00 00 | 	byte	$d6, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c01d     FE 80 00 00 
0c021     D6 60 00 00 
0c025     00 00 00 00 
0c029     00 00 00 01 | 	byte	$fe, $80, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0c02d     40 80 00 01 
0c031     7D 50 00 00 
0c035     00 00 00 00 
0c039     00 00 00 01 | 	byte	$40, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0c03d     AC 80 00 01 
0c041     7D 50 00 00 
0c045     00 00 00 00 
0c049     00 00 00 01 | 	byte	$ac, $80, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0c04d     AC 30 00 01 
0c051     7D 30 00 00 
0c055     00 0C 26 00 
0c059     00 00 00 00 | 	byte	$ac, $30, $00, $01, $7d, $30, $00, $00, $00, $0c, $26, $00, $00, $00, $00, $00
0c05d     00 00 00 00 
0c061     00 00 00 00 
0c065     00          | 	byte	$00[9]
0c066     0C 25 00 00 
0c06a     00 00 00 BE 
0c06e     40 00 00 00 
0c072     00 00 00 00 | 	byte	$0c, $25, $00, $00, $00, $00, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00
0c076     0C 24 00 00 
0c07a     00 00 00 00 
0c07e     00 00 01 7D 
0c082     30 00 00 00 | 	byte	$0c, $24, $00, $00, $00, $00, $00, $00, $00, $00, $01, $7d, $30, $00, $00, $00
0c086     0C 23 00 00 
0c08a     00 00 01 AC 
0c08e     50 00 01 7D 
0c092     50 00 00 00 | 	byte	$0c, $23, $00, $00, $00, $00, $01, $ac, $50, $00, $01, $7d, $50, $00, $00, $00
0c096     0C 22 00 00 
0c09a     00 00 00 00 
0c09e     00 00 00 00 
0c0a2     00 00 00 00 | 	byte	$0c, $22, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c0a6     0C 21 00 00 
0c0aa     00 00 00 00 
0c0ae     00 00 01 7D 
0c0b2     30 00 00 00 | 	byte	$0c, $21, $00, $00, $00, $00, $00, $00, $00, $00, $01, $7d, $30, $00, $00, $00
0c0b6     0C 20 00 00 
0c0ba     00 00 00 00 
0c0be     00 00 00 00 
0c0c2     00 00 00 00 | 	byte	$0c, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c0c6     0C 1F 00 00 
0c0ca     00 00 01 AC 
0c0ce     30 00 01 7D 
0c0d2     30 00 00 00 | 	byte	$0c, $1f, $00, $00, $00, $00, $01, $ac, $30, $00, $01, $7d, $30, $00, $00, $00
0c0d6     0C 1E 00 00 
0c0da     0C 26 00 00 
0c0de     00 00 00 00 
0c0e2     00 00 00 00 | 	byte	$0c, $1e, $00, $00, $0c, $26, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c0e6     0C 1D 00 00 
0c0ea     0C 25 01 AC 
0c0ee     30 00 00 00 
0c0f2     00 00 00 00 | 	byte	$0c, $1d, $00, $00, $0c, $25, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00
0c0f6     0C 1C 00 00 
0c0fa     0C 24 00 00 
0c0fe     00 00 01 7D 
0c102     30 00 00 00 | 	byte	$0c, $1c, $00, $00, $0c, $24, $00, $00, $00, $00, $01, $7d, $30, $00, $00, $00
0c106     0C 1B 00 00 
0c10a     0C 23 01 AC 
0c10e     50 00 01 7D 
0c112     50 00 00 00 | 	byte	$0c, $1b, $00, $00, $0c, $23, $01, $ac, $50, $00, $01, $7d, $50, $00, $00, $00
0c116     0C 1A 00 00 
0c11a     0C 22 00 00 
0c11e     00 00 00 00 
0c122     00 00 00 00 | 	byte	$0c, $1a, $00, $00, $0c, $22, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c126     0C 19 00 00 
0c12a     0C 21 00 00 
0c12e     00 00 01 7D 
0c132     30 00 00 00 | 	byte	$0c, $19, $00, $00, $0c, $21, $00, $00, $00, $00, $01, $7d, $30, $00, $00, $00
0c136     0C 18 00 00 
0c13a     0C 20 00 00 
0c13e     00 00 00 00 
0c142     00 00 00 00 | 	byte	$0c, $18, $00, $00, $0c, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c146     0C 17 00 00 
0c14a     0C 1F 01 AC 
0c14e     30 00 01 7D 
0c152     30 00 00 00 | 	byte	$0c, $17, $00, $00, $0c, $1f, $01, $ac, $30, $00, $01, $7d, $30, $00, $00, $00
0c156     0C 16 00 00 
0c15a     0C 1E 00 00 
0c15e     00 00 00 00 
0c162     00 00 00 00 | 	byte	$0c, $16, $00, $00, $0c, $1e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c166     0C 15 00 00 
0c16a     0C 1D 00 BE 
0c16e     40 00 00 00 
0c172     00 00 00 00 | 	byte	$0c, $15, $00, $00, $0c, $1d, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00
0c176     0C 14 00 00 
0c17a     0C 1C 00 00 
0c17e     00 00 01 7D 
0c182     30 00 00 00 | 	byte	$0c, $14, $00, $00, $0c, $1c, $00, $00, $00, $00, $01, $7d, $30, $00, $00, $00
0c186     0C 13 00 00 
0c18a     0C 1B 01 AC 
0c18e     50 00 01 7D 
0c192     50 00 00 00 | 	byte	$0c, $13, $00, $00, $0c, $1b, $01, $ac, $50, $00, $01, $7d, $50, $00, $00, $00
0c196     0C 12 00 00 
0c19a     0C 1A 00 00 
0c19e     00 00 00 00 
0c1a2     00 00 00 00 | 	byte	$0c, $12, $00, $00, $0c, $1a, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c1a6     0C 11 00 00 
0c1aa     0C 19 00 00 
0c1ae     00 00 01 7D 
0c1b2     30 00 00 00 | 	byte	$0c, $11, $00, $00, $0c, $19, $00, $00, $00, $00, $01, $7d, $30, $00, $00, $00
0c1b6     0C 10 00 00 
0c1ba     0C 18 00 00 
0c1be     00 00 01 7D 
0c1c2     30 00 00 00 | 	byte	$0c, $10, $00, $00, $0c, $18, $00, $00, $00, $00, $01, $7d, $30, $00, $00, $00
0c1c6     0C 0F 00 00 
0c1ca     0C 17 01 AC 
0c1ce     30 00 00 00 
0c1d2     00 00 00 00 | 	byte	$0c, $0f, $00, $00, $0c, $17, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00
0c1d6     0C 0E 00 00 
0c1da     0C 16 01 AC 
0c1de     30 00 01 7D 
0c1e2     30 00 00 00 | 	byte	$0c, $0e, $00, $00, $0c, $16, $01, $ac, $30, $00, $01, $7d, $30, $00, $00, $00
0c1e6     0C 0D 00 00 
0c1ea     0C 15 01 AC 
0c1ee     30 00 00 00 
0c1f2     00 00 00 00 | 	byte	$0c, $0d, $00, $00, $0c, $15, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00
0c1f6     0C 0C 00 00 
0c1fa     0C 14 00 00 
0c1fe     00 00 01 7D 
0c202     30 00 00 00 | 	byte	$0c, $0c, $00, $00, $0c, $14, $00, $00, $00, $00, $01, $7d, $30, $00, $00, $00
0c206     0C 0B 00 00 
0c20a     0C 13 01 AC 
0c20e     50 00 01 7D 
0c212     50 00 00 00 | 	byte	$0c, $0b, $00, $00, $0c, $13, $01, $ac, $50, $00, $01, $7d, $50, $00, $00, $00
0c216     0C 0A 00 00 
0c21a     0C 12 00 00 
0c21e     00 00 01 7D 
0c222     30 00 00 00 | 	byte	$0c, $0a, $00, $00, $0c, $12, $00, $00, $00, $00, $01, $7d, $30, $00, $00, $00
0c226     0C 09 00 00 
0c22a     0C 11 01 AC 
0c22e     30 00 00 00 
0c232     00 00 00 00 | 	byte	$0c, $09, $00, $00, $0c, $11, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00
0c236     0C 08 00 00 
0c23a     0C 10 00 00 
0c23e     00 00 01 7D 
0c242     30 00 00 00 | 	byte	$0c, $08, $00, $00, $0c, $10, $00, $00, $00, $00, $01, $7d, $30, $00, $00, $00
0c246     0C 07 00 00 
0c24a     0C 0F 01 AC 
0c24e     30 00 01 7D 
0c252     30 00 00 00 | 	byte	$0c, $07, $00, $00, $0c, $0f, $01, $ac, $30, $00, $01, $7d, $30, $00, $00, $00
0c256     0C 06 00 00 
0c25a     0C 0E 00 00 
0c25e     00 00 00 00 
0c262     00 00 00 00 | 	byte	$0c, $06, $00, $00, $0c, $0e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c266     0C 05 00 00 
0c26a     0C 0D 00 BE 
0c26e     40 00 00 00 
0c272     00 00 00 00 | 	byte	$0c, $05, $00, $00, $0c, $0d, $00, $be, $40, $00, $00, $00, $00, $00, $00, $00
0c276     0C 04 00 00 
0c27a     0C 0C 00 00 
0c27e     00 00 01 7D 
0c282     30 00 00 00 | 	byte	$0c, $04, $00, $00, $0c, $0c, $00, $00, $00, $00, $01, $7d, $30, $00, $00, $00
0c286     0C 03 00 00 
0c28a     0C 0B 01 AC 
0c28e     50 00 01 7D 
0c292     50 00 00 00 | 	byte	$0c, $03, $00, $00, $0c, $0b, $01, $ac, $50, $00, $01, $7d, $50, $00, $00, $00
0c296     0C 02 00 00 
0c29a     0C 0A 00 00 
0c29e     00 00 00 00 
0c2a2     00 00 00 00 | 	byte	$0c, $02, $00, $00, $0c, $0a, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c2a6     0C 01 00 00 
0c2aa     0C 09 00 00 
0c2ae     00 00 01 7D 
0c2b2     30 00 00 00 | 	byte	$0c, $01, $00, $00, $0c, $09, $00, $00, $00, $00, $01, $7d, $30, $00, $00, $00
0c2b6     0C 00 00 00 
0c2ba     0C 08 00 00 
0c2be     00 00 00 00 
0c2c2     00 00 00 00 | 	byte	$0c, $00, $00, $00, $0c, $08, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c2c6     00 00 00 00 
0c2ca     0C 07 01 AC 
0c2ce     30 00 01 7D 
0c2d2     30 00 00 00 | 	byte	$00, $00, $00, $00, $0c, $07, $01, $ac, $30, $00, $01, $7d, $30, $00, $00, $00
0c2d6     00 00 00 00 
0c2da     0C 06 00 00 
0c2de     00 00 00 00 
0c2e2     00 00 00 00 | 	byte	$00, $00, $00, $00, $0c, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c2e6     00 00 00 00 
0c2ea     0C 05 01 AC 
0c2ee     30 00 00 00 
0c2f2     00 00 00 00 | 	byte	$00, $00, $00, $00, $0c, $05, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00
0c2f6     00 00 00 00 
0c2fa     0C 04 00 00 
0c2fe     00 00 01 7D 
0c302     30 00 00 00 | 	byte	$00, $00, $00, $00, $0c, $04, $00, $00, $00, $00, $01, $7d, $30, $00, $00, $00
0c306     00 00 00 00 
0c30a     0C 03 01 AC 
0c30e     50 00 01 7D 
0c312     50 00 00 00 | 	byte	$00, $00, $00, $00, $0c, $03, $01, $ac, $50, $00, $01, $7d, $50, $00, $00, $00
0c316     00 00 00 00 
0c31a     0C 02 00 00 
0c31e     00 00 00 00 
0c322     00 00 00 00 | 	byte	$00, $00, $00, $00, $0c, $02, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c326     00 00 00 00 
0c32a     0C 01 00 00 
0c32e     00 00 01 7D 
0c332     30 00 00 00 | 	byte	$00, $00, $00, $00, $0c, $01, $00, $00, $00, $00, $01, $7d, $30, $00, $00, $00
0c336     00 00 00 00 
0c33a     0C 00 00 00 
0c33e     00 00 00 00 
0c342     00 00 00 00 | 	byte	$00, $00, $00, $00, $0c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c346     00 00 00 00 
0c34a     00 00       | 	byte	$00[6]
0c34c     01 AC 30 00 
0c350     01 7D 30 00 
0c354     00 00 00 00 
0c358     00 00 00 00 | 	byte	$01, $ac, $30, $00, $01, $7d, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c35c     00 00 00 00 
0c360     00 00 00 00 
0c364     00 00 00 00 
0c368     00 00 00 00 
0c36c     00          | 	byte	$00[17]
0c36d     BE 40 00 00 
0c371     00 00 00 00 
0c375     00 00 00 00 
0c379     00 00 00 00 | 	byte	$be, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c37d     00 00 00 01 
0c381     7D 30 00 00 
0c385     00 00 00 00 
0c389     00 00 00 01 | 	byte	$00, $00, $00, $01, $7d, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0c38d     AC 50 00 01 
0c391     7D 50 00 00 
0c395     00 00 00 00 
0c399     00 00 00 00 | 	byte	$ac, $50, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c39d     00 00 00 00 
0c3a1     00 00 00 00 
0c3a5     00 00 00 00 
0c3a9     00 00 00 00 
0c3ad     00 00 00    | 	byte	$00[19]
0c3b0     01 7D 30 00 
0c3b4     00 00 00 00 
0c3b8     00 00 00 00 
0c3bc     01 AC 30 00 | 	byte	$01, $7d, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $ac, $30, $00
0c3c0     00 00 00 00 
0c3c4     00 00 00 00 
0c3c8     00 00 00 00 | 	byte	$00[12]
0c3cc     01 AC 50 00 
0c3d0     01 7D 30 00 
0c3d4     00 00 00 00 
0c3d8     00 00 00 00 | 	byte	$01, $ac, $50, $00, $01, $7d, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c3dc     01 AC 50 00 
0c3e0     01 7D 30 00 
0c3e4     00 00 00 00 
0c3e8     00 00 00 00 | 	byte	$01, $ac, $50, $00, $01, $7d, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c3ec     00 00 00 00 
0c3f0     01 7D 50 00 
0c3f4     00 00 00 00 
0c3f8     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c3fc     01 AC 50 00 
0c400     01 7D 30 00 
0c404     00 00 00 00 
0c408     00 00 00 00 | 	byte	$01, $ac, $50, $00, $01, $7d, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c40c     01 AC 30 00 
0c410     01 7D 50 00 
0c414     00 00 00 00 
0c418     00 00 00 00 | 	byte	$01, $ac, $30, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c41c     01 AC 30 00 
0c420     01 7D 30 00 
0c424     00 00 00 00 
0c428     00 00 00 00 | 	byte	$01, $ac, $30, $00, $01, $7d, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c42c     01 AC 50 00 
0c430     01 7D 50 00 
0c434     00 00 00 00 
0c438     00 00 00 00 | 	byte	$01, $ac, $50, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c43c     01 AC 50 00 
0c440     01 7D 50 00 
0c444     00 00 00 00 
0c448     00 00 00 00 | 	byte	$01, $ac, $50, $00, $01, $7d, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c44c     00 BE 90 00 
0c450     01 AC 30 00 
0c454     00 BE BC 03 
0c458     00 00 00 00 | 	byte	$00, $be, $90, $00, $01, $ac, $30, $00, $00, $be, $bc, $03, $00, $00, $00, $00
0c45c     00 00 00 00 
0c460     00 00 00 00 
0c464     00 00       | 	byte	$00[10]
0c466     0C 06 00 00 
0c46a     00 00 00 00 
0c46e     00 00 00 00 
0c472     00 00 00 00 | 	byte	$0c, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c476     0C 09 00 00 
0c47a     00 00 00 BE 
0c47e     9C 15 00 00 
0c482     00 00 00 00 | 	byte	$0c, $09, $00, $00, $00, $00, $00, $be, $9c, $15, $00, $00, $00, $00, $00, $00
0c486     0C 0C 00 00 
0c48a     00 00 00 A0 
0c48e     90 00 01 AC 
0c492     30 00 00 00 | 	byte	$0c, $0c, $00, $00, $00, $00, $00, $a0, $90, $00, $01, $ac, $30, $00, $00, $00
0c496     0C 0F 00 00 
0c49a     00 00 00 00 
0c49e     00 00 00 00 
0c4a2     00 00 00 00 | 	byte	$0c, $0f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c4a6     0C 13 00 00 
0c4aa     00 00 00 AA 
0c4ae     90 00 00 00 
0c4b2     00 00 00 00 | 	byte	$0c, $13, $00, $00, $00, $00, $00, $aa, $90, $00, $00, $00, $00, $00, $00, $00
0c4b6     0C 16 00 00 
0c4ba     00 00 00 A0 
0c4be     9C 15 00 00 
0c4c2     00 00 00 00 | 	byte	$0c, $16, $00, $00, $00, $00, $00, $a0, $9c, $15, $00, $00, $00, $00, $00, $00
0c4c6     0C 19 00 00 
0c4ca     00 00 00 BE 
0c4ce     90 00 01 AC 
0c4d2     30 00 00 00 | 	byte	$0c, $19, $00, $00, $00, $00, $00, $be, $90, $00, $01, $ac, $30, $00, $00, $00
0c4d6     0C 1C 00 00 
0c4da     00 00 00 AA 
0c4de     9C 15 01 AC 
0c4e2     30 00 00 00 | 	byte	$0c, $1c, $00, $00, $00, $00, $00, $aa, $9c, $15, $01, $ac, $30, $00, $00, $00
0c4e6     0C 1F 00 00 
0c4ea     00 00 00 A0 
0c4ee     9C 07 01 AC 
0c4f2     30 00 00 00 | 	byte	$0c, $1f, $00, $00, $00, $00, $00, $a0, $9c, $07, $01, $ac, $30, $00, $00, $00
0c4f6     0C 23 00 00 
0c4fa     00 00 00 BE 
0c4fe     9C 15 00 00 
0c502     00 00 00 00 | 	byte	$0c, $23, $00, $00, $00, $00, $00, $be, $9c, $15, $00, $00, $00, $00, $00, $00
0c506     0C 26 00 00 
0c50a     00 00 00 D6 
0c50e     90 00 01 AC 
0c512     30 00 00 00 | 	byte	$0c, $26, $00, $00, $00, $00, $00, $d6, $90, $00, $01, $ac, $30, $00, $00, $00
0c516     0C 29 00 00 
0c51a     00 00 00 A0 
0c51e     9C 04 00 00 
0c522     00 00 00 00 | 	byte	$0c, $29, $00, $00, $00, $00, $00, $a0, $9c, $04, $00, $00, $00, $00, $00, $00
0c526     0C 2C 00 00 
0c52a     00 00 00 BE 
0c52e     9C 07 00 00 
0c532     00 00 00 00 | 	byte	$0c, $2c, $00, $00, $00, $00, $00, $be, $9c, $07, $00, $00, $00, $00, $00, $00
0c536     0C 2F 00 00 
0c53a     00 00 00 D6 
0c53e     9C 15 00 00 
0c542     00 00 00 00 | 	byte	$0c, $2f, $00, $00, $00, $00, $00, $d6, $9c, $15, $00, $00, $00, $00, $00, $00
0c546     0C 2C 00 00 
0c54a     00 00 00 FE 
0c54e     90 00 01 AC 
0c552     30 00 00 00 | 	byte	$0c, $2c, $00, $00, $00, $00, $00, $fe, $90, $00, $01, $ac, $30, $00, $00, $00
0c556     0C 29 00 A0 
0c55a     AC 03 00 BE 
0c55e     9C 04 00 00 
0c562     00 00 00 00 | 	byte	$0c, $29, $00, $a0, $ac, $03, $00, $be, $9c, $04, $00, $00, $00, $00, $00, $00
0c566     0C 26 00 00 
0c56a     0C 06 00 D6 
0c56e     9C 07 00 00 
0c572     00 00 00 00 | 	byte	$0c, $26, $00, $00, $0c, $06, $00, $d6, $9c, $07, $00, $00, $00, $00, $00, $00
0c576     0C 23 00 00 
0c57a     0C 09 00 FE 
0c57e     9C 15 00 00 
0c582     00 00 00 00 | 	byte	$0c, $23, $00, $00, $0c, $09, $00, $fe, $9c, $15, $00, $00, $00, $00, $00, $00
0c586     0C 1F 00 00 
0c58a     0C 0C 01 40 
0c58e     90 00 01 AC 
0c592     30 00 00 00 | 	byte	$0c, $1f, $00, $00, $0c, $0c, $01, $40, $90, $00, $01, $ac, $30, $00, $00, $00
0c596     0C 1C 00 00 
0c59a     0C 0F 00 D6 
0c59e     9C 04 00 00 
0c5a2     00 00 00 00 | 	byte	$0c, $1c, $00, $00, $0c, $0f, $00, $d6, $9c, $04, $00, $00, $00, $00, $00, $00
0c5a6     0C 19 00 00 
0c5aa     0C 13 00 FE 
0c5ae     90 00 00 00 
0c5b2     00 00 00 00 | 	byte	$0c, $19, $00, $00, $0c, $13, $00, $fe, $90, $00, $00, $00, $00, $00, $00, $00
0c5b6     0C 16 00 00 
0c5ba     0C 16 01 40 
0c5be     9C 15 00 00 
0c5c2     00 00 00 00 | 	byte	$0c, $16, $00, $00, $0c, $16, $01, $40, $9c, $15, $00, $00, $00, $00, $00, $00
0c5c6     0C 13 00 00 
0c5ca     0C 19 00 D6 
0c5ce     90 00 01 AC 
0c5d2     30 00 00 00 | 	byte	$0c, $13, $00, $00, $0c, $19, $00, $d6, $90, $00, $01, $ac, $30, $00, $00, $00
0c5d6     0C 0F 00 00 
0c5da     0C 1C 00 FE 
0c5de     9C 15 01 AC 
0c5e2     30 00 00 00 | 	byte	$0c, $0f, $00, $00, $0c, $1c, $00, $fe, $9c, $15, $01, $ac, $30, $00, $00, $00
0c5e6     0C 0C 00 00 
0c5ea     0C 1F 01 AC 
0c5ee     90 00 01 AC 
0c5f2     30 00 00 00 | 	byte	$0c, $0c, $00, $00, $0c, $1f, $01, $ac, $90, $00, $01, $ac, $30, $00, $00, $00
0c5f6     0C 09 00 00 
0c5fa     0C 23 01 40 
0c5fe     90 00 00 00 
0c602     00 00 00 00 | 	byte	$0c, $09, $00, $00, $0c, $23, $01, $40, $90, $00, $00, $00, $00, $00, $00, $00
0c606     0C 06 00 00 
0c60a     0C 26 00 FE 
0c60e     90 00 01 AC 
0c612     30 00 00 00 | 	byte	$0c, $06, $00, $00, $0c, $26, $00, $fe, $90, $00, $01, $ac, $30, $00, $00, $00
0c616     0C 03 00 00 
0c61a     0C 29 01 AC 
0c61e     9C 15 00 00 
0c622     00 00 00 00 | 	byte	$0c, $03, $00, $00, $0c, $29, $01, $ac, $9c, $15, $00, $00, $00, $00, $00, $00
0c626     0C 00 00 00 
0c62a     0C 2C 01 AC 
0c62e     90 00 01 AC 
0c632     30 00 00 00 | 	byte	$0c, $00, $00, $00, $0c, $2c, $01, $ac, $90, $00, $01, $ac, $30, $00, $00, $00
0c636     00 00 00 00 
0c63a     0C 2F 01 40 
0c63e     90 00 00 00 
0c642     00 00 00 00 | 	byte	$00, $00, $00, $00, $0c, $2f, $01, $40, $90, $00, $00, $00, $00, $00, $00, $00
0c646     00 00 00 00 
0c64a     0C 2C 01 1D 
0c64e     90 00 01 AC 
0c652     30 00 00 D6 | 	byte	$00, $00, $00, $00, $0c, $2c, $01, $1d, $90, $00, $01, $ac, $30, $00, $00, $d6
0c656     AC 03 00 00 
0c65a     0C 29 01 AC 
0c65e     9C 15 00 00 
0c662     00 00 00 00 | 	byte	$ac, $03, $00, $00, $0c, $29, $01, $ac, $9c, $15, $00, $00, $00, $00, $00, $00
0c666     0C 06 00 00 
0c66a     0C 26 01 40 
0c66e     9C 15 00 00 
0c672     00 00 00 00 | 	byte	$0c, $06, $00, $00, $0c, $26, $01, $40, $9c, $15, $00, $00, $00, $00, $00, $00
0c676     0C 09 00 00 
0c67a     0C 23 01 1D 
0c67e     9C 15 00 00 
0c682     00 00 00 00 | 	byte	$0c, $09, $00, $00, $0c, $23, $01, $1d, $9c, $15, $00, $00, $00, $00, $00, $00
0c686     0C 0C 00 00 
0c68a     0C 1F 01 1D 
0c68e     90 00 01 AC 
0c692     30 00 00 00 | 	byte	$0c, $0c, $00, $00, $0c, $1f, $01, $1d, $90, $00, $01, $ac, $30, $00, $00, $00
0c696     0C 0F 00 00 
0c69a     0C 1C 01 40 
0c69e     9C 05 00 00 
0c6a2     00 00 00 00 | 	byte	$0c, $0f, $00, $00, $0c, $1c, $01, $40, $9c, $05, $00, $00, $00, $00, $00, $00
0c6a6     0C 13 00 00 
0c6aa     0C 19 01 1D 
0c6ae     90 00 00 00 
0c6b2     00 00 00 00 | 	byte	$0c, $13, $00, $00, $0c, $19, $01, $1d, $90, $00, $00, $00, $00, $00, $00, $00
0c6b6     0C 16 00 00 
0c6ba     0C 16 01 40 
0c6be     90 00 00 00 
0c6c2     00 00 00 00 | 	byte	$0c, $16, $00, $00, $0c, $16, $01, $40, $90, $00, $00, $00, $00, $00, $00, $00
0c6c6     0C 19 00 00 
0c6ca     0C 13 01 53 
0c6ce     90 00 01 AC 
0c6d2     30 00 00 00 | 	byte	$0c, $19, $00, $00, $0c, $13, $01, $53, $90, $00, $01, $ac, $30, $00, $00, $00
0c6d6     0C 1C 00 00 
0c6da     0C 0F 01 1D 
0c6de     9C 15 01 AC 
0c6e2     30 00 00 00 | 	byte	$0c, $1c, $00, $00, $0c, $0f, $01, $1d, $9c, $15, $01, $ac, $30, $00, $00, $00
0c6e6     0C 1F 00 00 
0c6ea     0C 0C 01 40 
0c6ee     9C 15 01 AC 
0c6f2     30 00 00 00 | 	byte	$0c, $1f, $00, $00, $0c, $0c, $01, $40, $9c, $15, $01, $ac, $30, $00, $00, $00
0c6f6     0C 23 00 00 
0c6fa     0C 09 01 53 
0c6fe     9C 15 00 00 
0c702     00 00 00 00 | 	byte	$0c, $23, $00, $00, $0c, $09, $01, $53, $9c, $15, $00, $00, $00, $00, $00, $00
0c706     0C 26 00 00 
0c70a     0C 06 01 53 
0c70e     90 00 01 AC 
0c712     30 00 00 00 | 	byte	$0c, $26, $00, $00, $0c, $06, $01, $53, $90, $00, $01, $ac, $30, $00, $00, $00
0c716     0C 29 00 00 
0c71a     0C 03 01 40 
0c71e     90 00 00 00 
0c722     00 00 00 00 | 	byte	$0c, $29, $00, $00, $0c, $03, $01, $40, $90, $00, $00, $00, $00, $00, $00, $00
0c726     0C 2C 00 00 
0c72a     0C 00 01 53 
0c72e     90 00 00 00 
0c732     00 00 00 00 | 	byte	$0c, $2c, $00, $00, $0c, $00, $01, $53, $90, $00, $00, $00, $00, $00, $00, $00
0c736     0C 2F 00 00 
0c73a     00 00 01 7D 
0c73e     90 00 00 00 
0c742     00 00 00 00 | 	byte	$0c, $2f, $00, $00, $00, $00, $01, $7d, $90, $00, $00, $00, $00, $00, $00, $00
0c746     0C 2B 00 00 
0c74a     00 00 01 68 
0c74e     90 00 01 AC 
0c752     30 00 00 00 | 	byte	$0c, $2b, $00, $00, $00, $00, $01, $68, $90, $00, $01, $ac, $30, $00, $00, $00
0c756     0C 27 00 D6 
0c75a     BC 05 01 53 
0c75e     9C 15 00 00 
0c762     00 00 00 00 | 	byte	$0c, $27, $00, $d6, $bc, $05, $01, $53, $9c, $15, $00, $00, $00, $00, $00, $00
0c766     0C 23 00 00 
0c76a     0C 09 01 7D 
0c76e     9C 15 00 00 
0c772     00 00 00 00 | 	byte	$0c, $23, $00, $00, $0c, $09, $01, $7d, $9c, $15, $00, $00, $00, $00, $00, $00
0c776     0C 1E 00 00 
0c77a     0C 0D 01 68 
0c77e     9C 15 00 00 
0c782     00 00 00 00 | 	byte	$0c, $1e, $00, $00, $0c, $0d, $01, $68, $9c, $15, $00, $00, $00, $00, $00, $00
0c786     0C 1A 00 00 
0c78a     0C 12 01 68 
0c78e     90 00 01 AC 
0c792     30 00 00 00 | 	byte	$0c, $1a, $00, $00, $0c, $12, $01, $68, $90, $00, $01, $ac, $30, $00, $00, $00
0c796     0C 16 00 00 
0c79a     0C 16 01 7D 
0c79e     9C 07 00 00 
0c7a2     00 00 00 00 | 	byte	$0c, $16, $00, $00, $0c, $16, $01, $7d, $9c, $07, $00, $00, $00, $00, $00, $00
0c7a6     0C 12 00 00 
0c7aa     0C 1A 01 68 
0c7ae     9C 07 00 00 
0c7b2     00 00 00 00 | 	byte	$0c, $12, $00, $00, $0c, $1a, $01, $68, $9c, $07, $00, $00, $00, $00, $00, $00
0c7b6     0C 0D 00 00 
0c7ba     0C 1E 01 68 
0c7be     9C 15 00 00 
0c7c2     00 00 00 00 | 	byte	$0c, $0d, $00, $00, $0c, $1e, $01, $68, $9c, $15, $00, $00, $00, $00, $00, $00
0c7c6     0C 09 00 00 
0c7ca     0C 23 01 40 
0c7ce     90 00 01 AC 
0c7d2     30 00 00 A0 | 	byte	$0c, $09, $00, $00, $0c, $23, $01, $40, $90, $00, $01, $ac, $30, $00, $00, $a0
0c7d6     AC 0D 00 00 
0c7da     0C 27 01 68 
0c7de     9C 04 01 AC 
0c7e2     30 00 00 00 | 	byte	$ac, $0d, $00, $00, $0c, $27, $01, $68, $9c, $04, $01, $ac, $30, $00, $00, $00
0c7e6     0C 12 00 00 
0c7ea     0C 2B 01 40 
0c7ee     90 00 01 AC 
0c7f2     30 00 00 00 | 	byte	$0c, $12, $00, $00, $0c, $2b, $01, $40, $90, $00, $01, $ac, $30, $00, $00, $00
0c7f6     0C 16 00 00 
0c7fa     0C 2F 01 7D 
0c7fe     90 00 00 00 
0c802     00 00 00 00 | 	byte	$0c, $16, $00, $00, $0c, $2f, $01, $7d, $90, $00, $00, $00, $00, $00, $00, $00
0c806     0C 1A 00 00 
0c80a     0C 2B 01 40 
0c80e     90 00 01 AC 
0c812     30 00 00 00 | 	byte	$0c, $1a, $00, $00, $0c, $2b, $01, $40, $90, $00, $01, $ac, $30, $00, $00, $00
0c816     0C 1E 00 00 
0c81a     0C 27 01 40 
0c81e     9C 15 00 00 
0c822     00 00 00 00 | 	byte	$0c, $1e, $00, $00, $0c, $27, $01, $40, $9c, $15, $00, $00, $00, $00, $00, $00
0c826     0C 23 00 00 
0c82a     0C 23 01 40 
0c82e     90 00 01 AC 
0c832     30 00 00 00 | 	byte	$0c, $23, $00, $00, $0c, $23, $01, $40, $90, $00, $01, $ac, $30, $00, $00, $00
0c836     0C 27 00 00 
0c83a     0C 1E 00 FE 
0c83e     90 00 00 00 
0c842     00 00 00 00 | 	byte	$0c, $27, $00, $00, $0c, $1e, $00, $fe, $90, $00, $00, $00, $00, $00, $00, $00
0c846     0C 2B 00 00 
0c84a     0C 1A 00 BE 
0c84e     90 00 01 AC 
0c852     30 00 00 BE | 	byte	$0c, $2b, $00, $00, $0c, $1a, $00, $be, $90, $00, $01, $ac, $30, $00, $00, $be
0c856     BC 03 00 BE 
0c85a     BC 16 00 00 
0c85e     00 00 01 7D 
0c862     60 00 00 00 | 	byte	$bc, $03, $00, $be, $bc, $16, $00, $00, $00, $00, $01, $7d, $60, $00, $00, $00
0c866     0C 06 00 00 
0c86a     0C 12 00 00 
0c86e     00 00 01 7D 
0c872     60 00 00 00 | 	byte	$0c, $06, $00, $00, $0c, $12, $00, $00, $00, $00, $01, $7d, $60, $00, $00, $00
0c876     0C 09 00 00 
0c87a     0C 0E 00 BE 
0c87e     9C 15 00 00 
0c882     00 00 00 00 | 	byte	$0c, $09, $00, $00, $0c, $0e, $00, $be, $9c, $15, $00, $00, $00, $00, $00, $00
0c886     0C 0C 00 00 
0c88a     0C 0A 00 A0 
0c88e     90 00 00 BE 
0c892     40 00 00 00 | 	byte	$0c, $0c, $00, $00, $0c, $0a, $00, $a0, $90, $00, $00, $be, $40, $00, $00, $00
0c896     0C 0F 00 00 
0c89a     0C 06 00 00 
0c89e     00 00 00 00 
0c8a2     00 00 00 00 | 	byte	$0c, $0f, $00, $00, $0c, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c8a6     0C 13 00 00 
0c8aa     0C 02 00 AA 
0c8ae     90 00 01 7D 
0c8b2     60 00 00 00 | 	byte	$0c, $13, $00, $00, $0c, $02, $00, $aa, $90, $00, $01, $7d, $60, $00, $00, $00
0c8b6     0C 16 00 00 
0c8ba     0C 00 00 A0 
0c8be     9C 15 00 00 
0c8c2     00 00 00 00 | 	byte	$0c, $16, $00, $00, $0c, $00, $00, $a0, $9c, $15, $00, $00, $00, $00, $00, $00
0c8c6     0C 19 00 00 
0c8ca     00 00 00 BE 
0c8ce     90 00 01 AC 
0c8d2     30 00 00 00 | 	byte	$0c, $19, $00, $00, $00, $00, $00, $be, $90, $00, $01, $ac, $30, $00, $00, $00
0c8d6     0C 1C 00 00 
0c8da     00 00 00 AA 
0c8de     9C 15 01 AC 
0c8e2     30 00 00 00 | 	byte	$0c, $1c, $00, $00, $00, $00, $00, $aa, $9c, $15, $01, $ac, $30, $00, $00, $00
0c8e6     0C 1F 00 00 
0c8ea     00 00 00 A0 
0c8ee     9C 07 01 AC 
0c8f2     30 00 00 00 | 	byte	$0c, $1f, $00, $00, $00, $00, $00, $a0, $9c, $07, $01, $ac, $30, $00, $00, $00
0c8f6     0C 23 00 00 
0c8fa     00 00 00 BE 
0c8fe     9C 15 01 7D 
0c902     60 00 00 00 | 	byte	$0c, $23, $00, $00, $00, $00, $00, $be, $9c, $15, $01, $7d, $60, $00, $00, $00
0c906     0C 26 00 00 
0c90a     00 00 00 D6 
0c90e     90 00 01 AC 
0c912     30 00 00 00 | 	byte	$0c, $26, $00, $00, $00, $00, $00, $d6, $90, $00, $01, $ac, $30, $00, $00, $00
0c916     0C 29 00 00 
0c91a     00 00 00 A0 
0c91e     9C 04 00 00 
0c922     00 00 00 00 | 	byte	$0c, $29, $00, $00, $00, $00, $00, $a0, $9c, $04, $00, $00, $00, $00, $00, $00
0c926     0C 2C 00 00 
0c92a     00 00 00 BE 
0c92e     9C 07 00 BE 
0c932     60 00 00 00 | 	byte	$0c, $2c, $00, $00, $00, $00, $00, $be, $9c, $07, $00, $be, $60, $00, $00, $00
0c936     0C 2F 00 00 
0c93a     00 00 00 D6 
0c93e     9C 15 00 00 
0c942     00 00 00 00 | 	byte	$0c, $2f, $00, $00, $00, $00, $00, $d6, $9c, $15, $00, $00, $00, $00, $00, $00
0c946     0C 2C 00 00 
0c94a     00 00 00 FE 
0c94e     90 00 01 AC 
0c952     30 00 00 00 | 	byte	$0c, $2c, $00, $00, $00, $00, $00, $fe, $90, $00, $01, $ac, $30, $00, $00, $00
0c956     0C 29 00 A0 
0c95a     AC 03 00 BE 
0c95e     9C 04 01 40 
0c962     60 00 00 00 | 	byte	$0c, $29, $00, $a0, $ac, $03, $00, $be, $9c, $04, $01, $40, $60, $00, $00, $00
0c966     0C 26 00 00 
0c96a     0C 06 00 D6 
0c96e     9C 07 01 40 
0c972     60 00 00 00 | 	byte	$0c, $26, $00, $00, $0c, $06, $00, $d6, $9c, $07, $01, $40, $60, $00, $00, $00
0c976     0C 23 00 00 
0c97a     0C 09 00 FE 
0c97e     9C 15 00 00 
0c982     00 00 00 00 | 	byte	$0c, $23, $00, $00, $0c, $09, $00, $fe, $9c, $15, $00, $00, $00, $00, $00, $00
0c986     0C 1F 00 00 
0c98a     0C 0C 01 40 
0c98e     90 00 00 BE 
0c992     40 00 00 00 | 	byte	$0c, $1f, $00, $00, $0c, $0c, $01, $40, $90, $00, $00, $be, $40, $00, $00, $00
0c996     0C 1C 00 00 
0c99a     0C 0F 00 D6 
0c99e     9C 04 00 00 
0c9a2     00 00 00 00 | 	byte	$0c, $1c, $00, $00, $0c, $0f, $00, $d6, $9c, $04, $00, $00, $00, $00, $00, $00
0c9a6     0C 19 00 00 
0c9aa     0C 13 00 FE 
0c9ae     90 00 01 40 
0c9b2     60 00 00 00 | 	byte	$0c, $19, $00, $00, $0c, $13, $00, $fe, $90, $00, $01, $40, $60, $00, $00, $00
0c9b6     0C 16 00 00 
0c9ba     0C 16 01 40 
0c9be     9C 15 00 00 
0c9c2     00 00 00 00 | 	byte	$0c, $16, $00, $00, $0c, $16, $01, $40, $9c, $15, $00, $00, $00, $00, $00, $00
0c9c6     0C 13 00 00 
0c9ca     0C 19 00 D6 
0c9ce     90 00 01 AC 
0c9d2     30 00 00 00 | 	byte	$0c, $13, $00, $00, $0c, $19, $00, $d6, $90, $00, $01, $ac, $30, $00, $00, $00
0c9d6     0C 0F 00 00 
0c9da     0C 1C 00 FE 
0c9de     9C 15 01 AC 
0c9e2     30 00 00 00 | 	byte	$0c, $0f, $00, $00, $0c, $1c, $00, $fe, $9c, $15, $01, $ac, $30, $00, $00, $00
0c9e6     0C 0C 00 00 
0c9ea     0C 1F 01 AC 
0c9ee     90 00 01 AC 
0c9f2     30 00 00 00 | 	byte	$0c, $0c, $00, $00, $0c, $1f, $01, $ac, $90, $00, $01, $ac, $30, $00, $00, $00
0c9f6     0C 09 00 00 
0c9fa     0C 23 01 40 
0c9fe     90 00 01 40 
0ca02     60 00 00 00 | 	byte	$0c, $09, $00, $00, $0c, $23, $01, $40, $90, $00, $01, $40, $60, $00, $00, $00
0ca06     0C 06 00 00 
0ca0a     0C 26 00 FE 
0ca0e     90 00 01 AC 
0ca12     30 00 00 00 | 	byte	$0c, $06, $00, $00, $0c, $26, $00, $fe, $90, $00, $01, $ac, $30, $00, $00, $00
0ca16     0C 03 00 00 
0ca1a     0C 29 01 AC 
0ca1e     9C 15 00 A0 
0ca22     60 00 00 00 | 	byte	$0c, $03, $00, $00, $0c, $29, $01, $ac, $9c, $15, $00, $a0, $60, $00, $00, $00
0ca26     0C 00 00 00 
0ca2a     0C 2C 01 AC 
0ca2e     90 00 01 AC 
0ca32     30 00 00 00 | 	byte	$0c, $00, $00, $00, $0c, $2c, $01, $ac, $90, $00, $01, $ac, $30, $00, $00, $00
0ca36     00 00 00 00 
0ca3a     0C 2F 01 40 
0ca3e     90 00 00 A0 
0ca42     60 00 00 00 | 	byte	$00, $00, $00, $00, $0c, $2f, $01, $40, $90, $00, $00, $a0, $60, $00, $00, $00
0ca46     00 00 00 00 
0ca4a     0C 2C 01 1D 
0ca4e     90 00 01 AC 
0ca52     30 00 00 D6 | 	byte	$00, $00, $00, $00, $0c, $2c, $01, $1d, $90, $00, $01, $ac, $30, $00, $00, $d6
0ca56     AC 03 00 00 
0ca5a     0C 29 01 AC 
0ca5e     9C 15 01 AC 
0ca62     60 00 00 00 | 	byte	$ac, $03, $00, $00, $0c, $29, $01, $ac, $9c, $15, $01, $ac, $60, $00, $00, $00
0ca66     0C 06 00 00 
0ca6a     0C 26 01 40 
0ca6e     9C 15 01 AC 
0ca72     60 00 00 00 | 	byte	$0c, $06, $00, $00, $0c, $26, $01, $40, $9c, $15, $01, $ac, $60, $00, $00, $00
0ca76     0C 09 00 00 
0ca7a     0C 23 01 1D 
0ca7e     9C 15 00 00 
0ca82     00 00 00 00 | 	byte	$0c, $09, $00, $00, $0c, $23, $01, $1d, $9c, $15, $00, $00, $00, $00, $00, $00
0ca86     0C 0C 00 00 
0ca8a     0C 1F 01 1D 
0ca8e     90 00 00 BE 
0ca92     40 00 00 00 | 	byte	$0c, $0c, $00, $00, $0c, $1f, $01, $1d, $90, $00, $00, $be, $40, $00, $00, $00
0ca96     0C 0F 00 00 
0ca9a     0C 1C 01 40 
0ca9e     9C 05 00 00 
0caa2     00 00 00 00 | 	byte	$0c, $0f, $00, $00, $0c, $1c, $01, $40, $9c, $05, $00, $00, $00, $00, $00, $00
0caa6     0C 13 00 00 
0caaa     0C 19 01 1D 
0caae     90 00 01 AC 
0cab2     60 00 00 00 | 	byte	$0c, $13, $00, $00, $0c, $19, $01, $1d, $90, $00, $01, $ac, $60, $00, $00, $00
0cab6     0C 16 00 00 
0caba     0C 16 01 40 
0cabe     90 00 00 00 
0cac2     00 00 00 00 | 	byte	$0c, $16, $00, $00, $0c, $16, $01, $40, $90, $00, $00, $00, $00, $00, $00, $00
0cac6     0C 19 00 00 
0caca     0C 13 01 53 
0cace     90 00 01 AC 
0cad2     30 00 00 00 | 	byte	$0c, $19, $00, $00, $0c, $13, $01, $53, $90, $00, $01, $ac, $30, $00, $00, $00
0cad6     0C 1C 00 00 
0cada     0C 0F 01 1D 
0cade     9C 15 01 AC 
0cae2     30 00 00 00 | 	byte	$0c, $1c, $00, $00, $0c, $0f, $01, $1d, $9c, $15, $01, $ac, $30, $00, $00, $00
0cae6     0C 1F 00 00 
0caea     0C 0C 01 40 
0caee     9C 15 01 AC 
0caf2     30 00 00 00 | 	byte	$0c, $1f, $00, $00, $0c, $0c, $01, $40, $9c, $15, $01, $ac, $30, $00, $00, $00
0caf6     0C 23 00 00 
0cafa     0C 09 01 53 
0cafe     9C 15 01 AC 
0cb02     60 00 00 00 | 	byte	$0c, $23, $00, $00, $0c, $09, $01, $53, $9c, $15, $01, $ac, $60, $00, $00, $00
0cb06     0C 26 00 00 
0cb0a     0C 06 01 53 
0cb0e     90 00 01 AC 
0cb12     30 00 00 00 | 	byte	$0c, $26, $00, $00, $0c, $06, $01, $53, $90, $00, $01, $ac, $30, $00, $00, $00
0cb16     0C 29 00 00 
0cb1a     0C 03 01 40 
0cb1e     90 00 00 00 
0cb22     00 00 00 00 | 	byte	$0c, $29, $00, $00, $0c, $03, $01, $40, $90, $00, $00, $00, $00, $00, $00, $00
0cb26     0C 2C 00 00 
0cb2a     0C 00 01 53 
0cb2e     90 00 00 D6 
0cb32     60 00 00 00 | 	byte	$0c, $2c, $00, $00, $0c, $00, $01, $53, $90, $00, $00, $d6, $60, $00, $00, $00
0cb36     0C 2F 00 00 
0cb3a     00 00 01 7D 
0cb3e     90 00 00 00 
0cb42     00 00 00 00 | 	byte	$0c, $2f, $00, $00, $00, $00, $01, $7d, $90, $00, $00, $00, $00, $00, $00, $00
0cb46     0C 2B 00 00 
0cb4a     00 00 01 68 
0cb4e     90 00 01 AC 
0cb52     30 00 00 00 | 	byte	$0c, $2b, $00, $00, $00, $00, $01, $68, $90, $00, $01, $ac, $30, $00, $00, $00
0cb56     0C 27 00 D6 
0cb5a     BC 05 01 53 
0cb5e     9C 15 01 68 
0cb62     60 00 00 00 | 	byte	$0c, $27, $00, $d6, $bc, $05, $01, $53, $9c, $15, $01, $68, $60, $00, $00, $00
0cb66     0C 23 00 00 
0cb6a     0C 09 01 7D 
0cb6e     9C 15 01 68 
0cb72     60 00 00 00 | 	byte	$0c, $23, $00, $00, $0c, $09, $01, $7d, $9c, $15, $01, $68, $60, $00, $00, $00
0cb76     0C 1E 00 00 
0cb7a     0C 0D 01 68 
0cb7e     9C 15 00 00 
0cb82     00 00 00 00 | 	byte	$0c, $1e, $00, $00, $0c, $0d, $01, $68, $9c, $15, $00, $00, $00, $00, $00, $00
0cb86     0C 1A 00 00 
0cb8a     0C 12 01 68 
0cb8e     90 00 00 BE 
0cb92     40 00 00 00 | 	byte	$0c, $1a, $00, $00, $0c, $12, $01, $68, $90, $00, $00, $be, $40, $00, $00, $00
0cb96     0C 16 00 00 
0cb9a     0C 16 01 7D 
0cb9e     9C 07 00 00 
0cba2     00 00 00 00 | 	byte	$0c, $16, $00, $00, $0c, $16, $01, $7d, $9c, $07, $00, $00, $00, $00, $00, $00
0cba6     0C 12 00 00 
0cbaa     0C 1A 01 68 
0cbae     9C 07 01 68 
0cbb2     60 00 00 00 | 	byte	$0c, $12, $00, $00, $0c, $1a, $01, $68, $9c, $07, $01, $68, $60, $00, $00, $00
0cbb6     0C 0D 00 00 
0cbba     0C 1E 01 68 
0cbbe     9C 15 00 00 
0cbc2     00 00 00 00 | 	byte	$0c, $0d, $00, $00, $0c, $1e, $01, $68, $9c, $15, $00, $00, $00, $00, $00, $00
0cbc6     0C 09 00 00 
0cbca     0C 23 01 40 
0cbce     90 00 01 AC 
0cbd2     30 00 00 A0 | 	byte	$0c, $09, $00, $00, $0c, $23, $01, $40, $90, $00, $01, $ac, $30, $00, $00, $a0
0cbd6     AC 0D 00 00 
0cbda     0C 27 01 68 
0cbde     9C 04 01 AC 
0cbe2     50 00 00 00 | 	byte	$ac, $0d, $00, $00, $0c, $27, $01, $68, $9c, $04, $01, $ac, $50, $00, $00, $00
0cbe6     0C 12 00 00 
0cbea     0C 2B 01 40 
0cbee     90 00 01 AC 
0cbf2     50 00 00 00 | 	byte	$0c, $12, $00, $00, $0c, $2b, $01, $40, $90, $00, $01, $ac, $50, $00, $00, $00
0cbf6     0C 16 00 00 
0cbfa     0C 2F 01 7D 
0cbfe     90 00 01 AC 
0cc02     50 00 00 00 | 	byte	$0c, $16, $00, $00, $0c, $2f, $01, $7d, $90, $00, $01, $ac, $50, $00, $00, $00
0cc06     0C 1A 00 00 
0cc0a     0C 2B 01 40 
0cc0e     90 00 01 AC 
0cc12     50 00 00 00 | 	byte	$0c, $1a, $00, $00, $0c, $2b, $01, $40, $90, $00, $01, $ac, $50, $00, $00, $00
0cc16     0C 1E 00 00 
0cc1a     0C 27 01 40 
0cc1e     9C 15 01 AC 
0cc22     50 00 00 00 | 	byte	$0c, $1e, $00, $00, $0c, $27, $01, $40, $9c, $15, $01, $ac, $50, $00, $00, $00
0cc26     0C 23 00 00 
0cc2a     0C 23 01 40 
0cc2e     90 00 01 AC 
0cc32     50 00 00 00 | 	byte	$0c, $23, $00, $00, $0c, $23, $01, $40, $90, $00, $01, $ac, $50, $00, $00, $00
0cc36     0C 27 00 00 
0cc3a     0C 1E 00 FE 
0cc3e     90 00 01 AC 
0cc42     50 00 00 00 | 	byte	$0c, $27, $00, $00, $0c, $1e, $00, $fe, $90, $00, $01, $ac, $50, $00, $00, $00
0cc46     0C 2B 00 00 
0cc4a     0C 1A 00 00 
0cc4e     00 00 CA CB 
0cc52     D1 D6 DD E5 | 	byte	$0c, $2b, $00, $00, $0c, $1a, $00, $00, $00, $00, $ca, $cb, $d1, $d6, $dd, $e5
0cc56     F4 09 1D 26 
0cc5a     27 2F 3E 49 
0cc5e     48 3E 34 2D 
0cc62     34 36 2C 1D | 	byte	$f4, $09, $1d, $26, $27, $2f, $3e, $49, $48, $3e, $34, $2d, $34, $36, $2c, $1d
0cc66     15 1D 30 41 
0cc6a     44 3D 3C 3C 
0cc6e     39 2E 20 1A 
0cc72     20 28 25 1E | 	byte	$15, $1d, $30, $41, $44, $3d, $3c, $3c, $39, $2e, $20, $1a, $20, $28, $25, $1e
0cc76     16 13 12 10 
0cc7a     10 14 13 13 
0cc7e     17 19 15 13 
0cc82     1E 33 41 45 | 	byte	$16, $13, $12, $10, $10, $14, $13, $13, $17, $19, $15, $13, $1e, $33, $41, $45
0cc86     42 3D 37 2E 
0cc8a     1B 09 FC F5 
0cc8e     EF E5 E0 D3 
0cc92     CB CC D9 E3 | 	byte	$42, $3d, $37, $2e, $1b, $09, $fc, $f5, $ef, $e5, $e0, $d3, $cb, $cc, $d9, $e3
0cc96     E7 E3 DD D0 
0cc9a     C6 C2 C6 D5 
0cc9e     E2 EE 01 1D 
0cca2     37 43 4B 53 | 	byte	$e7, $e3, $dd, $d0, $c6, $c2, $c6, $d5, $e2, $ee, $01, $1d, $37, $43, $4b, $53
0cca6     57 59 64 64 
0ccaa     64 64 64 64 
0ccae     5D 58 58 59 
0ccb2     58 4E 41 31 | 	byte	$57, $59, $64, $64, $64, $64, $64, $64, $5d, $58, $58, $59, $58, $4e, $41, $31
0ccb6     1E 06 FA F4 
0ccba     EF E6 DD D1 
0ccbe     BF AD A8 B6 
0ccc2     C6 C9 C3 BB | 	byte	$1e, $06, $fa, $f4, $ef, $e6, $dd, $d1, $bf, $ad, $a8, $b6, $c6, $c9, $c3, $bb
0ccc6     BC C8 DA E7 
0ccca     E4 D7 CB C9 
0ccce     C4 B4 9C 8E 
0ccd2     93 A0 A7 AB | 	byte	$bc, $c8, $da, $e7, $e4, $d7, $cb, $c9, $c4, $b4, $9c, $8e, $93, $a0, $a7, $ab
0ccd6     B0 BB D1 E2 
0ccda     EB E7 DC E2 
0ccde     F1 FD 04 03 
0cce2     03 0D 1F 29 | 	byte	$b0, $bb, $d1, $e2, $eb, $e7, $dc, $e2, $f1, $fd, $04, $03, $03, $0d, $1f, $29
0cce6     27 2C 3C 4E 
0ccea     58 57 4B 3C 
0ccee     31 2E 2A 24 
0ccf2     18 07 FB F5 | 	byte	$27, $2c, $3c, $4e, $58, $57, $4b, $3c, $31, $2e, $2a, $24, $18, $07, $fb, $f5
0ccf6     F5 FD 0C 15 
0ccfa     17 0D 00 F8 
0ccfe     FB 01 00 F5 
0cd02     EA E3 E7 EB | 	byte	$f5, $fd, $0c, $15, $17, $0d, $00, $f8, $fb, $01, $00, $f5, $ea, $e3, $e7, $eb
0cd06     EE F4 F1 EA 
0cd0a     DC D4 DA E1 
0cd0e     E3 DD DC DC 
0cd12     D7 C7 B5 AF | 	byte	$ee, $f4, $f1, $ea, $dc, $d4, $da, $e1, $e3, $dd, $dc, $dc, $d7, $c7, $b5, $af
0cd16     AF B0 A6 96 
0cd1a     8E 94 A1 AC 
0cd1e     BB BE C6 D1 
0cd22     E3 EE EE E5 | 	byte	$af, $b0, $a6, $96, $8e, $94, $a1, $ac, $bb, $be, $c6, $d1, $e3, $ee, $ee, $e5
0cd26     E2 EE FA 00 
0cd2a     00 01 07 18 
0cd2e     29 30 2D 29 
0cd32     29 29 26 17 | 	byte	$e2, $ee, $fa, $00, $00, $01, $07, $18, $29, $30, $2d, $29, $29, $29, $26, $17
0cd36     02 ED DA CD 
0cd3a     C2 B8 B4 BA 
0cd3e     C6 CF D4 D1 
0cd42     D4 D9 DB D9 | 	byte	$02, $ed, $da, $cd, $c2, $b8, $b4, $ba, $c6, $cf, $d4, $d1, $d4, $d9, $db, $d9
0cd46     DE EA F3 F5 
0cd4a     FC 06 14 22 
0cd4e     2D 28 18 0F 
0cd52     12 19 19 0E | 	byte	$de, $ea, $f3, $f5, $fc, $06, $14, $22, $2d, $28, $18, $0f, $12, $19, $19, $0e
0cd56     06 00 01 02 
0cd5a     00 03 07 0D 
0cd5e     16 18 16 10 
0cd62     08 FD FA F9 | 	byte	$06, $00, $01, $02, $00, $03, $07, $0d, $16, $18, $16, $10, $08, $fd, $fa, $f9
0cd66     F8 FE 0E 29 
0cd6a     44 5A 64 64 
0cd6e     64 5F 5B 55 
0cd72     4B 3F 2C 1B | 	byte	$f8, $fe, $0e, $29, $44, $5a, $64, $64, $64, $5f, $5b, $55, $4b, $3f, $2c, $1b
0cd76     13 0F 0A 06 
0cd7a     06 08 0D 12 
0cd7e     10 0B 03 00 
0cd82     FF 03 07 10 | 	byte	$13, $0f, $0a, $06, $06, $08, $0d, $12, $10, $0b, $03, $00, $ff, $03, $07, $10
0cd86     1F 2B 33 38 
0cd8a     37 32 2D 27 
0cd8e     1F 17 11 09 
0cd92     FC F3 ED EE | 	byte	$1f, $2b, $33, $38, $37, $32, $2d, $27, $1f, $17, $11, $09, $fc, $f3, $ed, $ee
0cd96     F1 EE EA E8 
0cd9a     EF FB 03 02 
0cd9e     FE 09 1A 2A 
0cda2     33 39 42 53 | 	byte	$f1, $ee, $ea, $e8, $ef, $fb, $03, $02, $fe, $09, $1a, $2a, $33, $39, $42, $53
0cda6     64 64 64 64 
0cdaa     64 64 64    | 	byte	$64[7]
0cdad     5A 54 48 3E 
0cdb1     39 35 32 2C 
0cdb5     24 17 08 F7 
0cdb9     E5 CF B4 9F | 	byte	$5a, $54, $48, $3e, $39, $35, $32, $2c, $24, $17, $08, $f7, $e5, $cf, $b4, $9f
0cdbd     91 8E 8E 8D 
0cdc1     8F 98 A7 B2 
0cdc5     BD BB BD BF 
0cdc9     C3 C5 C1 B4 | 	byte	$91, $8e, $8e, $8d, $8f, $98, $a7, $b2, $bd, $bb, $bd, $bf, $c3, $c5, $c1, $b4
0cdcd     A4 9B 9D A5 
0cdd1     A9 A7 A5 AE 
0cdd5     C4 E1 F3 F9 
0cdd9     00 10 24 34 | 	byte	$a4, $9b, $9d, $a5, $a9, $a7, $a5, $ae, $c4, $e1, $f3, $f9, $00, $10, $24, $34
0cddd     39 34 2F 38 
0cde1     43 44 3F 3B 
0cde5     3A 3C 38 31 
0cde9     2E 31 35 31 | 	byte	$39, $34, $2f, $38, $43, $44, $3f, $3b, $3a, $3c, $38, $31, $2e, $31, $35, $31
0cded     25 19 13 11 
0cdf1     0E 0E 16 22 
0cdf5     26 1D 11 09 
0cdf9     08 0A 0C 0F | 	byte	$25, $19, $13, $11, $0e, $0e, $16, $22, $26, $1d, $11, $09, $08, $0a, $0c, $0f
0cdfd     0F 0D 08 00 
0ce01     F5 E9 E2 D8 
0ce05     CF C8 C4 C3 
0ce09     C3 C3 C4 C1 | 	byte	$0f, $0d, $08, $00, $f5, $e9, $e2, $d8, $cf, $c8, $c4, $c3, $c3, $c3, $c4, $c1
0ce0d     BA B6 BF D1 
0ce11     DB D8 D3 CE 
0ce15     CD CC CB C7 
0ce19     BE B6 AE B0 | 	byte	$ba, $b6, $bf, $d1, $db, $d8, $d3, $ce, $cd, $cc, $cb, $c7, $be, $b6, $ae, $b0
0ce1d     C1 D1 E0 EB 
0ce21     EF F2 F5 F8 
0ce25     F3 E1 CA BC 
0ce29     BC C4 C1 B4 | 	byte	$c1, $d1, $e0, $eb, $ef, $f2, $f5, $f8, $f3, $e1, $ca, $bc, $bc, $c4, $c1, $b4
0ce2d     AE BA D3 EC 
0ce31     01 0E 13 18 
0ce35     17 0E F7 E0 
0ce39     D5 D9 E0 DD | 	byte	$ae, $ba, $d3, $ec, $01, $0e, $13, $18, $17, $0e, $f7, $e0, $d5, $d9, $e0, $dd
0ce3d     D6 D8 DE E7 
0ce41     F1 FF 0A 0C 
0ce45     00 EB E7 F1 
0ce49     FE 06 05 02 | 	byte	$d6, $d8, $de, $e7, $f1, $ff, $0a, $0c, $00, $eb, $e7, $f1, $fe, $06, $05, $02
0ce4d     05 10 1D 1F 
0ce51     10 06 07 15 
0ce55     2B 3A 35 21 
0ce59     16 18 23 2E | 	byte	$05, $10, $1d, $1f, $10, $06, $07, $15, $2b, $3a, $35, $21, $16, $18, $23, $2e
0ce5d     2F 28 27 2D 
0ce61     2F 24 14 0E 
0ce65     10 18 1E 22 
0ce69     25 2C 2F 29 | 	byte	$2f, $28, $27, $2d, $2f, $24, $14, $0e, $10, $18, $1e, $22, $25, $2c, $2f, $29
0ce6d     1D 14 0F 11 
0ce71     16 19 19 14 
0ce75     10 15 26 36 
0ce79     3F 3C 32 26 | 	byte	$1d, $14, $0f, $11, $16, $19, $19, $14, $10, $15, $26, $36, $3f, $3c, $32, $26
0ce7d     1F 17 09 F1 
0ce81     DE DA EB FF 
0ce85     0B 05 FD 05 
0ce89     1D 3A 43 3A | 	byte	$1f, $17, $09, $f1, $de, $da, $eb, $ff, $0b, $05, $fd, $05, $1d, $3a, $43, $3a
0ce8d     29 1E 11 F7 
0ce91     DB CB CD DF 
0ce95     EA EC F0 FA 
0ce99     0A 18 22 26 | 	byte	$29, $1e, $11, $f7, $db, $cb, $cd, $df, $ea, $ec, $f0, $fa, $0a, $18, $22, $26
0ce9d     27 27 2A 2D 
0cea1     2E 34 42 52 
0cea5     57 51 4D 5E 
0cea9     65 65 65 65 | 	byte	$27, $27, $2a, $2d, $2e, $34, $42, $52, $57, $51, $4d, $5e, $65, $65, $65, $65
0cead     65 59 58 5B 
0ceb1     58 47 32 1D 
0ceb5     08 EC D1 BF 
0ceb9     BB BB B2 A8 | 	byte	$65, $59, $58, $5b, $58, $47, $32, $1d, $08, $ec, $d1, $bf, $bb, $bb, $b2, $a8
0cebd     9D 91 8E 89 
0cec1     86 8B 8F 8E 
0cec5     8B 8C 94 A2 
0cec9     B1 C5 D3 D9 | 	byte	$9d, $91, $8e, $89, $86, $8b, $8f, $8e, $8b, $8c, $94, $a2, $b1, $c5, $d3, $d9
0cecd     DE E4 F3 03 
0ced1     05 FB F3 F2 
0ced5     FC 0B 0E 0B 
0ced9     0D 20 33 3E | 	byte	$de, $e4, $f3, $03, $05, $fb, $f3, $f2, $fc, $0b, $0e, $0b, $0d, $20, $33, $3e
0cedd     42 45 54 64 
0cee1     64 5B 3C 27 
0cee5     23 28 27 1A 
0cee9     07 00 09 16 | 	byte	$42, $45, $54, $64, $64, $5b, $3c, $27, $23, $28, $27, $1a, $07, $00, $09, $16
0ceed     19 15 1A 2B 
0cef1     3B 3F 2F 17 
0cef5     04 FB F7 EA 
0cef9     E4 D7 D0 CE | 	byte	$19, $15, $1a, $2b, $3b, $3f, $2f, $17, $04, $fb, $f7, $ea, $e4, $d7, $d0, $ce
0cefd     D1 CF C5 BE 
0cf01     BD C0 C3 C4 
0cf05     C8 CA C9 D0 
0cf09     DB E7 F1 F9 | 	byte	$d1, $cf, $c5, $be, $bd, $c0, $c3, $c4, $c8, $ca, $c9, $d0, $db, $e7, $f1, $f9
0cf0d     FD 00 01 01 
0cf11     03 05 00 F6 
0cf15     E4 DA D4 CA 
0cf19     C0 BA BD C8 | 	byte	$fd, $00, $01, $01, $03, $05, $00, $f6, $e4, $da, $d4, $ca, $c0, $ba, $bd, $c8
0cf1d     D0 D8 DC DA 
0cf21     D3 CD C6 BC 
0cf25     AD A4 AB BC 
0cf29     CB D3 D3 D9 | 	byte	$d0, $d8, $dc, $da, $d3, $cd, $c6, $bc, $ad, $a4, $ab, $bc, $cb, $d3, $d3, $d9
0cf2d     F3 1E 40 49 
0cf31     39 25 27 37 
0cf35     3C 25 02 EA 
0cf39     DD DA D6 C9 | 	byte	$f3, $1e, $40, $49, $39, $25, $27, $37, $3c, $25, $02, $ea, $dd, $da, $d6, $c9
0cf3d     C3 CF E4 F0 
0cf41     EA D8 C9 C7 
0cf45     D4 E0 E2 DE 
0cf49     E1 EB FC 0C | 	byte	$c3, $cf, $e4, $f0, $ea, $d8, $c9, $c7, $d4, $e0, $e2, $de, $e1, $eb, $fc, $0c
0cf4d     13 0F 07 0B 
0cf51     1A 27 2A 29 
0cf55     29 20 17 19 
0cf59     20 23 1D 14 | 	byte	$13, $0f, $07, $0b, $1a, $27, $2a, $29, $29, $20, $17, $19, $20, $23, $1d, $14
0cf5d     11 11 0B 00 
0cf61     F6 F3 F3 F5 
0cf65     FA FC F7 F2 
0cf69     F5 02 14 27 | 	byte	$11, $11, $0b, $00, $f6, $f3, $f3, $f5, $fa, $fc, $f7, $f2, $f5, $02, $14, $27
0cf6d     36 43 4E 52 
0cf71     52 54 55 51 
0cf75     4A 42 3B 2D 
0cf79     17 FE F4 F2 | 	byte	$36, $43, $4e, $52, $52, $54, $55, $51, $4a, $42, $3b, $2d, $17, $fe, $f4, $f2
0cf7d     F7 FC 04 0D 
0cf81     12 14 16 16 
0cf85     17 1D 28 2E 
0cf89     26 0F FB EC | 	byte	$f7, $fc, $04, $0d, $12, $14, $16, $16, $17, $1d, $28, $2e, $26, $0f, $fb, $ec
0cf8d     E8 E9 F0 FC 
0cf91     05 05 0A 12 
0cf95     18 22 2B 30 
0cf99     35 3E 48 50 | 	byte	$e8, $e9, $f0, $fc, $05, $05, $0a, $12, $18, $22, $2b, $30, $35, $3e, $48, $50
0cf9d     54 5A 58 57 
0cfa1     5A 59 4B 3A 
0cfa5     32 2F 2F 31 
0cfa9     28 15 09 13 | 	byte	$54, $5a, $58, $57, $5a, $59, $4b, $3a, $32, $2f, $2f, $31, $28, $15, $09, $13
0cfad     2D 45 49 38 
0cfb1     25 18 0F 00 
0cfb5     E7 CB AB 99 
0cfb9     93 92 8E 87 | 	byte	$2d, $45, $49, $38, $25, $18, $0f, $00, $e7, $cb, $ab, $99, $93, $92, $8e, $87
0cfbd     86 8E 99 9F 
0cfc1     A0 A4 A5 A1 
0cfc5     9C 9E A0 97 
0cfc9     8F 92 9D A4 | 	byte	$86, $8e, $99, $9f, $a0, $a4, $a5, $a1, $9c, $9e, $a0, $97, $8f, $92, $9d, $a4
0cfcd     A2 A0 AD CB 
0cfd1     EA 03 0F 16 
0cfd5     24 3B 5B 65 
0cfd9     64 64 63 64 | 	byte	$a2, $a0, $ad, $cb, $ea, $03, $0f, $16, $24, $3b, $5b, $65, $64, $64, $63, $64
0cfdd     64 64 64 60 
0cfe1     46 33 25 12 
0cfe5     F6 DF DE EF 
0cfe9     00 02 FA F6 | 	byte	$64, $64, $64, $60, $46, $33, $25, $12, $f6, $df, $de, $ef, $00, $02, $fa, $f6
0cfed     05 21 31 2B 
0cff1     16 05 06 12 
0cff5     10 FB DA CE 
0cff9     D5 E6 F4 FB | 	byte	$05, $21, $31, $2b, $16, $05, $06, $12, $10, $fb, $da, $ce, $d5, $e6, $f4, $fb
0cffd     FC FE 04 0A 
0d001     13 15 0F 05 
0d005     F9 EE D6 C2 
0d009     BA BB BA B9 | 	byte	$fc, $fe, $04, $0a, $13, $15, $0f, $05, $f9, $ee, $d6, $c2, $ba, $bb, $ba, $b9
0d00d     B7 B8 BE C5 
0d011     C7 C8 D0 D2 
0d015     CD C6 C8 D3 
0d019     E3 F4 F3 E0 | 	byte	$b7, $b8, $be, $c5, $c7, $c8, $d0, $d2, $cd, $c6, $c8, $d3, $e3, $f4, $f3, $e0
0d01d     CF CC D7 DA 
0d021     C9 B2 A8 A8 
0d025     AA AB AB AE 
0d029     BD D1 E7 F7 | 	byte	$cf, $cc, $d7, $da, $c9, $b2, $a8, $a8, $aa, $ab, $ab, $ae, $bd, $d1, $e7, $f7
0d02d     06 13 1A 21 
0d031     23 1D 13 09 
0d035     FB E9 D4 CA 
0d039     CB D6 E0 EC | 	byte	$06, $13, $1a, $21, $23, $1d, $13, $09, $fb, $e9, $d4, $ca, $cb, $d6, $e0, $ec
0d03d     FB 0F 1F 21 
0d041     1A 17 0F 0A 
0d045     01 F1 E4 DA 
0d049     D4 D5 D9 E2 | 	byte	$fb, $0f, $1f, $21, $1a, $17, $0f, $0a, $01, $f1, $e4, $da, $d4, $d5, $d9, $e2
0d04d     EA ED F7 09 
0d051     18 16 09 00 
0d055     02 0F 1A 20 
0d059     21 1C 15 13 | 	byte	$ea, $ed, $f7, $09, $18, $16, $09, $00, $02, $0f, $1a, $20, $21, $1c, $15, $13
0d05d     18 20 27 2D 
0d061     31 33 37 3A 
0d065     39 39 3C 44 
0d069     44 3B 34 31 | 	byte	$18, $20, $27, $2d, $31, $33, $37, $3a, $39, $39, $3c, $44, $44, $3b, $34, $31
0d06d     34 39 39 33 
0d071     2B 23 1F 17 
0d075     09 FA EA E6 
0d079     E0 DA D5 D1 | 	byte	$34, $39, $39, $33, $2b, $23, $1f, $17, $09, $fa, $ea, $e6, $e0, $da, $d5, $d1
0d07d     D3 D7 DE EA 
0d081     FA 0C 18 22 
0d085     31 42 4C 4A 
0d089     3E 29 17 0E | 	byte	$d3, $d7, $de, $ea, $fa, $0c, $18, $22, $31, $42, $4c, $4a, $3e, $29, $17, $0e
0d08d     0A 01 F2 ED 
0d091     F3 04 14 1F 
0d095     29 32 38 38 
0d099     37 30 1D 06 | 	byte	$0a, $01, $f2, $ed, $f3, $04, $14, $1f, $29, $32, $38, $38, $37, $30, $1d, $06
0d09d     F5 F4 FB 01 
0d0a1     08 15 2D 4C 
0d0a5     64 64 64 64 
0d0a9     64 56 52 46 | 	byte	$f5, $f4, $fb, $01, $08, $15, $2d, $4c, $64, $64, $64, $64, $64, $56, $52, $46
0d0ad     2E 0E F1 E3 
0d0b1     DE DC D5 CB 
0d0b5     C2 C2 C7 C1 
0d0b9     AF 9C 8F 93 | 	byte	$2e, $0e, $f1, $e3, $de, $dc, $d5, $cb, $c2, $c2, $c7, $c1, $af, $9c, $8f, $93
0d0bd     9A 9D 9A 98 
0d0c1     9D A9 B8 C6 
0d0c5     D1 D9 E6 F5 
0d0c9     FD FB F7 F7 | 	byte	$9a, $9d, $9a, $98, $9d, $a9, $b8, $c6, $d1, $d9, $e6, $f5, $fd, $fb, $f7, $f7
0d0cd     FB 01 08 0C 
0d0d1     0D 0F 15 1E 
0d0d5     27 2D 2F 33 
0d0d9     37 3D 42 41 | 	byte	$fb, $01, $08, $0c, $0d, $0f, $15, $1e, $27, $2d, $2f, $33, $37, $3d, $42, $41
0d0dd     36 24 16 13 
0d0e1     16 16 0F FD 
0d0e5     ED F2 F5 FB 
0d0e9     08 11 19 23 | 	byte	$36, $24, $16, $13, $16, $16, $0f, $fd, $ed, $f2, $f5, $fb, $08, $11, $19, $23
0d0ed     2A 27 1E 14 
0d0f1     11 18 19 10 
0d0f5     FF EA E4 DE 
0d0f9     DC DF E3 E1 | 	byte	$2a, $27, $1e, $14, $11, $18, $19, $10, $ff, $ea, $e4, $de, $dc, $df, $e3, $e1
0d0fd     D8 CB C0 B8 
0d101     B8 BD BC B5 
0d105     AE B1 C0 D0 
0d109     D8 DA E5 F9 | 	byte	$d8, $cb, $c0, $b8, $b8, $bd, $bc, $b5, $ae, $b1, $c0, $d0, $d8, $da, $e5, $f9
0d10d     0A 0E 09 FF 
0d111     FC 04 07 09 
0d115     09 0D 0D 0B 
0d119     05 F7 EC E6 | 	byte	$0a, $0e, $09, $ff, $fc, $04, $07, $09, $09, $0d, $0d, $0b, $05, $f7, $ec, $e6
0d11d     D6 BD A9 95 
0d121     89 8B 8D 8B 
0d125     93 9E AA BB 
0d129     CA D6 E7 03 | 	byte	$d6, $bd, $a9, $95, $89, $8b, $8d, $8b, $93, $9e, $aa, $bb, $ca, $d6, $e7, $03
0d12d     26 44 52 54 
0d131     4E 48 45 41 
0d135     3C 35 26 12 
0d139     FC F9 F4 EE | 	byte	$26, $44, $52, $54, $4e, $48, $45, $41, $3c, $35, $26, $12, $fc, $f9, $f4, $ee
0d13d     E6 E0 D8 CE 
0d141     C7 C3 C4 C4 
0d145     C2 C4 CC CA 
0d149     C6 C9 DF F6 | 	byte	$e6, $e0, $d8, $ce, $c7, $c3, $c4, $c4, $c2, $c4, $cc, $ca, $c6, $c9, $df, $f6
0d14d     00 01 04 0B 
0d151     16 1C 1A 16 
0d155     1B 24 2D 31 
0d159     2F 2B 23 18 | 	byte	$00, $01, $04, $0b, $16, $1c, $1a, $16, $1b, $24, $2d, $31, $2f, $2b, $23, $18
0d15d     0B 02 FF 00 
0d161     02 01 F9 FF 
0d165     0F 1F 22 1E 
0d169     22 29 2E 30 | 	byte	$0b, $02, $ff, $00, $02, $01, $f9, $ff, $0f, $1f, $22, $1e, $22, $29, $2e, $30
0d16d     31 37 3C 41 
0d171     45 46 40 38 
0d175     33 39 45 4B 
0d179     46 34 20 12 | 	byte	$31, $37, $3c, $41, $45, $46, $40, $38, $33, $39, $45, $4b, $46, $34, $20, $12
0d17d     0C 08 01 F9 
0d181     F2 E9 DF D8 
0d185     DA DF E6 F1 
0d189     FD 08 10 15 | 	byte	$0c, $08, $01, $f9, $f2, $e9, $df, $d8, $da, $df, $e6, $f1, $fd, $08, $10, $15
0d18d     15 19 1B 2B 
0d191     40 59 64 64 
0d195     64 64 64 64 
0d199     64 64 64 50 | 	byte	$15, $19, $1b, $2b, $40, $59, $64, $64, $64, $64, $64, $64, $64, $64, $64, $50
0d19d     3E 31 24 12 
0d1a1     F6 DE D4 D3 
0d1a5     D8 DD E1 E7 
0d1a9     EA ED F0 F0 | 	byte	$3e, $31, $24, $12, $f6, $de, $d4, $d3, $d8, $dd, $e1, $e7, $ea, $ed, $f0, $f0
0d1ad     E5 DB D9 D7 
0d1b1     D3 CF C9 C8 
0d1b5     D2 EB 01 0B 
0d1b9     00 EE E5 E7 | 	byte	$e5, $db, $d9, $d7, $d3, $cf, $c9, $c8, $d2, $eb, $01, $0b, $00, $ee, $e5, $e7
0d1bd     E8 E4 D5 C1 
0d1c1     B1 AC B0 B9 
0d1c5     BF C1 C4 CC 
0d1c9     D8 DE E0 DC | 	byte	$e8, $e4, $d5, $c1, $b1, $ac, $b0, $b9, $bf, $c1, $c4, $cc, $d8, $de, $e0, $dc
0d1cd     DC E3 F1 00 
0d1d1     11 27 3A 48 
0d1d5     55 60 62 5F 
0d1d9     5E 5A 51 40 | 	byte	$dc, $e3, $f1, $00, $11, $27, $3a, $48, $55, $60, $62, $5f, $5e, $5a, $51, $40
0d1dd     28 14 0E 0C 
0d1e1     09 0B 0E 13 
0d1e5     1A 23 28 25 
0d1e9     20 1F 18 08 | 	byte	$28, $14, $0e, $0c, $09, $0b, $0e, $13, $1a, $23, $28, $25, $20, $1f, $18, $08
0d1ed     F0 D9 CB C6 
0d1f1     C9 CF D7 DD 
0d1f5     E0 E8 F5 00 
0d1f9     04 01 FC FF | 	byte	$f0, $d9, $cb, $c6, $c9, $cf, $d7, $dd, $e0, $e8, $f5, $00, $04, $01, $fc, $ff
0d1fd     06 0B 05 F8 
0d201     EF ED EA E1 
0d205     D8 CD C0 B5 
0d209     AF B1 B4 B5 | 	byte	$06, $0b, $05, $f8, $ef, $ed, $ea, $e1, $d8, $cd, $c0, $b5, $af, $b1, $b4, $b5
0d20d     B8 C6 DC F3 
0d211     06 18 1F 15 
0d215     08 FB F5 F2 
0d219     EF EB DF CF | 	byte	$b8, $c6, $dc, $f3, $06, $18, $1f, $15, $08, $fb, $f5, $f2, $ef, $eb, $df, $cf
0d21d     BD B1 AB A3 
0d221     9C 9B A0 AB 
0d225     BD C0 BE BA 
0d229     BB CA DB E5 | 	byte	$bd, $b1, $ab, $a3, $9c, $9b, $a0, $ab, $bd, $c0, $be, $ba, $bb, $ca, $db, $e5
0d22d     EB F1 F9 04 
0d231     08 07 01 02 
0d235     07 0A 09 0C 
0d239     0F 0C 0A 0E | 	byte	$eb, $f1, $f9, $04, $08, $07, $01, $02, $07, $0a, $09, $0c, $0f, $0c, $0a, $0e
0d23d     0F 10 0F 06 
0d241     F4 F1 F4 F3 
0d245     EE EC E5 DE 
0d249     DE DB DB DF | 	byte	$0f, $10, $0f, $06, $f4, $f1, $f4, $f3, $ee, $ec, $e5, $de, $de, $db, $db, $df
0d24d     E2 EC FB 09 
0d251     15 1B 1C 17 
0d255     0C 02 01 05 
0d259     05 04 FD F3 | 	byte	$e2, $ec, $fb, $09, $15, $1b, $1c, $17, $0c, $02, $01, $05, $05, $04, $fd, $f3
0d25d     FD 0F 25 30 
0d261     33 39 4A 54 
0d265     53 52 52 55 
0d269     54 49 3A 29 | 	byte	$fd, $0f, $25, $30, $33, $39, $4a, $54, $53, $52, $52, $55, $54, $49, $3a, $29
0d26d     22 27 2D 29 
0d271     1F 17 16 1D 
0d275     1C 0E FE F4 
0d279     F3 EF EB DE | 	byte	$22, $27, $2d, $29, $1f, $17, $16, $1d, $1c, $0e, $fe, $f4, $f3, $ef, $eb, $de
0d27d     D0 CF E0 EE 
0d281     F5 FA 00 06 
0d285     0C 11 10 13 
0d289     1B 2A 3E 54 | 	byte	$d0, $cf, $e0, $ee, $f5, $fa, $00, $06, $0c, $11, $10, $13, $1b, $2a, $3e, $54
0d28d     61 5B 50 55 
0d291     62 64 5C 4A 
0d295     35 22 12 03 
0d299     FE 03 07 04 | 	byte	$61, $5b, $50, $55, $62, $64, $5c, $4a, $35, $22, $12, $03, $fe, $03, $07, $04
0d29d     FE FE 06 0F 
0d2a1     0F 01 EB E7 
0d2a5     F1 05 12 0E 
0d2a9     FF F4 F5 F1 | 	byte	$fe, $fe, $06, $0f, $0f, $01, $eb, $e7, $f1, $05, $12, $0e, $ff, $f4, $f5, $f1
0d2ad     E7 D5 D0 D0 
0d2b1     D7 D6 D4 D7 
0d2b5     DB E6 FA 10 
0d2b9     1B 1D 17 0D | 	byte	$e7, $d5, $d0, $d0, $d7, $d6, $d4, $d7, $db, $e6, $fa, $10, $1b, $1d, $17, $0d
0d2bd     FB EC E8 E5 
0d2c1     E0 DE E1 E3 
0d2c5     E6 E9 EE F9 
0d2c9     07 15 20 2B | 	byte	$fb, $ec, $e8, $e5, $e0, $de, $e1, $e3, $e6, $e9, $ee, $f9, $07, $15, $20, $2b
0d2cd     33 32 29 1E 
0d2d1     23 35 44 47 
0d2d5     3E 3B 3E 4E 
0d2d9     59 50 35 15 | 	byte	$33, $32, $29, $1e, $23, $35, $44, $47, $3e, $3b, $3e, $4e, $59, $50, $35, $15
0d2dd     04 FF 00 FE 
0d2e1     F3 E3 DD E5 
0d2e5     EA E6 DB D4 
0d2e9     D9 E2 E5 E2 | 	byte	$04, $ff, $00, $fe, $f3, $e3, $dd, $e5, $ea, $e6, $db, $d4, $d9, $e2, $e5, $e2
0d2ed     E4 F1 FD 03 
0d2f1     FF F1 E6 EA 
0d2f5     F2 F4 EE DF 
0d2f9     D5 CC C3 B8 | 	byte	$e4, $f1, $fd, $03, $ff, $f1, $e6, $ea, $f2, $f4, $ee, $df, $d5, $cc, $c3, $b8
0d2fd     AF A7 A3 A0 
0d301     A2 AC BA CA 
0d305     D8 EB F8 08 
0d309     17 27 37 3D | 	byte	$af, $a7, $a3, $a0, $a2, $ac, $ba, $ca, $d8, $eb, $f8, $08, $17, $27, $37, $3d
0d30d     3B 40 41 37 
0d311     27 14 07 FC 
0d315     F1 E1 CE BC 
0d319     B1 B1 B0 A7 | 	byte	$3b, $40, $41, $37, $27, $14, $07, $fc, $f1, $e1, $ce, $bc, $b1, $b1, $b0, $a7
0d31d     8D 80 82 96 
0d321     A1 A2 9F A1 
0d325     BB E6 06 16 
0d329     18 1A 26 39 | 	byte	$8d, $80, $82, $96, $a1, $a2, $9f, $a1, $bb, $e6, $06, $16, $18, $1a, $26, $39
0d32d     41 31 13 FF 
0d331     FD 05 0B 06 
0d335     F9 F6 00 0B 
0d339     07 F7 E8 E9 | 	byte	$41, $31, $13, $ff, $fd, $05, $0b, $06, $f9, $f6, $00, $0b, $07, $f7, $e8, $e9
0d33d     F1 F1 DF CF 
0d341     C9 C6 C9 D2 
0d345     D6 D7 D5 CF 
0d349     C8 C2 C4 CF | 	byte	$f1, $f1, $df, $cf, $c9, $c6, $c9, $d2, $d6, $d7, $d5, $cf, $c8, $c2, $c4, $cf
0d34d     DA E1 E8 F8 
0d351     11 29 35 33 
0d355     25 17 0F 0D 
0d359     0F 14 18 14 | 	byte	$da, $e1, $e8, $f8, $11, $29, $35, $33, $25, $17, $0f, $0d, $0f, $14, $18, $14
0d35d     10 18 1F 24 
0d361     26 24 1F 1A 
0d365     18 14 10 0B 
0d369     03 F9 F8 00 | 	byte	$10, $18, $1f, $24, $26, $24, $1f, $1a, $18, $14, $10, $0b, $03, $f9, $f8, $00
0d36d     0D 16 16 13 
0d371     0D 0D 0F 13 
0d375     15 19 1A 1B 
0d379     1D 24 25 24 | 	byte	$0d, $16, $16, $13, $0d, $0d, $0f, $13, $15, $19, $1a, $1b, $1d, $24, $25, $24
0d37d     27 29 28 21 
0d381     12 05 FE FB 
0d385     F7 F1 EE FB 
0d389     18 3B 5B 66 | 	byte	$27, $29, $28, $21, $12, $05, $fe, $fb, $f7, $f1, $ee, $fb, $18, $3b, $5b, $66
0d38d     65 65 65 65 
0d391     65 65 65 65 | 	byte	$65[8]
0d395     5C 48 37 20 
0d399     0F 0A 06 F9 
0d39d     E3 D2 CD D5 
0d3a1     D9 CC BB B1 | 	byte	$5c, $48, $37, $20, $0f, $0a, $06, $f9, $e3, $d2, $cd, $d5, $d9, $cc, $bb, $b1
0d3a5     B0 B2 B5 B3 
0d3a9     B3 BB CA D6 
0d3ad     DE E6 F4 05 
0d3b1     15 1F 21 19 | 	byte	$b0, $b2, $b5, $b3, $b3, $bb, $ca, $d6, $de, $e6, $f4, $05, $15, $1f, $21, $19
0d3b5     15 1F 2B 2C 
0d3b9     24 18 13 13 
0d3bd     12 07 F5 E6 
0d3c1     DF D7 C6 B4 | 	byte	$15, $1f, $2b, $2c, $24, $18, $13, $13, $12, $07, $f5, $e6, $df, $d7, $c6, $b4
0d3c5     A9 A5 AF C1 
0d3c9     D0 E6 05 28 
0d3cd     49 63 64 64 
0d3d1     64 64 64 5A | 	byte	$a9, $a5, $af, $c1, $d0, $e6, $05, $28, $49, $63, $64, $64, $64, $64, $64, $5a
0d3d5     4E 40 34 29 
0d3d9     2A 30 39 3E 
0d3dd     40 39 33 26 
0d3e1     0F F5 E4 D5 | 	byte	$4e, $40, $34, $29, $2a, $30, $39, $3e, $40, $39, $33, $26, $0f, $f5, $e4, $d5
0d3e5     C5 B8 AF B2 
0d3e9     B6 BB C6 D4 
0d3ed     E6 F4 F0 DF 
0d3f1     CC BF C2 D3 | 	byte	$c5, $b8, $af, $b2, $b6, $bb, $c6, $d4, $e6, $f4, $f0, $df, $cc, $bf, $c2, $d3
0d3f5     E1 E6 EA F0 
0d3f9     F9 06 0E 0C 
0d3fd     07 02 00 02 
0d401     01 FD F8 FB | 	byte	$e1, $e6, $ea, $f0, $f9, $06, $0e, $0c, $07, $02, $00, $02, $01, $fd, $f8, $fb
0d405     01 05 07 04 
0d409     03 0B 16 18 
0d40d     0C F8 EB E2 
0d411     E1 E1 DB CC | 	byte	$01, $05, $07, $04, $03, $0b, $16, $18, $0c, $f8, $eb, $e2, $e1, $e1, $db, $cc
0d415     BB A7 99 99 
0d419     A1 A4 A9 B2 
0d41d     C5 D6 E0 E8 
0d421     F0 00 15 1D | 	byte	$bb, $a7, $99, $99, $a1, $a4, $a9, $b2, $c5, $d6, $e0, $e8, $f0, $00, $15, $1d
0d425     0D E6 CB BC 
0d429     B9 B7 B3 B0 
0d42d     B6 C8 E0 F3 
0d431     01 0F 1C 1C | 	byte	$0d, $e6, $cb, $bc, $b9, $b7, $b3, $b0, $b6, $c8, $e0, $f3, $01, $0f, $1c, $1c
0d435     11 04 FB FC 
0d439     FE FD FC F8 
0d43d     F9 FD FF FE 
0d441     FC FD FC F6 | 	byte	$11, $04, $fb, $fc, $fe, $fd, $fc, $f8, $f9, $fd, $ff, $fe, $fc, $fd, $fc, $f6
0d445     E5 D5 C7 BD 
0d449     BB BE CA D6 
0d44d     E1 E5 E2 E1 
0d451     EB FB 11 26 | 	byte	$e5, $d5, $c7, $bd, $bb, $be, $ca, $d6, $e1, $e5, $e2, $e1, $eb, $fb, $11, $26
0d455     2C 25 1F 27 
0d459     37 50 60 62 
0d45d     5B 54 4D 49 
0d461     4E 57 5A 51 | 	byte	$2c, $25, $1f, $27, $37, $50, $60, $62, $5b, $54, $4d, $49, $4e, $57, $5a, $51
0d465     40 2B 16 05 
0d469     F5 E1 CF BF 
0d46d     B5 B5 BC C6 
0d471     CD DC E7 F8 | 	byte	$40, $2b, $16, $05, $f5, $e1, $cf, $bf, $b5, $b5, $bc, $c6, $cd, $dc, $e7, $f8
0d475     0D 1B 1F 22 
0d479     28 2D 2C 24 
0d47d     1F 21 2C 3C 
0d481     40 3B 3B 45 | 	byte	$0d, $1b, $1f, $22, $28, $2d, $2c, $24, $1f, $21, $2c, $3c, $40, $3b, $3b, $45
0d485     4F 50 4B 3E 
0d489     2D 27 2A 2C 
0d48d     25 18 0B 03 
0d491     05 0C 11 0D | 	byte	$4f, $50, $4b, $3e, $2d, $27, $2a, $2c, $25, $18, $0b, $03, $05, $0c, $11, $0d
0d495     08 08 06 FD 
0d499     FB FA FB F8 
0d49d     F5 F3 F2 F8 
0d4a1     00 01 F9 F1 | 	byte	$08, $08, $06, $fd, $fb, $fa, $fb, $f8, $f5, $f3, $f2, $f8, $00, $01, $f9, $f1
0d4a5     EA E6 E4 E1 
0d4a9     DF E3 EB F6 
0d4ad     02 06 06 06 
0d4b1     0B 09 02 F9 | 	byte	$ea, $e6, $e4, $e1, $df, $e3, $eb, $f6, $02, $06, $06, $06, $0b, $09, $02, $f9
0d4b5     ED E8 E7 F0 
0d4b9     FC 0B 10 07 
0d4bd     02 06 0E 0E 
0d4c1     08 02 04 0D | 	byte	$ed, $e8, $e7, $f0, $fc, $0b, $10, $07, $02, $06, $0e, $0e, $08, $02, $04, $0d
0d4c5     13 18 23 39 
0d4c9     53 64 64 64 
0d4cd     64 5F 57 48 
0d4d1     33 22 14 09 | 	byte	$13, $18, $23, $39, $53, $64, $64, $64, $64, $5f, $57, $48, $33, $22, $14, $09
0d4d5     00 EF EC F2 
0d4d9     01 09 08 04 
0d4dd     FB F4 E9 E0 
0d4e1     D8 DA DE E0 | 	byte	$00, $ef, $ec, $f2, $01, $09, $08, $04, $fb, $f4, $e9, $e0, $d8, $da, $de, $e0
0d4e5     E2 ED FC 00 
0d4e9     F8 E8 DB D4 
0d4ed     D2 CA BC AB 
0d4f1     9D 93 99 A3 | 	byte	$e2, $ed, $fc, $00, $f8, $e8, $db, $d4, $d2, $ca, $bc, $ab, $9d, $93, $99, $a3
0d4f5     A1 A1 B2 CD 
0d4f9     E7 FD 05 03 
0d4fd     03 0E 1D 25 
0d501     29 2B 2E 32 | 	byte	$a1, $a1, $b2, $cd, $e7, $fd, $05, $03, $03, $0e, $1d, $25, $29, $2b, $2e, $32
0d505     35 30 2E 33 
0d509     38 33 1C FB 
0d50d     E1 D3 C9 BD 
0d511     B0 A2 9C 9F | 	byte	$35, $30, $2e, $33, $38, $33, $1c, $fb, $e1, $d3, $c9, $bd, $b0, $a2, $9c, $9f
0d515     AC B8 BD C2 
0d519     C7 CE CE C8 
0d51d     C5 CF E3 F5 
0d521     02 0D 16 21 | 	byte	$ac, $b8, $bd, $c2, $c7, $ce, $ce, $c8, $c5, $cf, $e3, $f5, $02, $0d, $16, $21
0d525     29 2B 2A 25 
0d529     1F 1B 1C 1E 
0d52d     19 0F 05 FD 
0d531     FD FB E9 D3 | 	byte	$29, $2b, $2a, $25, $1f, $1b, $1c, $1e, $19, $0f, $05, $fd, $fd, $fb, $e9, $d3
0d535     C3 B8 AF AC 
0d539     AE A9 A1 9C 
0d53d     A2 AD B5 B9 
0d541     C5 CE D5 DB | 	byte	$c3, $b8, $af, $ac, $ae, $a9, $a1, $9c, $a2, $ad, $b5, $b9, $c5, $ce, $d5, $db
0d545     DD E2 F4 09 
0d549     19 22 20 1A 
0d54d     16 11 07 F8 
0d551     EB ED F1 F3 | 	byte	$dd, $e2, $f4, $09, $19, $22, $20, $1a, $16, $11, $07, $f8, $eb, $ed, $f1, $f3
0d555     F4 F4 F9 08 
0d559     18 24 2D 35 
0d55d     3C 41 3F 3A 
0d561     38 39 3F 49 | 	byte	$f4, $f4, $f9, $08, $18, $24, $2d, $35, $3c, $41, $3f, $3a, $38, $39, $3f, $49
0d565     50 4A 37 25 
0d569     1B 1B 21 23 
0d56d     1D 0E F2 DD 
0d571     CF CF D4 DD | 	byte	$50, $4a, $37, $25, $1b, $1b, $21, $23, $1d, $0e, $f2, $dd, $cf, $cf, $d4, $dd
0d575     F0 07 1C 28 
0d579     28 1A 0B 07 
0d57d     11 1E 21 18 
0d581     11 16 21 2E | 	byte	$f0, $07, $1c, $28, $28, $1a, $0b, $07, $11, $1e, $21, $18, $11, $16, $21, $2e
0d585     44 5F 65 65 
0d589     65 65 53 45 
0d58d     3A 2C 1D 0E 
0d591     04 01 F9 F3 | 	byte	$44, $5f, $65, $65, $65, $65, $53, $45, $3a, $2c, $1d, $0e, $04, $01, $f9, $f3
0d595     F6 04 1A 25 
0d599     1D 04 EE E9 
0d59d     E8 DE C9 B6 
0d5a1     B7 C6 CF CD | 	byte	$f6, $04, $1a, $25, $1d, $04, $ee, $e9, $e8, $de, $c9, $b6, $b7, $c6, $cf, $cd
0d5a5     C9 C9 CB D4 
0d5a9     DF EE FD 09 
0d5ad     0E 0A 03 FE 
0d5b1     FC FE 05 0C | 	byte	$c9, $c9, $cb, $d4, $df, $ee, $fd, $09, $0e, $0a, $03, $fe, $fc, $fe, $05, $0c
0d5b5     07 F8 E9 E8 
0d5b9     EE F9 FA EE 
0d5bd     E2 DF E0 E2 
0d5c1     EA F7 08 20 | 	byte	$07, $f8, $e9, $e8, $ee, $f9, $fa, $ee, $e2, $df, $e0, $e2, $ea, $f7, $08, $20
0d5c5     3A 4F 61 64 
0d5c9     64 63 64 64 
0d5cd     64 64 57 42 
0d5d1     2A 11 FC ED | 	byte	$3a, $4f, $61, $64, $64, $63, $64, $64, $64, $64, $57, $42, $2a, $11, $fc, $ed
0d5d5     E6 E6 E2 E9 
0d5d9     F5 04 05 F5 
0d5dd     DB CB C5 BF 
0d5e1     C1 CF DE E6 | 	byte	$e6, $e6, $e2, $e9, $f5, $04, $05, $f5, $db, $cb, $c5, $bf, $c1, $cf, $de, $e6
0d5e5     E1 D8 DC EB 
0d5e9     02 18 22 24 
0d5ed     1B 11 0B 01 
0d5f1     FB FB 01 03 | 	byte	$e1, $d8, $dc, $eb, $02, $18, $22, $24, $1b, $11, $0b, $01, $fb, $fb, $01, $03
0d5f5     F8 E6 D5 CD 
0d5f9     CC D4 D3 CC 
0d5fd     BF B1 A8 A9 
0d601     B6 C8 DC E6 | 	byte	$f8, $e6, $d5, $cd, $cc, $d4, $d3, $cc, $bf, $b1, $a8, $a9, $b6, $c8, $dc, $e6
0d605     E7 E7 E9 F0 
0d609     F7 F8 F4 E5 
0d60d     DA D0 CC C9 
0d611     C6 C7 CD D4 | 	byte	$e7, $e7, $e9, $f0, $f7, $f8, $f4, $e5, $da, $d0, $cc, $c9, $c6, $c7, $cd, $d4
0d615     DC E1 E6 E9 
0d619     EB E8 DE DB 
0d61d     D7 DA E1 EE 
0d621     FE 08 0B 0E | 	byte	$dc, $e1, $e6, $e9, $eb, $e8, $de, $db, $d7, $da, $e1, $ee, $fe, $08, $0b, $0e
0d625     17 21 28 30 
0d629     38 3A 35 28 
0d62d     20 19 0D F7 
0d631     E6 D7 CF C9 | 	byte	$17, $21, $28, $30, $38, $3a, $35, $28, $20, $19, $0d, $f7, $e6, $d7, $cf, $c9
0d635     C2 B8 B0 A7 
0d639     A2 A1 A2 A1 
0d63d     A3 A9 B3 BE 
0d641     CB DD EC F8 | 	byte	$c2, $b8, $b0, $a7, $a2, $a1, $a2, $a1, $a3, $a9, $b3, $be, $cb, $dd, $ec, $f8
0d645     FE 06 0A 0C 
0d649     0A 02 F9 F9 
0d64d     FA FC FB FC 
0d651     06 11 1C 2C | 	byte	$fe, $06, $0a, $0c, $0a, $02, $f9, $f9, $fa, $fc, $fb, $fc, $06, $11, $1c, $2c
0d655     3E 4E 61 64 
0d659     64 64 58 43 
0d65d     35 31 30 27 
0d661     1B 0C FF FC | 	byte	$3e, $4e, $61, $64, $64, $64, $58, $43, $35, $31, $30, $27, $1b, $0c, $ff, $fc
0d665     01 03 FE FB 
0d669     FE 07 0E 0E 
0d66d     FD E6 D8 DC 
0d671     EA F6 FC FD | 	byte	$01, $03, $fe, $fb, $fe, $07, $0e, $0e, $fd, $e6, $d8, $dc, $ea, $f6, $fc, $fd
0d675     02 0C 13 10 
0d679     05 FD 01 09 
0d67d     03 EE DC DF 
0d681     FB 15 26 2F | 	byte	$02, $0c, $13, $10, $05, $fd, $01, $09, $03, $ee, $dc, $df, $fb, $15, $26, $2f
0d685     38 3E 38 2E 
0d689     2A 33 41 49 
0d68d     40 32 2B 35 
0d691     44 4B 4A 45 | 	byte	$38, $3e, $38, $2e, $2a, $33, $41, $49, $40, $32, $2b, $35, $44, $4b, $4a, $45
0d695     48 59 64 64 
0d699     40 21 07 EE 
0d69d     DE CD B9 AB 
0d6a1     AB B4 B8 BA | 	byte	$48, $59, $64, $64, $40, $21, $07, $ee, $de, $cd, $b9, $ab, $ab, $b4, $b8, $ba
0d6a5     C2 D2 EE 0D 
0d6a9     22 21 1C 17 
0d6ad     0F 0B 0D 11 
0d6b1     15 18 1C 19 | 	byte	$c2, $d2, $ee, $0d, $22, $21, $1c, $17, $0f, $0b, $0d, $11, $15, $18, $1c, $19
0d6b5     0F 06 05 07 
0d6b9     0D 12 10 08 
0d6bd     02 07 13 18 
0d6c1     1A 1B 1E 26 | 	byte	$0f, $06, $05, $07, $0d, $12, $10, $08, $02, $07, $13, $18, $1a, $1b, $1e, $26
0d6c5     27 1D 0B 03 
0d6c9     06 16 1D 17 
0d6cd     0D 0E 1B 28 
0d6d1     27 19 07 FA | 	byte	$27, $1d, $0b, $03, $06, $16, $1d, $17, $0d, $0e, $1b, $28, $27, $19, $07, $fa
0d6d5     F6 FC 00 F6 
0d6d9     E6 D5 CB C8 
0d6dd     CF D5 D3 D0 
0d6e1     D7 E6 EF F1 | 	byte	$f6, $fc, $00, $f6, $e6, $d5, $cb, $c8, $cf, $d5, $d3, $d0, $d7, $e6, $ef, $f1
0d6e5     F1 FC 10 23 
0d6e9     27 1D 15 10 
0d6ed     11 1D 29 25 
0d6f1     18 05 F3 F0 | 	byte	$f1, $fc, $10, $23, $27, $1d, $15, $10, $11, $1d, $29, $25, $18, $05, $f3, $f0
0d6f5     EF EF E8 D6 
0d6f9     C6 BD BC BD 
0d6fd     BA BC BE C1 
0d701     BB B1 AF B6 | 	byte	$ef, $ef, $e8, $d6, $c6, $bd, $bc, $bd, $ba, $bc, $be, $c1, $bb, $b1, $af, $b6
0d705     BF CD DB E4 
0d709     E6 EB F8 0B 
0d70d     17 1B 1D 18 
0d711     0F 08 06 01 | 	byte	$bf, $cd, $db, $e4, $e6, $eb, $f8, $0b, $17, $1b, $1d, $18, $0f, $08, $06, $01
0d715     F7 E8 EA F4 
0d719     FB FA F2 F7 
0d71d     02 02 FA F5 
0d721     FA 07 14 15 | 	byte	$f7, $e8, $ea, $f4, $fb, $fa, $f2, $f7, $02, $02, $fa, $f5, $fa, $07, $14, $15
0d725     0E 0C 16 1C 
0d729     1A 0C F3 D9 
0d72d     D0 D5 CE B7 
0d731     9B 8F 94 A0 | 	byte	$0e, $0c, $16, $1c, $1a, $0c, $f3, $d9, $d0, $d5, $ce, $b7, $9b, $8f, $94, $a0
0d735     A5 A5 A1 A1 
0d739     A8 AA AA AB 
0d73d     AB B2 C2 CA 
0d741     C7 C2 C7 D2 | 	byte	$a5, $a5, $a1, $a1, $a8, $aa, $aa, $ab, $ab, $b2, $c2, $ca, $c7, $c2, $c7, $d2
0d745     DE E2 DC DC 
0d749     E9 FF 10 15 
0d74d     1B 1F 1F 1F 
0d751     25 33 42 48 | 	byte	$de, $e2, $dc, $dc, $e9, $ff, $10, $15, $1b, $1f, $1f, $1f, $25, $33, $42, $48
0d755     45 46 55 61 
0d759     5E 52 4A 4F 
0d75d     5F 66 65 63 
0d761     4C 3A 2E 26 | 	byte	$45, $46, $55, $61, $5e, $52, $4a, $4f, $5f, $66, $65, $63, $4c, $3a, $2e, $26
0d765     19 08 F5 F6 
0d769     00 08 09 08 
0d76d     09 0E 15 17 
0d771     14 0E 0C 10 | 	byte	$19, $08, $f5, $f6, $00, $08, $09, $08, $09, $0e, $15, $17, $14, $0e, $0c, $10
0d775     10 05 F2 E3 
0d779     E6 F0 01 0B 
0d77d     12 15 17 13 
0d781     0D 0C 0E 0F | 	byte	$10, $05, $f2, $e3, $e6, $f0, $01, $0b, $12, $15, $17, $13, $0d, $0c, $0e, $0f
0d785     0E 09 01 02 
0d789     12 28 3A 37 
0d78d     30 2A 29 2F 
0d791     2E 24 17 0D | 	byte	$0e, $09, $01, $02, $12, $28, $3a, $37, $30, $2a, $29, $2f, $2e, $24, $17, $0d
0d795     05 05 07 06 
0d799     02 FF 01 FC 
0d79d     EA D8 C8 C1 
0d7a1     C1 BF B9 B2 | 	byte	$05, $05, $07, $06, $02, $ff, $01, $fc, $ea, $d8, $c8, $c1, $c1, $bf, $b9, $b2
0d7a5     AD B2 C2 DC 
0d7a9     F3 0D 23 33 
0d7ad     3B 3A 35 2E 
0d7b1     25 1E 1A 18 | 	byte	$ad, $b2, $c2, $dc, $f3, $0d, $23, $33, $3b, $3a, $35, $2e, $25, $1e, $1a, $18
0d7b5     14 0E 0A 0B 
0d7b9     09 08 0D 1B 
0d7bd     2A 37 3C 37 
0d7c1     38 42 50 5B | 	byte	$14, $0e, $0a, $0b, $09, $08, $0d, $1b, $2a, $37, $3c, $37, $38, $42, $50, $5b
0d7c5     59 45 2B 12 
0d7c9     02 F3 E3 DF 
0d7cd     E3 E7 E7 E8 
0d7d1     ED F5 FF 0E | 	byte	$59, $45, $2b, $12, $02, $f3, $e3, $df, $e3, $e7, $e7, $e8, $ed, $f5, $ff, $0e
0d7d5     20 32 3B 3A 
0d7d9     2D 26 27 28 
0d7dd     21 12 06 06 
0d7e1     0D 1A 1E 16 | 	byte	$20, $32, $3b, $3a, $2d, $26, $27, $28, $21, $12, $06, $06, $0d, $1a, $1e, $16
0d7e5     0F 11 15 15 
0d7e9     0D 01 F4 E6 
0d7ed     DB D0 C3 B9 
0d7f1     B5 B6 BB BC | 	byte	$0f, $11, $15, $15, $0d, $01, $f4, $e6, $db, $d0, $c3, $b9, $b5, $b6, $bb, $bc
0d7f5     B5 AD AD B4 
0d7f9     B6 AF A3 A2 
0d7fd     AD B7 BA B5 
0d801     B3 BD CF E3 | 	byte	$b5, $ad, $ad, $b4, $b6, $af, $a3, $a2, $ad, $b7, $ba, $b5, $b3, $bd, $cf, $e3
0d805     E9 DE DB D7 
0d809     E0 E1 D8 CB 
0d80d     C8 CE D6 E5 
0d811     EE F1 FB 0D | 	byte	$e9, $de, $db, $d7, $e0, $e1, $d8, $cb, $c8, $ce, $d6, $e5, $ee, $f1, $fb, $0d
0d815     23 2C 27 24 
0d819     2A 2F 2A 1F 
0d81d     16 13 16 18 
0d821     16 14 12 10 | 	byte	$23, $2c, $27, $24, $2a, $2f, $2a, $1f, $16, $13, $16, $18, $16, $14, $12, $10
0d825     0D 0E 15 1E 
0d829     24 23 17 06 
0d82d     EE D9 C4 B1 
0d831     A0 93 94 9C | 	byte	$0d, $0e, $15, $1e, $24, $23, $17, $06, $ee, $d9, $c4, $b1, $a0, $93, $94, $9c
0d835     A4 AA AB B0 
0d839     BC CA D3 DC 
0d83d     E6 EC EF ED 
0d841     E5 E2 E9 F0 | 	byte	$a4, $aa, $ab, $b0, $bc, $ca, $d3, $dc, $e6, $ec, $ef, $ed, $e5, $e2, $e9, $f0
0d845     FA 01 02 01 
0d849     09 1B 28 20 
0d84d     08 F7 F6 FF 
0d851     04 FB ED E7 | 	byte	$fa, $01, $02, $01, $09, $1b, $28, $20, $08, $f7, $f6, $ff, $04, $fb, $ed, $e7
0d855     F0 FE 13 24 
0d859     30 32 30 35 
0d85d     42 55 5E 58 
0d861     4B 40 39 30 | 	byte	$f0, $fe, $13, $24, $30, $32, $30, $35, $42, $55, $5e, $58, $4b, $40, $39, $30
0d865     24 0F 00 00 
0d869     09 0C FE E2 
0d86d     D7 DD E3 DF 
0d871     D2 C0 BC C8 | 	byte	$24, $0f, $00, $00, $09, $0c, $fe, $e2, $d7, $dd, $e3, $df, $d2, $c0, $bc, $c8
0d875     D7 E7 ED E7 
0d879     E3 E3 F6 0A 
0d87d     1E 33 46 53 
0d881     59 5A 57 56 | 	byte	$d7, $e7, $ed, $e7, $e3, $e3, $f6, $0a, $1e, $33, $46, $53, $59, $5a, $57, $56
0d885     54 49 34 1F 
0d889     12 0D 0E 13 
0d88d     1A 23 28 27 
0d891     22 17 0A 06 | 	byte	$54, $49, $34, $1f, $12, $0d, $0e, $13, $1a, $23, $28, $27, $22, $17, $0a, $06
0d895     07 0B 03 F0 
0d899     E5 E3 F4 09 
0d89d     19 26 2C 2A 
0d8a1     25 27 23 12 | 	byte	$07, $0b, $03, $f0, $e5, $e3, $f4, $09, $19, $26, $2c, $2a, $25, $27, $23, $12
0d8a5     F6 E4 E8 F6 
0d8a9     04 0C 10 12 
0d8ad     19 1F 20 19 
0d8b1     0E 07 09 06 | 	byte	$f6, $e4, $e8, $f6, $04, $0c, $10, $12, $19, $1f, $20, $19, $0e, $07, $09, $06
0d8b5     FA EA E3 E6 
0d8b9     F1 00 09 0A 
0d8bd     03 FC FD 08 
0d8c1     10 0B 01 F8 | 	byte	$fa, $ea, $e3, $e6, $f1, $00, $09, $0a, $03, $fc, $fd, $08, $10, $0b, $01, $f8
0d8c5     F8 00 01 FC 
0d8c9     F6 F1 F0 EE 
0d8cd     E5 E1 E1 E2 
0d8d1     E0 E0 E0 E2 | 	byte	$f8, $00, $01, $fc, $f6, $f1, $f0, $ee, $e5, $e1, $e1, $e2, $e0, $e0, $e0, $e2
0d8d5     F1 15 2F 3F 
0d8d9     46 47 43 3F 
0d8dd     39 2B 1B 13 
0d8e1     0D 08 03 FD | 	byte	$f1, $15, $2f, $3f, $46, $47, $43, $3f, $39, $2b, $1b, $13, $0d, $08, $03, $fd
0d8e5     FB 07 1D 2D 
0d8e9     2C 1E 0E 06 
0d8ed     03 F9 E7 DD 
0d8f1     DF E1 DA CF | 	byte	$fb, $07, $1d, $2d, $2c, $1e, $0e, $06, $03, $f9, $e7, $dd, $df, $e1, $da, $cf
0d8f5     C7 C8 CD D4 
0d8f9     CF CB CA CB 
0d8fd     CD D4 DB E2 
0d901     E8 EF ED E5 | 	byte	$c7, $c8, $cd, $d4, $cf, $cb, $ca, $cb, $cd, $d4, $db, $e2, $e8, $ef, $ed, $e5
0d905     E2 E3 E7 EB 
0d909     EA E0 E3 E6 
0d90d     EA F3 04 16 
0d911     27 30 30 2C | 	byte	$e2, $e3, $e7, $eb, $ea, $e0, $e3, $e6, $ea, $f3, $04, $16, $27, $30, $30, $2c
0d915     28 24 1E 12 
0d919     05 F0 E8 EC 
0d91d     F1 EC E2 DA 
0d921     D5 D7 D3 C2 | 	byte	$28, $24, $1e, $12, $05, $f0, $e8, $ec, $f1, $ec, $e2, $da, $d5, $d7, $d3, $c2
0d925     AF AC BD D5 
0d929     DF E5 E0 E4 
0d92d     F5 04 FC E7 
0d931     D6 C9 C4 C0 | 	byte	$af, $ac, $bd, $d5, $df, $e5, $e0, $e4, $f5, $04, $fc, $e7, $d6, $c9, $c4, $c0
0d935     B9 AD A7 AD 
0d939     B2 B0 AD B1 
0d93d     BE CF DA DC 
0d941     D6 D8 D9 E0 | 	byte	$b9, $ad, $a7, $ad, $b2, $b0, $ad, $b1, $be, $cf, $da, $dc, $d6, $d8, $d9, $e0
0d945     EB F6 05 16 
0d949     22 27 2D 39 
0d94d     45 4C 4D 46 
0d951     41 46 4D 56 | 	byte	$eb, $f6, $05, $16, $22, $27, $2d, $39, $45, $4c, $4d, $46, $41, $46, $4d, $56
0d955     58 55 56 5A 
0d959     5D 5B 4F 3F 
0d95d     2F 27 23 23 
0d961     28 2E 32 31 | 	byte	$58, $55, $56, $5a, $5d, $5b, $4f, $3f, $2f, $27, $23, $23, $28, $2e, $32, $31
0d965     2A 22 22 31 
0d969     46 50 44 23 
0d96d     FF E9 E7 EB 
0d971     EE E9 E6 EC | 	byte	$2a, $22, $22, $31, $46, $50, $44, $23, $ff, $e9, $e7, $eb, $ee, $e9, $e6, $ec
0d975     F4 F8 FA F8 
0d979     F7 F8 F6 EC 
0d97d     E4 E2 EB F7 
0d981     01 01 FD F5 | 	byte	$f4, $f8, $fa, $f8, $f7, $f8, $f6, $ec, $e4, $e2, $eb, $f7, $01, $01, $fd, $f5
0d985     E7 DD D7 D6 
0d989     D4 D3 D0 CE 
0d98d     D4 E5 FE 11 
0d991     1A 23 30 36 | 	byte	$e7, $dd, $d7, $d6, $d4, $d3, $d0, $ce, $d4, $e5, $fe, $11, $1a, $23, $30, $36
0d995     33 29 1B 0D 
0d999     00 FA F9 F3 
0d99d     E7 E6 F0 FD 
0d9a1     02 FD F4 F5 | 	byte	$33, $29, $1b, $0d, $00, $fa, $f9, $f3, $e7, $e6, $f0, $fd, $02, $fd, $f4, $f5
0d9a5     FA 01 03 FE 
0d9a9     F7 ED EB FB 
0d9ad     15 25 2B 2D 
0d9b1     34 3C 42 44 | 	byte	$fa, $01, $03, $fe, $f7, $ed, $eb, $fb, $15, $25, $2b, $2d, $34, $3c, $42, $44
0d9b5     47 47 42 3A 
0d9b9     37 39 3C 36 
0d9bd     2E 2A 29 1E 
0d9c1     09 EB D7 D1 | 	byte	$47, $47, $42, $3a, $37, $39, $3c, $36, $2e, $2a, $29, $1e, $09, $eb, $d7, $d1
0d9c5     D3 D1 CC C4 
0d9c9     C2 CE E2 F9 
0d9cd     06 12 19 1C 
0d9d1     25 34 3F 47 | 	byte	$d3, $d1, $cc, $c4, $c2, $ce, $e2, $f9, $06, $12, $19, $1c, $25, $34, $3f, $47
0d9d5     46 40 3C 3E 
0d9d9     3D 34 29 22 
0d9dd     1F 1F 19 08 
0d9e1     F0 DB D4 D0 | 	byte	$46, $40, $3c, $3e, $3d, $34, $29, $22, $1f, $1f, $19, $08, $f0, $db, $d4, $d0
0d9e5     CC CA C9 CC 
0d9e9     CC CD C7 C5 
0d9ed     BE B7 AF A5 
0d9f1     98 8E 8A 91 | 	byte	$cc, $ca, $c9, $cc, $cc, $cd, $c7, $c5, $be, $b7, $af, $a5, $98, $8e, $8a, $91
0d9f5     9F B5 CB DD 
0d9f9     EA F2 F8 F9 
0d9fd     FB FC F4 E1 
0da01     CC B8 AC AC | 	byte	$9f, $b5, $cb, $dd, $ea, $f2, $f8, $f9, $fb, $fc, $f4, $e1, $cc, $b8, $ac, $ac
0da05     B2 B2 AB AA 
0da09     B4 C8 E2 F4 
0da0d     FD FD 00 0C 
0da11     23 3A 43 45 | 	byte	$b2, $b2, $ab, $aa, $b4, $c8, $e2, $f4, $fd, $fd, $00, $0c, $23, $3a, $43, $45
0da15     3D 34 37 3F 
0da19     47 4C 42 30 
0da1d     24 21 1E 16 
0da21     0E 06 FB F7 | 	byte	$3d, $34, $37, $3f, $47, $4c, $42, $30, $24, $21, $1e, $16, $0e, $06, $fb, $f7
0da25     F3 EE E3 DD 
0da29     DD DC DF E0 
0da2d     D3 C4 BB BA 
0da31     BD C4 C4 C6 | 	byte	$f3, $ee, $e3, $dd, $dd, $dc, $df, $e0, $d3, $c4, $bb, $ba, $bd, $c4, $c4, $c6
0da35     D9 EF F7 F5 
0da39     EE E9 ED FA 
0da3d     03 04 08 10 
0da41     13 0F 06 F3 | 	byte	$d9, $ef, $f7, $f5, $ee, $e9, $ed, $fa, $03, $04, $08, $10, $13, $0f, $06, $f3
0da45     E3 DA D4 CD 
0da49     C7 C7 D5 E9 
0da4d     F4 FA 00 0E 
0da51     25 41 53 53 | 	byte	$e3, $da, $d4, $cd, $c7, $c7, $d5, $e9, $f4, $fa, $00, $0e, $25, $41, $53, $53
0da55     44 3A 38 3A 
0da59     38 30 29 29 
0da5d     30 39 3D 3C 
0da61     30 25 24 31 | 	byte	$44, $3a, $38, $3a, $38, $30, $29, $29, $30, $39, $3d, $3c, $30, $25, $24, $31
0da65     3E 3A 2A 15 
0da69     FE EE E0 D7 
0da6d     CF CB C8 C2 
0da71     BC BA BB C2 | 	byte	$3e, $3a, $2a, $15, $fe, $ee, $e0, $d7, $cf, $cb, $c8, $c2, $bc, $ba, $bb, $c2
0da75     D2 EF 00 06 
0da79     07 05 0E 27 
0da7d     3F 49 3B 28 
0da81     1F 23 27 25 | 	byte	$d2, $ef, $00, $06, $07, $05, $0e, $27, $3f, $49, $3b, $28, $1f, $23, $27, $25
0da85     1E 1B 20 20 
0da89     19 11 0D 12 
0da8d     24 34 35 21 
0da91     0F 10 1F 26 | 	byte	$1e, $1b, $20, $20, $19, $11, $0d, $12, $24, $34, $35, $21, $0f, $10, $1f, $26
0da95     1E 0D 01 04 
0da99     13 1E 1D 17 
0da9d     12 13 14 17 
0daa1     11 0B 13 20 | 	byte	$1e, $0d, $01, $04, $13, $1e, $1d, $17, $12, $13, $14, $17, $11, $0b, $13, $20
0daa5     23 1D 13 0D 
0daa9     14 1B 16 0F 
0daad     0A 06 06 03 
0dab1     F5 E4 D9 DE | 	byte	$23, $1d, $13, $0d, $14, $1b, $16, $0f, $0a, $06, $06, $03, $f5, $e4, $d9, $de
0dab5     E5 E2 E2 EA 
0dab9     F1 F3 F3 F3 
0dabd     F6 F8 F6 E6 
0dac1     DC D6 D9 DB | 	byte	$e5, $e2, $e2, $ea, $f1, $f3, $f3, $f3, $f6, $f8, $f6, $e6, $dc, $d6, $d9, $db
0dac5     D5 CD C8 CE 
0dac9     DB DF E2 ED 
0dacd     00 0E 13 16 
0dad1     1A 1C 20 28 | 	byte	$d5, $cd, $c8, $ce, $db, $df, $e2, $ed, $00, $0e, $13, $16, $1a, $1c, $20, $28
0dad5     2B 20 0C FA 
0dad9     F6 02 0E 11 
0dadd     16 25 38 42 
0dae1     43 43 45 42 | 	byte	$2b, $20, $0c, $fa, $f6, $02, $0e, $11, $16, $25, $38, $42, $43, $43, $45, $42
0dae5     37 2A 18 09 
0dae9     F6 E8 DF D1 
0daed     C1 B5 AE AB 
0daf1     B2 C0 C7 CE | 	byte	$37, $2a, $18, $09, $f6, $e8, $df, $d1, $c1, $b5, $ae, $ab, $b2, $c0, $c7, $ce
0daf5     C9 C1 C1 CB 
0daf9     D1 CB C7 CF 
0dafd     E5 FB 03 FF 
0db01     FA 04 0F 12 | 	byte	$c9, $c1, $c1, $cb, $d1, $cb, $c7, $cf, $e5, $fb, $03, $ff, $fa, $04, $0f, $12
0db05     09 F7 E4 DF 
0db09     DA D7 DE ED 
0db0d     FC 09 16 1D 
0db11     1B 13 11 13 | 	byte	$09, $f7, $e4, $df, $da, $d7, $de, $ed, $fc, $09, $16, $1d, $1b, $13, $11, $13
0db15     0E 02 EE E0 
0db19     DA D4 D0 D6 
0db1d     E1 EE F4 F3 
0db21     F3 F7 F5 F1 | 	byte	$0e, $02, $ee, $e0, $da, $d4, $d0, $d6, $e1, $ee, $f4, $f3, $f3, $f7, $f5, $f1
0db25     E6 CF C1 C3 
0db29     C3 BB AB A3 
0db2d     A8 B3 BA B8 
0db31     B3 B3 BE C8 | 	byte	$e6, $cf, $c1, $c3, $c3, $bb, $ab, $a3, $a8, $b3, $ba, $b8, $b3, $b3, $be, $c8
0db35     CB C9 CB D7 
0db39     EA FC FD F4 
0db3d     F2 01 17 1F 
0db41     17 0B 07 0B | 	byte	$cb, $c9, $cb, $d7, $ea, $fc, $fd, $f4, $f2, $01, $17, $1f, $17, $0b, $07, $0b
0db45     1A 22 1F 14 
0db49     14 24 39 48 
0db4d     4E 53 5D 65 
0db51     65 65 65 65 | 	byte	$1a, $22, $1f, $14, $14, $24, $39, $48, $4e, $53, $5d, $65, $65, $65, $65, $65
0db55     65 65 65 65 
0db59     65 65       | 	byte	$65[6]
0db5b     59 3F 2A 18 
0db5f     14 1F 2E 31 
0db63     2B 21 13 05 
0db67     FA F2 EE EB | 	byte	$59, $3f, $2a, $18, $14, $1f, $2e, $31, $2b, $21, $13, $05, $fa, $f2, $ee, $eb
0db6b     E1 D9 C7 BA 
0db6f     B0 B5 C3 CE 
0db73     D3 D0 D1 E4 
0db77     FB 0F 11 00 | 	byte	$e1, $d9, $c7, $ba, $b0, $b5, $c3, $ce, $d3, $d0, $d1, $e4, $fb, $0f, $11, $00
0db7b     F1 ED F1 EC 
0db7f     DC CE CD D3 
0db83     CF CB CD DB 
0db87     EF 05 13 1B | 	byte	$f1, $ed, $f1, $ec, $dc, $ce, $cd, $d3, $cf, $cb, $cd, $db, $ef, $05, $13, $1b
0db8b     1C 1E 25 2B 
0db8f     24 13 03 02 
0db93     0B 13 1A 1E 
0db97     24 2C 2F 2B | 	byte	$1c, $1e, $25, $2b, $24, $13, $03, $02, $0b, $13, $1a, $1e, $24, $2c, $2f, $2b
0db9b     1D 0F 05 FA 
0db9f     E9 D4 C3 C1 
0dba3     CE E1 F0 02 
0dba7     19 38 4E 57 | 	byte	$1d, $0f, $05, $fa, $e9, $d4, $c3, $c1, $ce, $e1, $f0, $02, $19, $38, $4e, $57
0dbab     5B 58 54 55 
0dbaf     56 46 2D 20 
0dbb3     1F 29 35 38 
0dbb7     2F 2A 2C 2B | 	byte	$5b, $58, $54, $55, $56, $46, $2d, $20, $1f, $29, $35, $38, $2f, $2a, $2c, $2b
0dbbb     29 21 0E F3 
0dbbf     DE D2 C9 BD 
0dbc3     AF A7 AB BE 
0dbc7     D5 E4 F1 02 | 	byte	$29, $21, $0e, $f3, $de, $d2, $c9, $bd, $af, $a7, $ab, $be, $d5, $e4, $f1, $02
0dbcb     17 2D 37 39 
0dbcf     37 35 36 32 
0dbd3     29 25 26 2A 
0dbd7     2D 2D 28 1E | 	byte	$17, $2d, $37, $39, $37, $35, $36, $32, $29, $25, $26, $2a, $2d, $2d, $28, $1e
0dbdb     1A 1C 1D 15 
0dbdf     09 FA E8 DB 
0dbe3     CF C2 B2 A3 
0dbe7     97 90 94 94 | 	byte	$1a, $1c, $1d, $15, $09, $fa, $e8, $db, $cf, $c2, $b2, $a3, $97, $90, $94, $94
0dbeb     95 9A A3 AC 
0dbef     B1 B5 BE C7 
0dbf3     CC CF CA C5 
0dbf7     C7 CF CD D5 | 	byte	$95, $9a, $a3, $ac, $b1, $b5, $be, $c7, $cc, $cf, $ca, $c5, $c7, $cf, $cd, $d5
0dbfb     E4 F1 F1 EC 
0dbff     E3 E4 E7 EA 
0dc03     E6 DC CF C8 
0dc07     CD E0 F9 0E | 	byte	$e4, $f1, $f1, $ec, $e3, $e4, $e7, $ea, $e6, $dc, $cf, $c8, $cd, $e0, $f9, $0e
0dc0b     1D 24 27 2A 
0dc0f     2F 37 3C 3A 
0dc13     33 2D 29 26 
0dc17     24 27 25 24 | 	byte	$1d, $24, $27, $2a, $2f, $37, $3c, $3a, $33, $2d, $29, $26, $24, $27, $25, $24
0dc1b     26 24 1F 15 
0dc1f     09 FE FA F8 
0dc23     EE DD CE C8 
0dc27     CA D1 D3 CF | 	byte	$26, $24, $1f, $15, $09, $fe, $fa, $f8, $ee, $dd, $ce, $c8, $ca, $d1, $d3, $cf
0dc2b     C7 CA CF D6 
0dc2f     DB DC D6 D4 
0dc33     DC E6 EC E7 
0dc37     E2 EA F9 05 | 	byte	$c7, $ca, $cf, $d6, $db, $dc, $d6, $d4, $dc, $e6, $ec, $e7, $e2, $ea, $f9, $05
0dc3b     01 FA F9 FC 
0dc3f     03 03 FD F6 
0dc43     F4 F7 F8 F5 
0dc47     F7 00 11 21 | 	byte	$01, $fa, $f9, $fc, $03, $03, $fd, $f6, $f4, $f7, $f8, $f5, $f7, $00, $11, $21
0dc4b     2A 2B 25 23 
0dc4f     27 2C 2B 2B 
0dc53     30 41 51 56 
0dc57     53 4D 4C 52 | 	byte	$2a, $2b, $25, $23, $27, $2c, $2b, $2b, $30, $41, $51, $56, $53, $4d, $4c, $52
0dc5b     54 4B 3A 25 
0dc5f     14 07 FF F4 
0dc63     E1 D8 E0 E3 
0dc67     D2 C1 B7 B9 | 	byte	$54, $4b, $3a, $25, $14, $07, $ff, $f4, $e1, $d8, $e0, $e3, $d2, $c1, $b7, $b9
0dc6b     C1 C9 C6 C1 
0dc6f     C1 C7 D2 E0 
0dc73     EE F9 02 0D 
0dc77     16 1A 1A 1A | 	byte	$c1, $c9, $c6, $c1, $c1, $c7, $d2, $e0, $ee, $f9, $02, $0d, $16, $1a, $1a, $1a
0dc7b     1C 1A 18 13 
0dc7f     0B 09 0E 1B 
0dc83     2C 38 38 31 
0dc87     30 34 3C 40 | 	byte	$1c, $1a, $18, $13, $0b, $09, $0e, $1b, $2c, $38, $38, $31, $30, $34, $3c, $40
0dc8b     37 28 1B 13 
0dc8f     0D 0D 0D 11 
0dc93     15 1A 1F 24 
0dc97     27 2A 25 1C | 	byte	$37, $28, $1b, $13, $0d, $0d, $0d, $11, $15, $1a, $1f, $24, $27, $2a, $25, $1c
0dc9b     16 17 16 0A 
0dc9f     F9 EC EC F7 
0dca3     08 11 11 0D 
0dca7     0C 0F 1D 22 | 	byte	$16, $17, $16, $0a, $f9, $ec, $ec, $f7, $08, $11, $11, $0d, $0c, $0f, $1d, $22
0dcab     17 10 14 18 
0dcaf     0C F4 E1 D2 
0dcb3     CC CE D0 D3 
0dcb7     CC C8 CA D1 | 	byte	$17, $10, $14, $18, $0c, $f4, $e1, $d2, $cc, $ce, $d0, $d3, $cc, $c8, $ca, $d1
0dcbb     DA DD E0 DE 
0dcbf     DE DA D8 D8 
0dcc3     DA E1 EF FC 
0dcc7     06 10 16 18 | 	byte	$da, $dd, $e0, $de, $de, $da, $d8, $d8, $da, $e1, $ef, $fc, $06, $10, $16, $18
0dccb     1B 22 24 1F 
0dccf     12 03 FB FC 
0dcd3     03 09 10 13 
0dcd7     16 1E 29 34 | 	byte	$1b, $22, $24, $1f, $12, $03, $fb, $fc, $03, $09, $10, $13, $16, $1e, $29, $34
0dcdb     41 46 3D 2F 
0dcdf     1D 0C F5 E6 
0dce3     DC D4 CC C2 
0dce7     BF C1 CF E6 | 	byte	$41, $46, $3d, $2f, $1d, $0c, $f5, $e6, $dc, $d4, $cc, $c2, $bf, $c1, $cf, $e6
0dceb     F7 FD F4 DE 
0dcef     D5 E6 F0 EF 
0dcf3     E2 D1 CD D5 
0dcf7     E0 E4 E2 E5 | 	byte	$f7, $fd, $f4, $de, $d5, $e6, $f0, $ef, $e2, $d1, $cd, $d5, $e0, $e4, $e2, $e5
0dcfb     F3 05 10 0F 
0dcff     04 F7 F7 F7 
0dd03     ED DF DF E7 
0dd07     F6 03 06 06 | 	byte	$f3, $05, $10, $0f, $04, $f7, $f7, $f7, $ed, $df, $df, $e7, $f6, $03, $06, $06
0dd0b     0E 1D 28 27 
0dd0f     18 FE EA EA 
0dd13     EB ED E9 DF 
0dd17     DF E5 F0 F7 | 	byte	$0e, $1d, $28, $27, $18, $fe, $ea, $ea, $eb, $ed, $e9, $df, $df, $e5, $f0, $f7
0dd1b     F4 EB E8 E7 
0dd1f     E7 E6 D8 C7 
0dd23     BC BA C0 C9 
0dd27     C3 BA BE D2 | 	byte	$f4, $eb, $e8, $e7, $e7, $e6, $d8, $c7, $bc, $ba, $c0, $c9, $c3, $ba, $be, $d2
0dd2b     E5 E6 DB CE 
0dd2f     D3 DE EC F3 
0dd33     F0 E7 DB CF 
0dd37     D5 E1 EA EF | 	byte	$e5, $e6, $db, $ce, $d3, $de, $ec, $f3, $f0, $e7, $db, $cf, $d5, $e1, $ea, $ef
0dd3b     F7 03 14 21 
0dd3f     25 24 27 32 
0dd43     44 4B 46 3E 
0dd47     3F 42 41 3C | 	byte	$f7, $03, $14, $21, $25, $24, $27, $32, $44, $4b, $46, $3e, $3f, $42, $41, $3c
0dd4b     44 55 64 64 
0dd4f     64 64 64 64 
0dd53     63 65 61 5E 
0dd57     5B 4F 3C 20 | 	byte	$44, $55, $64, $64, $64, $64, $64, $64, $63, $65, $61, $5e, $5b, $4f, $3c, $20
0dd5b     04 F7 F9 FB 
0dd5f     F9 F5 F0 EA 
0dd63     DB CF C3 B8 
0dd67     B2 B5 B5 BA | 	byte	$04, $f7, $f9, $fb, $f9, $f5, $f0, $ea, $db, $cf, $c3, $b8, $b2, $b5, $b5, $ba
0dd6b     C7 CF D9 EB 
0dd6f     F4 F5 F7 FD 
0dd73     FD F4 F0 ED 
0dd77     EA DE DA DA | 	byte	$c7, $cf, $d9, $eb, $f4, $f5, $f7, $fd, $fd, $f4, $f0, $ed, $ea, $de, $da, $da
0dd7b     D4 D7 DD E4 
0dd7f     E7 EA EA ED 
0dd83     F9 05 0E 12 
0dd87     0F 06 08 12 | 	byte	$d4, $d7, $dd, $e4, $e7, $ea, $ea, $ed, $f9, $05, $0e, $12, $0f, $06, $08, $12
0dd8b     21 2A 27 1C 
0dd8f     15 1B 20 24 
0dd93     22 23 26 26 
0dd97     1D 0F 05 02 | 	byte	$21, $2a, $27, $1c, $15, $1b, $20, $24, $22, $23, $26, $26, $1d, $0f, $05, $02
0dd9b     FE EE E2 E2 
0dd9f     E8 F4 FC FE 
0dda3     09 20 34 43 
0dda7     48 40 32 2C | 	byte	$fe, $ee, $e2, $e2, $e8, $f4, $fc, $fe, $09, $20, $34, $43, $48, $40, $32, $2c
0ddab     2C 2A 22 1B 
0ddaf     11 0B 09 06 
0ddb3     FA E3 D5 D1 
0ddb7     D2 DB E7 EC | 	byte	$2c, $2a, $22, $1b, $11, $0b, $09, $06, $fa, $e3, $d5, $d1, $d2, $db, $e7, $ec
0ddbb     EC EC ED F5 
0ddbf     03 08 04 03 
0ddc3     08 14 1B 1E 
0ddc7     1B 14 10 13 | 	byte	$ec, $ec, $ed, $f5, $03, $08, $04, $03, $08, $14, $1b, $1e, $1b, $14, $10, $13
0ddcb     1C 24 20 11 
0ddcf     09 04 FF FA 
0ddd3     FB 00 05 06 
0ddd7     05 03 03 03 | 	byte	$1c, $24, $20, $11, $09, $04, $ff, $fa, $fb, $00, $05, $06, $05, $03, $03, $03
0dddb     FF F5 EE E7 
0dddf     DC C7 B0 A2 
0dde3     A4 A5 A6 AB 
0dde7     B7 BD B8 AD | 	byte	$ff, $f5, $ee, $e7, $dc, $c7, $b0, $a2, $a4, $a5, $a6, $ab, $b7, $bd, $b8, $ad
0ddeb     AA B8 C7 CC 
0ddef     C9 C5 D1 DD 
0ddf3     E2 E8 F6 0C 
0ddf7     20 2E 30 27 | 	byte	$aa, $b8, $c7, $cc, $c9, $c5, $d1, $dd, $e2, $e8, $f6, $0c, $20, $2e, $30, $27
0ddfb     1C 15 15 0E 
0ddff     F9 E0 CD C8 
0de03     D5 EB FB 08 
0de07     0E 0E 0F 13 | 	byte	$1c, $15, $15, $0e, $f9, $e0, $cd, $c8, $d5, $eb, $fb, $08, $0e, $0e, $0f, $13
0de0b     1B 1C 1A 17 
0de0f     10 0B 09 0D 
0de13     14 18 19 18 
0de17     1A 1B 1D 16 | 	byte	$1b, $1c, $1a, $17, $10, $0b, $09, $0d, $14, $18, $19, $18, $1a, $1b, $1d, $16
0de1b     06 F9 F1 EE 
0de1f     F3 F4 EB DA 
0de23     CF D0 D4 D9 
0de27     DB D4 D1 E0 | 	byte	$06, $f9, $f1, $ee, $f3, $f4, $eb, $da, $cf, $d0, $d4, $d9, $db, $d4, $d1, $e0
0de2b     EF F9 01 F7 
0de2f     F6 F5 F0 E1 
0de33     CE C6 CD D9 
0de37     E9 F8 0A 1F | 	byte	$ef, $f9, $01, $f7, $f6, $f5, $f0, $e1, $ce, $c6, $cd, $d9, $e9, $f8, $0a, $1f
0de3b     2E 31 2A 29 
0de3f     2E 2E 1F 03 
0de43     F2 F5 00 0D 
0de47     18 25 34 45 | 	byte	$2e, $31, $2a, $29, $2e, $2e, $1f, $03, $f2, $f5, $00, $0d, $18, $25, $34, $45
0de4b     57 64 64 5D 
0de4f     51 3D 2B 1F 
0de53     0F FE F4 EA 
0de57     E7 F9 11 25 | 	byte	$57, $64, $64, $5d, $51, $3d, $2b, $1f, $0f, $fe, $f4, $ea, $e7, $f9, $11, $25
0de5b     27 1D 15 12 
0de5f     19 1A 08 E8 
0de63     C6 AE AB B2 
0de67     B2 AB AF C1 | 	byte	$27, $1d, $15, $12, $19, $1a, $08, $e8, $c6, $ae, $ab, $b2, $b2, $ab, $af, $c1
0de6b     D4 E6 F2 F8 
0de6f     02 14 21 21 
0de73     15 08 08 11 
0de77     1A 22 23 22 | 	byte	$d4, $e6, $f2, $f8, $02, $14, $21, $21, $15, $08, $08, $11, $1a, $22, $23, $22
0de7b     20 21 2C 37 
0de7f     3C 39 2C 27 
0de83     26 22 15 03 
0de87     F2 F1 F2 F7 | 	byte	$20, $21, $2c, $37, $3c, $39, $2c, $27, $26, $22, $15, $03, $f2, $f1, $f2, $f7
0de8b     FF 11 31 4F 
0de8f     5C 57 4A 46 
0de93     46 3F 28 07 
0de97     EC DF DF E6 | 	byte	$ff, $11, $31, $4f, $5c, $57, $4a, $46, $46, $3f, $28, $07, $ec, $df, $df, $e6
0de9b     E9 F2 FC 09 
0de9f     13 16 10 0C 
0dea3     0A FD E9 CD 
0dea7     B9 B3 BB CC | 	byte	$e9, $f2, $fc, $09, $13, $16, $10, $0c, $0a, $fd, $e9, $cd, $b9, $b3, $bb, $cc
0deab     D3 D3 D6 E9 
0deaf     FA 05 01 EF 
0deb3     D8 CD CA CC 
0deb7     CE C9 C9 D7 | 	byte	$d3, $d3, $d6, $e9, $fa, $05, $01, $ef, $d8, $cd, $ca, $cc, $ce, $c9, $c9, $d7
0debb     EA F5 F5 F4 
0debf     01 19 2B 30 
0dec3     28 21 21 27 
0dec7     24 1B 0D 07 | 	byte	$ea, $f5, $f5, $f4, $01, $19, $2b, $30, $28, $21, $21, $27, $24, $1b, $0d, $07
0decb     06 0C 0E 07 
0decf     04 0B 1B 2D 
0ded3     32 2D 28 24 
0ded7     21 19 05 F2 | 	byte	$06, $0c, $0e, $07, $04, $0b, $1b, $2d, $32, $2d, $28, $24, $21, $19, $05, $f2
0dedb     E6 DF D1 C4 
0dedf     BF C1 CA D0 
0dee3     D5 DA DD D8 
0dee7     D2 C6 BE B1 | 	byte	$e6, $df, $d1, $c4, $bf, $c1, $ca, $d0, $d5, $da, $dd, $d8, $d2, $c6, $be, $b1
0deeb     AB B1 C1 CF 
0deef     E3 F8 0B 1C 
0def3     2D 39 43 45 
0def7     3D 2C 19 07 | 	byte	$ab, $b1, $c1, $cf, $e3, $f8, $0b, $1c, $2d, $39, $43, $45, $3d, $2c, $19, $07
0defb     FD F5 E5 DA 
0deff     D4 DA E0 E5 
0df03     EB EF F4 F5 
0df07     F3 EF EB E9 | 	byte	$fd, $f5, $e5, $da, $d4, $da, $e0, $e5, $eb, $ef, $f4, $f5, $f3, $ef, $eb, $e9
0df0b     ED F3 F4 EF 
0df0f     EC F2 00 0B 
0df13     10 14 12 08 
0df17     FF F5 E9 D5 | 	byte	$ed, $f3, $f4, $ef, $ec, $f2, $00, $0b, $10, $14, $12, $08, $ff, $f5, $e9, $d5
0df1b     BF B0 B2 B2 
0df1f     B2 AF B1 BA 
0df23     C9 E0 F0 F6 
0df27     FF 0C 1E 2B | 	byte	$bf, $b0, $b2, $b2, $b2, $af, $b1, $ba, $c9, $e0, $f0, $f6, $ff, $0c, $1e, $2b
0df2b     29 16 F9 EB 
0df2f     ED F0 F0 EF 
0df33     EE F5 03 11 
0df37     1D 25 27 26 | 	byte	$29, $16, $f9, $eb, $ed, $f0, $f0, $ef, $ee, $f5, $03, $11, $1d, $25, $27, $26
0df3b     28 2A 23 17 
0df3f     12 1A 28 36 
0df43     3D 43 4B 55 
0df47     5A 58 55 59 | 	byte	$28, $2a, $23, $17, $12, $1a, $28, $36, $3d, $43, $4b, $55, $5a, $58, $55, $59
0df4b     60 63 5D 46 
0df4f     30 25 1B 11 
0df53     0B 09 07 01 
0df57     F8 F5 F8 FB | 	byte	$60, $63, $5d, $46, $30, $25, $1b, $11, $0b, $09, $07, $01, $f8, $f5, $f8, $fb
0df5b     FA F7 F3 F9 
0df5f     F7 F5 F1 E4 
0df63     D8 CB C3 BC 
0df67     BA BE C9 D5 | 	byte	$fa, $f7, $f3, $f9, $f7, $f5, $f1, $e4, $d8, $cb, $c3, $bc, $ba, $be, $c9, $d5
0df6b     E2 E8 E5 E3 
0df6f     DE D9 DA DE 
0df73     E2 E1 E5 F4 
0df77     07 17 22 2A | 	byte	$e2, $e8, $e5, $e3, $de, $d9, $da, $de, $e2, $e1, $e5, $f4, $07, $17, $22, $2a
0df7b     33 3D 44 3E 
0df7f     31 22 17 13 
0df83     0A 04 FE 01 
0df87     0D 1E 31 39 | 	byte	$33, $3d, $44, $3e, $31, $22, $17, $13, $0a, $04, $fe, $01, $0d, $1e, $31, $39
0df8b     38 37 38 3C 
0df8f     3E 40 3E 33 
0df93     27 1E 18 15 
0df97     13 0B FC F3 | 	byte	$38, $37, $38, $3c, $3e, $40, $3e, $33, $27, $1e, $18, $15, $13, $0b, $fc, $f3
0df9b     EE EE F6 FC 
0df9f     FA F5 F7 F9 
0dfa3     F1 E6 DC D8 
0dfa7     E6 F4 F7 F1 | 	byte	$ee, $ee, $f6, $fc, $fa, $f5, $f7, $f9, $f1, $e6, $dc, $d8, $e6, $f4, $f7, $f1
0dfab     E5 EA F2 FC 
0dfaf     05 0B 0E 0B 
0dfb3     FE F3 EE EF 
0dfb7     EF E3 DD E1 | 	byte	$e5, $ea, $f2, $fc, $05, $0b, $0e, $0b, $fe, $f3, $ee, $ef, $ef, $e3, $dd, $e1
0dfbb     E9 EB E2 E4 
0dfbf     F8 19 30 36 
0dfc3     2F 27 28 2F 
0dfc7     31 24 11 08 | 	byte	$e9, $eb, $e2, $e4, $f8, $19, $30, $36, $2f, $27, $28, $2f, $31, $24, $11, $08
0dfcb     08 0D 0E 08 
0dfcf     08 15 22 21 
0dfd3     13 00 EA E2 
0dfd7     DE CA B4 A6 | 	byte	$08, $0d, $0e, $08, $08, $15, $22, $21, $13, $00, $ea, $e2, $de, $ca, $b4, $a6
0dfdb     A5 B2 BC BA 
0dfdf     AF A9 AB B3 
0dfe3     B3 AA A7 B6 
0dfe7     CD D7 DA DD | 	byte	$a5, $b2, $bc, $ba, $af, $a9, $ab, $b3, $b3, $aa, $a7, $b6, $cd, $d7, $da, $dd
0dfeb     F6 0D 15 13 
0dfef     0B 0F 1C 23 
0dff3     1A 05 EF F1 
0dff7     F6 F6 EE E6 | 	byte	$f6, $0d, $15, $13, $0b, $0f, $1c, $23, $1a, $05, $ef, $f1, $f6, $f6, $ee, $e6
0dffb     E5 E9 EC F0 
0dfff     F9 02 0D 1C 
0e003     28 33 39 38 
0e007     34 2D 27 1F | 	byte	$e5, $e9, $ec, $f0, $f9, $02, $0d, $1c, $28, $33, $39, $38, $34, $2d, $27, $1f
0e00b     14 0C FF FA 
0e00f     02 0B 16 1B 
0e013     1A 11 09 FD 
0e017     ED E1 D4 C8 | 	byte	$14, $0c, $ff, $fa, $02, $0b, $16, $1b, $1a, $11, $09, $fd, $ed, $e1, $d4, $c8
0e01b     C2 BF BE C3 
0e01f     CB D5 DB DA 
0e023     D3 CF D5 DE 
0e027     E7 E7 E7 ED | 	byte	$c2, $bf, $be, $c3, $cb, $d5, $db, $da, $d3, $cf, $d5, $de, $e7, $e7, $e7, $ed
0e02b     F6 FD 06 0F 
0e02f     1D 25 1D 0C 
0e033     F8 EC E8 DE 
0e037     D2 CA CB D9 | 	byte	$f6, $fd, $06, $0f, $1d, $25, $1d, $0c, $f8, $ec, $e8, $de, $d2, $ca, $cb, $d9
0e03b     E8 F4 02 14 
0e03f     2F 47 55 4F 
0e043     44 39 34 2C 
0e047     26 26 26 2C | 	byte	$e8, $f4, $02, $14, $2f, $47, $55, $4f, $44, $39, $34, $2c, $26, $26, $26, $2c
0e04b     30 32 33 36 
0e04f     3B 40 42 3D 
0e053     2E 16 03 FB 
0e057     FA F8 E7 D4 | 	byte	$30, $32, $33, $36, $3b, $40, $42, $3d, $2e, $16, $03, $fb, $fa, $f8, $e7, $d4
0e05b     C7 C5 C3 BD 
0e05f     BE C1 C0 BE 
0e063     C0 C2 CD E7 
0e067     01 15 23 26 | 	byte	$c7, $c5, $c3, $bd, $be, $c1, $c0, $be, $c0, $c2, $cd, $e7, $01, $15, $23, $26
0e06b     1E 17 12 0B 
0e06f     02 FE 00 04 
0e073     04 09 12 1E 
0e077     2A 2C 25 1B | 	byte	$1e, $17, $12, $0b, $02, $fe, $00, $04, $04, $09, $12, $1e, $2a, $2c, $25, $1b
0e07b     1B 2A 3A 42 
0e07f     3C 35 36 3F 
0e083     49 4A 3F 32 
0e087     29 22 1B 14 | 	byte	$1b, $2a, $3a, $42, $3c, $35, $36, $3f, $49, $4a, $3f, $32, $29, $22, $1b, $14
0e08b     0F 15 26 3B 
0e08f     43 47 4D 56 
0e093     57 47 28 05 
0e097     F1 DF C8 AC | 	byte	$0f, $15, $26, $3b, $43, $47, $4d, $56, $57, $47, $28, $05, $f1, $df, $c8, $ac
0e09b     9B 8F 91 9D 
0e09f     A7 AC B2 BF 
0e0a3     CA D3 DC E2 
0e0a7     E0 DF E2 E4 | 	byte	$9b, $8f, $91, $9d, $a7, $ac, $b2, $bf, $ca, $d3, $dc, $e2, $e0, $df, $e2, $e4
0e0ab     E2 DA DC E4 
0e0af     F4 FF FB F7 
0e0b3     00 10 17 16 
0e0b7     10 06 FD FD | 	byte	$e2, $da, $dc, $e4, $f4, $ff, $fb, $f7, $00, $10, $17, $16, $10, $06, $fd, $fd
0e0bb     FB F7 F4 F9 
0e0bf     04 0D 0D 03 
0e0c3     FC 05 17 23 
0e0c7     22 1B 1C 22 | 	byte	$fb, $f7, $f4, $f9, $04, $0d, $0d, $03, $fc, $05, $17, $23, $22, $1b, $1c, $22
0e0cb     2B 34 38 3A 
0e0cf     37 3A 41 40 
0e0d3     34 23 17 0E 
0e0d7     02 EE DD D0 | 	byte	$2b, $34, $38, $3a, $37, $3a, $41, $40, $34, $23, $17, $0e, $02, $ee, $dd, $d0
0e0db     BC A2 92 95 
0e0df     9F A9 BB C4 
0e0e3     CF DD EB F8 
0e0e7     03 FE EF E1 | 	byte	$bc, $a2, $92, $95, $9f, $a9, $bb, $c4, $cf, $dd, $eb, $f8, $03, $fe, $ef, $e1
0e0eb     DA DB D8 CF 
0e0ef     C4 BF CA DC 
0e0f3     EE F5 F6 FB 
0e0f7     08 0F 0F 09 | 	byte	$da, $db, $d8, $cf, $c4, $bf, $ca, $dc, $ee, $f5, $f6, $fb, $08, $0f, $0f, $09
0e0fb     06 09 13 1B 
0e0ff     1A 09 F7 E9 
0e103     ED FA 06 00 
0e107     F6 F2 EF F2 | 	byte	$06, $09, $13, $1b, $1a, $09, $f7, $e9, $ed, $fa, $06, $00, $f6, $f2, $ef, $f2
0e10b     F9 FE FE 00 
0e10f     05 04 03 03 
0e113     FF FB FB FD 
0e117     F7 E2 DB DC | 	byte	$f9, $fe, $fe, $00, $05, $04, $03, $03, $ff, $fb, $fb, $fd, $f7, $e2, $db, $dc
0e11b     E2 F3 FD F5 
0e11f     E3 D6 D0 CD 
0e123     D1 C9 C0 C1 
0e127     CD D7 D8 CF | 	byte	$e2, $f3, $fd, $f5, $e3, $d6, $d0, $cd, $d1, $c9, $c0, $c1, $cd, $d7, $d8, $cf
0e12b     C3 C3 D9 EE 
0e12f     F3 F1 F5 FF 
0e133     12 27 3E 50 
0e137     58 57 55 58 | 	byte	$c3, $c3, $d9, $ee, $f3, $f1, $f5, $ff, $12, $27, $3e, $50, $58, $57, $55, $58
0e13b     58 53 49 44 
0e13f     3E 33 20 0B 
0e143     03 0C 1A 27 
0e147     2F 2F 2E 2B | 	byte	$58, $53, $49, $44, $3e, $33, $20, $0b, $03, $0c, $1a, $27, $2f, $2f, $2e, $2b
0e14b     2B 2B 2D 30 
0e14f     2E 21 11 06 
0e153     06 0E 15 0B 
0e157     F8 ED E4 EA | 	byte	$2b, $2b, $2d, $30, $2e, $21, $11, $06, $06, $0e, $15, $0b, $f8, $ed, $e4, $ea
0e15b     F2 EC D1 C0 
0e15f     C0 CD CE BF 
0e163     AF A4 A9 BD 
0e167     D0 D2 C6 C1 | 	byte	$f2, $ec, $d1, $c0, $c0, $cd, $ce, $bf, $af, $a4, $a9, $bd, $d0, $d2, $c6, $c1
0e16b     CC DD EB F0 
0e16f     F7 02 08 09 
0e173     06 08 15 24 
0e177     2D 2F 34 43 | 	byte	$cc, $dd, $eb, $f0, $f7, $02, $08, $09, $06, $08, $15, $24, $2d, $2f, $34, $43
0e17b     5B 65 65 65 
0e17f     65 65 64 54 
0e183     3B 2C 2F 3C 
0e187     3A 2B 1C 18 | 	byte	$5b, $65, $65, $65, $65, $65, $64, $54, $3b, $2c, $2f, $3c, $3a, $2b, $1c, $18
0e18b     23 37 43 40 
0e18f     35 2E 2D 2B 
0e193     24 18 0C FD 
0e197     EC DE D5 DF | 	byte	$23, $37, $43, $40, $35, $2e, $2d, $2b, $24, $18, $0c, $fd, $ec, $de, $d5, $df
0e19b     EA EF EB E7 
0e19f     E5 E8 ED EC 
0e1a3     E0 D2 CB CF 
0e1a7     D5 D5 C7 B9 | 	byte	$ea, $ef, $eb, $e7, $e5, $e8, $ed, $ec, $e0, $d2, $cb, $cf, $d5, $d5, $c7, $b9
0e1ab     B4 B9 C5 D1 
0e1af     DD E3 E7 E8 
0e1b3     EC F3 FD 05 
0e1b7     07 07 08 0B | 	byte	$b4, $b9, $c5, $d1, $dd, $e3, $e7, $e8, $ec, $f3, $fd, $05, $07, $07, $08, $0b
0e1bb     15 22 24 29 
0e1bf     26 21 17 0E 
0e1c3     09 09 07 05 
0e1c7     05 05 02 02 | 	byte	$15, $22, $24, $29, $26, $21, $17, $0e, $09, $09, $07, $05, $05, $05, $02, $02
0e1cb     FE 05 0F 14 
0e1cf     0D FD EB E4 
0e1d3     E3 E2 D4 BE 
0e1d7     AC B1 CB E5 | 	byte	$fe, $05, $0f, $14, $0d, $fd, $eb, $e4, $e3, $e2, $d4, $be, $ac, $b1, $cb, $e5
0e1db     ED EB EB F5 
0e1df     01 04 F7 E7 
0e1e3     DA D6 D8 D3 
0e1e7     CE CD CD CD | 	byte	$ed, $eb, $eb, $f5, $01, $04, $f7, $e7, $da, $d6, $d8, $d3, $ce, $cd, $cd, $cd
0e1eb     CC C5 BE C0 
0e1ef     CB D6 D9 D6 
0e1f3     D6 DF F3 08 
0e1f7     15 1D 24 38 | 	byte	$cc, $c5, $be, $c0, $cb, $d6, $d9, $d6, $d6, $df, $f3, $08, $15, $1d, $24, $38
0e1fb     50 5E 5E 56 
0e1ff     4E 43 30 23 
0e203     23 29 29 21 
0e207     15 09 05 03 | 	byte	$50, $5e, $5e, $56, $4e, $43, $30, $23, $23, $29, $29, $21, $15, $09, $05, $03
0e20b     02 01 FA F5 
0e20f     F6 F6 EB DD 
0e213     D5 D6 D1 C5 
0e217     C0 CA DD F2 | 	byte	$02, $01, $fa, $f5, $f6, $f6, $eb, $dd, $d5, $d6, $d1, $c5, $c0, $ca, $dd, $f2
0e21b     01 08 0B 0C 
0e21f     0A 03 F7 E2 
0e223     D2 C1 B3 A4 
0e227     92 8A 93 A4 | 	byte	$01, $08, $0b, $0c, $0a, $03, $f7, $e2, $d2, $c1, $b3, $a4, $92, $8a, $93, $a4
0e22b     B2 C4 D1 DF 
0e22f     F2 02 0B 0F 
0e233     0D 07 08 09 
0e237     0A 0C 16 2A | 	byte	$b2, $c4, $d1, $df, $f2, $02, $0b, $0f, $0d, $07, $08, $09, $0a, $0c, $16, $2a
0e23b     3A 40 3B 39 
0e23f     3F 44 42 39 
0e243     32 31 2F 2C 
0e247     2F 39 44 4F | 	byte	$3a, $40, $3b, $39, $3f, $44, $42, $39, $32, $31, $2f, $2c, $2f, $39, $44, $4f
0e24b     55 50 49 42 
0e24f     3C 35 26 0D 
0e253     F1 DC CD C8 
0e257     D1 D7 D8 E4 | 	byte	$55, $50, $49, $42, $3c, $35, $26, $0d, $f1, $dc, $cd, $c8, $d1, $d7, $d8, $e4
0e25b     F1 FC FF FD 
0e25f     FC FC FE FA 
0e263     E7 D1 C3 C2 
0e267     CC D4 D0 CD | 	byte	$f1, $fc, $ff, $fd, $fc, $fc, $fe, $fa, $e7, $d1, $c3, $c2, $cc, $d4, $d0, $cd
0e26b     DF FC 14 1F 
0e26f     22 25 31 3E 
0e273     41 35 24 11 
0e277     07 0C 14 1A | 	byte	$df, $fc, $14, $1f, $22, $25, $31, $3e, $41, $35, $24, $11, $07, $0c, $14, $1a
0e27b     1A 1F 39 5E 
0e27f     65 65 65 65 
0e283     65 65 65 65 
0e287     5E 3E 27 1F | 	byte	$1a, $1f, $39, $5e, $65, $65, $65, $65, $65, $65, $65, $65, $5e, $3e, $27, $1f
0e28b     18 12 0C 03 
0e28f     FC F5 EB DE 
0e293     D1 C5 B9 B0 
0e297     AC B1 C0 CC | 	byte	$18, $12, $0c, $03, $fc, $f5, $eb, $de, $d1, $c5, $b9, $b0, $ac, $b1, $c0, $cc
0e29b     D5 D9 DF E8 
0e29f     EF EF E6 E2 
0e2a3     DF E0 DC CF 
0e2a7     CE D5 DA DC | 	byte	$d5, $d9, $df, $e8, $ef, $ef, $e6, $e2, $df, $e0, $dc, $cf, $ce, $d5, $da, $dc
0e2ab     D7 DD E6 EE 
0e2af     F3 F4 F8 FB 
0e2b3     FD FD F5 EC 
0e2b7     E9 F0 FB FD | 	byte	$d7, $dd, $e6, $ee, $f3, $f4, $f8, $fb, $fd, $fd, $f5, $ec, $e9, $f0, $fb, $fd
0e2bb     F9 FE 0B 1D 
0e2bf     27 26 23 2A 
0e2c3     36 44 4B 42 
0e2c7     34 2B 24 16 | 	byte	$f9, $fe, $0b, $1d, $27, $26, $23, $2a, $36, $44, $4b, $42, $34, $2b, $24, $16
0e2cb     07 FC F4 EF 
0e2cf     E9 E5 E4 E7 
0e2d3     EB EB EF F3 
0e2d7     ED DF DC E5 | 	byte	$07, $fc, $f4, $ef, $e9, $e5, $e4, $e7, $eb, $eb, $ef, $f3, $ed, $df, $dc, $e5
0e2db     EC E5 D6 C9 
0e2df     C4 C7 CF CE 
0e2e3     D2 D5 D6 D2 
0e2e7     CD C3 BC C8 | 	byte	$ec, $e5, $d6, $c9, $c4, $c7, $cf, $ce, $d2, $d5, $d6, $d2, $cd, $c3, $bc, $c8
0e2eb     DA E9 E3 D0 
0e2ef     C9 D7 E6 EE 
0e2f3     EB E2 D9 D6 
0e2f7     D7 E3 E5 E7 | 	byte	$da, $e9, $e3, $d0, $c9, $d7, $e6, $ee, $eb, $e2, $d9, $d6, $d7, $e3, $e5, $e7
0e2fb     F3 01 05 04 
0e2ff     07 11 18 1B 
0e303     19 1E 23 25 
0e307     23 1F 1C 21 | 	byte	$f3, $01, $05, $04, $07, $11, $18, $1b, $19, $1e, $23, $25, $23, $1f, $1c, $21
0e30b     28 2C 27 15 
0e30f     00 EC DF D9 
0e313     D6 D2 D7 DA 
0e317     D3 D9 E8 FA | 	byte	$28, $2c, $27, $15, $00, $ec, $df, $d9, $d6, $d2, $d7, $da, $d3, $d9, $e8, $fa
0e31b     02 FF F4 E5 
0e31f     DF E5 EC ED 
0e323     EA E3 E7 F0 
0e327     F9 F7 F1 F2 | 	byte	$02, $ff, $f4, $e5, $df, $e5, $ec, $ed, $ea, $e3, $e7, $f0, $f9, $f7, $f1, $f2
0e32b     F6 F9 F5 EE 
0e32f     EB ED F3 01 
0e333     07 0A 0C 11 
0e337     1D 24 26 23 | 	byte	$f6, $f9, $f5, $ee, $eb, $ed, $f3, $01, $07, $0a, $0c, $11, $1d, $24, $26, $23
0e33b     21 1F 21 24 
0e33f     26 29 2A 2C 
0e343     32 39 3E 48 
0e347     54 56 4D 3B | 	byte	$21, $1f, $21, $24, $26, $29, $2a, $2c, $32, $39, $3e, $48, $54, $56, $4d, $3b
0e34b     2E 27 24 1C 
0e34f     0B F3 E5 E0 
0e353     DD DD DB CC 
0e357     C7 C7 C8 C9 | 	byte	$2e, $27, $24, $1c, $0b, $f3, $e5, $e0, $dd, $dd, $db, $cc, $c7, $c7, $c8, $c9
0e35b     CA CC C7 C2 
0e35f     C1 BF BC BA 
0e363     B7 B4 B4 B8 
0e367     C0 D1 EE 0A | 	byte	$ca, $cc, $c7, $c2, $c1, $bf, $bc, $ba, $b7, $b4, $b4, $b8, $c0, $d1, $ee, $0a
0e36b     18 1C 27 38 
0e36f     4A 53 51 4D 
0e373     50 57 54 48 
0e377     31 20 26 3F | 	byte	$18, $1c, $27, $38, $4a, $53, $51, $4d, $50, $57, $54, $48, $31, $20, $26, $3f
0e37b     57 5C 4C 41 
0e37f     4D 64 64 64 
0e383     64 64 63 64 
0e387     63 64 64 59 | 	byte	$57, $5c, $4c, $41, $4d, $64, $64, $64, $64, $64, $63, $64, $63, $64, $64, $59
0e38b     4E 43 33 1A 
0e38f     F9 DF D4 D1 
0e393     D3 D6 D7 D7 
0e397     DB DE E0 E6 | 	byte	$4e, $43, $33, $1a, $f9, $df, $d4, $d1, $d3, $d6, $d7, $d7, $db, $de, $e0, $e6
0e39b     F1 F8 F5 F0 
0e39f     EE EA E8 E5 
0e3a3     DE DC DB DA 
0e3a7     DC E5 E8 E7 | 	byte	$f1, $f8, $f5, $f0, $ee, $ea, $e8, $e5, $de, $dc, $db, $da, $dc, $e5, $e8, $e7
0e3ab     E6 E7 E8 DE 
0e3af     DA DD DC D8 
0e3b3     D1 C3 BB B7 
0e3b7     B9 BD C5 CB | 	byte	$e6, $e7, $e8, $de, $da, $dd, $dc, $d8, $d1, $c3, $bb, $b7, $b9, $bd, $c5, $cb
0e3bb     D2 DA E3 EA 
0e3bf     EC F2 FF 0A 
0e3c3     09 03 01 0C 
0e3c7     1B 23 1B 07 | 	byte	$d2, $da, $e3, $ea, $ec, $f2, $ff, $0a, $09, $03, $01, $0c, $1b, $23, $1b, $07
0e3cb     F3 F4 F9 F9 
0e3cf     F4 E6 DA D3 
0e3d3     E2 F3 FE 07 
0e3d7     0A 09 0B 11 | 	byte	$f3, $f4, $f9, $f9, $f4, $e6, $da, $d3, $e2, $f3, $fe, $07, $0a, $09, $0b, $11
0e3db     13 06 EB D8 
0e3df     CD CE D5 D1 
0e3e3     D1 CF D6 E3 
0e3e7     F3 FF FE F9 | 	byte	$13, $06, $eb, $d8, $cd, $ce, $d5, $d1, $d1, $cf, $d6, $e3, $f3, $ff, $fe, $f9
0e3eb     FA 00 FC F4 
0e3ef     EB E6 E8 EF 
0e3f3     EC DC D0 D6 
0e3f7     E6 F8 FC F6 | 	byte	$fa, $00, $fc, $f4, $eb, $e6, $e8, $ef, $ec, $dc, $d0, $d6, $e6, $f8, $fc, $f6
0e3fb     F2 F7 02 0C 
0e3ff     16 1E 20 1C 
0e403     18 16 18 1D 
0e407     1E 1A 0A F7 | 	byte	$f2, $f7, $02, $0c, $16, $1e, $20, $1c, $18, $16, $18, $1d, $1e, $1a, $0a, $f7
0e40b     F1 F5 F6 F0 
0e40f     E7 EC F8 03 
0e413     FE F2 E5 E4 
0e417     E4 DA CF CA | 	byte	$f1, $f5, $f6, $f0, $e7, $ec, $f8, $03, $fe, $f2, $e5, $e4, $e4, $da, $cf, $ca
0e41b     CC D1 D1 D2 
0e41f     CA C5 C0 C0 
0e423     CA D1 C8 C4 
0e427     D1 E3 EE EF | 	byte	$cc, $d1, $d1, $d2, $ca, $c5, $c0, $c0, $ca, $d1, $c8, $c4, $d1, $e3, $ee, $ef
0e42b     EB EF FF 11 
0e42f     1A 11 FB E9 
0e433     E2 E1 EA F3 
0e437     FE 10 23 2D | 	byte	$eb, $ef, $ff, $11, $1a, $11, $fb, $e9, $e2, $e1, $ea, $f3, $fe, $10, $23, $2d
0e43b     31 2F 33 3D 
0e43f     46 48 41 3C 
0e443     3B 3B 37 2F 
0e447     29 2B 32 35 | 	byte	$31, $2f, $33, $3d, $46, $48, $41, $3c, $3b, $3b, $37, $2f, $29, $2b, $32, $35
0e44b     32 2F 2D 2A 
0e44f     27 25 1C 0C 
0e453     FF F9 F6 EC 
0e457     DF CE C5 CD | 	byte	$32, $2f, $2d, $2a, $27, $25, $1c, $0c, $ff, $f9, $f6, $ec, $df, $ce, $c5, $cd
0e45b     D8 DF E1 D9 
0e45f     D4 D4 DC EA 
0e463     F5 F9 01 0B 
0e467     0F 0F 0F 12 | 	byte	$d8, $df, $e1, $d9, $d4, $d4, $dc, $ea, $f5, $f9, $01, $0b, $0f, $0f, $0f, $12
0e46b     16 1E 27 2A 
0e46f     25 1F 1E 28 
0e473     32 35 31 2D 
0e477     36 44 46 3A | 	byte	$16, $1e, $27, $2a, $25, $1f, $1e, $28, $32, $35, $31, $2d, $36, $44, $46, $3a
0e47b     33 37 41 47 
0e47f     46 3F 40 49 
0e483     52 4D 3F 31 
0e487     2B 2E 30 2C | 	byte	$33, $37, $41, $47, $46, $3f, $40, $49, $52, $4d, $3f, $31, $2b, $2e, $30, $2c
0e48b     1F 17 1C 23 
0e48f     23 17 07 FC 
0e493     FE FC E9 D3 
0e497     CB D2 DC E5 | 	byte	$1f, $17, $1c, $23, $23, $17, $07, $fc, $fe, $fc, $e9, $d3, $cb, $d2, $dc, $e5
0e49b     E1 DE E8 F7 
0e49f     02 01 05 07 
0e4a3     04 01 FB F2 
0e4a7     E5 DE DE D9 | 	byte	$e1, $de, $e8, $f7, $02, $01, $05, $07, $04, $01, $fb, $f2, $e5, $de, $de, $d9
0e4ab     CF C7 C6 D2 
0e4af     E6 EA ED E5 
0e4b3     DC D8 DC E1 
0e4b7     E5 E5 E3 E4 | 	byte	$cf, $c7, $c6, $d2, $e6, $ea, $ed, $e5, $dc, $d8, $dc, $e1, $e5, $e5, $e3, $e4
0e4bb     E7 EC F8 05 
0e4bf     10 16 17 11 
0e4c3     06 FF 04 0D 
0e4c7     0E 04 FE 07 | 	byte	$e7, $ec, $f8, $05, $10, $16, $17, $11, $06, $ff, $04, $0d, $0e, $04, $fe, $07
0e4cb     13 17 11 0D 
0e4cf     14 1E 1C 0B 
0e4d3     F9 EC E2 E4 
0e4d7     E9 EB E8 E9 | 	byte	$13, $17, $11, $0d, $14, $1e, $1c, $0b, $f9, $ec, $e2, $e4, $e9, $eb, $e8, $e9
0e4db     ED F1 F4 F3 
0e4df     F0 EE E5 D3 
0e4e3     C5 BE BB B1 
0e4e7     A9 AB B4 BA | 	byte	$ed, $f1, $f4, $f3, $f0, $ee, $e5, $d3, $c5, $be, $bb, $b1, $a9, $ab, $b4, $ba
0e4eb     BE BC BA BD 
0e4ef     C9 D7 DD DA 
0e4f3     D4 D3 DC F3 
0e4f7     02 04 FD F0 | 	byte	$be, $bc, $ba, $bd, $c9, $d7, $dd, $da, $d4, $d3, $dc, $f3, $02, $04, $fd, $f0
0e4fb     EE F5 F8 F3 
0e4ff     E8 E0 E4 ED 
0e503     F1 F3 F4 F8 
0e507     05 16 19 17 | 	byte	$ee, $f5, $f8, $f3, $e8, $e0, $e4, $ed, $f1, $f3, $f4, $f8, $05, $16, $19, $17
0e50b     18 1E 29 35 
0e50f     3B 37 2E 2E 
0e513     34 39 34 25 
0e517     11 01 F6 F4 | 	byte	$18, $1e, $29, $35, $3b, $37, $2e, $2e, $34, $39, $34, $25, $11, $01, $f6, $f4
0e51b     F0 E2 D9 D6 
0e51f     E2 E9 E7 DD 
0e523     E2 F1 FD FB 
0e527     F1 EA EA EB | 	byte	$f0, $e2, $d9, $d6, $e2, $e9, $e7, $dd, $e2, $f1, $fd, $fb, $f1, $ea, $ea, $eb
0e52b     EE F3 F7 F7 
0e52f     FC 00 00 01 
0e533     FF FC FC FB 
0e537     F9 F6 EE E6 | 	byte	$ee, $f3, $f7, $f7, $fc, $00, $00, $01, $ff, $fc, $fc, $fb, $f9, $f6, $ee, $e6
0e53b     E4 F1 FF 0E 
0e53f     18 1C 1A 18 
0e543     1D 25 26 21 
0e547     19 11 10 0F | 	byte	$e4, $f1, $ff, $0e, $18, $1c, $1a, $18, $1d, $25, $26, $21, $19, $11, $10, $0f
0e54b     0B 08 0B 09 
0e54f     02 F8 E6 D9 
0e553     D0 CA C1 BD 
0e557     C2 CD DD E8 | 	byte	$0b, $08, $0b, $09, $02, $f8, $e6, $d9, $d0, $ca, $c1, $bd, $c2, $cd, $dd, $e8
0e55b     EE EC E9 EB 
0e55f     F0 F6 FA FC 
0e563     00 07 0D 15 
0e567     1E 2B 31 31 | 	byte	$ee, $ec, $e9, $eb, $f0, $f6, $fa, $fc, $00, $07, $0d, $15, $1e, $2b, $31, $31
0e56b     2D 2B 2B 29 
0e56f     1F 15 1D 29 
0e573     30 33 3B 4F 
0e577     65 65 65 65 | 	byte	$2d, $2b, $2b, $29, $1f, $15, $1d, $29, $30, $33, $3b, $4f, $65, $65, $65, $65
0e57b     65 65 65 65 
0e57f     65          | 	byte	$65[5]
0e580     46 32 2C 2E 
0e584     30 31 35 3E 
0e588     46 43 35 29 
0e58c     29 30 36 34 | 	byte	$46, $32, $2c, $2e, $30, $31, $35, $3e, $46, $43, $35, $29, $29, $30, $36, $34
0e590     2A 1B 13 14 
0e594     13 07 FD F7 
0e598     FB 01 FA E9 
0e59c     DD DF E6 E7 | 	byte	$2a, $1b, $13, $14, $13, $07, $fd, $f7, $fb, $01, $fa, $e9, $dd, $df, $e6, $e7
0e5a0     E6 DD D5 D3 
0e5a4     D8 D7 CA B9 
0e5a8     A9 A2 9E 9C 
0e5ac     9C A1 A6 A7 | 	byte	$e6, $dd, $d5, $d3, $d8, $d7, $ca, $b9, $a9, $a2, $9e, $9c, $9c, $a1, $a6, $a7
0e5b0     AA B3 C2 CD 
0e5b4     D5 D6 D4 D9 
0e5b8     DD DE E1 E7 
0e5bc     F2 F7 F7 EF | 	byte	$aa, $b3, $c2, $cd, $d5, $d6, $d4, $d9, $dd, $de, $e1, $e7, $f2, $f7, $f7, $ef
0e5c0     E4 E9 F4 F9 
0e5c4     F6 FA 04 0B 
0e5c8     0C 0B 11 23 
0e5cc     36 41 44 3C | 	byte	$e4, $e9, $f4, $f9, $f6, $fa, $04, $0b, $0c, $0b, $11, $23, $36, $41, $44, $3c
0e5d0     30 27 21 1C 
0e5d4     15 07 F1 E2 
0e5d8     DF ED FD 02 
0e5dc     FE F9 F7 F9 | 	byte	$30, $27, $21, $1c, $15, $07, $f1, $e2, $df, $ed, $fd, $02, $fe, $f9, $f7, $f9
0e5e0     F4 E5 D4 CA 
0e5e4     C7 C5 BD B3 
0e5e8     B1 B8 CA DF 
0e5ec     E8 EB E3 EA | 	byte	$f4, $e5, $d4, $ca, $c7, $c5, $bd, $b3, $b1, $b8, $ca, $df, $e8, $eb, $e3, $ea
0e5f0     F8 06 11 0E 
0e5f4     00 F6 F0 EB 
0e5f8     E4 E0 D9 D0 
0e5fc     C6 BD B9 B5 | 	byte	$f8, $06, $11, $0e, $00, $f6, $f0, $eb, $e4, $e0, $d9, $d0, $c6, $bd, $b9, $b5
0e600     B4 BB C8 D2 
0e604     D9 E2 ED F8 
0e608     02 0D 1D 2F 
0e60c     3E 47 46 42 | 	byte	$b4, $bb, $c8, $d2, $d9, $e2, $ed, $f8, $02, $0d, $1d, $2f, $3e, $47, $46, $42
0e610     45 44 3A 2E 
0e614     1E 08 F0 DE 
0e618     D0 CB D1 D3 
0e61c     C6 C0 C8 D9 | 	byte	$45, $44, $3a, $2e, $1e, $08, $f0, $de, $d0, $cb, $d1, $d3, $c6, $c0, $c8, $d9
0e620     EF F5 F3 EA 
0e624     F3 FF 07 0A 
0e628     03 F8 F0 EE 
0e62c     F4 FA FD FC | 	byte	$ef, $f5, $f3, $ea, $f3, $ff, $07, $0a, $03, $f8, $f0, $ee, $f4, $fa, $fd, $fc
0e630     FE 07 10 0B 
0e634     F3 E0 D2 D0 
0e638     E0 EC F0 EC 
0e63c     E1 DE EE 09 | 	byte	$fe, $07, $10, $0b, $f3, $e0, $d2, $d0, $e0, $ec, $f0, $ec, $e1, $de, $ee, $09
0e640     28 3C 44 49 
0e644     47 3E 3A 3D 
0e648     41 42 42 3D 
0e64c     35 29 20 18 | 	byte	$28, $3c, $44, $49, $47, $3e, $3a, $3d, $41, $42, $42, $3d, $35, $29, $20, $18
0e650     11 07 FB F5 
0e654     EA DF D7 DB 
0e658     E6 F6 04 04 
0e65c     FE FB 03 0E | 	byte	$11, $07, $fb, $f5, $ea, $df, $d7, $db, $e6, $f6, $04, $04, $fe, $fb, $03, $0e
0e660     10 06 F8 F0 
0e664     ED F4 FE 07 
0e668     11 1D 23 2B 
0e66c     2F 31 36 3E | 	byte	$10, $06, $f8, $f0, $ed, $f4, $fe, $07, $11, $1d, $23, $2b, $2f, $31, $36, $3e
0e670     43 47 48 44 
0e674     3A 30 29 29 
0e678     30 36 31 26 
0e67c     1E 21 25 26 | 	byte	$43, $47, $48, $44, $3a, $30, $29, $29, $30, $36, $31, $26, $1e, $21, $25, $26
0e680     21 1B 1D 25 
0e684     2A 2A 29 28 
0e688     27 2B 38 48 
0e68c     4F 4D 43 36 | 	byte	$21, $1b, $1d, $25, $2a, $2a, $29, $28, $27, $2b, $38, $48, $4f, $4d, $43, $36
0e690     30 2D 28 22 
0e694     1F 13 01 F5 
0e698     EF ED E7 E5 
0e69c     DE D6 D2 D3 | 	byte	$30, $2d, $28, $22, $1f, $13, $01, $f5, $ef, $ed, $e7, $e5, $de, $d6, $d2, $d3
0e6a0     D3 D3 D6 D0 
0e6a4     C8 C7 CD D8 
0e6a8     E7 EB E5 D0 
0e6ac     C8 D1 D9 D6 | 	byte	$d3, $d3, $d6, $d0, $c8, $c7, $cd, $d8, $e7, $eb, $e5, $d0, $c8, $d1, $d9, $d6
0e6b0     CC C7 D0 E0 
0e6b4     EC EF EC EC 
0e6b8     F5 02 04 F9 
0e6bc     F1 E9 E8 E8 | 	byte	$cc, $c7, $d0, $e0, $ec, $ef, $ec, $ec, $f5, $02, $04, $f9, $f1, $e9, $e8, $e8
0e6c0     E8 E1 E2 E5 
0e6c4     ED F7 01 09 
0e6c8     13 20 31 3A 
0e6cc     38 33 2C 23 | 	byte	$e8, $e1, $e2, $e5, $ed, $f7, $01, $09, $13, $20, $31, $3a, $38, $33, $2c, $23
0e6d0     14 07 FD F9 
0e6d4     FA F6 EA DE 
0e6d8     E3 EB F1 E8 
0e6dc     C9 A7 94 8F | 	byte	$14, $07, $fd, $f9, $fa, $f6, $ea, $de, $e3, $eb, $f1, $e8, $c9, $a7, $94, $8f
0e6e0     8C 87 87 8E 
0e6e4     9B A7 B2 C1 
0e6e8     CC DF F2 FE 
0e6ec     08 00 F6 FB | 	byte	$8c, $87, $87, $8e, $9b, $a7, $b2, $c1, $cc, $df, $f2, $fe, $08, $00, $f6, $fb
0e6f0     0A 0E 06 FC 
0e6f4     F9 00 0A 08 
0e6f8     F9 E5 DC DA 
0e6fc     D5 C8 B7 AB | 	byte	$0a, $0e, $06, $fc, $f9, $00, $0a, $08, $f9, $e5, $dc, $da, $d5, $c8, $b7, $ab
0e700     AC BA C5 C8 
0e704     D4 E8 00 15 
0e708     25 30 3E 51 
0e70c     64 64 64 63 | 	byte	$ac, $ba, $c5, $c8, $d4, $e8, $00, $15, $25, $30, $3e, $51, $64, $64, $64, $63
0e710     56 4E 48 41 
0e714     34 20 0C FB 
0e718     FC 08 0F 02 
0e71c     F2 F0 F1 F4 | 	byte	$56, $4e, $48, $41, $34, $20, $0c, $fb, $fc, $08, $0f, $02, $f2, $f0, $f1, $f4
0e720     F3 EA E6 EE 
0e724     F7 F9 F6 E9 
0e728     E0 ED F4 EF 
0e72c     E1 D4 D0 D5 | 	byte	$f3, $ea, $e6, $ee, $f7, $f9, $f6, $e9, $e0, $ed, $f4, $ef, $e1, $d4, $d0, $d5
0e730     D9 D9 D7 D5 
0e734     D1 D2 D2 DD 
0e738     EA F5 FD 03 
0e73c     02 FE 00 01 | 	byte	$d9, $d9, $d7, $d5, $d1, $d2, $d2, $dd, $ea, $f5, $fd, $03, $02, $fe, $00, $01
0e740     FF F9 F2 EE 
0e744     EF E9 E4 EB 
0e748     FE 1B 34 3E 
0e74c     3B 36 38 3E | 	byte	$ff, $f9, $f2, $ee, $ef, $e9, $e4, $eb, $fe, $1b, $34, $3e, $3b, $36, $38, $3e
0e750     43 3B 25 11 
0e754     08 0A 0C 06 
0e758     02 04 0C 13 
0e75c     14 11 13 17 | 	byte	$43, $3b, $25, $11, $08, $0a, $0c, $06, $02, $04, $0c, $13, $14, $11, $13, $17
0e760     17 12 0E 0B 
0e764     07 08 0C 15 
0e768     27 33 35 30 
0e76c     32 41 55 62 | 	byte	$17, $12, $0e, $0b, $07, $08, $0c, $15, $27, $33, $35, $30, $32, $41, $55, $62
0e770     64 64 64 64 
0e774     64 64       | 	byte	$64[6]
0e776     5D 48 36 2E 
0e77a     30 31 2C 25 
0e77e     24 2B 31 37 
0e782     37 32 2B 28 | 	byte	$5d, $48, $36, $2e, $30, $31, $2c, $25, $24, $2b, $31, $37, $37, $32, $2b, $28
0e786     25 1F 19 17 
0e78a     17 1A 23 24 
0e78e     21 1C 13 08 
0e792     06 03 F7 E6 | 	byte	$25, $1f, $19, $17, $17, $1a, $23, $24, $21, $1c, $13, $08, $06, $03, $f7, $e6
0e796     DB D5 D7 DE 
0e79a     DB D5 CF DD 
0e79e     F1 01 06 03 
0e7a2     FE F7 E6 D9 | 	byte	$db, $d5, $d7, $de, $db, $d5, $cf, $dd, $f1, $01, $06, $03, $fe, $f7, $e6, $d9
0e7a6     CB C3 BC B7 
0e7aa     B1 A7 9C 98 
0e7ae     99 9F AB BE 
0e7b2     D0 DE E5 EC | 	byte	$cb, $c3, $bc, $b7, $b1, $a7, $9c, $98, $99, $9f, $ab, $be, $d0, $de, $e5, $ec
0e7b6     F8 05 0F 1C 
0e7ba     2C 33 29 16 
0e7be     0D 0B 08 F9 
0e7c2     E6 DB DD E5 | 	byte	$f8, $05, $0f, $1c, $2c, $33, $29, $16, $0d, $0b, $08, $f9, $e6, $db, $dd, $e5
0e7c6     F0 FD 06 0B 
0e7ca     13 1E 25 2A 
0e7ce     28 1A 0B FF 
0e7d2     F5 E9 E6 E7 | 	byte	$f0, $fd, $06, $0b, $13, $1e, $25, $2a, $28, $1a, $0b, $ff, $f5, $e9, $e6, $e7
0e7d6     E9 E9 E7 E3 
0e7da     E0 DA D5 D5 
0e7de     D6 D1 C8 B9 
0e7e2     AF B1 BF CB | 	byte	$e9, $e9, $e7, $e3, $e0, $da, $d5, $d5, $d6, $d1, $c8, $b9, $af, $b1, $bf, $cb
0e7e6     D1 D5 DB E7 
0e7ea     F4 F5 EE EA 
0e7ee     F0 F9 FA F6 
0e7f2     F4 F4 F7 F5 | 	byte	$d1, $d5, $db, $e7, $f4, $f5, $ee, $ea, $f0, $f9, $fa, $f6, $f4, $f4, $f7, $f5
0e7f6     EF E1 DC E2 
0e7fa     EB EF E5 D8 
0e7fe     D1 D5 D7 D5 
0e802     D0 CD CF D5 | 	byte	$ef, $e1, $dc, $e2, $eb, $ef, $e5, $d8, $d1, $d5, $d7, $d5, $d0, $cd, $cf, $d5
0e806     E6 F5 FA F8 
0e80a     F8 00 0F 1A 
0e80e     19 18 18 14 
0e812     09 01 03 08 | 	byte	$e6, $f5, $fa, $f8, $f8, $00, $0f, $1a, $19, $18, $18, $14, $09, $01, $03, $08
0e816     06 FC F4 FA 
0e81a     06 14 15 11 
0e81e     14 1B 1E 14 
0e822     06 FF FF 00 | 	byte	$06, $fc, $f4, $fa, $06, $14, $15, $11, $14, $1b, $1e, $14, $06, $ff, $ff, $00
0e826     FF F4 E3 D3 
0e82a     CC C7 BB AE 
0e82e     AB B5 C5 D3 
0e832     DD DD D6 E2 | 	byte	$ff, $f4, $e3, $d3, $cc, $c7, $bb, $ae, $ab, $b5, $c5, $d3, $dd, $dd, $d6, $e2
0e836     ED FE 06 0F 
0e83a     18 22 27 24 
0e83e     19 16 1D 23 
0e842     23 17 05 FD | 	byte	$ed, $fe, $06, $0f, $18, $22, $27, $24, $19, $16, $1d, $23, $23, $17, $05, $fd
0e846     04 10 19 1E 
0e84a     24 2B 35 3D 
0e84e     3E 3B 3C 41 
0e852     3D 35 24 0B | 	byte	$04, $10, $19, $1e, $24, $2b, $35, $3d, $3e, $3b, $3c, $41, $3d, $35, $24, $0b
0e856     F1 E3 DE DB 
0e85a     D9 D8 DB ED 
0e85e     04 11 13 14 
0e862     26 3C 4B 4D | 	byte	$f1, $e3, $de, $db, $d9, $d8, $db, $ed, $04, $11, $13, $14, $26, $3c, $4b, $4d
0e866     47 4B 59 63 
0e86a     63 5E 61 65 
0e86e     65 65 51 35 
0e872     1B 0D 04 FE | 	byte	$47, $4b, $59, $63, $63, $5e, $61, $65, $65, $65, $51, $35, $1b, $0d, $04, $fe
0e876     FB F5 EC DF 
0e87a     E3 F3 04 10 
0e87e     1A 28 30 30 
0e882     27 1E 1B 1C | 	byte	$fb, $f5, $ec, $df, $e3, $f3, $04, $10, $1a, $28, $30, $30, $27, $1e, $1b, $1c
0e886     1E 22 21 1C 
0e88a     19 17 18 1C 
0e88e     20 1F 19 10 
0e892     02 F8 EF E9 | 	byte	$1e, $22, $21, $1c, $19, $17, $18, $1c, $20, $1f, $19, $10, $02, $f8, $ef, $e9
0e896     DD D1 CB C5 
0e89a     C7 DA EB F5 
0e89e     FA 03 12 25 
0e8a2     2E 2D 2A 2B | 	byte	$dd, $d1, $cb, $c5, $c7, $da, $eb, $f5, $fa, $03, $12, $25, $2e, $2d, $2a, $2b
0e8a6     2E 28 16 F8 
0e8aa     D7 C1 BA BC 
0e8ae     BD B9 B7 B9 
0e8b2     C8 D6 DA DA | 	byte	$2e, $28, $16, $f8, $d7, $c1, $ba, $bc, $bd, $b9, $b7, $b9, $c8, $d6, $da, $da
0e8b6     E5 F2 F6 F7 
0e8ba     F2 E6 EA F1 
0e8be     FE 04 01 FA 
0e8c2     F8 FE 04 FE | 	byte	$e5, $f2, $f6, $f7, $f2, $e6, $ea, $f1, $fe, $04, $01, $fa, $f8, $fe, $04, $fe
0e8c6     F4 ED E8 E1 
0e8ca     E3 E8 F1 FE 
0e8ce     11 16 14 0C 
0e8d2     FF EC D5 B3 | 	byte	$f4, $ed, $e8, $e1, $e3, $e8, $f1, $fe, $11, $16, $14, $0c, $ff, $ec, $d5, $b3
0e8d6     91 80 80 80 
0e8da     80 83 92 9C 
0e8de     AE C7 D8 E0 
0e8e2     F7 17 2C 31 | 	byte	$91, $80, $80, $80, $80, $83, $92, $9c, $ae, $c7, $d8, $e0, $f7, $17, $2c, $31
0e8e6     28 1C 1C 26 
0e8ea     31 31 2B 23 
0e8ee     1F 20 17 07 
0e8f2     F5 E8 EB E9 | 	byte	$28, $1c, $1c, $26, $31, $31, $2b, $23, $1f, $20, $17, $07, $f5, $e8, $eb, $e9
0e8f6     DA CF CF E0 
0e8fa     EF F4 EF ED 
0e8fe     EA E7 DB CF 
0e902     C6 C2 C3 C5 | 	byte	$da, $cf, $cf, $e0, $ef, $f4, $ef, $ed, $ea, $e7, $db, $cf, $c6, $c2, $c3, $c5
0e906     CF DF EF FE 
0e90a     0D 1D 31 44 
0e90e     48 42 38 2A 
0e912     18 01 F4 EF | 	byte	$cf, $df, $ef, $fe, $0d, $1d, $31, $44, $48, $42, $38, $2a, $18, $01, $f4, $ef
0e916     ED EB E9 E8 
0e91a     E8 EC F7 04 
0e91e     08 05 FE 01 
0e922     0C 14 15 0A | 	byte	$ed, $eb, $e9, $e8, $e8, $ec, $f7, $04, $08, $05, $fe, $01, $0c, $14, $15, $0a
0e926     FA F0 F0 EB 
0e92a     D9 C9 BF BE 
0e92e     BF BE BB BF 
0e932     CE E1 F4 F9 | 	byte	$fa, $f0, $f0, $eb, $d9, $c9, $bf, $be, $bf, $be, $bb, $bf, $ce, $e1, $f4, $f9
0e936     FB 07 13 16 
0e93a     0C F8 EC ED 
0e93e     F3 F3 EA E4 
0e942     E7 EE F0 F3 | 	byte	$fb, $07, $13, $16, $0c, $f8, $ec, $ed, $f3, $f3, $ea, $e4, $e7, $ee, $f0, $f3
0e946     F9 08 1C 28 
0e94a     2D 35 46 5A 
0e94e     65 65 65 5C 
0e952     48 33 1E 0E | 	byte	$f9, $08, $1c, $28, $2d, $35, $46, $5a, $65, $65, $65, $5c, $48, $33, $1e, $0e
0e956     00 EC DD D5 
0e95a     E2 EF F9 FF 
0e95e     0E 29 47 61 
0e962     64 64 64 64 | 	byte	$00, $ec, $dd, $d5, $e2, $ef, $f9, $ff, $0e, $29, $47, $61, $64, $64, $64, $64
0e966     64 64 64 64 
0e96a     64 64 64    | 	byte	$64[7]
0e96d     62 61 61 53 
0e971     3C 24 17 0F 
0e975     0B 06 FB EB 
0e979     DF D7 D1 CA | 	byte	$62, $61, $61, $53, $3c, $24, $17, $0f, $0b, $06, $fb, $eb, $df, $d7, $d1, $ca
0e97d     C8 C7 C8 D1 
0e981     D6 D5 D1 D5 
0e985     E6 F3 FB 06 
0e989     11 1A 25 2C | 	byte	$c8, $c7, $c8, $d1, $d6, $d5, $d1, $d5, $e6, $f3, $fb, $06, $11, $1a, $25, $2c
0e98d     2E 32 33 2A 
0e991     1D 10 05 FE 
0e995     FF FD F6 F2 
0e999     F7 00 FE FD | 	byte	$2e, $32, $33, $2a, $1d, $10, $05, $fe, $ff, $fd, $f6, $f2, $f7, $00, $fe, $fd
0e99d     FE 01 08 0C 
0e9a1     03 F9 F4 F7 
0e9a5     FD FD F2 E3 
0e9a9     D9 D3 D5 D4 | 	byte	$fe, $01, $08, $0c, $03, $f9, $f4, $f7, $fd, $fd, $f2, $e3, $d9, $d3, $d5, $d4
0e9ad     CF CD D6 E1 
0e9b1     EA F0 FB 0A 
0e9b5     19 22 24 1B 
0e9b9     0E 06 00 F8 | 	byte	$cf, $cd, $d6, $e1, $ea, $f0, $fb, $0a, $19, $22, $24, $1b, $0e, $06, $00, $f8
0e9bd     F2 EA E6 E5 
0e9c1     DC D5 CF CE 
0e9c5     CF D7 E6 EE 
0e9c9     E6 E1 E9 F8 | 	byte	$f2, $ea, $e6, $e5, $dc, $d5, $cf, $ce, $cf, $d7, $e6, $ee, $e6, $e1, $e9, $f8
0e9cd     FD F1 D9 CB 
0e9d1     CA CF CA BB 
0e9d5     A7 9B 9E AC 
0e9d9     BE C6 C2 C7 | 	byte	$fd, $f1, $d9, $cb, $ca, $cf, $ca, $bb, $a7, $9b, $9e, $ac, $be, $c6, $c2, $c7
0e9dd     D9 EF 06 14 
0e9e1     18 1D 27 30 
0e9e5     31 29 1D 15 
0e9e9     13 18 1A 17 | 	byte	$d9, $ef, $06, $14, $18, $1d, $27, $30, $31, $29, $1d, $15, $13, $18, $1a, $17
0e9ed     0E 03 F5 EA 
0e9f1     EB F3 F9 FA 
0e9f5     F6 EF ED EE 
0e9f9     EF E5 DA D8 | 	byte	$0e, $03, $f5, $ea, $eb, $f3, $f9, $fa, $f6, $ef, $ed, $ee, $ef, $e5, $da, $d8
0e9fd     DC E3 DC C8 
0ea01     B5 B4 BF C1 
0ea05     BB B1 B1 BA 
0ea09     CE D7 D8 DA | 	byte	$dc, $e3, $dc, $c8, $b5, $b4, $bf, $c1, $bb, $b1, $b1, $ba, $ce, $d7, $d8, $da
0ea0d     E1 EF FF 0B 
0ea11     0E 0B 09 09 
0ea15     10 1E 28 2D 
0ea19     2D 25 1D 1F | 	byte	$e1, $ef, $ff, $0b, $0e, $0b, $09, $09, $10, $1e, $28, $2d, $2d, $25, $1d, $1f
0ea1d     26 2D 33 3F 
0ea21     44 3B 2A 18 
0ea25     06 F3 E5 CF 
0ea29     C1 B6 AF AD | 	byte	$26, $2d, $33, $3f, $44, $3b, $2a, $18, $06, $f3, $e5, $cf, $c1, $b6, $af, $ad
0ea2d     B0 B3 B9 C8 
0ea31     DB F2 08 16 
0ea35     1A 15 11 09 
0ea39     02 00 06 0C | 	byte	$b0, $b3, $b9, $c8, $db, $f2, $08, $16, $1a, $15, $11, $09, $02, $00, $06, $0c
0ea3d     0D 0E 11 15 
0ea41     17 14 0E 0D 
0ea45     0C 07 01 00 
0ea49     FE F6 F5 03 | 	byte	$0d, $0e, $11, $15, $17, $14, $0e, $0d, $0c, $07, $01, $00, $fe, $f6, $f5, $03
0ea4d     16 1D 1D 20 
0ea51     23 25 21 1A 
0ea55     16 15 18 26 
0ea59     38 43 45 46 | 	byte	$16, $1d, $1d, $20, $23, $25, $21, $1a, $16, $15, $18, $26, $38, $43, $45, $46
0ea5d     53 64 64 63 
0ea61     64 64 64 64 
0ea65     64 64 64 5E 
0ea69     50 44 33 1B | 	byte	$53, $64, $64, $63, $64, $64, $64, $64, $64, $64, $64, $5e, $50, $44, $33, $1b
0ea6d     01 ED EB EC 
0ea71     EA DE D6 D4 
0ea75     DB E4 EA EE 
0ea79     EB E8 EA F4 | 	byte	$01, $ed, $eb, $ec, $ea, $de, $d6, $d4, $db, $e4, $ea, $ee, $eb, $e8, $ea, $f4
0ea7d     01 05 FD E7 
0ea81     D9 E3 F8 04 
0ea85     FF FB 05 16 
0ea89     1D 18 0D 09 | 	byte	$01, $05, $fd, $e7, $d9, $e3, $f8, $04, $ff, $fb, $05, $16, $1d, $18, $0d, $09
0ea8d     0B 0C 07 FA 
0ea91     EF F4 0A 16 
0ea95     14 17 28 3D 
0ea99     4C 47 36 2C | 	byte	$0b, $0c, $07, $fa, $ef, $f4, $0a, $16, $14, $17, $28, $3d, $4c, $47, $36, $2c
0ea9d     2E 34 2F 21 
0eaa1     13 0F 0D 07 
0eaa5     FA F0 E6 EC 
0eaa9     EC E3 D2 C5 | 	byte	$2e, $34, $2f, $21, $13, $0f, $0d, $07, $fa, $f0, $e6, $ec, $ec, $e3, $d2, $c5
0eaad     BC BE C4 C3 
0eab1     BF BB B9 B9 
0eab5     C1 CD D4 D6 
0eab9     DE E5 E7 E9 | 	byte	$bc, $be, $c4, $c3, $bf, $bb, $b9, $b9, $c1, $cd, $d4, $d6, $de, $e5, $e7, $e9
0eabd     EA E3 E1 E3 
0eac1     EB EE E9 D7 
0eac5     CC D0 D6 D7 
0eac9     D2 D2 D6 DC | 	byte	$ea, $e3, $e1, $e3, $eb, $ee, $e9, $d7, $cc, $d0, $d6, $d7, $d2, $d2, $d6, $dc
0eacd     E0 E0 CE BD 
0ead1     B7 BA C2 BB 
0ead5     AD A3 AA BF 
0ead9     D3 E7 F7 0A | 	byte	$e0, $e0, $ce, $bd, $b7, $ba, $c2, $bb, $ad, $a3, $aa, $bf, $d3, $e7, $f7, $0a
0eadd     1F 31 3B 3A 
0eae1     32 27 25 26 
0eae5     26 22 21 24 
0eae9     2E 3C 47 44 | 	byte	$1f, $31, $3b, $3a, $32, $27, $25, $26, $26, $22, $21, $24, $2e, $3c, $47, $44
0eaed     36 2F 2E 2B 
0eaf1     1B FF DE C3 
0eaf5     BA B8 B4 A9 
0eaf9     A6 B3 C4 C5 | 	byte	$36, $2f, $2e, $2b, $1b, $ff, $de, $c3, $ba, $b8, $b4, $a9, $a6, $b3, $c4, $c5
0eafd     B8 B1 BB CD 
0eb01     D4 CA B8 A9 
0eb05     A6 B0 BD C6 
0eb09     D1 DE EE FE | 	byte	$b8, $b1, $bb, $cd, $d4, $ca, $b8, $a9, $a6, $b0, $bd, $c6, $d1, $de, $ee, $fe
0eb0d     0D 17 1B 1D 
0eb11     22 23 22 1A 
0eb15     0E 04 05 0A 
0eb19     12 15 16 18 | 	byte	$0d, $17, $1b, $1d, $22, $23, $22, $1a, $0e, $04, $05, $0a, $12, $15, $16, $18
0eb1d     1C 1F 25 23 
0eb21     17 0A FE F8 
0eb25     F7 FC FB F0 
0eb29     E2 D5 C9 C9 | 	byte	$1c, $1f, $25, $23, $17, $0a, $fe, $f8, $f7, $fc, $fb, $f0, $e2, $d5, $c9, $c9
0eb2d     D6 E9 FB 03 
0eb31     02 F1 E4 DB 
0eb35     D9 DC D8 C8 
0eb39     B9 B3 B8 C2 | 	byte	$d6, $e9, $fb, $03, $02, $f1, $e4, $db, $d9, $dc, $d8, $c8, $b9, $b3, $b8, $c2
0eb3d     CD E2 F7 0D 
0eb41     1A 22 29 30 
0eb45     33 36 38 3A 
0eb49     3B 3D 43 4D | 	byte	$cd, $e2, $f7, $0d, $1a, $22, $29, $30, $33, $36, $38, $3a, $3b, $3d, $43, $4d
0eb4d     5C 65 65 62 
0eb51     64 64 64 64 
0eb55     64 64 54 4A 
0eb59     43 3A 30 28 | 	byte	$5c, $65, $65, $62, $64, $64, $64, $64, $64, $64, $54, $4a, $43, $3a, $30, $28
0eb5d     23 24 2C 39 
0eb61     46 50 54 55 
0eb65     56 53 4B 3C 
0eb69     25 14 0E 12 | 	byte	$23, $24, $2c, $39, $46, $50, $54, $55, $56, $53, $4b, $3c, $25, $14, $0e, $12
0eb6d     13 0E 06 02 
0eb71     FA F5 F2 ED 
0eb75     EC E3 D0 B7 
0eb79     A8 A3 A4 AA | 	byte	$13, $0e, $06, $02, $fa, $f5, $f2, $ed, $ec, $e3, $d0, $b7, $a8, $a3, $a4, $aa
0eb7d     B0 B2 B4 B6 
0eb81     BB C7 D7 E7 
0eb85     EC EC F9 13 
0eb89     23 24 19 0F | 	byte	$b0, $b2, $b4, $b6, $bb, $c7, $d7, $e7, $ec, $ec, $f9, $13, $23, $24, $19, $0f
0eb8d     13 20 2D 2B 
0eb91     24 25 34 45 
0eb95     4B 43 3C 3E 
0eb99     4A 55 51 41 | 	byte	$13, $20, $2d, $2b, $24, $25, $34, $45, $4b, $43, $3c, $3e, $4a, $55, $51, $41
0eb9d     37 36 36 28 
0eba1     13 FC FA F9 
0eba5     F4 E4 D2 CB 
0eba9     D3 DC DE D6 | 	byte	$37, $36, $36, $28, $13, $fc, $fa, $f9, $f4, $e4, $d2, $cb, $d3, $dc, $de, $d6
0ebad     CE C8 C9 CA 
0ebb1     CC D4 D9 E1 
0ebb5     E3 E3 DD DB 
0ebb9     E2 EE FA F8 | 	byte	$ce, $c8, $c9, $ca, $cc, $d4, $d9, $e1, $e3, $e3, $dd, $db, $e2, $ee, $fa, $f8
0ebbd     E6 D6 CB C7 
0ebc1     C6 C4 C2 C5 
0ebc5     C5 C5 C5 CA 
0ebc9     C9 C7 BF B5 | 	byte	$e6, $d6, $cb, $c7, $c6, $c4, $c2, $c5, $c5, $c5, $c5, $ca, $c9, $c7, $bf, $b5
0ebcd     B5 C5 CF D5 
0ebd1     D7 DB E6 F9 
0ebd5     0D 24 32 3D 
0ebd9     43 41 3C 36 | 	byte	$b5, $c5, $cf, $d5, $d7, $db, $e6, $f9, $0d, $24, $32, $3d, $43, $41, $3c, $36
0ebdd     2F 26 19 06 
0ebe1     EF EA EE F4 
0ebe5     F0 E4 DC DB 
0ebe9     DD E3 E5 E5 | 	byte	$2f, $26, $19, $06, $ef, $ea, $ee, $f4, $f0, $e4, $dc, $db, $dd, $e3, $e5, $e5
0ebed     E7 F1 F9 FA 
0ebf1     FB FC FA F8 
0ebf5     F1 E6 DE CE 
0ebf9     C2 BB BA BC | 	byte	$e7, $f1, $f9, $fa, $fb, $fc, $fa, $f8, $f1, $e6, $de, $ce, $c2, $bb, $ba, $bc
0ebfd     BC BC B3 A7 
0ec01     A8 AF B3 B2 
0ec05     B8 C5 D0 D7 
0ec09     D9 E4 ED F8 | 	byte	$bc, $bc, $b3, $a7, $a8, $af, $b3, $b2, $b8, $c5, $d0, $d7, $d9, $e4, $ed, $f8
0ec0d     01 07 14 25 
0ec11     2F 35 3B 46 
0ec15     55 60 64 64 
0ec19     5F 5A 5F 66 | 	byte	$01, $07, $14, $25, $2f, $35, $3b, $46, $55, $60, $64, $64, $5f, $5a, $5f, $66
0ec1d     66 56 3B 24 
0ec21     15 09 F3 D5 
0ec25     BA A5 99 97 
0ec29     9C A0 A6 B1 | 	byte	$66, $56, $3b, $24, $15, $09, $f3, $d5, $ba, $a5, $99, $97, $9c, $a0, $a6, $b1
0ec2d     BE C1 C8 CF 
0ec31     D5 D4 C3 AE 
0ec35     A3 A6 B4 CD 
0ec39     D9 E5 F4 09 | 	byte	$be, $c1, $c8, $cf, $d5, $d4, $c3, $ae, $a3, $a6, $b4, $cd, $d9, $e5, $f4, $09
0ec3d     21 37 42 45 
0ec41     43 42 3D 39 
0ec45     3A 3E 3E 34 
0ec49     2D 30 41 4C | 	byte	$21, $37, $42, $45, $43, $42, $3d, $39, $3a, $3e, $3e, $34, $2d, $30, $41, $4c
0ec4d     4B 45 48 55 
0ec51     62 64 64 62 
0ec55     64 64 64 64 
0ec59     52 4B 52 5D | 	byte	$4b, $45, $48, $55, $62, $64, $64, $62, $64, $64, $64, $64, $52, $4b, $52, $5d
0ec5d     62 54 3E 2F 
0ec61     28 29 2A 27 
0ec65     1D 10 0D 11 
0ec69     13 0C 09 0D | 	byte	$62, $54, $3e, $2f, $28, $29, $2a, $27, $1d, $10, $0d, $11, $13, $0c, $09, $0d
0ec6d     11 13 0A F6 
0ec71     E8 DB D0 C9 
0ec75     BC B4 B4 C3 
0ec79     CF D6 D1 CE | 	byte	$11, $13, $0a, $f6, $e8, $db, $d0, $c9, $bc, $b4, $b4, $c3, $cf, $d6, $d1, $ce
0ec7d     D7 E2 EF F4 
0ec81     F3 F6 04 16 
0ec85     1F 21 1D 19 
0ec89     13 13 14 10 | 	byte	$d7, $e2, $ef, $f4, $f3, $f6, $04, $16, $1f, $21, $1d, $19, $13, $13, $14, $10
0ec8d     0A 0B 0F 0E 
0ec91     06 02 09 1A 
0ec95     2E 39 37 2E 
0ec99     2B 34 47 56 | 	byte	$0a, $0b, $0f, $0e, $06, $02, $09, $1a, $2e, $39, $37, $2e, $2b, $34, $47, $56
0ec9d     5B 5A 56 4D 
0eca1     41 31 23 1B 
0eca5     1B 13 05 F0 
0eca9     E0 D1 C8 C2 | 	byte	$5b, $5a, $56, $4d, $41, $31, $23, $1b, $1b, $13, $05, $f0, $e0, $d1, $c8, $c2
0ecad     BD B4 A4 8D 
0ecb1     80 80 80 83 
0ecb5     89 92 9C A6 
0ecb9     AD BB C6 D2 | 	byte	$bd, $b4, $a4, $8d, $80, $80, $80, $83, $89, $92, $9c, $a6, $ad, $bb, $c6, $d2
0ecbd     DF EB F1 F2 
0ecc1     F1 F1 F3 F3 
0ecc5     F7 FB FC FA 
0ecc9     F8 F0 E8 EE | 	byte	$df, $eb, $f1, $f2, $f1, $f1, $f3, $f3, $f7, $fb, $fc, $fa, $f8, $f0, $e8, $ee
0eccd     FB 07 0E 0E 
0ecd1     0E 16 27 38 
0ecd5     3F 3D 38 31 
0ecd9     28 24 22 20 | 	byte	$fb, $07, $0e, $0e, $0e, $16, $27, $38, $3f, $3d, $38, $31, $28, $24, $22, $20
0ecdd     17 0B FD F7 
0ece1     F3 EE EA EE 
0ece5     F7 FE F9 E9 
0ece9     D9 D3 DE EF | 	byte	$17, $0b, $fd, $f7, $f3, $ee, $ea, $ee, $f7, $fe, $f9, $e9, $d9, $d3, $de, $ef
0eced     F6 EE E1 D3 
0ecf1     D2 D8 D2 C6 
0ecf5     B9 B0 AD B2 
0ecf9     B7 AF A5 A1 | 	byte	$f6, $ee, $e1, $d3, $d2, $d8, $d2, $c6, $b9, $b0, $ad, $b2, $b7, $af, $a5, $a1
0ecfd     A0 A5 AA B1 
0ed01     BF CD D7 D8 
0ed05     DC EA FA 06 
0ed09     0A 0B 10 18 | 	byte	$a0, $a5, $aa, $b1, $bf, $cd, $d7, $d8, $dc, $ea, $fa, $06, $0a, $0b, $10, $18
0ed0d     21 28 30 39 
0ed11     40 43 44 3B 
0ed15     2F 29 24 1E 
0ed19     1B 13 05 F8 | 	byte	$21, $28, $30, $39, $40, $43, $44, $3b, $2f, $29, $24, $1e, $1b, $13, $05, $f8
0ed1d     EA E0 D9 D4 
0ed21     C9 BB B3 B9 
0ed25     C3 C6 C3 C1 
0ed29     C9 DE F6 01 | 	byte	$ea, $e0, $d9, $d4, $c9, $bb, $b3, $b9, $c3, $c6, $c3, $c1, $c9, $de, $f6, $01
0ed2d     FD F8 F2 F4 
0ed31     F5 EC E5 F1 
0ed35     FF 02 FA F4 
0ed39     F8 05 0E 0F | 	byte	$fd, $f8, $f2, $f4, $f5, $ec, $e5, $f1, $ff, $02, $fa, $f4, $f8, $05, $0e, $0f
0ed3d     0C 11 22 32 
0ed41     3A 3E 44 54 
0ed45     64 64 64 64 
0ed49     64 64 64 64 | 	byte	$0c, $11, $22, $32, $3a, $3e, $44, $54, $64, $64, $64, $64, $64, $64, $64, $64
0ed4d     64 64 64 64 
0ed51     64 64 64    | 	byte	$64[7]
0ed54     51 51 5E 65 
0ed58     5B 40 20 0C 
0ed5c     FD EB D2 C4 
0ed60     B8 B4 B5 BC | 	byte	$51, $51, $5e, $65, $5b, $40, $20, $0c, $fd, $eb, $d2, $c4, $b8, $b4, $b5, $bc
0ed64     C8 DC F8 12 
0ed68     1B 1B 1C 1D 
0ed6c     1C 19 0E 01 
0ed70     ED DD CC C7 | 	byte	$c8, $dc, $f8, $12, $1b, $1b, $1c, $1d, $1c, $19, $0e, $01, $ed, $dd, $cc, $c7
0ed74     CE D1 CB CA 
0ed78     CC D4 D3 C9 
0ed7c     BB B3 B5 BA 
0ed80     C1 C2 C4 D3 | 	byte	$ce, $d1, $cb, $ca, $cc, $d4, $d3, $c9, $bb, $b3, $b5, $ba, $c1, $c2, $c4, $d3
0ed84     E4 F4 FD 06 
0ed88     15 20 25 26 
0ed8c     25 24 28 29 
0ed90     2C 32 37 3E | 	byte	$e4, $f4, $fd, $06, $15, $20, $25, $26, $25, $24, $28, $29, $2c, $32, $37, $3e
0ed94     4B 57 63 65 
0ed98     65 64 64 64 
0ed9c     64 51 44 34 
0eda0     1F 0B 01 00 | 	byte	$4b, $57, $63, $65, $65, $64, $64, $64, $64, $51, $44, $34, $1f, $0b, $01, $00
0eda4     01 FF F5 E6 
0eda8     DC D5 CF C7 
0edac     BE B6 B3 B7 
0edb0     B6 AA A1 A1 | 	byte	$01, $ff, $f5, $e6, $dc, $d5, $cf, $c7, $be, $b6, $b3, $b7, $b6, $aa, $a1, $a1
0edb4     A8 AE B2 B1 
0edb8     AD AB B3 BE 
0edbc     C1 C6 C7 CE 
0edc0     D5 D9 DC E3 | 	byte	$a8, $ae, $b2, $b1, $ad, $ab, $b3, $be, $c1, $c6, $c7, $ce, $d5, $d9, $dc, $e3
0edc4     EE F2 EB DF 
0edc8     E5 EE FA 00 
0edcc     03 05 0A 17 
0edd0     2F 42 48 43 | 	byte	$ee, $f2, $eb, $df, $e5, $ee, $fa, $00, $03, $05, $0a, $17, $2f, $42, $48, $43
0edd4     3E 44 4D 50 
0edd8     46 32 1D 08 
0eddc     F4 E8 D6 C7 
0ede0     C2 C3 C2 B7 | 	byte	$3e, $44, $4d, $50, $46, $32, $1d, $08, $f4, $e8, $d6, $c7, $c2, $c3, $c2, $b7
0ede4     A8 99 97 9B 
0ede8     A3 A7 A7 AC 
0edec     B6 C6 D4 DD 
0edf0     E3 ED F9 09 | 	byte	$a8, $99, $97, $9b, $a3, $a7, $a7, $ac, $b6, $c6, $d4, $dd, $e3, $ed, $f9, $09
0edf4     11 0A 07 0C 
0edf8     12 13 0C 03 
0edfc     FE 03 0A 0D 
0ee00     07 FF FF 08 | 	byte	$11, $0a, $07, $0c, $12, $13, $0c, $03, $fe, $03, $0a, $0d, $07, $ff, $ff, $08
0ee04     0D 0B FC EB 
0ee08     E6 EA EE F4 
0ee0c     F8 F9 FE 07 
0ee10     12 17 18 19 | 	byte	$0d, $0b, $fc, $eb, $e6, $ea, $ee, $f4, $f8, $f9, $fe, $07, $12, $17, $18, $19
0ee14     21 29 2A 23 
0ee18     1A 0F 02 FD 
0ee1c     FD FF F9 F3 
0ee20     E7 E2 D4 CA | 	byte	$21, $29, $2a, $23, $1a, $0f, $02, $fd, $fd, $ff, $f9, $f3, $e7, $e2, $d4, $ca
0ee24     C1 B9 AF A3 
0ee28     9B 97 96 98 
0ee2c     A3 BA D0 E0 
0ee30     EB F6 00 0A | 	byte	$c1, $b9, $af, $a3, $9b, $97, $96, $98, $a3, $ba, $d0, $e0, $eb, $f6, $00, $0a
0ee34     18 23 25 1D 
0ee38     17 1C 2A 35 
0ee3c     3E 45 4E 58 
0ee40     61 64 64 64 | 	byte	$18, $23, $25, $1d, $17, $1c, $2a, $35, $3e, $45, $4e, $58, $61, $64, $64, $64
0ee44     64 64 64 64 
0ee48     5C 50 4C 46 
0ee4c     3C 32 2B 2B 
0ee50     2C 2D 32 3A | 	byte	$64, $64, $64, $64, $5c, $50, $4c, $46, $3c, $32, $2b, $2b, $2c, $2d, $32, $3a
0ee54     41 44 47 43 
0ee58     3D 36 2B 1E 
0ee5c     0F 02 FE 04 
0ee60     0B 0A 05 FE | 	byte	$41, $44, $47, $43, $3d, $36, $2b, $1e, $0f, $02, $fe, $04, $0b, $0a, $05, $fe
0ee64     00 0B 13 0F 
0ee68     FE EC E7 E2 
0ee6c     DB D4 C5 BC 
0ee70     C1 D0 D8 D2 | 	byte	$00, $0b, $13, $0f, $fe, $ec, $e7, $e2, $db, $d4, $c5, $bc, $c1, $d0, $d8, $d2
0ee74     CE CD D9 EA 
0ee78     F5 FB F8 F1 
0ee7c     ED EE F1 F1 
0ee80     F2 F9 01 08 | 	byte	$ce, $cd, $d9, $ea, $f5, $fb, $f8, $f1, $ed, $ee, $f1, $f1, $f2, $f9, $01, $08
0ee84     0E 0F 10 12 
0ee88     12 0B FD E9 
0ee8c     D8 CE CF D2 
0ee90     D3 E4 FE 1C | 	byte	$0e, $0f, $10, $12, $12, $0b, $fd, $e9, $d8, $ce, $cf, $d2, $d3, $e4, $fe, $1c
0ee94     32 44 53 5B 
0ee98     5C 5B 55 48 
0ee9c     42 41 3E 38 
0eea0     2C 20 1B 1E | 	byte	$32, $44, $53, $5b, $5c, $5b, $55, $48, $42, $41, $3e, $38, $2c, $20, $1b, $1e
0eea4     1A 07 F0 DD 
0eea8     CA B6 A2 92 
0eeac     84 80 80 81 
0eeb0     8A 92 97 A3 | 	byte	$1a, $07, $f0, $dd, $ca, $b6, $a2, $92, $84, $80, $80, $81, $8a, $92, $97, $a3
0eeb4     B2 C1 CC D5 
0eeb8     DD E5 EB F1 
0eebc     F7 03 12 23 
0eec0     2C 32 34 35 | 	byte	$b2, $c1, $cc, $d5, $dd, $e5, $eb, $f1, $f7, $03, $12, $23, $2c, $32, $34, $35
0eec4     36 38 36 2F 
0eec8     25 1C 1A 1D 
0eecc     1E 1B 14 0C 
0eed0     0A 08 00 F9 | 	byte	$36, $38, $36, $2f, $25, $1c, $1a, $1d, $1e, $1b, $14, $0c, $0a, $08, $00, $f9
0eed4     FB 08 13 10 
0eed8     FF EE E8 F4 
0eedc     FE 02 F7 DF 
0eee0     CA BE C4 CF | 	byte	$fb, $08, $13, $10, $ff, $ee, $e8, $f4, $fe, $02, $f7, $df, $ca, $be, $c4, $cf
0eee4     CB C3 C3 C8 
0eee8     C7 C5 C1 C1 
0eeec     C9 CB BD AD 
0eef0     AA AF B3 B2 | 	byte	$cb, $c3, $c3, $c8, $c7, $c5, $c1, $c1, $c9, $cb, $bd, $ad, $aa, $af, $b3, $b2
0eef4     B3 BB CE E9 
0eef8     01 0C 13 14 
0eefc     17 1B 22 27 
0ef00     25 21 1B 13 | 	byte	$b3, $bb, $ce, $e9, $01, $0c, $13, $14, $17, $1b, $22, $27, $25, $21, $1b, $13
0ef04     07 01 FD FB 
0ef08     F7 EF E3 D9 
0ef0c     D7 E0 E6 E4 
0ef10     D5 CF CD DA | 	byte	$07, $01, $fd, $fb, $f7, $ef, $e3, $d9, $d7, $e0, $e6, $e4, $d5, $cf, $cd, $da
0ef14     E4 E8 E4 E0 
0ef18     D8 D9 E2 F0 
0ef1c     01 12 22 2B 
0ef20     2C 2A 27 21 | 	byte	$e4, $e8, $e4, $e0, $d8, $d9, $e2, $f0, $01, $12, $22, $2b, $2c, $2a, $27, $21
0ef24     17 06 F0 E1 
0ef28     E2 E3 E0 DE 
0ef2c     DD E8 FC 10 
0ef30     1D 23 26 2F | 	byte	$17, $06, $f0, $e1, $e2, $e3, $e0, $de, $dd, $e8, $fc, $10, $1d, $23, $26, $2f
0ef34     3E 47 4C 51 
0ef38     59 5F 66 65 
0ef3c     65 65 65 65 
0ef40     65 65 65 65 | 	byte	$3e, $47, $4c, $51, $59, $5f, $66, $65, $65, $65, $65, $65, $65, $65, $65, $65
0ef44     65 65 65 65 
0ef48     61 4F 3E 37 
0ef4c     31 26 1A 0F 
0ef50     01 EF E2 D9 | 	byte	$65, $65, $65, $65, $61, $4f, $3e, $37, $31, $26, $1a, $0f, $01, $ef, $e2, $d9
0ef54     DC E4 E5 D8 
0ef58     C8 C4 C5 D2 
0ef5c     E1 E8 EB EC 
0ef60     F2 FD 07 0D | 	byte	$dc, $e4, $e5, $d8, $c8, $c4, $c5, $d2, $e1, $e8, $eb, $ec, $f2, $fd, $07, $0d
0ef64     07 FB F6 F8 
0ef68     F6 EB DF D2 
0ef6c     CA CA CA CC 
0ef70     D4 DD E9 F8 | 	byte	$07, $fb, $f6, $f8, $f6, $eb, $df, $d2, $ca, $ca, $ca, $cc, $d4, $dd, $e9, $f8
0ef74     01 03 FF F6 
0ef78     E9 E2 E0 D9 
0ef7c     D6 DB E8 FA 
0ef80     0F 17 18 1D | 	byte	$01, $03, $ff, $f6, $e9, $e2, $e0, $d9, $d6, $db, $e8, $fa, $0f, $17, $18, $1d
0ef84     2B 35 30 24 
0ef88     18 0F 12 1A 
0ef8c     1A 16 16 1D 
0ef90     26 30 32 2F | 	byte	$2b, $35, $30, $24, $18, $0f, $12, $1a, $1a, $16, $16, $1d, $26, $30, $32, $2f
0ef94     2E 37 3D 39 
0ef98     30 2C 31 3D 
0ef9c     49 4B 47 44 
0efa0     3C 30 25 1A | 	byte	$2e, $37, $3d, $39, $30, $2c, $31, $3d, $49, $4b, $47, $44, $3c, $30, $25, $1a
0efa4     07 EB CD B6 
0efa8     A4 9C 94 8C 
0efac     8C 93 9A 9E 
0efb0     A4 A6 AD B9 | 	byte	$07, $eb, $cd, $b6, $a4, $9c, $94, $8c, $8c, $93, $9a, $9e, $a4, $a6, $ad, $b9
0efb4     C8 D0 CA C7 
0efb8     CA D1 D5 D8 
0efbc     DC DF E5 E7 
0efc0     ED FB 0E 1E | 	byte	$c8, $d0, $ca, $c7, $ca, $d1, $d5, $d8, $dc, $df, $e5, $e7, $ed, $fb, $0e, $1e
0efc4     24 21 23 2F 
0efc8     37 37 28 0F 
0efcc     F6 EF ED E7 
0efd0     D6 CB C7 C7 | 	byte	$24, $21, $23, $2f, $37, $37, $28, $0f, $f6, $ef, $ed, $e7, $d6, $cb, $c7, $c7
0efd4     C9 C8 C4 C6 
0efd8     CF D9 DF DD 
0efdc     DF E1 EB EF 
0efe0     ED E7 DF DC | 	byte	$c9, $c8, $c4, $c6, $cf, $d9, $df, $dd, $df, $e1, $eb, $ef, $ed, $e7, $df, $dc
0efe4     D7 D2 CB C3 
0efe8     C3 CB D8 E8 
0efec     F7 00 04 06 
0eff0     0D 19 24 25 | 	byte	$d7, $d2, $cb, $c3, $c3, $cb, $d8, $e8, $f7, $00, $04, $06, $0d, $19, $24, $25
0eff4     19 0C 08 0C 
0eff8     10 0A FE F7 
0effc     00 13 20 23 
0f000     24 23 23 1D | 	byte	$19, $0c, $08, $0c, $10, $0a, $fe, $f7, $00, $13, $20, $23, $24, $23, $23, $1d
0f004     0B FA F1 ED 
0f008     E3 DB D3 CA 
0f00c     C9 CD D3 D6 
0f010     E2 E3 DF DE | 	byte	$0b, $fa, $f1, $ed, $e3, $db, $d3, $ca, $c9, $cd, $d3, $d6, $e2, $e3, $df, $de
0f014     DB D9 D6 DB 
0f018     E0 E3 E8 EE 
0f01c     F8 01 05 01 
0f020     F8 F1 EB E5 | 	byte	$db, $d9, $d6, $db, $e0, $e3, $e8, $ee, $f8, $01, $05, $01, $f8, $f1, $eb, $e5
0f024     D8 CA C3 C7 
0f028     DA E9 EC E3 
0f02c     F1 0B 2B 42 
0f030     4D 4D 51 5D | 	byte	$d8, $ca, $c3, $c7, $da, $e9, $ec, $e3, $f1, $0b, $2b, $42, $4d, $4d, $51, $5d
0f034     65 65 65 55 
0f038     4D 4F 4E 49 
0f03c     46 4C 5E 65 
0f040     65 65 65 65 | 	byte	$65, $65, $65, $55, $4d, $4f, $4e, $49, $46, $4c, $5e, $65, $65, $65, $65, $65
0f044     65 5F 4D 35 
0f048     1F 17 15 15 
0f04c     13 10 11 13 
0f050     19 1D 1B 16 | 	byte	$65, $5f, $4d, $35, $1f, $17, $15, $15, $13, $10, $11, $13, $19, $1d, $1b, $16
0f054     0C 05 FB EE 
0f058     DC D5 D9 DF 
0f05c     E1 DC D6 DE 
0f060     EA F3 FD 0A | 	byte	$0c, $05, $fb, $ee, $dc, $d5, $d9, $df, $e1, $dc, $d6, $de, $ea, $f3, $fd, $0a
0f064     12 0F 05 06 
0f068     0D 11 0B 02 
0f06c     00 07 0D 0B 
0f070     07 08 12 1B | 	byte	$12, $0f, $05, $06, $0d, $11, $0b, $02, $00, $07, $0d, $0b, $07, $08, $12, $1b
0f074     1E 13 FF EA 
0f078     DA D3 D3 D7 
0f07c     DA DC DF E1 
0f080     E3 EA F0 EB | 	byte	$1e, $13, $ff, $ea, $da, $d3, $d3, $d7, $da, $dc, $df, $e1, $e3, $ea, $f0, $eb
0f084     DE D9 DA DD 
0f088     DB D7 D7 E3 
0f08c     F4 04 0F 1A 
0f090     23 26 25 27 | 	byte	$de, $d9, $da, $dd, $db, $d7, $d7, $e3, $f4, $04, $0f, $1a, $23, $26, $25, $27
0f094     2C 32 3A 3A 
0f098     32 2C 2D 33 
0f09c     36 30 27 1F 
0f0a0     1C 13 02 EC | 	byte	$2c, $32, $3a, $3a, $32, $2c, $2d, $33, $36, $30, $27, $1f, $1c, $13, $02, $ec
0f0a4     DD D3 CC C4 
0f0a8     B8 AB A5 A7 
0f0ac     AC AF AE B0 
0f0b0     B7 C7 D6 E2 | 	byte	$dd, $d3, $cc, $c4, $b8, $ab, $a5, $a7, $ac, $af, $ae, $b0, $b7, $c7, $d6, $e2
0f0b4     F4 0A 1F 2F 
0f0b8     37 36 35 3B 
0f0bc     3E 38 2C 20 
0f0c0     19 17 1A 19 | 	byte	$f4, $0a, $1f, $2f, $37, $36, $35, $3b, $3e, $38, $2c, $20, $19, $17, $1a, $19
0f0c4     0B 03 FE FA 
0f0c8     F8 F6 EF E4 
0f0cc     E2 E2 E4 E1 
0f0d0     DF DE E9 EC | 	byte	$0b, $03, $fe, $fa, $f8, $f6, $ef, $e4, $e2, $e2, $e4, $e1, $df, $de, $e9, $ec
0f0d4     E9 E1 DC DA 
0f0d8     D7 D8 DC DC 
0f0dc     D2 C4 B6 B4 
0f0e0     B8 BB B9 B8 | 	byte	$e9, $e1, $dc, $da, $d7, $d8, $dc, $dc, $d2, $c4, $b6, $b4, $b8, $bb, $b9, $b8
0f0e4     B8 B9 B9 BA 
0f0e8     BD C5 D1 DE 
0f0ec     EB F6 00 08 
0f0f0     0E 0E 0F 16 | 	byte	$b8, $b9, $b9, $ba, $bd, $c5, $d1, $de, $eb, $f6, $00, $08, $0e, $0e, $0f, $16
0f0f4     19 15 08 FA 
0f0f8     F3 F4 FB FD 
0f0fc     FB FA FB F5 
0f100     E8 DC D6 D0 | 	byte	$19, $15, $08, $fa, $f3, $f4, $fb, $fd, $fb, $fa, $fb, $f5, $e8, $dc, $d6, $d0
0f104     C9 C3 C1 C2 
0f108     C7 D0 DD EE 
0f10c     F9 F8 EA E3 
0f110     E3 E5 E3 DD | 	byte	$c9, $c3, $c1, $c2, $c7, $d0, $dd, $ee, $f9, $f8, $ea, $e3, $e3, $e5, $e3, $dd
0f114     DA E7 FE 14 
0f118     1F 2B 3B 4A 
0f11c     4F 4A 41 3A 
0f120     35 30 2C 28 | 	byte	$da, $e7, $fe, $14, $1f, $2b, $3b, $4a, $4f, $4a, $41, $3a, $35, $30, $2c, $28
0f124     20 18 15 1C 
0f128     25 28 29 2F 
0f12c     39 3E 47 4E 
0f130     4C 4A 4A 52 | 	byte	$20, $18, $15, $1c, $25, $28, $29, $2f, $39, $3e, $47, $4e, $4c, $4a, $4a, $52
0f134     5E 60 53 48 
0f138     4A 56 5B 55 
0f13c     4D 4E 57 58 
0f140     51 47 39 28 | 	byte	$5e, $60, $53, $48, $4a, $56, $5b, $55, $4d, $4e, $57, $58, $51, $47, $39, $28
0f144     11 FA E3 D9 
0f148     D7 D5 D3 D3 
0f14c     D4 D9 DC DF 
0f150     DE DC E3 EA | 	byte	$11, $fa, $e3, $d9, $d7, $d5, $d3, $d3, $d4, $d9, $dc, $df, $de, $dc, $e3, $ea
0f154     E9 E3 E4 DD 
0f158     D6 D2 D2 D3 
0f15c     D0 D1 D3 DC 
0f160     F0 FB FE FE | 	byte	$e9, $e3, $e4, $dd, $d6, $d2, $d2, $d3, $d0, $d1, $d3, $dc, $f0, $fb, $fe, $fe
0f164     FC FD 03 05 
0f168     00 FB FF 0C 
0f16c     1B 25 27 23 
0f170     23 29 30 2D | 	byte	$fc, $fd, $03, $05, $00, $fb, $ff, $0c, $1b, $25, $27, $23, $23, $29, $30, $2d
0f174     1C 0B FE 02 
0f178     08 02 F8 FB 
0f17c     0A 15 15 0F 
0f180     0B 0D 15 1B | 	byte	$1c, $0b, $fe, $02, $08, $02, $f8, $fb, $0a, $15, $15, $0f, $0b, $0d, $15, $1b
0f184     0E F8 E7 E8 
0f188     F2 FD FD FD 
0f18c     09 1D 25 24 
0f190     22 2A 35 36 | 	byte	$0e, $f8, $e7, $e8, $f2, $fd, $fd, $fd, $09, $1d, $25, $24, $22, $2a, $35, $36
0f194     2E 26 1F 1C 
0f198     1B 1B 17 13 
0f19c     14 16 16 14 
0f1a0     0E 08 06 00 | 	byte	$2e, $26, $1f, $1c, $1b, $1b, $17, $13, $14, $16, $16, $14, $0e, $08, $06, $00
0f1a4     F6 ED E6 E1 
0f1a8     D9 CD C2 BA 
0f1ac     B8 B9 BB B9 
0f1b0     B6 B7 BE C8 | 	byte	$f6, $ed, $e6, $e1, $d9, $cd, $c2, $ba, $b8, $b9, $bb, $b9, $b6, $b7, $be, $c8
0f1b4     D1 D6 DC E4 
0f1b8     F5 01 0A 0F 
0f1bc     12 11 09 FC 
0f1c0     EB E3 E7 EA | 	byte	$d1, $d6, $dc, $e4, $f5, $01, $0a, $0f, $12, $11, $09, $fc, $eb, $e3, $e7, $ea
0f1c4     E4 DB D8 DC 
0f1c8     E6 EC ED E5 
0f1cc     DF DA D4 D8 
0f1d0     DD DF D4 C9 | 	byte	$e4, $db, $d8, $dc, $e6, $ec, $ed, $e5, $df, $da, $d4, $d8, $dd, $df, $d4, $c9
0f1d4     C9 D1 DD EA 
0f1d8     F3 EF EB E9 
0f1dc     E8 E7 E5 E5 
0f1e0     EC F5 FB F9 | 	byte	$c9, $d1, $dd, $ea, $f3, $ef, $eb, $e9, $e8, $e7, $e5, $e5, $ec, $f5, $fb, $f9
0f1e4     F7 FB 04 0E 
0f1e8     15 1A 1A 13 
0f1ec     0B 08 0B 13 
0f1f0     19 19 12 0E | 	byte	$f7, $fb, $04, $0e, $15, $1a, $1a, $13, $0b, $08, $0b, $13, $19, $19, $12, $0e
0f1f4     10 10 0E 0C 
0f1f8     0B 0C 09 03 
0f1fc     FB F3 E7 D9 
0f200     C9 BF B4 A9 | 	byte	$10, $10, $0e, $0c, $0b, $0c, $09, $03, $fb, $f3, $e7, $d9, $c9, $bf, $b4, $a9
0f204     A0 9E A5 AB 
0f208     B3 BA C5 CE 
0f20c     D5 DD E3 E6 
0f210     EB EF F3 F7 | 	byte	$a0, $9e, $a5, $ab, $b3, $ba, $c5, $ce, $d5, $dd, $e3, $e6, $eb, $ef, $f3, $f7
0f214     F8 F7 FC 0C 
0f218     1B 23 26 24 
0f21c     25 2A 34 3B 
0f220     3B 31 26 20 | 	byte	$f8, $f7, $fc, $0c, $1b, $23, $26, $24, $25, $2a, $34, $3b, $3b, $31, $26, $20
0f224     1D 13 03 FA 
0f228     0B 2A 44 52 
0f22c     56 52 57 63 
0f230     65 65 3E 1F | 	byte	$1d, $13, $03, $fa, $0b, $2a, $44, $52, $56, $52, $57, $63, $65, $65, $3e, $1f
0f234     17 1F 28 25 
0f238     1C 18 24 3E 
0f23c     54 5A 52 45 
0f240     3D 36 23 07 | 	byte	$17, $1f, $28, $25, $1c, $18, $24, $3e, $54, $5a, $52, $45, $3d, $36, $23, $07
0f244     EE E5 EA F3 
0f248     00 0C 14 18 
0f24c     24 33 3C 34 
0f250     1F 0C 06 02 | 	byte	$ee, $e5, $ea, $f3, $00, $0c, $14, $18, $24, $33, $3c, $34, $1f, $0c, $06, $02
0f254     F2 D9 C5 BE 
0f258     C5 D1 D5 D2 
0f25c     CF D5 E1 E7 
0f260     E1 DC DC EA | 	byte	$f2, $d9, $c5, $be, $c5, $d1, $d5, $d2, $cf, $d5, $e1, $e7, $e1, $dc, $dc, $ea
0f264     F6 FD FE 06 
0f268     0C 0D 0E 0F 
0f26c     0D 10 17 23 
0f270     25 1B 0C FF | 	byte	$f6, $fd, $fe, $06, $0c, $0d, $0e, $0f, $0d, $10, $17, $23, $25, $1b, $0c, $ff
0f274     F7 F6 F7 F3 
0f278     EF EB E9 E7 
0f27c     E6 EC F3 F4 
0f280     F4 EF EB ED | 	byte	$f7, $f6, $f7, $f3, $ef, $eb, $e9, $e7, $e6, $ec, $f3, $f4, $f4, $ef, $eb, $ed
0f284     F0 E9 D3 C0 
0f288     BC C3 C8 C8 
0f28c     D2 E2 F6 0C 
0f290     1F 30 37 34 | 	byte	$f0, $e9, $d3, $c0, $bc, $c3, $c8, $c8, $d2, $e2, $f6, $0c, $1f, $30, $37, $34
0f294     29 1C 0F 06 
0f298     05 0B 10 11 
0f29c     19 2C 3F 4B 
0f2a0     4F 4F 4A 3E | 	byte	$29, $1c, $0f, $06, $05, $0b, $10, $11, $19, $2c, $3f, $4b, $4f, $4f, $4a, $3e
0f2a4     32 24 11 F7 
0f2a8     E6 DF E0 E1 
0f2ac     E2 E3 EE FE 
0f2b0     07 02 EC E0 | 	byte	$32, $24, $11, $f7, $e6, $df, $e0, $e1, $e2, $e3, $ee, $fe, $07, $02, $ec, $e0
0f2b4     E4 F3 00 03 
0f2b8     FE 00 07 11 
0f2bc     19 14 06 F5 
0f2c0     E1 D7 D2 CB | 	byte	$e4, $f3, $00, $03, $fe, $00, $07, $11, $19, $14, $06, $f5, $e1, $d7, $d2, $cb
0f2c4     C1 B8 B6 BA 
0f2c8     C2 C7 CE DF 
0f2cc     F3 F9 F1 E6 
0f2d0     00 00 00 00 | 	byte	$c1, $b8, $b6, $ba, $c2, $c7, $ce, $df, $f3, $f9, $f1, $e6, $00, $00, $00, $00
0f2d4     00 00 00 00 
      ...             
0f334     00 00 00 00 
0f338     00 00 00 00 | 	byte	$00[104]
0f33c     DD DF E6 F2 
0f340     01 0A 0F 0D 
0f344     09 09 01 F3 
0f348     E2 DC E3 E4 | 	byte	$dd, $df, $e6, $f2, $01, $0a, $0f, $0d, $09, $09, $01, $f3, $e2, $dc, $e3, $e4
0f34c     DD D9 DB E3 
0f350     EC F4 F9 F2 
0f354     E3 D8 D6 D6 
0f358     D5 D1 CE CD | 	byte	$dd, $d9, $db, $e3, $ec, $f4, $f9, $f2, $e3, $d8, $d6, $d6, $d5, $d1, $ce, $cd
0f35c     CD CC D3 DE 
0f360     EC F7 02 09 
0f364     0B 05 FF 01 
0f368     05 FE F2 E3 | 	byte	$cd, $cc, $d3, $de, $ec, $f7, $02, $09, $0b, $05, $ff, $01, $05, $fe, $f2, $e3
0f36c     E0 E7 EB E8 
0f370     E4 E4 E7 EA 
0f374     E5 DA CA C0 
0f378     C3 D0 DA DD | 	byte	$e0, $e7, $eb, $e8, $e4, $e4, $e7, $ea, $e5, $da, $ca, $c0, $c3, $d0, $da, $dd
0f37c     DE E5 F5 03 
0f380     0B 13 19 1C 
0f384     19 0C F5 F5 
0f388     01 0F 14 14 | 	byte	$de, $e5, $f5, $03, $0b, $13, $19, $1c, $19, $0c, $f5, $f5, $01, $0f, $14, $14
0f38c     1E 30 42 4C 
0f390     48 3C 2E 28 
0f394     21 17 06 F3 
0f398     E7 E0 D9 CB | 	byte	$1e, $30, $42, $4c, $48, $3c, $2e, $28, $21, $17, $06, $f3, $e7, $e0, $d9, $cb
0f39c     C3 CD DF E7 
0f3a0     DC C7 BD BE 
0f3a4     CB C9 BD B3 
0f3a8     B7 C8 E5 FB | 	byte	$c3, $cd, $df, $e7, $dc, $c7, $bd, $be, $cb, $c9, $bd, $b3, $b7, $c8, $e5, $fb
0f3ac     FE 02 0D 1E 
0f3b0     23 1B 13 0A 
0f3b4     08 07 0B 0E 
0f3b8     0D 0C 0F 1C | 	byte	$fe, $02, $0d, $1e, $23, $1b, $13, $0a, $08, $07, $0b, $0e, $0d, $0c, $0f, $1c
0f3bc     34 44 49 47 
0f3c0     49 4D 51 51 
0f3c4     45 2F 1C 1C 
0f3c8     2D 38 31 1E | 	byte	$34, $44, $49, $47, $49, $4d, $51, $51, $45, $2f, $1c, $1c, $2d, $38, $31, $1e
0f3cc     14 1C 2C 33 
0f3d0     2E 24 21 25 
0f3d4     2B 2A 1E 10 
0f3d8     06 04 FB E9 | 	byte	$14, $1c, $2c, $33, $2e, $24, $21, $25, $2b, $2a, $1e, $10, $06, $04, $fb, $e9
0f3dc     DC D5 DA E7 
0f3e0     EE ED EA ED 
0f3e4     F4 F3 E7 E9 
0f3e8     EE FA FE F9 | 	byte	$dc, $d5, $da, $e7, $ee, $ed, $ea, $ed, $f4, $f3, $e7, $e9, $ee, $fa, $fe, $f9
0f3ec     E8 DC D9 E7 
0f3f0     FA 09 0C 07 
0f3f4     05 08 09 06 
0f3f8     FF F1 EA E6 | 	byte	$e8, $dc, $d9, $e7, $fa, $09, $0c, $07, $05, $08, $09, $06, $ff, $f1, $ea, $e6
0f3fc     DF D2 C8 C9 
0f400     D3 E0 E7 E5 
0f404     E1 DF EE FF 
0f408     0B 0F 0F 12 | 	byte	$df, $d2, $c8, $c9, $d3, $e0, $e7, $e5, $e1, $df, $ee, $ff, $0b, $0f, $0f, $12
0f40c     1B 2A 38 44 
0f410     4D 55 5A 58 
0f414     52 4C 4D 4C 
0f418     4B 49 42 35 | 	byte	$1b, $2a, $38, $44, $4d, $55, $5a, $58, $52, $4c, $4d, $4c, $4b, $49, $42, $35
0f41c     24 18 10 07 
0f420     F4 D6 C6 C8 
0f424     D2 DC E5 E7 
0f428     F2 07 1A 1F | 	byte	$24, $18, $10, $07, $f4, $d6, $c6, $c8, $d2, $dc, $e5, $e7, $f2, $07, $1a, $1f
0f42c     1E 19 19 1A 
0f430     15 09 F3 EC 
0f434     EF F5 F4 F3 
0f438     EF EE F9 05 | 	byte	$1e, $19, $19, $1a, $15, $09, $f3, $ec, $ef, $f5, $f4, $f3, $ef, $ee, $f9, $05
0f43c     09 03 FB F5 
0f440     EB E3 D4 C9 
0f444     C4 C3 C7 D4 
0f448     E4 FC 13 1E | 	byte	$09, $03, $fb, $f5, $eb, $e3, $d4, $c9, $c4, $c3, $c7, $d4, $e4, $fc, $13, $1e
0f44c     1D 14 0E 0C 
0f450     03 F6 E4 DF 
0f454     E7 F3 F5 E9 
0f458     E5 E3 E3 E3 | 	byte	$1d, $14, $0e, $0c, $03, $f6, $e4, $df, $e7, $f3, $f5, $e9, $e5, $e3, $e3, $e3
0f45c     DF D7 D5 CD 
0f460     C9 C4 C1 C4 
0f464     CF D6 D5 C5 
0f468     BB BD BE B7 | 	byte	$df, $d7, $d5, $cd, $c9, $c4, $c1, $c4, $cf, $d6, $d5, $c5, $bb, $bd, $be, $b7
0f46c     AD A9 AC B9 
0f470     C9 CD CA C8 
0f474     D1 D6 D5 CE 
0f478     CA CB D3 D8 | 	byte	$ad, $a9, $ac, $b9, $c9, $cd, $ca, $c8, $d1, $d6, $d5, $ce, $ca, $cb, $d3, $d8
0f47c     E5 F6 07 11 
0f480     16 1B 22 26 
0f484     23 1E 18 15 
0f488     1B 22 28 2C | 	byte	$e5, $f6, $07, $11, $16, $1b, $22, $26, $23, $1e, $18, $15, $1b, $22, $28, $2c
0f48c     2C 2A 2D 38 
0f490     37 2D 22 22 
0f494     26 23 0F FE 
0f498     F4 F2 F7 F8 | 	byte	$2c, $2a, $2d, $38, $37, $2d, $22, $22, $26, $23, $0f, $fe, $f4, $f2, $f7, $f8
0f49c     F2 E3 E0 E6 
0f4a0     E4 DA D1 CB 
0f4a4     C7 C8 C9 D1 
0f4a8     DD EB F1 F7 | 	byte	$f2, $e3, $e0, $e6, $e4, $da, $d1, $cb, $c7, $c8, $c9, $d1, $dd, $eb, $f1, $f7
0f4ac     FA FC FD 02 
0f4b0     0E 1A 1F 1D 
0f4b4     1B 16 18 1F 
0f4b8     2D 43 58 5F | 	byte	$fa, $fc, $fd, $02, $0e, $1a, $1f, $1d, $1b, $16, $18, $1f, $2d, $43, $58, $5f
0f4bc     61 5F 5A 4D 
0f4c0     3E 36 31 2D 
0f4c4     27 25 21 21 
0f4c8     28 33 3E 3E | 	byte	$61, $5f, $5a, $4d, $3e, $36, $31, $2d, $27, $25, $21, $21, $28, $33, $3e, $3e
0f4cc     34 2C 29 29 
0f4d0     24 19 0E 06 
0f4d4     FF F3 EB E8 
0f4d8     E7 EB E4 C8 | 	byte	$34, $2c, $29, $29, $24, $19, $0e, $06, $ff, $f3, $eb, $e8, $e7, $eb, $e4, $c8
0f4dc     B2 B2 C5 D4 
0f4e0     D4 C3 BF CE 
0f4e4     E9 FD 03 FF 
0f4e8     F9 F9 06 14 | 	byte	$b2, $b2, $c5, $d4, $d4, $c3, $bf, $ce, $e9, $fd, $03, $ff, $f9, $f9, $06, $14
0f4ec     12 04 F8 F9 
0f4f0     FE FF F8 E9 
0f4f4     E3 E3 ED F6 
0f4f8     FB FA FB 0A | 	byte	$12, $04, $f8, $f9, $fe, $ff, $f8, $e9, $e3, $e3, $ed, $f6, $fb, $fa, $fb, $0a
0f4fc     1C 23 21 1A 
0f500     17 15 19 25 
0f504     31 34 2C 21 
0f508     20 32 4A 54 | 	byte	$1c, $23, $21, $1a, $17, $15, $19, $25, $31, $34, $2c, $21, $20, $32, $4a, $54
0f50c     4F 4A 47 42 
0f510     3D 32 22 1D 
0f514     1F 20 1C 12 
0f518     0A 06 06 0B | 	byte	$4f, $4a, $47, $42, $3d, $32, $22, $1d, $1f, $20, $1c, $12, $0a, $06, $06, $0b
0f51c     0F 0E 08 03 
0f520     FE 01 06 08 
0f524     06 06 0D 1B 
0f528     28 32 35 2F | 	byte	$0f, $0e, $08, $03, $fe, $01, $06, $08, $06, $06, $0d, $1b, $28, $32, $35, $2f
0f52c     28 22 1C 12 
0f530     06 F1 E4 D6 
0f534     CB C9 CB D2 
0f538     D5 D6 D3 D0 | 	byte	$28, $22, $1c, $12, $06, $f1, $e4, $d6, $cb, $c9, $cb, $d2, $d5, $d6, $d3, $d0
0f53c     CD C3 BA B3 
0f540     AB AC BE CB 
0f544     D2 CD D4 E3 
0f548     F9 0C 11 08 | 	byte	$cd, $c3, $ba, $b3, $ab, $ac, $be, $cb, $d2, $cd, $d4, $e3, $f9, $0c, $11, $08
0f54c     05 08 0B 0A 
0f550     FF F4 F4 02 
0f554     08 01 EC D9 
0f558     D0 C9 BE B1 | 	byte	$05, $08, $0b, $0a, $ff, $f4, $f4, $02, $08, $01, $ec, $d9, $d0, $c9, $be, $b1
0f55c     A5 A6 B7 C0 
0f560     CA CE CF DB 
0f564     F3 0D 1C 1D 
0f568     11 FD ED E8 | 	byte	$a5, $a6, $b7, $c0, $ca, $ce, $cf, $db, $f3, $0d, $1c, $1d, $11, $fd, $ed, $e8
0f56c     E9 E9 E3 D8 
0f570     D0 CA C6 C4 
0f574     C3 C3 C8 D7 
0f578     E7 EA E2 E6 | 	byte	$e9, $e9, $e3, $d8, $d0, $ca, $c6, $c4, $c3, $c3, $c8, $d7, $e7, $ea, $e2, $e6
0f57c     EC 03 1A 24 
0f580     20 18 19 1F 
0f584     29 2F 30 32 
0f588     3D 48 45 3E | 	byte	$ec, $03, $1a, $24, $20, $18, $19, $1f, $29, $2f, $30, $32, $3d, $48, $45, $3e
0f58c     30 29 25 1E 
0f590     11 0B 10 14 
0f594     09 F1 DB CF 
0f598     CE CE CB C3 | 	byte	$30, $29, $25, $1e, $11, $0b, $10, $14, $09, $f1, $db, $cf, $ce, $ce, $cb, $c3
0f59c     C5 CE D5 D3 
0f5a0     D3 C6 C2 C7 
0f5a4     CF D2 D2 D7 
0f5a8     DC E1 E2 E3 | 	byte	$c5, $ce, $d5, $d3, $d3, $c6, $c2, $c7, $cf, $d2, $d2, $d7, $dc, $e1, $e2, $e3
0f5ac     E9 F4 01 02 
0f5b0     F9 F2 F3 FC 
0f5b4     06 12 21 32 
0f5b8     42 4E 53 48 | 	byte	$e9, $f4, $01, $02, $f9, $f2, $f3, $fc, $06, $12, $21, $32, $42, $4e, $53, $48
0f5bc     36 2F 2F 2E 
0f5c0     29 1D 11 12 
0f5c4     20 31 3B 40 
0f5c8     40 3A 3B 49 | 	byte	$36, $2f, $2f, $2e, $29, $1d, $11, $12, $20, $31, $3b, $40, $40, $3a, $3b, $49
0f5cc     56 5E 5B 51 
0f5d0     4D 56 5E 59 
0f5d4     4A 3A 28 17 
0f5d8     07 F2 E1 D3 | 	byte	$56, $5e, $5b, $51, $4d, $56, $5e, $59, $4a, $3a, $28, $17, $07, $f2, $e1, $d3
0f5dc     CC C5 BD B5 
0f5e0     B6 C6 DC EF 
0f5e4     FF 10 19 18 
0f5e8     0F 0C 11 18 | 	byte	$cc, $c5, $bd, $b5, $b6, $c6, $dc, $ef, $ff, $10, $19, $18, $0f, $0c, $11, $18
0f5ec     14 FE DE C6 
0f5f0     C1 D3 F1 08 
0f5f4     0C 04 FF 05 
0f5f8     10 1B 1F 1E | 	byte	$14, $fe, $de, $c6, $c1, $d3, $f1, $08, $0c, $04, $ff, $05, $10, $1b, $1f, $1e
0f5fc     1B 11 06 FB 
0f600     F8 FA 01 0D 
0f604     18 25 2F 39 
0f608     3C 33 27 1F | 	byte	$1b, $11, $06, $fb, $f8, $fa, $01, $0d, $18, $25, $2f, $39, $3c, $33, $27, $1f
0f60c     1E 1B 11 02 
0f610     04 12 19 13 
0f614     09 FB F0 EF 
0f618     F1 F5 F6 FA | 	byte	$1e, $1b, $11, $02, $04, $12, $19, $13, $09, $fb, $f0, $ef, $f1, $f5, $f6, $fa
0f61c     03 06 01 FD 
0f620     FE 0A 19 23 
0f624     22 1E 1B 1E 
0f628     25 24 1D 13 | 	byte	$03, $06, $01, $fd, $fe, $0a, $19, $23, $22, $1e, $1b, $1e, $25, $24, $1d, $13
0f62c     07 FE F7 E8 
0f630     D3 C9 CE D9 
0f634     E2 E4 DE E5 
0f638     F0 FF 07 00 | 	byte	$07, $fe, $f7, $e8, $d3, $c9, $ce, $d9, $e2, $e4, $de, $e5, $f0, $ff, $07, $00
0f63c     F7 F1 F7 F6 
0f640     E8 D7 D1 D8 
0f644     E6 F7 06 11 
0f648     14 15 18 1F | 	byte	$f7, $f1, $f7, $f6, $e8, $d7, $d1, $d8, $e6, $f7, $06, $11, $14, $15, $18, $1f
0f64c     1C 0F 08 0D 
0f650     16 13 09 FC 
0f654     EE E0 D7 CE 
0f658     C7 C2 C7 D1 | 	byte	$1c, $0f, $08, $0d, $16, $13, $09, $fc, $ee, $e0, $d7, $ce, $c7, $c2, $c7, $d1
0f65c     D7 D2 C2 B7 
0f660     BC D1 E5 EC 
0f664     F0 F2 EF ED 
0f668     EC EA E1 E1 | 	byte	$d7, $d2, $c2, $b7, $bc, $d1, $e5, $ec, $f0, $f2, $ef, $ed, $ec, $ea, $e1, $e1
0f66c     D7 C6 B2 A2 
0f670     A8 B9 C7 C2 
0f674     B6 B0 B5 C3 
0f678     CC CC CD D2 | 	byte	$d7, $c6, $b2, $a2, $a8, $b9, $c7, $c2, $b6, $b0, $b5, $c3, $cc, $cc, $cd, $d2
0f67c     DC EA F8 FC 
0f680     FA 07 1D 2D 
0f684     32 2F 2D 31 
0f688     32 2F 27 1F | 	byte	$dc, $ea, $f8, $fc, $fa, $07, $1d, $2d, $32, $2f, $2d, $31, $32, $2f, $27, $1f
0f68c     17 0F 0E 0C 
0f690     05 FB EC DE 
0f694     CB BB B2 AA 
0f698     A9 AE BC D8 | 	byte	$17, $0f, $0e, $0c, $05, $fb, $ec, $de, $cb, $bb, $b2, $aa, $a9, $ae, $bc, $d8
0f69c     F4 03 FF F8 
0f6a0     FC 0B 1B 26 
0f6a4     24 13 05 01 
0f6a8     03 04 04 03 | 	byte	$f4, $03, $ff, $f8, $fc, $0b, $1b, $26, $24, $13, $05, $01, $03, $04, $04, $03
0f6ac     04 06 0E 15 
0f6b0     16 12 12 1B 
0f6b4     24 2A 2B 2A 
0f6b8     2D 35 39 33 | 	byte	$04, $06, $0e, $15, $16, $12, $12, $1b, $24, $2a, $2b, $2a, $2d, $35, $39, $33
0f6bc     2B 23 19 0D 
0f6c0     0B 0F 12 1F 
0f6c4     31 3F 3E 46 
0f6c8     53 5D 62 5D | 	byte	$2b, $23, $19, $0d, $0b, $0f, $12, $1f, $31, $3f, $3e, $46, $53, $5d, $62, $5d
0f6cc     4F 44 3F 3F 
0f6d0     46 50 52 4A 
0f6d4     3D 34 26 10 
0f6d8     F5 E2 D4 C4 | 	byte	$4f, $44, $3f, $3f, $46, $50, $52, $4a, $3d, $34, $26, $10, $f5, $e2, $d4, $c4
0f6dc     B6 A8 9E A1 
0f6e0     AC C2 DC F0 
0f6e4     F3 E7 D8 CE 
0f6e8     CE E2 EF F4 | 	byte	$b6, $a8, $9e, $a1, $ac, $c2, $dc, $f0, $f3, $e7, $d8, $ce, $ce, $e2, $ef, $f4
0f6ec     E9 D5 D1 E5 
0f6f0     F7 05 09 07 
0f6f4     05 FB F4 F0 
0f6f8     ED E9 DD D3 | 	byte	$e9, $d5, $d1, $e5, $f7, $05, $09, $07, $05, $fb, $f4, $f0, $ed, $e9, $dd, $d3
0f6fc     CC C6 C6 D7 
0f700     F5 12 22 2E 
0f704     30 31 37 3F 
0f708     4A 5A 65 65 | 	byte	$cc, $c6, $c6, $d7, $f5, $12, $22, $2e, $30, $31, $37, $3f, $4a, $5a, $65, $65
0f70c     52 4A 4E 52 
0f710     52 45 2F 17 
0f714     11 12 0F 0E 
0f718     12 1C 29 2D | 	byte	$52, $4a, $4e, $52, $52, $45, $2f, $17, $11, $12, $0f, $0e, $12, $1c, $29, $2d
0f71c     24 1B 1B 1E 
0f720     1C 15 0D 08 
0f724     0C 19 27 21 
0f728     0A F8 FB FB | 	byte	$24, $1b, $1b, $1e, $1c, $15, $0d, $08, $0c, $19, $27, $21, $0a, $f8, $fb, $fb
0f72c     F2 D5 BF B2 
0f730     B0 B2 B6 B7 
0f734     BD D0 EA 01 
0f738     04 FB F3 EE | 	byte	$f2, $d5, $bf, $b2, $b0, $b2, $b6, $b7, $bd, $d0, $ea, $01, $04, $fb, $f3, $ee
0f73c     EF EE E4 E3 
0f740     DC D9 DA E7 
0f744     FA 09 0D 07 
0f748     FA EB E0 D7 | 	byte	$ef, $ee, $e4, $e3, $dc, $d9, $da, $e7, $fa, $09, $0d, $07, $fa, $eb, $e0, $d7
0f74c     D6 DA E0 E7 
0f750     ED EC E5 E2 
0f754     E7 F4 FD FD 
0f758     EE DA C8 BE | 	byte	$d6, $da, $e0, $e7, $ed, $ec, $e5, $e2, $e7, $f4, $fd, $fd, $ee, $da, $c8, $be
0f75c     C1 C9 C7 C3 
0f760     C6 C9 D2 CF 
0f764     C7 BC B3 AC 
0f768     AD B0 B6 B9 | 	byte	$c1, $c9, $c7, $c3, $c6, $c9, $d2, $cf, $c7, $bc, $b3, $ac, $ad, $b0, $b6, $b9
0f76c     BA BC C3 CB 
0f770     D5 DC E5 EF 
0f774     F4 F2 EE F1 
0f778     F6 00 12 27 | 	byte	$ba, $bc, $c3, $cb, $d5, $dc, $e5, $ef, $f4, $f2, $ee, $f1, $f6, $00, $12, $27
0f77c     3F 4D 4E 46 
0f780     3C 38 3B 44 
0f784     4C 49 42 39 
0f788     30 20 17 15 | 	byte	$3f, $4d, $4e, $46, $3c, $38, $3b, $44, $4c, $49, $42, $39, $30, $20, $17, $15
0f78c     11 06 FD F2 
0f790     E2 D7 CF CD 
0f794     CD CC D5 D9 
0f798     E2 E5 E5 E6 | 	byte	$11, $06, $fd, $f2, $e2, $d7, $cf, $cd, $cd, $cc, $d5, $d9, $e2, $e5, $e5, $e6
0f79c     E8 E2 D9 D3 
0f7a0     D7 E5 F2 F9 
0f7a4     F7 F7 FD 08 
0f7a8     12 16 11 08 | 	byte	$e8, $e2, $d9, $d3, $d7, $e5, $f2, $f9, $f7, $f7, $fd, $08, $12, $16, $11, $08
0f7ac     01 02 05 03 
0f7b0     FC FE 04 02 
0f7b4     F7 EB EB EE 
0f7b8     F9 00 01 04 | 	byte	$01, $02, $05, $03, $fc, $fe, $04, $02, $f7, $eb, $eb, $ee, $f9, $00, $01, $04
0f7bc     0D 20 31 3C 
0f7c0     40 45 4D 54 
0f7c4     52 4A 3F 3A 
0f7c8     37 34 39 41 | 	byte	$0d, $20, $31, $3c, $40, $45, $4d, $54, $52, $4a, $3f, $3a, $37, $34, $39, $41
0f7cc     4A 4F 52 54 
0f7d0     56 4F 3E 2D 
0f7d4     23 1A 08 F6 
0f7d8     E7 D7 D2 CF | 	byte	$4a, $4f, $52, $54, $56, $4f, $3e, $2d, $23, $1a, $08, $f6, $e7, $d7, $d2, $cf
0f7dc     D6 E3 F7 0C 
0f7e0     15 10 06 FF 
0f7e4     02 0D 0F 0B 
0f7e8     09 09 05 03 | 	byte	$d6, $e3, $f7, $0c, $15, $10, $06, $ff, $02, $0d, $0f, $0b, $09, $09, $05, $03
0f7ec     0C 17 1D 1E 
0f7f0     17 0F 04 F2 
0f7f4     E7 DF E0 E9 
0f7f8     E2 D6 D0 D6 | 	byte	$0c, $17, $1d, $1e, $17, $0f, $04, $f2, $e7, $df, $e0, $e9, $e2, $d6, $d0, $d6
0f7fc     E4 FE 13 21 
0f800     29 2F 3C 4C 
0f804     58 5D 59 4F 
0f808     3F 2E 20 15 | 	byte	$e4, $fe, $13, $21, $29, $2f, $3c, $4c, $58, $5d, $59, $4f, $3f, $2e, $20, $15
0f80c     12 0E 07 01 
0f810     03 06 10 1D 
0f814     2D 3C 42 34 
0f818     19 02 FA F2 | 	byte	$12, $0e, $07, $01, $03, $06, $10, $1d, $2d, $3c, $42, $34, $19, $02, $fa, $f2
0f81c     EB DE D5 D0 
0f820     CE D9 EB 00 
0f824     0F 0E 01 F2 
0f828     F6 F2 E2 CD | 	byte	$eb, $de, $d5, $d0, $ce, $d9, $eb, $00, $0f, $0e, $01, $f2, $f6, $f2, $e2, $cd
0f82c     BA A7 9D 9F 
0f830     A5 AE BF CC 
0f834     D3 D2 DC E6 
0f838     EE F4 F2 E9 | 	byte	$ba, $a7, $9d, $9f, $a5, $ae, $bf, $cc, $d3, $d2, $dc, $e6, $ee, $f4, $f2, $e9
0f83c     E4 EA E7 E6 
0f840     E8 F6 09 18 
0f844     21 1E 11 03 
0f848     FC 03 10 16 | 	byte	$e4, $ea, $e7, $e6, $e8, $f6, $09, $18, $21, $1e, $11, $03, $fc, $03, $10, $16
0f84c     15 12 18 1F 
0f850     1C 1B 1F 2E 
0f854     38 35 2D 1D 
0f858     0E 03 F7 E5 | 	byte	$15, $12, $18, $1f, $1c, $1b, $1f, $2e, $38, $35, $2d, $1d, $0e, $03, $f7, $e5
0f85c     D0 C2 BE B7 
0f860     A7 9A 9A A4 
0f864     AD AE AB B2 
0f868     B8 BE C0 BF | 	byte	$d0, $c2, $be, $b7, $a7, $9a, $9a, $a4, $ad, $ae, $ab, $b2, $b8, $be, $c0, $bf
0f86c     BE BF C3 CE 
0f870     DB E4 E2 E0 
0f874     E1 E8 F8 07 
0f878     0E 1B 25 2C | 	byte	$be, $bf, $c3, $ce, $db, $e4, $e2, $e0, $e1, $e8, $f8, $07, $0e, $1b, $25, $2c
0f87c     2F 33 30 2F 
0f880     34 39 31 29 
0f884     22 19 0F 06 
0f888     FD F4 E7 DD | 	byte	$2f, $33, $30, $2f, $34, $39, $31, $29, $22, $19, $0f, $06, $fd, $f4, $e7, $dd
0f88c     DA DB DD D4 
0f890     C5 BA BE C8 
0f894     C6 BB B0 AC 
0f898     B8 CB D3 C6 | 	byte	$da, $db, $dd, $d4, $c5, $ba, $be, $c8, $c6, $bb, $b0, $ac, $b8, $cb, $d3, $c6
0f89c     C0 C0 C9 C9 
0f8a0     C8 CA D8 E9 
0f8a4     FB 0C 17 1B 
0f8a8     1C 1F 2D 3A | 	byte	$c0, $c0, $c9, $c9, $c8, $ca, $d8, $e9, $fb, $0c, $17, $1b, $1c, $1f, $2d, $3a
0f8ac     3E 36 28 1D 
0f8b0     12 0B 08 05 
0f8b4     00 FF 07 17 
0f8b8     2A 38 43 50 | 	byte	$3e, $36, $28, $1d, $12, $0b, $08, $05, $00, $ff, $07, $17, $2a, $38, $43, $50
0f8bc     55 5E 65 65 
0f8c0     64 64 64 64 
0f8c4     64 64 64 64 
0f8c8     58 44 42 48 | 	byte	$55, $5e, $65, $65, $64, $64, $64, $64, $64, $64, $64, $64, $58, $44, $42, $48
0f8cc     4B 43 2F 1A 
0f8d0     13 1A 1D 14 
0f8d4     03 F4 F0 EF 
0f8d8     EC E1 D7 D7 | 	byte	$4b, $43, $2f, $1a, $13, $1a, $1d, $14, $03, $f4, $f0, $ef, $ec, $e1, $d7, $d7
0f8dc     E4 F3 F9 F7 
0f8e0     EB EB F8 08 
0f8e4     01 EF E3 DB 
0f8e8     D8 E0 E6 E3 | 	byte	$e4, $f3, $f9, $f7, $eb, $eb, $f8, $08, $01, $ef, $e3, $db, $d8, $e0, $e6, $e3
0f8ec     DA DB E2 E7 
0f8f0     E3 DE D7 DD 
0f8f4     E1 E5 E5 E9 
0f8f8     EC EF F4 F9 | 	byte	$da, $db, $e2, $e7, $e3, $de, $d7, $dd, $e1, $e5, $e5, $e9, $ec, $ef, $f4, $f9
0f8fc     FE 08 17 23 
0f900     26 26 29 2E 
0f904     32 2E 23 1D 
0f908     23 23 13 FF | 	byte	$fe, $08, $17, $23, $26, $26, $29, $2e, $32, $2e, $23, $1d, $23, $23, $13, $ff
0f90c     F7 F9 03 0D 
0f910     10 12 20 31 
0f914     39 2D 1B 11 
0f918     11 17 11 F6 | 	byte	$f7, $f9, $03, $0d, $10, $12, $20, $31, $39, $2d, $1b, $11, $11, $17, $11, $f6
0f91c     E1 D4 D5 D9 
0f920     E9 F9 05 08 
0f924     0C 15 1B 21 
0f928     25 1E 11 00 | 	byte	$e1, $d4, $d5, $d9, $e9, $f9, $05, $08, $0c, $15, $1b, $21, $25, $1e, $11, $00
0f92c     F0 EB E3 DA 
0f930     CD C9 D4 E8 
0f934     ED EB E8 EC 
0f938     F4 FA F7 E6 | 	byte	$f0, $eb, $e3, $da, $cd, $c9, $d4, $e8, $ed, $eb, $e8, $ec, $f4, $fa, $f7, $e6
0f93c     D6 CF E2 F9 
0f940     02 FE FB 04 
0f944     11 1B 1F 21 
0f948     23 27 27 22 | 	byte	$d6, $cf, $e2, $f9, $02, $fe, $fb, $04, $11, $1b, $1f, $21, $23, $27, $27, $22
0f94c     19 0D 00 EE 
0f950     DF D7 DB E0 
0f954     DA CC BE BD 
0f958     C9 CA BE B0 | 	byte	$19, $0d, $00, $ee, $df, $d7, $db, $e0, $da, $cc, $be, $bd, $c9, $ca, $be, $b0
0f95c     A8 A7 A6 A7 
0f960     A3 94 85 81 
0f964     8C 9D AB B8 
0f968     BE C5 C9 D1 | 	byte	$a8, $a7, $a6, $a7, $a3, $94, $85, $81, $8c, $9d, $ab, $b8, $be, $c5, $c9, $d1
0f96c     D7 DC D4 C9 
0f970     C7 D1 D8 D6 
0f974     DB F0 09 19 
0f978     27 36 3F 42 | 	byte	$d7, $dc, $d4, $c9, $c7, $d1, $d8, $d6, $db, $f0, $09, $19, $27, $36, $3f, $42
0f97c     45 48 4A 49 
0f980     43 31 20 14 
0f984     0A 06 08 0C 
0f988     08 00 FF 0A | 	byte	$45, $48, $4a, $49, $43, $31, $20, $14, $0a, $06, $08, $0c, $08, $00, $ff, $0a
0f98c     0F 05 FA EC 
0f990     E9 E1 E4 E4 
0f994     DF D3 C9 C2 
0f998     C1 C0 C8 C9 | 	byte	$0f, $05, $fa, $ec, $e9, $e1, $e4, $e4, $df, $d3, $c9, $c2, $c1, $c0, $c8, $c9
0f99c     CB CC D3 DE 
0f9a0     F1 05 10 13 
0f9a4     12 17 23 30 
0f9a8     3A 38 2B 23 | 	byte	$cb, $cc, $d3, $de, $f1, $05, $10, $13, $12, $17, $23, $30, $3a, $38, $2b, $23
0f9ac     1D 18 0F 01 
0f9b0     FB FC 06 14 
0f9b4     1B 17 0E 14 
0f9b8     26 37 3D 3F | 	byte	$1d, $18, $0f, $01, $fb, $fc, $06, $14, $1b, $17, $0e, $14, $26, $37, $3d, $3f
0f9bc     4A 5E 65 65 
0f9c0     65 59 58 60 
0f9c4     63 5A 50 44 
0f9c8     3B 3F 46 3D | 	byte	$4a, $5e, $65, $65, $65, $59, $58, $60, $63, $5a, $50, $44, $3b, $3f, $46, $3d
0f9cc     28 17 0F 09 
0f9d0     03 FB F4 EC 
0f9d4     DF D3 D3 E0 
0f9d8     E6 E3 DC D3 | 	byte	$28, $17, $0f, $09, $03, $fb, $f4, $ec, $df, $d3, $d3, $e0, $e6, $e3, $dc, $d3
0f9dc     CD CB CA D2 
0f9e0     D7 DB DD E2 
0f9e4     E6 E3 E6 F6 
0f9e8     09 10 0C 09 | 	byte	$cd, $cb, $ca, $d2, $d7, $db, $dd, $e2, $e6, $e3, $e6, $f6, $09, $10, $0c, $09
0f9ec     09 07 04 04 
0f9f0     0A 11 12 12 
0f9f4     13 1F 32 3B 
0f9f8     36 31 33 3E | 	byte	$09, $07, $04, $04, $0a, $11, $12, $12, $13, $1f, $32, $3b, $36, $31, $33, $3e
0f9fc     4B 51 47 32 
0fa00     28 2C 35 39 
0fa04     36 30 2C 34 
0fa08     3D 3C 33 2C | 	byte	$4b, $51, $47, $32, $28, $2c, $35, $39, $36, $30, $2c, $34, $3d, $3c, $33, $2c
0fa0c     2A 2E 37 36 
0fa10     2A 1E 1B 1A 
0fa14     12 04 F3 E7 
0fa18     D7 C6 B4 A9 | 	byte	$2a, $2e, $37, $36, $2a, $1e, $1b, $1a, $12, $04, $f3, $e7, $d7, $c6, $b4, $a9
0fa1c     A1 9C 9B A7 
0fa20     BC D8 E8 EF 
0fa24     F4 02 16 25 
0fa28     20 09 F1 E5 | 	byte	$a1, $9c, $9b, $a7, $bc, $d8, $e8, $ef, $f4, $02, $16, $25, $20, $09, $f1, $e5
0fa2c     E7 E1 D5 CB 
0fa30     CA D3 DF ED 
0fa34     EF E5 DB D0 
0fa38     CB C5 C0 C1 | 	byte	$e7, $e1, $d5, $cb, $ca, $d3, $df, $ed, $ef, $e5, $db, $d0, $cb, $c5, $c0, $c1
0fa3c     C3 CD CC D4 
0fa40     DA E8 F5 11 
0fa44     36 54 59 4A 
0fa48     38 2D 27 1F | 	byte	$c3, $cd, $cc, $d4, $da, $e8, $f5, $11, $36, $54, $59, $4a, $38, $2d, $27, $1f
0fa4c     0C F2 D5 C2 
0fa50     BB B7 B4 B4 
0fa54     BD C9 D3 DF 
0fa58     DF DE D7 C9 | 	byte	$0c, $f2, $d5, $c2, $bb, $b7, $b4, $b4, $bd, $c9, $d3, $df, $df, $de, $d7, $c9
0fa5c     C1 BD BA B5 
0fa60     B4 BC C9 D3 
0fa64     DF EE 00 11 
0fa68     1C 24 23 16 | 	byte	$c1, $bd, $ba, $b5, $b4, $bc, $c9, $d3, $df, $ee, $00, $11, $1c, $24, $23, $16
0fa6c     FF EB E4 E6 
0fa70     E9 EB EB F4 
0fa74     0E 29 3C 4B 
0fa78     57 5E 61 5C | 	byte	$ff, $eb, $e4, $e6, $e9, $eb, $eb, $f4, $0e, $29, $3c, $4b, $57, $5e, $61, $5c
0fa7c     52 41 2A 0A 
0fa80     EB D4 C8 C7 
0fa84     CB CB CB DD 
0fa88     EF FE FC F2 | 	byte	$52, $41, $2a, $0a, $eb, $d4, $c8, $c7, $cb, $cb, $cb, $dd, $ef, $fe, $fc, $f2
0fa8c     E8 DC CC B9 
0fa90     A8 9F A1 AB 
0fa94     B0 AF AF B6 
0fa98     D3 E6 E9 DD | 	byte	$e8, $dc, $cc, $b9, $a8, $9f, $a1, $ab, $b0, $af, $af, $b6, $d3, $e6, $e9, $dd
0fa9c     D5 D6 DE DD 
0faa0     D6 C9 C5 CB 
0faa4     D4 DB E4 F2 
0faa8     07 17 1B 1B | 	byte	$d5, $d6, $de, $dd, $d6, $c9, $c5, $cb, $d4, $db, $e4, $f2, $07, $17, $1b, $1b
0faac     1D 28 37 3E 
0fab0     3C 36 31 34 
0fab4     35 2E 25 25 
0fab8     33 47 52 4E | 	byte	$1d, $28, $37, $3e, $3c, $36, $31, $34, $35, $2e, $25, $25, $33, $47, $52, $4e
0fabc     4B 52 5D 60 
0fac0     56 48 40 41 
0fac4     40 3E 3C 38 
0fac8     3C 4C 64 64 | 	byte	$4b, $52, $5d, $60, $56, $48, $40, $41, $40, $3e, $3c, $38, $3c, $4c, $64, $64
0facc     64 64 5E 38 
0fad0     22 1C 1F 1F 
0fad4     10 FB EE E8 
0fad8     E1 D7 D1 DC | 	byte	$64, $64, $5e, $38, $22, $1c, $1f, $1f, $10, $fb, $ee, $e8, $e1, $d7, $d1, $dc
0fadc     EE F7 F0 E4 
0fae0     DB DC E1 E1 
0fae4     E6 F4 FF 08 
0fae8     0C 05 06 0E | 	byte	$ee, $f7, $f0, $e4, $db, $dc, $e1, $e1, $e6, $f4, $ff, $08, $0c, $05, $06, $0e
0faec     1A 26 29 1D 
0faf0     07 F3 F0 F7 
0faf4     F7 EB E4 E9 
0faf8     F5 02 05 FF | 	byte	$1a, $26, $29, $1d, $07, $f3, $f0, $f7, $f7, $eb, $e4, $e9, $f5, $02, $05, $ff
0fafc     01 0D 1E 31 
0fb00     37 2F 25 27 
0fb04     2E 33 32 31 
0fb08     33 36 3D 3C | 	byte	$01, $0d, $1e, $31, $37, $2f, $25, $27, $2e, $33, $32, $31, $33, $36, $3d, $3c
0fb0c     2C 11 F3 DF 
0fb10     DB E1 D4 B9 
0fb14     A3 96 97 9C 
0fb18     A1 A9 B8 C6 | 	byte	$2c, $11, $f3, $df, $db, $e1, $d4, $b9, $a3, $96, $97, $9c, $a1, $a9, $b8, $c6
0fb1c     CD D1 D5 DD 
0fb20     E9 F6 03 07 
0fb24     FF F5 EE EB 
0fb28     E6 E0 E4 EA | 	byte	$cd, $d1, $d5, $dd, $e9, $f6, $03, $07, $ff, $f5, $ee, $eb, $e6, $e0, $e4, $ea
0fb2c     F5 02 07 01 
0fb30     F5 EB EE F5 
0fb34     F9 FE FF 03 
0fb38     07 0A 0D 15 | 	byte	$f5, $02, $07, $01, $f5, $eb, $ee, $f5, $f9, $fe, $ff, $03, $07, $0a, $0d, $15
0fb3c     22 31 42 4C 
0fb40     4A 47 4E 58 
0fb44     5D 57 4A 39 
0fb48     26 16 07 F0 | 	byte	$22, $31, $42, $4c, $4a, $47, $4e, $58, $5d, $57, $4a, $39, $26, $16, $07, $f0
0fb4c     D8 C6 BD BB 
0fb50     BD BC BC C8 
0fb54     D5 D9 D3 CE 
0fb58     D3 D6 CF BE | 	byte	$d8, $c6, $bd, $bb, $bd, $bc, $bc, $c8, $d5, $d9, $d3, $ce, $d3, $d6, $cf, $be
0fb5c     A6 92 91 99 
0fb60     A1 A6 AA B4 
0fb64     C7 D9 E8 EC 
0fb68     F3 01 09 0C | 	byte	$a6, $92, $91, $99, $a1, $a6, $aa, $b4, $c7, $d9, $e8, $ec, $f3, $01, $09, $0c
0fb6c     0C 07 FF F9 
0fb70     00 12 25 2F 
0fb74     32 2D 2A 2E 
0fb78     26 15 F6 DF | 	byte	$0c, $07, $ff, $f9, $00, $12, $25, $2f, $32, $2d, $2a, $2e, $26, $15, $f6, $df
0fb7c     CE CB CC BF 
0fb80     AD A4 AB BE 
0fb84     CE DC E5 EF 
0fb88     FD 05 04 F0 | 	byte	$ce, $cb, $cc, $bf, $ad, $a4, $ab, $be, $ce, $dc, $e5, $ef, $fd, $05, $04, $f0
0fb8c     DD D0 CB C3 
0fb90     B4 A5 A3 A8 
0fb94     AD B5 BE C9 
0fb98     DA F0 02 0B | 	byte	$dd, $d0, $cb, $c3, $b4, $a5, $a3, $a8, $ad, $b5, $be, $c9, $da, $f0, $02, $0b
0fb9c     0C 09 03 05 
0fba0     0E 18 21 22 
0fba4     1F 1F 23 38 
0fba8     59 64 64 64 | 	byte	$0c, $09, $03, $05, $0e, $18, $21, $22, $1f, $1f, $23, $38, $59, $64, $64, $64
0fbac     64 64 64 64 
0fbb0     64          | 	byte	$64[5]
0fbb1     5A 43 3F 44 
0fbb5     45 3D 33 34 
0fbb9     44 53 56 50 
0fbbd     49 41 40 41 | 	byte	$5a, $43, $3f, $44, $45, $3d, $33, $34, $44, $53, $56, $50, $49, $41, $40, $41
0fbc1     3D 30 29 29 
0fbc5     2F 35 32 28 
0fbc9     1A 06 F2 EB 
0fbcd     ED EE E4 E5 | 	byte	$3d, $30, $29, $29, $2f, $35, $32, $28, $1a, $06, $f2, $eb, $ed, $ee, $e4, $e5
0fbd1     F2 00 07 08 
0fbd5     FE EE F5 02 
0fbd9     0A 01 EF DB 
0fbdd     CE D6 E4 EE | 	byte	$f2, $00, $07, $08, $fe, $ee, $f5, $02, $0a, $01, $ef, $db, $ce, $d6, $e4, $ee
0fbe1     EC EA EC E8 
0fbe5     DD D6 D8 DE 
0fbe9     E3 E7 E3 DA 
0fbed     D3 DB F4 08 | 	byte	$ec, $ea, $ec, $e8, $dd, $d6, $d8, $de, $e3, $e7, $e3, $da, $d3, $db, $f4, $08
0fbf1     0D 07 00 06 
0fbf5     10 0F 0C 06 
0fbf9     02 03 0B 19 
0fbfd     25 33 3F 45 | 	byte	$0d, $07, $00, $06, $10, $0f, $0c, $06, $02, $03, $0b, $19, $25, $33, $3f, $45
0fc01     40 3B 38 38 
0fc05     39 2F 20 0D 
0fc09     FA F7 0A 1F 
0fc0d     26 19 06 FB | 	byte	$40, $3b, $38, $38, $39, $2f, $20, $0d, $fa, $f7, $0a, $1f, $26, $19, $06, $fb
0fc11     F4 F4 F3 F3 
0fc15     F3 F4 E7 E1 
0fc19     E4 F2 01 0B 
0fc1d     10 11 0D 03 | 	byte	$f4, $f4, $f3, $f3, $f3, $f4, $e7, $e1, $e4, $f2, $01, $0b, $10, $11, $0d, $03
0fc21     F7 EF E7 E4 
0fc25     E3 E1 E0 D9 
0fc29     DD DB CC C6 
0fc2d     C8 D7 E6 EB | 	byte	$f7, $ef, $e7, $e4, $e3, $e1, $e0, $d9, $dd, $db, $cc, $c6, $c8, $d7, $e6, $eb
0fc31     E5 D9 D6 DD 
0fc35     E9 F1 F7 F7 
0fc39     F5 F8 03 10 
0fc3d     1E 2D 39 40 | 	byte	$e5, $d9, $d6, $dd, $e9, $f1, $f7, $f7, $f5, $f8, $03, $10, $1e, $2d, $39, $40
0fc41     45 47 43 3F 
0fc45     39 2F 16 F3 
0fc49     D0 BF BF C5 
0fc4d     BD AD 9F A1 | 	byte	$45, $47, $43, $3f, $39, $2f, $16, $f3, $d0, $bf, $bf, $c5, $bd, $ad, $9f, $a1
0fc51     B7 CC D3 CF 
0fc55     CC C3 B6 AB 
0fc59     A2 93 8A 8B 
0fc5d     94 98 A3 B3 | 	byte	$b7, $cc, $d3, $cf, $cc, $c3, $b6, $ab, $a2, $93, $8a, $8b, $94, $98, $a3, $b3
0fc61     C3 CC D7 E7 
0fc65     F3 F2 EE F8 
0fc69     07 10 12 10 
0fc6d     12 1D 26 27 | 	byte	$c3, $cc, $d7, $e7, $f3, $f2, $ee, $f8, $07, $10, $12, $10, $12, $1d, $26, $27
0fc71     2B 30 2F 28 
0fc75     19 09 FE FC 
0fc79     FE FE FD 00 
0fc7d     07 0D 13 15 | 	byte	$2b, $30, $2f, $28, $19, $09, $fe, $fc, $fe, $fe, $fd, $00, $07, $0d, $13, $15
0fc81     0D 03 02 05 
0fc85     04 F7 E1 D2 
0fc89     D1 DD E1 DD 
0fc8d     D1 CF D5 D2 | 	byte	$0d, $03, $02, $05, $04, $f7, $e1, $d2, $d1, $dd, $e1, $dd, $d1, $cf, $d5, $d2
0fc91     D1 CB C8 C7 
0fc95     C6 C2 C3 CD 
0fc99     DB E9 ED ED 
0fc9d     F8 08 1C 2A | 	byte	$d1, $cb, $c8, $c7, $c6, $c2, $c3, $cd, $db, $e9, $ed, $ed, $f8, $08, $1c, $2a
0fca1     2E 2F 31 31 
0fca5     30 2E 2A 2C 
0fca9     37 3E 37 2F 
0fcad     38 4E 5A 55 | 	byte	$2e, $2f, $31, $31, $30, $2e, $2a, $2c, $37, $3e, $37, $2f, $38, $4e, $5a, $55
0fcb1     48 45 51 64 
0fcb5     64 64 52 44 
0fcb9     3D 3D 3D 36 
0fcbd     2B 2B 36 3C | 	byte	$48, $45, $51, $64, $64, $64, $52, $44, $3d, $3d, $3d, $36, $2b, $2b, $36, $3c
0fcc1     32 1E 0E FE 
0fcc5     F7 E9 DD CD 
0fcc9     C1 BC BC BF 
0fccd     C6 D1 E8 06 | 	byte	$32, $1e, $0e, $fe, $f7, $e9, $dd, $cd, $c1, $bc, $bc, $bf, $c6, $d1, $e8, $06
0fcd1     1F 23 1D 1B 
0fcd5     21 26 26 1D 
0fcd9     13 0C 07 04 
0fcdd     01 00 03 08 | 	byte	$1f, $23, $1d, $1b, $21, $26, $26, $1d, $13, $0c, $07, $04, $01, $00, $03, $08
0fce1     0F 17 1D 1E 
0fce5     1B 17 15 14 
0fce9     0E 05 09 1A 
0fced     2D 35 2F 22 | 	byte	$0f, $17, $1d, $1e, $1b, $17, $15, $14, $0e, $05, $09, $1a, $2d, $35, $2f, $22
0fcf1     1A 1A 24 2D 
0fcf5     34 34 30 31 
0fcf9     35 37 37 37 
0fcfd     39 35 27 17 | 	byte	$1a, $1a, $24, $2d, $34, $34, $30, $31, $35, $37, $37, $37, $39, $35, $27, $17
0fd01     09 00 F3 E7 
0fd05     E4 E9 E9 DD 
0fd09     D4 D3 D8 DA 
0fd0d     D4 C9 C9 D6 | 	byte	$09, $00, $f3, $e7, $e4, $e9, $e9, $dd, $d4, $d3, $d8, $da, $d4, $c9, $c9, $d6
0fd11     E5 EB EC E8 
0fd15     E8 EB FA 00 
0fd19     F9 F8 FD 05 
0fd1d     00 F6 E7 E5 | 	byte	$e5, $eb, $ec, $e8, $e8, $eb, $fa, $00, $f9, $f8, $fd, $05, $00, $f6, $e7, $e5
0fd21     E6 E9 ED F0 
0fd25     EC E1 D3 C9 
0fd29     C2 BB B6 AF 
0fd2d     AA A9 AB B5 | 	byte	$e6, $e9, $ed, $f0, $ec, $e1, $d3, $c9, $c2, $bb, $b6, $af, $aa, $a9, $ab, $b5
0fd31     C6 DC F0 01 
0fd35     14 22 28 2B 
0fd39     2A 30 3E 47 
0fd3d     44 3A 37 3D | 	byte	$c6, $dc, $f0, $01, $14, $22, $28, $2b, $2a, $30, $3e, $47, $44, $3a, $37, $3d
0fd41     44 3D 2E 1B 
0fd45     0B FD EC D9 
0fd49     C3 AF A0 9B 
0fd4d     A0 B7 CD DE | 	byte	$44, $3d, $2e, $1b, $0b, $fd, $ec, $d9, $c3, $af, $a0, $9b, $a0, $b7, $cd, $de
0fd51     E9 F3 02 0D 
0fd55     11 05 EE E1 
0fd59     DA DD D5 BE 
0fd5d     AD AE C1 D4 | 	byte	$e9, $f3, $02, $0d, $11, $05, $ee, $e1, $da, $dd, $d5, $be, $ad, $ae, $c1, $d4
0fd61     E7 F3 FA 00 
0fd65     03 0A 09 02 
0fd69     F7 F2 F9 FD 
0fd6d     F7 F0 F1 FD | 	byte	$e7, $f3, $fa, $00, $03, $0a, $09, $02, $f7, $f2, $f9, $fd, $f7, $f0, $f1, $fd
0fd71     0C 17 19 0E 
0fd75     FB F0 ED E3 
0fd79     D8 D1 D2 D8 
0fd7d     D7 D9 E4 EE | 	byte	$0c, $17, $19, $0e, $fb, $f0, $ed, $e3, $d8, $d1, $d2, $d8, $d7, $d9, $e4, $ee
0fd81     F4 F3 EA DD 
0fd85     D9 D4 CF C8 
0fd89     C1 BD BF C5 
0fd8d     CE CD CE CB | 	byte	$f4, $f3, $ea, $dd, $d9, $d4, $cf, $c8, $c1, $bd, $bf, $c5, $ce, $cd, $ce, $cb
0fd91     C8 C7 C8 D3 
0fd95     E3 F5 F9 EA 
0fd99     E9 EA EF F7 
0fd9d     F9 F9 FA 03 | 	byte	$c8, $c7, $c8, $d3, $e3, $f5, $f9, $ea, $e9, $ea, $ef, $f7, $f9, $f9, $fa, $03
0fda1     0D 14 14 11 
0fda5     15 24 40 5A 
0fda9     64 61 56 54 
0fdad     61 64 64 64 | 	byte	$0d, $14, $14, $11, $15, $24, $40, $5a, $64, $61, $56, $54, $61, $64, $64, $64
0fdb1     64 64 64 64 
0fdb5     5B 55 50 4A 
0fdb9     47 46 44 41 
0fdbd     3F 3A 2F 29 | 	byte	$64, $64, $64, $64, $5b, $55, $50, $4a, $47, $46, $44, $41, $3f, $3a, $2f, $29
0fdc1     25 20 1A 17 
0fdc5     11 0A FE EE 
0fdc9     DF D5 D0 D0 
0fdcd     DA E4 EA F1 | 	byte	$25, $20, $1a, $17, $11, $0a, $fe, $ee, $df, $d5, $d0, $d0, $da, $e4, $ea, $f1
0fdd1     F6 02 14 26 
0fdd5     2E 2D 29 23 
0fdd9     14 04 F3 EE 
0fddd     F1 F9 00 0B | 	byte	$f6, $02, $14, $26, $2e, $2d, $29, $23, $14, $04, $f3, $ee, $f1, $f9, $00, $0b
0fde1     0E 0C 0B 11 
0fde5     1E 25 1F 10 
0fde9     08 0E 1C 26 
0fded     22 1B 18 1F | 	byte	$0e, $0c, $0b, $11, $1e, $25, $1f, $10, $08, $0e, $1c, $26, $22, $1b, $18, $1f
0fdf1     2A 34 39 36 
0fdf5     32 33 30 23 
0fdf9     11 02 00 08 
0fdfd     0F 08 F1 ED | 	byte	$2a, $34, $39, $36, $32, $33, $30, $23, $11, $02, $00, $08, $0f, $08, $f1, $ed
0fe01     F2 F8 FA F1 
0fe05     DA C3 B3 AE 
0fe09     AC A8 A4 A3 
0fe0d     A5 A8 AC B2 | 	byte	$f2, $f8, $fa, $f1, $da, $c3, $b3, $ae, $ac, $a8, $a4, $a3, $a5, $a8, $ac, $b2
0fe11     BA CF E2 F6 
0fe15     09 0F 11 16 
0fe19     1F 24 20 1D 
0fe1d     1E 1A 0E 01 | 	byte	$ba, $cf, $e2, $f6, $09, $0f, $11, $16, $1f, $24, $20, $1d, $1e, $1a, $0e, $01
0fe21     F5 F1 F4 F9 
0fe25     01 02 FF F5 
0fe29     E4 D5 CF D3 
0fe2d     D9 E1 E6 E7 | 	byte	$f5, $f1, $f4, $f9, $01, $02, $ff, $f5, $e4, $d5, $cf, $d3, $d9, $e1, $e6, $e7
0fe31     EB F5 01 07 
0fe35     0F 20 39 51 
0fe39     64 64 64 5F 
0fe3d     62 62 5B 4B | 	byte	$eb, $f5, $01, $07, $0f, $20, $39, $51, $64, $64, $64, $5f, $62, $62, $5b, $4b
0fe41     39 29 1D 10 
0fe45     F7 E1 D1 CC 
0fe49     C3 B3 9D 84 
0fe4d     80 83 91 9F | 	byte	$39, $29, $1d, $10, $f7, $e1, $d1, $cc, $c3, $b3, $9d, $84, $80, $83, $91, $9f
0fe51     AA B2 B9 CA 
0fe55     DC E9 E9 DE 
0fe59     DD E6 F8 09 
0fe5d     0B F8 DF D4 | 	byte	$aa, $b2, $b9, $ca, $dc, $e9, $e9, $de, $dd, $e6, $f8, $09, $0b, $f8, $df, $d4
0fe61     DC EF F7 F3 
0fe65     E7 DF DE D9 
0fe69     D2 D0 DC E9 
0fe6d     F2 F1 E4 D7 | 	byte	$dc, $ef, $f7, $f3, $e7, $df, $de, $d9, $d2, $d0, $dc, $e9, $f2, $f1, $e4, $d7
0fe71     D1 D0 CD CE 
0fe75     D2 D7 D5 DB 
0fe79     E0 E4 E9 EE 
0fe7d     F0 F1 ED EB | 	byte	$d1, $d0, $cd, $ce, $d2, $d7, $d5, $db, $e0, $e4, $e9, $ee, $f0, $f1, $ed, $eb
0fe81     F1 F9 F8 E8 
0fe85     DA DA E1 E6 
0fe89     DB CC C3 BE 
0fe8d     C2 CB CB D2 | 	byte	$f1, $f9, $f8, $e8, $da, $da, $e1, $e6, $db, $cc, $c3, $be, $c2, $cb, $cb, $d2
0fe91     DF EC F6 F8 
0fe95     FB 00 0B 19 
0fe99     22 27 26 24 
0fe9d     23 20 1C 1D | 	byte	$df, $ec, $f6, $f8, $fb, $00, $0b, $19, $22, $27, $26, $24, $23, $20, $1c, $1d
0fea1     2B 42 58 5F 
0fea5     58 51 4F 4D 
0fea9     51 52 4B 3F 
0fead     3B 3D 42 43 | 	byte	$2b, $42, $58, $5f, $58, $51, $4f, $4d, $51, $52, $4b, $3f, $3b, $3d, $42, $43
0feb1     48 4B 4E 57 
0feb5     62 62 58 49 
0feb9     3A 34 33 2C 
0febd     1B 0C 07 0A | 	byte	$48, $4b, $4e, $57, $62, $62, $58, $49, $3a, $34, $33, $2c, $1b, $0c, $07, $0a
0fec1     0A 04 FC FC 
0fec5     04 08 08 00 
0fec9     EC DC CB BA 
0fecd     AE AA B2 C5 | 	byte	$0a, $04, $fc, $fc, $04, $08, $08, $00, $ec, $dc, $cb, $ba, $ae, $aa, $b2, $c5
0fed1     DE EE F4 F2 
0fed5     F8 06 16 1B 
0fed9     16 0C 02 FB 
0fedd     F6 F4 F2 F7 | 	byte	$de, $ee, $f4, $f2, $f8, $06, $16, $1b, $16, $0c, $02, $fb, $f6, $f4, $f2, $f7
0fee1     07 17 27 2C 
0fee5     2D 2E 34 3A 
0fee9     3D 38 2C 25 
0feed     28 30 3B 47 | 	byte	$07, $17, $27, $2c, $2d, $2e, $34, $3a, $3d, $38, $2c, $25, $28, $30, $3b, $47
0fef1     51 50 4B 45 
0fef5     3D 35 32 28 
0fef9     18 08 FB E9 
0fefd     D5 C9 C7 CC | 	byte	$51, $50, $4b, $45, $3d, $35, $32, $28, $18, $08, $fb, $e9, $d5, $c9, $c7, $cc
0ff01     D0 D3 D0 D3 
0ff05     D9 D6 D6 CE 
0ff09     C2 B0 A4 A7 
0ff0d     BA D2 E4 EC | 	byte	$d0, $d3, $d0, $d3, $d9, $d6, $d6, $ce, $c2, $b0, $a4, $a7, $ba, $d2, $e4, $ec
0ff11     E9 EC 00 11 
0ff15     1C 1E 1A 11 
0ff19     05 FD F3 E4 
0ff1d     DF E4 EC F2 | 	byte	$e9, $ec, $00, $11, $1c, $1e, $1a, $11, $05, $fd, $f3, $e4, $df, $e4, $ec, $f2
0ff21     EE EA E9 ED 
0ff25     F1 F8 FC F6 
0ff29     ED F0 FA 04 
0ff2d     0B 0E 15 1A | 	byte	$ee, $ea, $e9, $ed, $f1, $f8, $fc, $f6, $ed, $f0, $fa, $04, $0b, $0e, $15, $1a
0ff31     1A 1A 23 34 
0ff35     43 4D 52 55 
0ff39     58 58 52 3F 
0ff3d     2F 23 15 FD | 	byte	$1a, $1a, $23, $34, $43, $4d, $52, $55, $58, $58, $52, $3f, $2f, $23, $15, $fd
0ff41     E4 C8 B7 AF 
0ff45     AC A4 96 8D 
0ff49     91 9C AA B7 
0ff4d     B6 B4 B2 B3 | 	byte	$e4, $c8, $b7, $af, $ac, $a4, $96, $8d, $91, $9c, $aa, $b7, $b6, $b4, $b2, $b3
0ff51     BA C2 C4 C4 
0ff55     CB DF FA 15 
0ff59     27 29 21 19 
0ff5d     18 17 10 03 | 	byte	$ba, $c2, $c4, $c4, $cb, $df, $fa, $15, $27, $29, $21, $19, $18, $17, $10, $03
0ff61     F5 E5 D9 D3 
0ff65     D3 D3 D3 D6 
0ff69     DA E1 EB EE 
0ff6d     DF DB DA DA | 	byte	$f5, $e5, $d9, $d3, $d3, $d3, $d3, $d6, $da, $e1, $eb, $ee, $df, $db, $da, $da
0ff71     D3 C9 C0 BC 
0ff75     C1 CC D5 D9 
0ff79     E6 F6 06 0C 
0ff7d     0A 07 06 05 | 	byte	$d3, $c9, $c0, $bc, $c1, $cc, $d5, $d9, $e6, $f6, $06, $0c, $0a, $07, $06, $05
0ff81     01 00 02 FD 
0ff85     F0 DD CF CB 
0ff89     CF D5 D9 DD 
0ff8d     E0 E3 E9 F2 | 	byte	$01, $00, $02, $fd, $f0, $dd, $cf, $cb, $cf, $d5, $d9, $dd, $e0, $e3, $e9, $f2
0ff91     F4 F5 01 15 
0ff95     24 2A 33 3A 
0ff99     3D 3C 32 27 
0ff9d     23 1F 1D 1D | 	byte	$f4, $f5, $01, $15, $24, $2a, $33, $3a, $3d, $3c, $32, $27, $23, $1f, $1d, $1d
0ffa1     1F 23 26 27 
0ffa5     26 28 2C 2F 
0ffa9     33 38 3B 39 
0ffad     37 34 35 31 | 	byte	$1f, $23, $26, $27, $26, $28, $2c, $2f, $33, $38, $3b, $39, $37, $34, $35, $31
0ffb1     26 18 15 27 
0ffb5     3A 41 41 43 
0ffb9     48 50 4D 3F 
0ffbd     2E 1F 13 08 | 	byte	$26, $18, $15, $27, $3a, $41, $41, $43, $48, $50, $4d, $3f, $2e, $1f, $13, $08
0ffc1     FC F7 F2 EF 
0ffc5     EC E3 DA CE 
0ffc9     C8 C5 C2 C0 
0ffcd     C4 CE D5 D1 | 	byte	$fc, $f7, $f2, $ef, $ec, $e3, $da, $ce, $c8, $c5, $c2, $c0, $c4, $ce, $d5, $d1
0ffd1     CF DD FC 18 
0ffd5     28 2E 30 31 
0ffd9     35 38 30 23 
0ffdd     17 13 10 0C | 	byte	$cf, $dd, $fc, $18, $28, $2e, $30, $31, $35, $38, $30, $23, $17, $13, $10, $0c
0ffe1     0A 14 2F 4A 
0ffe5     54 4A 3A 38 
0ffe9     3D 40 44 44 
0ffed     45 45 42 39 | 	byte	$0a, $14, $2f, $4a, $54, $4a, $3a, $38, $3d, $40, $44, $44, $45, $45, $42, $39
0fff1     2C 27 2E 37 
0fff5     34 22 0C F2 
0fff9     E6 E7 E7 E0 
0fffd     D7 D1 D5 DC | 	byte	$2c, $27, $2e, $37, $34, $22, $0c, $f2, $e6, $e7, $e7, $e0, $d7, $d1, $d5, $dc
10001     D9 D0 CE D1 
10005     CC BC AD AB 
10009     B4 C2 C4 C6 
1000d     D5 E3 EC EF | 	byte	$d9, $d0, $ce, $d1, $cc, $bc, $ad, $ab, $b4, $c2, $c4, $c6, $d5, $e3, $ec, $ef
10011     F4 FA 03 03 
10015     FA EC E2 DD 
10019     DD DD DE DE 
1001d     D7 D5 CF CE | 	byte	$f4, $fa, $03, $03, $fa, $ec, $e2, $dd, $dd, $dd, $de, $de, $d7, $d5, $cf, $ce
10021     D4 DF E7 E4 
10025     E1 E0 EB F6 
10029     05 12 21 39 
1002d     59 64 64 5E | 	byte	$d4, $df, $e7, $e4, $e1, $e0, $eb, $f6, $05, $12, $21, $39, $59, $64, $64, $5e
10031     4F 4C 4E 4C 
10035     43 38 33 33 
10039     30 29 27 2C 
1003d     2A 1A FE DC | 	byte	$4f, $4c, $4e, $4c, $43, $38, $33, $33, $30, $29, $27, $2c, $2a, $1a, $fe, $dc
10041     B8 A1 9A 97 
10045     8D 80 80 88 
10049     95 9D 9F A3 
1004d     B6 CE DD DD | 	byte	$b8, $a1, $9a, $97, $8d, $80, $80, $88, $95, $9d, $9f, $a3, $b6, $ce, $dd, $dd
10051     E0 ED 05 17 
10055     1F 1D 1B 21 
10059     25 21 16 0B 
1005d     05 04 00 FB | 	byte	$e0, $ed, $05, $17, $1f, $1d, $1b, $21, $25, $21, $16, $0b, $05, $04, $00, $fb
10061     FA 02 05 F2 
10065     DD CC C6 C9 
10069     D4 D3 C6 BE 
1006d     BD C1 C2 BD | 	byte	$fa, $02, $05, $f2, $dd, $cc, $c6, $c9, $d4, $d3, $c6, $be, $bd, $c1, $c2, $bd
10071     B6 B4 BC CF 
10075     E3 ED EC EB 
10079     EC EF EE E3 
1007d     DA DA E8 F1 | 	byte	$b6, $b4, $bc, $cf, $e3, $ed, $ec, $eb, $ec, $ef, $ee, $e3, $da, $da, $e8, $f1
10081     F0 EF F1 F1 
10085     E7 DC D0 CC 
10089     CD D5 DE E1 
1008d     E1 E8 FB 1A | 	byte	$f0, $ef, $f1, $f1, $e7, $dc, $d0, $cc, $cd, $d5, $de, $e1, $e1, $e8, $fb, $1a
10091     34 3F 43 4C 
10095     5C 65 65 65 
10099     55 37 25 1D 
1009d     15 0D 07 07 | 	byte	$34, $3f, $43, $4c, $5c, $65, $65, $65, $55, $37, $25, $1d, $15, $0d, $07, $07
100a1     0F 19 1A 11 
100a5     08 0C 11 1A 
100a9     21 23 21 20 
100ad     1F 1E 24 31 | 	byte	$0f, $19, $1a, $11, $08, $0c, $11, $1a, $21, $23, $21, $20, $1f, $1e, $24, $31
100b1     3A 39 39 44 
100b5     56 64 64 64 
100b9     43 31 27 1E 
100bd     11 04 EF E1 | 	byte	$3a, $39, $39, $44, $56, $64, $64, $64, $43, $31, $27, $1e, $11, $04, $ef, $e1
100c1     D8 DB DF DB 
100c5     D5 D5 DA E5 
100c9     EF F1 EF EF 
100cd     F4 FA FD FA | 	byte	$d8, $db, $df, $db, $d5, $d5, $da, $e5, $ef, $f1, $ef, $ef, $f4, $fa, $fd, $fa
100d1     FE 13 2C 3B 
100d5     40 3D 3F 42 
100d9     3D 2A 13 0B 
100dd     11 1C 1D 17 | 	byte	$fe, $13, $2c, $3b, $40, $3d, $3f, $42, $3d, $2a, $13, $0b, $11, $1c, $1d, $17
100e1     12 1B 28 34 
100e5     38 36 36 3F 
100e9     4F 55 4D 39 
100ed     26 20 1E 17 | 	byte	$12, $1b, $28, $34, $38, $36, $36, $3f, $4f, $55, $4d, $39, $26, $20, $1e, $17
100f1     01 E3 D3 D0 
100f5     DC DB D1 C5 
100f9     C5 D2 DD E6 
100fd     EA E9 DD D4 | 	byte	$01, $e3, $d3, $d0, $dc, $db, $d1, $c5, $c5, $d2, $dd, $e6, $ea, $e9, $dd, $d4
10101     D0 D7 E5 EF 
10105     F1 E0 CF CF 
10109     E5 F8 03 FE 
1010d     F7 F3 F4 F6 | 	byte	$d0, $d7, $e5, $ef, $f1, $e0, $cf, $cf, $e5, $f8, $03, $fe, $f7, $f3, $f4, $f6
10111     EA DE DA E1 
10115     E5 E3 DA D0 
10119     CC D1 D6 D7 
1011d     D4 D4 D7 DD | 	byte	$ea, $de, $da, $e1, $e5, $e3, $da, $d0, $cc, $d1, $d6, $d7, $d4, $d4, $d7, $dd
10121     EA F4 F6 F5 
10125     F6 03 17 2B 
10129     35 3F 46 49 
1012d     4A 43 39 30 | 	byte	$ea, $f4, $f6, $f5, $f6, $03, $17, $2b, $35, $3f, $46, $49, $4a, $43, $39, $30
10131     2A 2D 33 38 
10135     38 38 3D 44 
10139     44 35 1F 02 
1013d     ED DC CE C1 | 	byte	$2a, $2d, $33, $38, $38, $38, $3d, $44, $44, $35, $1f, $02, $ed, $dc, $ce, $c1
10141     AE 9D 98 9A 
10145     A2 A5 A5 A5 
10149     AD BD CA CA 
1014d     C6 C4 C6 D1 | 	byte	$ae, $9d, $98, $9a, $a2, $a5, $a5, $a5, $ad, $bd, $ca, $ca, $c6, $c4, $c6, $d1
10151     EB FE 01 FA 
10155     F2 F7 0B 1E 
10159     23 14 FC F1 
1015d     F5 FF FC EA | 	byte	$eb, $fe, $01, $fa, $f2, $f7, $0b, $1e, $23, $14, $fc, $f1, $f5, $ff, $fc, $ea
10161     D8 D1 D4 D6 
10165     CF C3 BF C5 
10169     D0 DB DC D2 
1016d     C4 BF BE BA | 	byte	$d8, $d1, $d4, $d6, $cf, $c3, $bf, $c5, $d0, $db, $dc, $d2, $c4, $bf, $be, $ba
10171     B5 B6 BF D1 
10175     E5 E9 DE D0 
10179     D7 E4 F3 FB 
1017d     FB F2 E7 EB | 	byte	$b5, $b6, $bf, $d1, $e5, $e9, $de, $d0, $d7, $e4, $f3, $fb, $fb, $f2, $e7, $eb
10181     EC E2 CF B8 
10185     A8 A9 B7 C8 
10189     D3 DE F5 17 
1018d     38 43 3C 38 | 	byte	$ec, $e2, $cf, $b8, $a8, $a9, $b7, $c8, $d3, $de, $f5, $17, $38, $43, $3c, $38
10191     47 5F 66 65 
10195     46 31 37 4D 
10199     5F 5D 4B 3E 
1019d     43 4F 4F 3D | 	byte	$47, $5f, $66, $65, $46, $31, $37, $4d, $5f, $5d, $4b, $3e, $43, $4f, $4f, $3d
101a1     2A 1C 0E 03 
101a5     FA F9 FB FC 
101a9     00 02 04 06 
101ad     07 0B 10 11 | 	byte	$2a, $1c, $0e, $03, $fa, $f9, $fb, $fc, $00, $02, $04, $06, $07, $0b, $10, $11
101b1     17 1F 2D 36 
101b5     37 35 34 3A 
101b9     3F 3E 37 29 
101bd     19 13 14 13 | 	byte	$17, $1f, $2d, $36, $37, $35, $34, $3a, $3f, $3e, $37, $29, $19, $13, $14, $13
101c1     07 EF D6 BD 
101c5     AD AC BA CF 
101c9     DF E9 F3 FF 
101cd     08 0E 16 23 | 	byte	$07, $ef, $d6, $bd, $ad, $ac, $ba, $cf, $df, $e9, $f3, $ff, $08, $0e, $16, $23
101d1     37 4C 5B 5A 
101d5     51 48 47 4E 
101d9     55 53 43 39 
101dd     34 2E 2B 2C | 	byte	$37, $4c, $5b, $5a, $51, $48, $47, $4e, $55, $53, $43, $39, $34, $2e, $2b, $2c
101e1     2D 28 1E 14 
101e5     11 16 1B 14 
101e9     FD E9 DC DB 
101ed     E1 E3 D6 C4 | 	byte	$2d, $28, $1e, $14, $11, $16, $1b, $14, $fd, $e9, $dc, $db, $e1, $e3, $d6, $c4
101f1     B8 BB CC E4 
101f5     FF 0C 0B 00 
101f9     FA 00 06 01 
101fd     F7 EE E7 DD | 	byte	$b8, $bb, $cc, $e4, $ff, $0c, $0b, $00, $fa, $00, $06, $01, $f7, $ee, $e7, $dd
10201     D6 CB C3 C3 
10205     D0 DE F0 FC 
10209     03 09 12 19 
1020d     19 16 10 09 | 	byte	$d6, $cb, $c3, $c3, $d0, $de, $f0, $fc, $03, $09, $12, $19, $19, $16, $10, $09
10211     09 12 15 0B 
10215     01 FD 04 0B 
10219     0D 02 FA FA 
1021d     FD FF FE F3 | 	byte	$09, $12, $15, $0b, $01, $fd, $04, $0b, $0d, $02, $fa, $fa, $fd, $ff, $fe, $f3
10221     E8 E0 DF E6 
10225     F5 00 0C 16 
10229     20 29 35 3C 
1022d     31 20 10 0C | 	byte	$e8, $e0, $df, $e6, $f5, $00, $0c, $16, $20, $29, $35, $3c, $31, $20, $10, $0c
10231     0A FF ED E9 
10235     F5 00 FE FA 
10239     00 11 1A 15 
1023d     05 EF DD D1 | 	byte	$0a, $ff, $ed, $e9, $f5, $00, $fe, $fa, $00, $11, $1a, $15, $05, $ef, $dd, $d1
10241     C2 B2 AD B0 
10245     B7 C4 CE D9 
10249     EF 0F 23 23 
1024d     11 00 FA F8 | 	byte	$c2, $b2, $ad, $b0, $b7, $c4, $ce, $d9, $ef, $0f, $23, $23, $11, $00, $fa, $f8
10251     F3 DE C4 B3 
10255     B6 C3 CB CC 
10259     CA CC DA E5 
1025d     DF D5 CF D2 | 	byte	$f3, $de, $c4, $b3, $b6, $c3, $cb, $cc, $ca, $cc, $da, $e5, $df, $d5, $cf, $d2
10261     D7 DA D4 C6 
10265     BE C8 D8 E0 
10269     DC CC BD B9 
1026d     C2 C3 C4 C7 | 	byte	$d7, $da, $d4, $c6, $be, $c8, $d8, $e0, $dc, $cc, $bd, $b9, $c2, $c3, $c4, $c7
10271     D0 D6 E3 EE 
10275     F0 EA E4 EB 
10279     F7 08 0F 0F 
1027d     06 FB F5 F3 | 	byte	$d0, $d6, $e3, $ee, $f0, $ea, $e4, $eb, $f7, $08, $0f, $0f, $06, $fb, $f5, $f3
10281     EE DF D0 CE 
10285     E3 F6 FF 01 
10289     02 0E 27 3F 
1028d     4D 4E 49 48 | 	byte	$ee, $df, $d0, $ce, $e3, $f6, $ff, $01, $02, $0e, $27, $3f, $4d, $4e, $49, $48
10291     4E 4E 3D 21 
10295     10 0E 18 1C 
10299     15 0A 07 0F 
1029d     1B 2A 31 2E | 	byte	$4e, $4e, $3d, $21, $10, $0e, $18, $1c, $15, $0a, $07, $0f, $1b, $2a, $31, $2e
102a1     25 1D 1A 1C 
102a5     19 15 0A FD 
102a9     F5 F5 00 0F 
102ad     16 13 15 24 | 	byte	$25, $1d, $1a, $1c, $19, $15, $0a, $fd, $f5, $f5, $00, $0f, $16, $13, $15, $24
102b1     35 3C 38 31 
102b5     2E 2F 2F 2D 
102b9     24 16 0A 04 
102bd     00 F2 E1 CE | 	byte	$35, $3c, $38, $31, $2e, $2f, $2f, $2d, $24, $16, $0a, $04, $00, $f2, $e1, $ce
102c1     C3 C0 C1 BE 
102c5     B5 B3 BA D5 
102c9     EF 00 0A 11 
102cd     21 38 4B 53 | 	byte	$c3, $c0, $c1, $be, $b5, $b3, $ba, $d5, $ef, $00, $0a, $11, $21, $38, $4b, $53
102d1     52 52 4C 4C 
102d5     50 50 49 42 
102d9     42 40 39 2F 
102dd     27 29 3A 47 | 	byte	$52, $52, $4c, $4c, $50, $50, $49, $42, $42, $40, $39, $2f, $27, $29, $3a, $47
102e1     4A 41 34 2E 
102e5     2F 30 27 15 
102e9     F9 EB E2 DE 
102ed     CF CA D3 E4 | 	byte	$4a, $41, $34, $2e, $2f, $30, $27, $15, $f9, $eb, $e2, $de, $cf, $ca, $d3, $e4
102f1     F3 F8 F7 F7 
102f5     FE FF FA F5 
102f9     EA E8 DE D8 
102fd     CE C9 C9 CC | 	byte	$f3, $f8, $f7, $f7, $fe, $ff, $fa, $f5, $ea, $e8, $de, $d8, $ce, $c9, $c9, $cc
10301     C9 BD B7 C1 
10305     DC F5 FF FB 
10309     FE 0A 19 27 
1030d     32 30 2A 2B | 	byte	$c9, $bd, $b7, $c1, $dc, $f5, $ff, $fb, $fe, $0a, $19, $27, $32, $30, $2a, $2b
10311     33 36 2F 26 
10315     21 22 25 27 
10319     1E 0D 05 08 
1031d     10 19 1E 1C | 	byte	$33, $36, $2f, $26, $21, $22, $25, $27, $1e, $0d, $05, $08, $10, $19, $1e, $1c
10321     1F 27 2E 2C 
10325     24 19 12 0F 
10329     06 FA E4 CF 
1032d     BF BC BD BE | 	byte	$1f, $27, $2e, $2c, $24, $19, $12, $0f, $06, $fa, $e4, $cf, $bf, $bc, $bd, $be
10331     BA B7 B6 BC 
10335     C8 D1 D3 D0 
10339     D1 D6 DC DF 
1033d     DB D4 DD E9 | 	byte	$ba, $b7, $b6, $bc, $c8, $d1, $d3, $d0, $d1, $d6, $dc, $df, $db, $d4, $dd, $e9
10341     F1 F7 FB FF 
10345     05 11 20 28 
10349     23 16 0F 0F 
1034d     0F 08 FC F9 | 	byte	$f1, $f7, $fb, $ff, $05, $11, $20, $28, $23, $16, $0f, $0f, $0f, $08, $fc, $f9
10351     FC 01 01 F7 
10355     E6 D5 D0 D3 
10359     D6 D5 CF C9 
1035d     CB D5 DC E0 | 	byte	$fc, $01, $01, $f7, $e6, $d5, $d0, $d3, $d6, $d5, $cf, $c9, $cb, $d5, $dc, $e0
10361     DB D4 D1 DD 
10365     E5 DF D3 C6 
10369     BA B2 B4 B7 
1036d     B9 BA BF C7 | 	byte	$db, $d4, $d1, $dd, $e5, $df, $d3, $c6, $ba, $b2, $b4, $b7, $b9, $ba, $bf, $c7
10371     D3 D9 DB D7 
10375     E2 E9 EB E9 
10379     E5 DD DB E5 
1037d     EC F3 FB 02 | 	byte	$d3, $d9, $db, $d7, $e2, $e9, $eb, $e9, $e5, $dd, $db, $e5, $ec, $f3, $fb, $02
10381     07 11 23 37 
10385     4A 55 58 56 
10389     55 59 5A 4D 
1038d     39 27 18 11 | 	byte	$07, $11, $23, $37, $4a, $55, $58, $56, $55, $59, $5a, $4d, $39, $27, $18, $11
10391     08 FB EA D8 
10395     CD CD D3 D5 
10399     D0 C9 C8 CF 
1039d     D2 D8 E3 F5 | 	byte	$08, $fb, $ea, $d8, $cd, $cd, $d3, $d5, $d0, $c9, $c8, $cf, $d2, $d8, $e3, $f5
103a1     0B 1D 27 2D 
103a5     35 3E 42 3E 
103a9     2E 18 05 00 
103ad     00 02 FF FF | 	byte	$0b, $1d, $27, $2d, $35, $3e, $42, $3e, $2e, $18, $05, $00, $00, $02, $ff, $ff
103b1     0B 19 1F 25 
103b5     2F 37 3C 39 
103b9     2E 25 17 07 
103bd     F6 E6 E0 DB | 	byte	$0b, $19, $1f, $25, $2f, $37, $3c, $39, $2e, $25, $17, $07, $f6, $e6, $e0, $db
103c1     E2 F0 02 10 
103c5     14 12 16 20 
103c9     2B 30 32 30 
103cd     29 1F 1B 1F | 	byte	$e2, $f0, $02, $10, $14, $12, $16, $20, $2b, $30, $32, $30, $29, $1f, $1b, $1f
103d1     27 33 3B 3C 
103d5     37 2A 25 27 
103d9     24 18 0E 10 
103dd     12 18 20 23 | 	byte	$27, $33, $3b, $3c, $37, $2a, $25, $27, $24, $18, $0e, $10, $12, $18, $20, $23
103e1     24 27 24 1F 
103e5     1F 21 20 17 
103e9     0C 08 0E 15 
103ed     14 0D 02 01 | 	byte	$24, $27, $24, $1f, $1f, $21, $20, $17, $0c, $08, $0e, $15, $14, $0d, $02, $01
103f1     05 04 FB ED 
103f5     F0 F3 F4 EC 
103f9     DF D0 C5 BF 
103fd     B9 AE A0 9D | 	byte	$05, $04, $fb, $ed, $f0, $f3, $f4, $ec, $df, $d0, $c5, $bf, $b9, $ae, $a0, $9d
10401     A4 B3 C1 BF 
10405     B7 B8 CE EA 
10409     00 0C 14 1A 
1040d     22 2D 2D 1F | 	byte	$a4, $b3, $c1, $bf, $b7, $b8, $ce, $ea, $00, $0c, $14, $1a, $22, $2d, $2d, $1f
10411     13 0C 0C 0F 
10415     0D 04 FF 08 
10419     16 22 2B 31 
1041d     34 3A 45 4E | 	byte	$13, $0c, $0c, $0f, $0d, $04, $ff, $08, $16, $22, $2b, $31, $34, $3a, $45, $4e
10421     4A 44 43 4E 
10425     56 58 48 2B 
10429     0F FC F6 F6 
1042d     EC DA C7 C6 | 	byte	$4a, $44, $43, $4e, $56, $58, $48, $2b, $0f, $fc, $f6, $f6, $ec, $da, $c7, $c6
10431     D1 D4 CA C6 
10435     C8 CF CF C3 
10439     B3 A6 9A 95 
1043d     9C AC BF CE | 	byte	$d1, $d4, $ca, $c6, $c8, $cf, $cf, $c3, $b3, $a6, $9a, $95, $9c, $ac, $bf, $ce
10441     D5 DA E3 F1 
10445     FF 08 09 04 
10449     06 11 1F 27 
1044d     22 18 12 15 | 	byte	$d5, $da, $e3, $f1, $ff, $08, $09, $04, $06, $11, $1f, $27, $22, $18, $12, $15
10451     16 11 02 EB 
10455     DC DD E9 F3 
10459     F2 E6 DC DE 
1045d     E9 F6 F9 F0 | 	byte	$16, $11, $02, $eb, $dc, $dd, $e9, $f3, $f2, $e6, $dc, $de, $e9, $f6, $f9, $f0
10461     E8 E3 E5 E7 
10465     E1 CB B6 AA 
10469     AA B2 BE BD 
1046d     B4 A9 9E 99 | 	byte	$e8, $e3, $e5, $e7, $e1, $cb, $b6, $aa, $aa, $b2, $be, $bd, $b4, $a9, $9e, $99
10471     9A 9B A1 AC 
10475     B7 C2 CF D7 
10479     D4 D5 DE F3 
1047d     0B 1B 1B 14 | 	byte	$9a, $9b, $a1, $ac, $b7, $c2, $cf, $d7, $d4, $d5, $de, $f3, $0b, $1b, $1b, $14
10481     12 14 1B 22 
10485     26 25 2E 41 
10489     50 4C 3C 33 
1048d     2F 33 34 28 | 	byte	$12, $14, $1b, $22, $26, $25, $2e, $41, $50, $4c, $3c, $33, $2f, $33, $34, $28
10491     1C 19 1E 1D 
10495     14 06 FA F8 
10499     FB FD FA FB 
1049d     02 0A 0F 10 | 	byte	$1c, $19, $1e, $1d, $14, $06, $fa, $f8, $fb, $fd, $fa, $fb, $02, $0a, $0f, $10
104a1     0E 0A 07 05 
104a5     FD F5 EB E5 
104a9     E3 EE FD 06 
104ad     0D 13 19 24 | 	byte	$0e, $0a, $07, $05, $fd, $f5, $eb, $e5, $e3, $ee, $fd, $06, $0d, $13, $19, $24
104b1     32 3B 41 40 
104b5     38 2D 1F 0A 
104b9     F2 E2 E2 E8 
104bd     ED E9 E8 EE | 	byte	$32, $3b, $41, $40, $38, $2d, $1f, $0a, $f2, $e2, $e2, $e8, $ed, $e9, $e8, $ee
104c1     FB 0E 1D 27 
104c5     2A 26 26 2E 
104c9     37 44 52 55 
104cd     4C 48 49 48 | 	byte	$fb, $0e, $1d, $27, $2a, $26, $26, $2e, $37, $44, $52, $55, $4c, $48, $49, $48
104d1     45 3A 26 17 
104d5     11 0C 01 EF 
104d9     E8 EF F4 00 
104dd     01 F5 EA E9 | 	byte	$45, $3a, $26, $17, $11, $0c, $01, $ef, $e8, $ef, $f4, $00, $01, $f5, $ea, $e9
104e1     EE F0 ED DE 
104e5     E3 EB F4 F5 
104e9     FD 0A 17 1A 
104ed     0C F6 EF F8 | 	byte	$ee, $f0, $ed, $de, $e3, $eb, $f4, $f5, $fd, $0a, $17, $1a, $0c, $f6, $ef, $f8
104f1     02 09 0E 11 
104f5     15 18 14 0C 
104f9     05 03 06 07 
104fd     00 F6 ED EA | 	byte	$02, $09, $0e, $11, $15, $18, $14, $0c, $05, $03, $06, $07, $00, $f6, $ed, $ea
10501     F1 F3 F6 FB 
10505     03 0A 11 12 
10509     0F 08 03 FE 
1050d     FA F7 F8 F9 | 	byte	$f1, $f3, $f6, $fb, $03, $0a, $11, $12, $0f, $08, $03, $fe, $fa, $f7, $f8, $f9
10511     FC 00 FF FE 
10515     07 12 19 20 
10519     29 35 41 50 
1051d     5D 65 65 65 | 	byte	$fc, $00, $ff, $fe, $07, $12, $19, $20, $29, $35, $41, $50, $5d, $65, $65, $65
10521     50 34 1E 12 
10525     0E 09 F8 E5 
10529     DC E8 F3 02 
1052d     08 05 05 02 | 	byte	$50, $34, $1e, $12, $0e, $09, $f8, $e5, $dc, $e8, $f3, $02, $08, $05, $05, $02
10531     01 FD EB CF 
10535     BD B8 B7 B5 
10539     AE AA AE B4 
1053d     C2 C5 C6 C4 | 	byte	$01, $fd, $eb, $cf, $bd, $b8, $b7, $b5, $ae, $aa, $ae, $b4, $c2, $c5, $c6, $c4
10541     BA B6 C0 CB 
10545     C8 C0 BC C3 
10549     D0 DE E8 ED 
1054d     ED EC EC E7 | 	byte	$ba, $b6, $c0, $cb, $c8, $c0, $bc, $c3, $d0, $de, $e8, $ed, $ed, $ec, $ec, $e7
10551     DA CC C4 C3 
10555     C8 C6 CB D3 
10559     E6 FA 11 24 
1055d     2C 2F 27 1B | 	byte	$da, $cc, $c4, $c3, $c8, $c6, $cb, $d3, $e6, $fa, $11, $24, $2c, $2f, $27, $1b
10561     0D 00 F6 F4 
10565     F7 F6 EC DF 
10569     D6 D0 D9 E2 
1056d     E8 ED F6 03 | 	byte	$0d, $00, $f6, $f4, $f7, $f6, $ec, $df, $d6, $d0, $d9, $e2, $e8, $ed, $f6, $03
10571     08 0E 0E 07 
10575     FF F7 E7 DA 
10579     D1 CA C7 CA 
1057d     CC D5 E2 EC | 	byte	$08, $0e, $0e, $07, $ff, $f7, $e7, $da, $d1, $ca, $c7, $ca, $cc, $d5, $e2, $ec
10581     F3 FC 0E 1D 
10585     1F 1A 0F 08 
10589     08 0E 13 16 
1058d     1C 23 2B 37 | 	byte	$f3, $fc, $0e, $1d, $1f, $1a, $0f, $08, $08, $0e, $13, $16, $1c, $23, $2b, $37
10591     38 2A 19 06 
10595     F8 F1 ED EC 
10599     F5 04 12 1C 
1059d     27 2F 35 36 | 	byte	$38, $2a, $19, $06, $f8, $f1, $ed, $ec, $f5, $04, $12, $1c, $27, $2f, $35, $36
105a1     2D 1E 12 12 
105a5     16 0E F8 E4 
105a9     DA E3 F0 F9 
105ad     FC FE FE FA | 	byte	$2d, $1e, $12, $12, $16, $0e, $f8, $e4, $da, $e3, $f0, $f9, $fc, $fe, $fe, $fa
105b1     F8 F9 F9 FA 
105b5     F6 EB E2 DD 
105b9     DB E0 E3 E0 
105bd     E0 DE DE E4 | 	byte	$f8, $f9, $f9, $fa, $f6, $eb, $e2, $dd, $db, $e0, $e3, $e0, $e0, $de, $de, $e4
105c1     F3 04 17 2B 
105c5     3F 51 5B 5B 
105c9     58 4F 46 44 
105cd     47 4B 4C 4C | 	byte	$f3, $04, $17, $2b, $3f, $51, $5b, $5b, $58, $4f, $46, $44, $47, $4b, $4c, $4c
105d1     48 45 45 44 
105d5     41 3E 40 44 
105d9     42 34 24 18 
105dd     12 12 16 16 | 	byte	$48, $45, $45, $44, $41, $3e, $40, $44, $42, $34, $24, $18, $12, $12, $16, $16
105e1     0B 00 F7 F1 
105e5     F0 EF ED DC 
105e9     C9 BB BC C9 
105ed     D8 DA D7 E1 | 	byte	$0b, $00, $f7, $f1, $f0, $ef, $ed, $dc, $c9, $bb, $bc, $c9, $d8, $da, $d7, $e1
105f1     F7 15 2D 37 
105f5     30 24 1E 21 
105f9     25 23 16 07 
105fd     FF 01 00 FA | 	byte	$f7, $15, $2d, $37, $30, $24, $1e, $21, $25, $23, $16, $07, $ff, $01, $00, $fa
10601     F7 FD 07 0C 
10605     0A 06 07 07 
10609     08 0A 0F 10 
1060d     0E 09 02 FB | 	byte	$f7, $fd, $07, $0c, $0a, $06, $07, $07, $08, $0a, $0f, $10, $0e, $09, $02, $fb
10611     F3 F2 F9 03 
10615     08 06 07 10 
10619     21 2F 32 2B 
1061d     23 23 24 17 | 	byte	$f3, $f2, $f9, $03, $08, $06, $07, $10, $21, $2f, $32, $2b, $23, $23, $24, $17
10621     FC E3 D5 DA 
10625     DB DA D5 D4 
10629     DA DD D8 CF 
1062d     C8 C5 C4 C6 | 	byte	$fc, $e3, $d5, $da, $db, $da, $d5, $d4, $da, $dd, $d8, $cf, $c8, $c5, $c4, $c6
10631     D0 DB E7 F1 
10635     FC 03 0C 16 
10639     1E 27 2A 22 
1063d     11 09 FE F8 | 	byte	$d0, $db, $e7, $f1, $fc, $03, $0c, $16, $1e, $27, $2a, $22, $11, $09, $fe, $f8
10641     F1 EE EA E5 
10645     DE D7 D4 D2 
10649     D3 D2 C7 B6 
1064d     AD A3 A3 A9 | 	byte	$f1, $ee, $ea, $e5, $de, $d7, $d4, $d2, $d3, $d2, $c7, $b6, $ad, $a3, $a3, $a9
10651     AC AA A9 B1 
10655     BF D3 EB F9 
10659     F9 F9 FE 07 
1065d     13 21 2B 2B | 	byte	$ac, $aa, $a9, $b1, $bf, $d3, $eb, $f9, $f9, $f9, $fe, $07, $13, $21, $2b, $2b
10661     21 1B 19 18 
10665     14 07 FF FF 
10669     FD F8 F6 F8 
1066d     FB 00 04 FF | 	byte	$21, $1b, $19, $18, $14, $07, $ff, $ff, $fd, $f8, $f6, $f8, $fb, $00, $04, $ff
10671     F7 E8 E3 DB 
10675     D8 D0 CF D1 
10679     D1 CF D0 D7 
1067d     E1 E1 D9 DC | 	byte	$f7, $e8, $e3, $db, $d8, $d0, $cf, $d1, $d1, $cf, $d0, $d7, $e1, $e1, $d9, $dc
10681     F1 01 00 ED 
10685     D8 DD EB F4 
10689     F4 EC E0 E7 
1068d     EA E9 DE D1 | 	byte	$f1, $01, $00, $ed, $d8, $dd, $eb, $f4, $f4, $ec, $e0, $e7, $ea, $e9, $de, $d1
10691     CA CD D6 DB 
10695     D5 D3 DD EF 
10699     04 19 27 30 
1069d     3B 47 50 57 | 	byte	$ca, $cd, $d6, $db, $d5, $d3, $dd, $ef, $04, $19, $27, $30, $3b, $47, $50, $57
106a1     55 4B 43 44 
106a5     47 44 36 24 
106a9     11 08 0B 12 
106ad     17 18 12 08 | 	byte	$55, $4b, $43, $44, $47, $44, $36, $24, $11, $08, $0b, $12, $17, $18, $12, $08
106b1     02 FF FD FD 
106b5     F9 F4 FE 0E 
106b9     17 16 0E 06 
106bd     FC FB FE 05 | 	byte	$02, $ff, $fd, $fd, $f9, $f4, $fe, $0e, $17, $16, $0e, $06, $fc, $fb, $fe, $05
106c1     0C 11 11 0D 
106c5     0C 0F 1B 29 
106c9     34 33 2C 27 
106cd     23 21 25 2E | 	byte	$0c, $11, $11, $0d, $0c, $0f, $1b, $29, $34, $33, $2c, $27, $23, $21, $25, $2e
106d1     35 36 36 3A 
106d5     3F 42 46 49 
106d9     46 36 1F 0D 
106dd     08 11 19 13 | 	byte	$35, $36, $36, $3a, $3f, $42, $46, $49, $46, $36, $1f, $0d, $08, $11, $19, $13
106e1     04 FA F1 E6 
106e5     E2 DB CF C7 
106e9     C7 CC CC D3 
106ed     DC E9 F4 F7 | 	byte	$04, $fa, $f1, $e6, $e2, $db, $cf, $c7, $c7, $cc, $cc, $d3, $dc, $e9, $f4, $f7
106f1     F8 01 0F 14 
106f5     0C FF F1 E7 
106f9     E4 E5 E5 E4 
106fd     E7 EF F7 FB | 	byte	$f8, $01, $0f, $14, $0c, $ff, $f1, $e7, $e4, $e5, $e5, $e4, $e7, $ef, $f7, $fb
10701     FB FA 01 0C 
10705     0F 06 FD 02 
10709     14 29 32 2F 
1070d     31 3B 49 53 | 	byte	$fb, $fa, $01, $0c, $0f, $06, $fd, $02, $14, $29, $32, $2f, $31, $3b, $49, $53
10711     56 52 43 32 
10715     22 1E 21 25 
10719     23 20 1F 22 
1071d     28 2B 23 0F | 	byte	$56, $52, $43, $32, $22, $1e, $21, $25, $23, $20, $1f, $22, $28, $2b, $23, $0f
10721     FC F7 F8 F7 
10725     E9 D7 C9 C5 
10729     C6 C8 C9 C6 
1072d     C4 C6 CE D6 | 	byte	$fc, $f7, $f8, $f7, $e9, $d7, $c9, $c5, $c6, $c8, $c9, $c6, $c4, $c6, $ce, $d6
10731     DD E7 F9 0E 
10735     1E 23 22 23 
10739     28 2A 2C 2C 
1073d     29 20 15 08 | 	byte	$dd, $e7, $f9, $0e, $1e, $23, $22, $23, $28, $2a, $2c, $2c, $29, $20, $15, $08
10741     FB F7 F4 F0 
10745     DA C2 B1 A1 
10749     97 92 8C 85 
1074d     80 80 80 84 | 	byte	$fb, $f7, $f4, $f0, $da, $c2, $b1, $a1, $97, $92, $8c, $85, $80, $80, $80, $84
10751     93 A2 B2 C8 
10755     DC E9 F1 F4 
10759     F4 F1 F5 F8 
1075d     04 12 13 0E | 	byte	$93, $a2, $b2, $c8, $dc, $e9, $f1, $f4, $f4, $f1, $f5, $f8, $04, $12, $13, $0e
10761     0F 1A 23 24 
10765     16 06 F4 E4 
10769     D6 CA C5 C5 
1076d     CE D4 D7 DE | 	byte	$0f, $1a, $23, $24, $16, $06, $f4, $e4, $d6, $ca, $c5, $c5, $ce, $d4, $d7, $de
10771     EF FD 03 FE 
10775     F5 F0 F6 05 
10779     11 18 19 13 
1077d     11 17 1E 1F | 	byte	$ef, $fd, $03, $fe, $f5, $f0, $f6, $05, $11, $18, $19, $13, $11, $17, $1e, $1f
10781     1B 17 14 0F 
10785     03 F2 E0 DC 
10789     E1 E2 D8 CC 
1078d     C3 C7 D9 E2 | 	byte	$1b, $17, $14, $0f, $03, $f2, $e0, $dc, $e1, $e2, $d8, $cc, $c3, $c7, $d9, $e2
10791     DE D7 DB E7 
10795     F2 F7 F8 FD 
10799     0D 1B 21 1C 
1079d     18 1A 25 39 | 	byte	$de, $d7, $db, $e7, $f2, $f7, $f8, $fd, $0d, $1b, $21, $1c, $18, $1a, $25, $39
107a1     4B 50 50 51 
107a5     52 54 50 45 
107a9     33 24 18 10 
107ad     0A 05 00 FA | 	byte	$4b, $50, $50, $51, $52, $54, $50, $45, $33, $24, $18, $10, $0a, $05, $00, $fa
107b1     FB FE 04 0E 
107b5     14 11 0A 01 
107b9     F7 F1 ED EA 
107bd     E0 DE E0 E4 | 	byte	$fb, $fe, $04, $0e, $14, $11, $0a, $01, $f7, $f1, $ed, $ea, $e0, $de, $e0, $e4
107c1     E6 E9 F7 0E 
107c5     1E 1D 0B F5 
107c9     EB E4 DA CF 
107cd     CE DB EB F9 | 	byte	$e6, $e9, $f7, $0e, $1e, $1d, $0b, $f5, $eb, $e4, $da, $cf, $ce, $db, $eb, $f9
107d1     0A 1D 2E 38 
107d5     3E 3D 3C 39 
107d9     35 2D 21 13 
107dd     06 FF 01 09 | 	byte	$0a, $1d, $2e, $38, $3e, $3d, $3c, $39, $35, $2d, $21, $13, $06, $ff, $01, $09
107e1     1A 2F 41 4D 
107e5     4E 4A 44 3D 
107e9     34 26 10 F4 
107ed     E2 E8 EF F7 | 	byte	$1a, $2f, $41, $4d, $4e, $4a, $44, $3d, $34, $26, $10, $f4, $e2, $e8, $ef, $f7
107f1     F8 FB 04 12 
107f5     1C 14 00 EE 
107f9     EB EA E2 D7 
107fd     CE C7 CA D5 | 	byte	$f8, $fb, $04, $12, $1c, $14, $00, $ee, $eb, $ea, $e2, $d7, $ce, $c7, $ca, $d5
10801     E3 F3 02 11 
10805     24 35 43 47 
10809     41 37 2E 2B 
1080d     2B 31 35 38 | 	byte	$e3, $f3, $02, $11, $24, $35, $43, $47, $41, $37, $2e, $2b, $2b, $31, $35, $38
10811     3C 3D 3A 38 
10815     34 31 33 37 
10819     33 28 17 F9 
1081d     E5 DA DA E0 | 	byte	$3c, $3d, $3a, $38, $34, $31, $33, $37, $33, $28, $17, $f9, $e5, $da, $da, $e0
10821     E2 E4 E5 EB 
10825     F1 F5 F0 E3 
10829     DD D8 CD BB 
1082d     B1 B3 C2 CD | 	byte	$e2, $e4, $e5, $eb, $f1, $f5, $f0, $e3, $dd, $d8, $cd, $bb, $b1, $b3, $c2, $cd
10831     D1 D8 EA F8 
10835     03 06 02 01 
10839     02 04 FD EC 
1083d     E4 DE D8 D4 | 	byte	$d1, $d8, $ea, $f8, $03, $06, $02, $01, $02, $04, $fd, $ec, $e4, $de, $d8, $d4
10841     D3 CB BF B6 
10845     B1 B6 C0 BE 
10849     B0 9D 8E 8F 
1084d     9B A7 BA CD | 	byte	$d3, $cb, $bf, $b6, $b1, $b6, $c0, $be, $b0, $9d, $8e, $8f, $9b, $a7, $ba, $cd
10851     E3 F2 FF 0C 
10855     1D 28 2F 30 
10859     2C 23 14 0B 
1085d     06 03 05 0A | 	byte	$e3, $f2, $ff, $0c, $1d, $28, $2f, $30, $2c, $23, $14, $0b, $06, $03, $05, $0a
10861     13 1B 1F 22 
10865     1F 1A 11 09 
10869     FA E6 CF B9 
1086d     B1 BA C8 D1 | 	byte	$13, $1b, $1f, $22, $1f, $1a, $11, $09, $fa, $e6, $cf, $b9, $b1, $ba, $c8, $d1
10871     DA E8 F4 00 
10875     0B 18 24 2D 
10879     2B 22 19 15 
1087d     0F 0C 08 06 | 	byte	$da, $e8, $f4, $00, $0b, $18, $24, $2d, $2b, $22, $19, $15, $0f, $0c, $08, $06
10881     08 0B 11 10 
10885     07 F4 EC E3 
10889     DA D3 C9 BD 
1088d     BA C7 D7 E7 | 	byte	$08, $0b, $11, $10, $07, $f4, $ec, $e3, $da, $d3, $c9, $bd, $ba, $c7, $d7, $e7
10891     ED EB E1 E8 
10895     F5 03 0A 06 
10899     FA E9 E2 DF 
1089d     D8 DB EF 06 | 	byte	$ed, $eb, $e1, $e8, $f5, $03, $0a, $06, $fa, $e9, $e2, $df, $d8, $db, $ef, $06
108a1     18 1D 23 2C 
108a5     32 35 39 34 
108a9     25 15 09 03 
108ad     07 0C 0B 10 | 	byte	$18, $1d, $23, $2c, $32, $35, $39, $34, $25, $15, $09, $03, $07, $0c, $0b, $10
108b1     19 1F 20 23 
108b5     27 2A 2A 27 
108b9     19 0A 05 0B 
108bd     16 1C 17 0C | 	byte	$19, $1f, $20, $23, $27, $2a, $2a, $27, $19, $0a, $05, $0b, $16, $1c, $17, $0c
108c1     01 FE FC FB 
108c5     F6 F6 F3 ED 
108c9     EB ED EF F7 
108cd     03 0E 14 19 | 	byte	$01, $fe, $fc, $fb, $f6, $f6, $f3, $ed, $eb, $ed, $ef, $f7, $03, $0e, $14, $19
108d1     1C 19 14 13 
108d5     17 1E 24 28 
108d9     27 22 22 26 
108dd     2A 2B 27 22 | 	byte	$1c, $19, $14, $13, $17, $1e, $24, $28, $27, $22, $22, $26, $2a, $2b, $27, $22
108e1     2A 42 5A 5C 
108e5     4B 38 35 3F 
108e9     49 43 27 0B 
108ed     FB F7 F7 F4 | 	byte	$2a, $42, $5a, $5c, $4b, $38, $35, $3f, $49, $43, $27, $0b, $fb, $f7, $f7, $f4
108f1     E7 D8 DA E7 
108f5     EC E9 DE DF 
108f9     E5 ED F4 F5 
108fd     ED E9 E9 EE | 	byte	$e7, $d8, $da, $e7, $ec, $e9, $de, $df, $e5, $ed, $f4, $f5, $ed, $e9, $e9, $ee
10901     F6 FD 00 02 
10905     07 04 F5 E3 
10909     D1 CA C9 D4 
1090d     E5 F6 03 11 | 	byte	$f6, $fd, $00, $02, $07, $04, $f5, $e3, $d1, $ca, $c9, $d4, $e5, $f6, $03, $11
10911     1B 24 25 21 
10915     21 25 29 24 
10919     1A 08 EF E9 
1091d     F8 0E 10 02 | 	byte	$1b, $24, $25, $21, $21, $25, $29, $24, $1a, $08, $ef, $e9, $f8, $0e, $10, $02
10921     FD 0D 27 34 
10925     2F 21 15 15 
10929     1B 17 04 EC 
1092d     E7 F0 FC 03 | 	byte	$fd, $0d, $27, $34, $2f, $21, $15, $15, $1b, $17, $04, $ec, $e7, $f0, $fc, $03
10931     01 F9 F9 00 
10935     02 FB EE E6 
10939     E3 E0 D7 C9 
1093d     BA B1 A9 A7 | 	byte	$01, $f9, $f9, $00, $02, $fb, $ee, $e6, $e3, $e0, $d7, $c9, $ba, $b1, $a9, $a7
10941     AA AA A0 99 
10945     97 97 9D A8 
10949     B3 BD CD E6 
1094d     FC 07 0C 0D | 	byte	$aa, $aa, $a0, $99, $97, $97, $9d, $a8, $b3, $bd, $cd, $e6, $fc, $07, $0c, $0d
10951     0E 15 1B 20 
10955     22 23 1E 1C 
10959     1D 1A 12 0E 
1095d     0D 08 FF F7 | 	byte	$0e, $15, $1b, $20, $22, $23, $1e, $1c, $1d, $1a, $12, $0e, $0d, $08, $ff, $f7
10961     F3 FA 08 11 
10965     14 11 0A FF 
10969     EF DE D0 C8 
1096d     BF AB 90 84 | 	byte	$f3, $fa, $08, $11, $14, $11, $0a, $ff, $ef, $de, $d0, $c8, $bf, $ab, $90, $84
10971     89 96 A4 B4 
10975     C7 E0 F7 02 
10979     08 0D 14 1C 
1097d     1C 14 07 FD | 	byte	$89, $96, $a4, $b4, $c7, $e0, $f7, $02, $08, $0d, $14, $1c, $1c, $14, $07, $fd
10981     00 06 08 01 
10985     F6 EB E6 EB 
10989     ED EE EF EC 
1098d     EA E9 E8 EA | 	byte	$00, $06, $08, $01, $f6, $eb, $e6, $eb, $ed, $ee, $ef, $ec, $ea, $e9, $e8, $ea
10991     F1 03 17 25 
10995     31 37 37 35 
10999     31 2E 2E 2C 
1099d     1E 0A F8 F3 | 	byte	$f1, $03, $17, $25, $31, $37, $37, $35, $31, $2e, $2e, $2c, $1e, $0a, $f8, $f3
109a1     F7 00 0A 11 
109a5     13 18 22 2A 
109a9     30 32 29 1B 
109ad     13 0B 00 F8 | 	byte	$f7, $00, $0a, $11, $13, $18, $22, $2a, $30, $32, $29, $1b, $13, $0b, $00, $f8
109b1     F9 FF 09 12 
109b5     19 27 3A 4C 
109b9     57 55 4A 39 
109bd     29 1F 18 0C | 	byte	$f9, $ff, $09, $12, $19, $27, $3a, $4c, $57, $55, $4a, $39, $29, $1f, $18, $0c
109c1     F8 E5 CE C0 
109c5     BD C7 D4 E1 
109c9     E5 E8 F0 07 
109cd     1F 30 39 3A | 	byte	$f8, $e5, $ce, $c0, $bd, $c7, $d4, $e1, $e5, $e8, $f0, $07, $1f, $30, $39, $3a
109d1     36 2E 1D 0A 
109d5     FF 07 14 19 
109d9     14 08 01 03 
109dd     06 04 FB F6 | 	byte	$36, $2e, $1d, $0a, $ff, $07, $14, $19, $14, $08, $01, $03, $06, $04, $fb, $f6
109e1     02 11 19 19 
109e5     15 12 17 1F 
109e9     24 21 1A 17 
109ed     16 13 0C 01 | 	byte	$02, $11, $19, $19, $15, $12, $17, $1f, $24, $21, $1a, $17, $16, $13, $0c, $01
109f1     F8 F9 01 00 
109f5     F9 F3 F3 FA 
109f9     00 01 01 03 
109fd     06 05 02 F9 | 	byte	$f8, $f9, $01, $00, $f9, $f3, $f3, $fa, $00, $01, $01, $03, $06, $05, $02, $f9
10a01     EF F1 F9 05 
10a05     04 F6 E7 E9 
10a09     F6 08 10 0A 
10a0d     05 08 14 1F | 	byte	$ef, $f1, $f9, $05, $04, $f6, $e7, $e9, $f6, $08, $10, $0a, $05, $08, $14, $1f
10a11     2B 33 31 29 
10a15     27 29 24 18 
10a19     09 FF FB F2 
10a1d     E9 DA D4 DD | 	byte	$2b, $33, $31, $29, $27, $29, $24, $18, $09, $ff, $fb, $f2, $e9, $da, $d4, $dd
10a21     F4 16 3A 54 
10a25     5D 5C 60 64 
10a29     64 57 31 0B 
10a2d     EF E5 EF EE | 	byte	$f4, $16, $3a, $54, $5d, $5c, $60, $64, $64, $57, $31, $0b, $ef, $e5, $ef, $ee
10a31     E5 DC E0 EB 
10a35     FC FE ED DA 
10a39     C8 BF B6 A6 
10a3d     88 80 80 80 | 	byte	$e5, $dc, $e0, $eb, $fc, $fe, $ed, $da, $c8, $bf, $b6, $a6, $88, $80, $80, $80
10a41     80 82 88 8F 
10a45     9C A8 B0 B1 
10a49     B3 B8 C0 C6 
10a4d     CE DA EB FD | 	byte	$80, $82, $88, $8f, $9c, $a8, $b0, $b1, $b3, $b8, $c0, $c6, $ce, $da, $eb, $fd
10a51     0F 1B 1F 1A 
10a55     14 17 1E 25 
10a59     26 1F 19 19 
10a5d     19 18 16 17 | 	byte	$0f, $1b, $1f, $1a, $14, $17, $1e, $25, $26, $1f, $19, $19, $19, $18, $16, $17
10a61     18 14 0C 0C 
10a65     0D 04 EE E0 
10a69     E3 E5 DE CD 
10a6d     BF C1 C6 CE | 	byte	$18, $14, $0c, $0c, $0d, $04, $ee, $e0, $e3, $e5, $de, $cd, $bf, $c1, $c6, $ce
10a71     D4 D6 D9 EA 
10a75     FB 03 01 03 
10a79     0F 1E 2D 2E 
10a7d     1E 0D 03 FD | 	byte	$d4, $d6, $d9, $ea, $fb, $03, $01, $03, $0f, $1e, $2d, $2e, $1e, $0d, $03, $fd
10a81     F1 DE CA C0 
10a85     C1 C6 CE D7 
10a89     E3 EF 00 19 
10a8d     31 3D 41 43 | 	byte	$f1, $de, $ca, $c0, $c1, $c6, $ce, $d7, $e3, $ef, $00, $19, $31, $3d, $41, $43
10a91     45 46 43 3C 
10a95     35 30 34 39 
10a99     3D 3A 32 25 
10a9d     16 0C 04 00 | 	byte	$45, $46, $43, $3c, $35, $30, $34, $39, $3d, $3a, $32, $25, $16, $0c, $04, $00
10aa1     03 0C 13 13 
10aa5     08 F5 E7 E1 
10aa9     E1 EB ED E7 
10aad     DB D5 DA E1 | 	byte	$03, $0c, $13, $13, $08, $f5, $e7, $e1, $e1, $eb, $ed, $e7, $db, $d5, $da, $e1
10ab1     E5 EB F9 0F 
10ab5     20 23 1E 1B 
10ab9     1C 17 0A FB 
10abd     EC DB CE CD | 	byte	$e5, $eb, $f9, $0f, $20, $23, $1e, $1b, $1c, $17, $0a, $fb, $ec, $db, $ce, $cd
10ac1     E1 ED F0 EC 
10ac5     EF FD 10 18 
10ac9     15 13 19 23 
10acd     2E 30 2E 31 | 	byte	$e1, $ed, $f0, $ec, $ef, $fd, $10, $18, $15, $13, $19, $23, $2e, $30, $2e, $31
10ad1     3F 4B 4D 3C 
10ad5     2A 23 2A 30 
10ad9     2A 1C 10 0C 
10add     0E 15 17 18 | 	byte	$3f, $4b, $4d, $3c, $2a, $23, $2a, $30, $2a, $1c, $10, $0c, $0e, $15, $17, $18
10ae1     26 32 33 31 
10ae5     2E 27 21 23 
10ae9     20 16 06 F9 
10aed     EE ED F9 05 | 	byte	$26, $32, $33, $31, $2e, $27, $21, $23, $20, $16, $06, $f9, $ee, $ed, $f9, $05
10af1     07 04 FA E8 
10af5     E0 EA FF 11 
10af9     18 12 07 05 
10afd     09 07 FE F8 | 	byte	$07, $04, $fa, $e8, $e0, $ea, $ff, $11, $18, $12, $07, $05, $09, $07, $fe, $f8
10b01     F3 F0 E5 DC 
10b05     E5 F7 13 24 
10b09     2A 26 22 2A 
10b0d     37 3C 2B 0C | 	byte	$f3, $f0, $e5, $dc, $e5, $f7, $13, $24, $2a, $26, $22, $2a, $37, $3c, $2b, $0c
10b11     F5 E5 D1 C4 
10b15     C2 C9 D6 E3 
10b19     EB E7 DD D9 
10b1d     E0 EB F3 F2 | 	byte	$f5, $e5, $d1, $c4, $c2, $c9, $d6, $e3, $eb, $e7, $dd, $d9, $e0, $eb, $f3, $f2
10b21     F6 02 13 25 
10b25     32 39 40 44 
10b29     40 37 27 18 
10b2d     0F 09 FD E7 | 	byte	$f6, $02, $13, $25, $32, $39, $40, $44, $40, $37, $27, $18, $0f, $09, $fd, $e7
10b31     CD BA B6 BA 
10b35     BD BD BA B7 
10b39     B3 AF A7 A2 
10b3d     9A 95 9A A5 | 	byte	$cd, $ba, $b6, $ba, $bd, $bd, $ba, $b7, $b3, $af, $a7, $a2, $9a, $95, $9a, $a5
10b41     AF B7 C7 E1 
10b45     F8 08 0E 0C 
10b49     FF F8 F4 F3 
10b4d     F0 ED EA EA | 	byte	$af, $b7, $c7, $e1, $f8, $08, $0e, $0c, $ff, $f8, $f4, $f3, $f0, $ed, $ea, $ea
10b51     F0 F9 FE 04 
10b55     0A 09 02 02 
10b59     0B 0B 03 F9 
10b5d     F2 F5 02 0D | 	byte	$f0, $f9, $fe, $04, $0a, $09, $02, $02, $0b, $0b, $03, $f9, $f2, $f5, $02, $0d
10b61     14 1C 27 33 
10b65     3A 36 23 11 
10b69     08 0A 05 F6 
10b6d     DE D3 DA E3 | 	byte	$14, $1c, $27, $33, $3a, $36, $23, $11, $08, $0a, $05, $f6, $de, $d3, $da, $e3
10b71     E2 D9 D5 D6 
10b75     DB E4 EA E5 
10b79     D7 CE C9 C0 
10b7d     B6 AF B1 B9 | 	byte	$e2, $d9, $d5, $d6, $db, $e4, $ea, $e5, $d7, $ce, $c9, $c0, $b6, $af, $b1, $b9
10b81     C1 CA D2 DD 
10b85     E6 E8 E6 E5 
10b89     F1 04 12 13 
10b8d     11 13 1D 24 | 	byte	$c1, $ca, $d2, $dd, $e6, $e8, $e6, $e5, $f1, $04, $12, $13, $11, $13, $1d, $24
10b91     25 21 24 35 
10b95     49 51 49 3C 
10b99     35 35 34 28 
10b9d     17 07 02 06 | 	byte	$25, $21, $24, $35, $49, $51, $49, $3c, $35, $35, $34, $28, $17, $07, $02, $06
10ba1     07 00 EE E2 
10ba5     EB FE 17 1F 
10ba9     1B 10 02 01 
10bad     09 12 18 18 | 	byte	$07, $00, $ee, $e2, $eb, $fe, $17, $1f, $1b, $10, $02, $01, $09, $12, $18, $18
10bb1     13 09 00 01 
10bb5     07 14 1C 18 
10bb9     11 09 FC F1 
10bbd     ED EC E6 DD | 	byte	$13, $09, $00, $01, $07, $14, $1c, $18, $11, $09, $fc, $f1, $ed, $ec, $e6, $dd
10bc1     DA DC DE E2 
10bc5     EE 05 1A 27 
10bc9     27 2A 30 38 
10bcd     3D 45 4D 4A | 	byte	$da, $dc, $de, $e2, $ee, $05, $1a, $27, $27, $2a, $30, $38, $3d, $45, $4d, $4a
10bd1     3C 2F 28 2E 
10bd5     3F 50 5D 5E 
10bd9     54 44 38 36 
10bdd     37 32 22 0E | 	byte	$3c, $2f, $28, $2e, $3f, $50, $5d, $5e, $54, $44, $38, $36, $37, $32, $22, $0e
10be1     F8 F2 EB EA 
10be5     EA EB EA E0 
10be9     D5 CD CD D3 
10bed     D8 DB D8 CF | 	byte	$f8, $f2, $eb, $ea, $ea, $eb, $ea, $e0, $d5, $cd, $cd, $d3, $d8, $db, $d8, $cf
10bf1     C9 C6 C3 C7 
10bf5     DB F0 01 0A 
10bf9     06 FF F6 F2 
10bfd     EF E7 DC D3 | 	byte	$c9, $c6, $c3, $c7, $db, $f0, $01, $0a, $06, $ff, $f6, $f2, $ef, $e7, $dc, $d3
10c01     CF D0 D5 E4 
10c05     F6 F7 FA FF 
10c09     0D 1B 1D 1B 
10c0d     1F 2A 2F 32 | 	byte	$cf, $d0, $d5, $e4, $f6, $f7, $fa, $ff, $0d, $1b, $1d, $1b, $1f, $2a, $2f, $32
10c11     33 33 37 3F 
10c15     49 52 57 53 
10c19     49 47 4D 4B 
10c1d     46 40 36 2B | 	byte	$33, $33, $37, $3f, $49, $52, $57, $53, $49, $47, $4d, $4b, $46, $40, $36, $2b
10c21     1F 12 02 EE 
10c25     E3 DE D6 C4 
10c29     AF A5 AA BE 
10c2d     CB C2 B6 B1 | 	byte	$1f, $12, $02, $ee, $e3, $de, $d6, $c4, $af, $a5, $aa, $be, $cb, $c2, $b6, $b1
10c31     B9 CC D9 DB 
10c35     D5 CF D1 D8 
10c39     E2 E1 E5 EA 
10c3d     EE ED EC EB | 	byte	$b9, $cc, $d9, $db, $d5, $cf, $d1, $d8, $e2, $e1, $e5, $ea, $ee, $ed, $ec, $eb
10c41     ED F6 F7 E9 
10c45     DB D6 DE E6 
10c49     EE F0 F2 FD 
10c4d     0F 10 05 FB | 	byte	$ed, $f6, $f7, $e9, $db, $d6, $de, $e6, $ee, $f0, $f2, $fd, $0f, $10, $05, $fb
10c51     F0 E2 DA D7 
10c55     D2 CF D7 E7 
10c59     F6 FA F2 F1 
10c5d     01 17 1A 10 | 	byte	$f0, $e2, $da, $d7, $d2, $cf, $d7, $e7, $f6, $fa, $f2, $f1, $01, $17, $1a, $10
10c61     00 EC E6 E7 
10c65     DF DD DA DC 
10c69     E1 E7 ED ED 
10c6d     E6 DE D7 D6 | 	byte	$00, $ec, $e6, $e7, $df, $dd, $da, $dc, $e1, $e7, $ed, $ed, $e6, $de, $d7, $d6
10c71     DA DC D6 D3 
10c75     CE CF DE E5 
10c79     E5 E5 E3 DC 
10c7d     E7 F8 04 08 | 	byte	$da, $dc, $d6, $d3, $ce, $cf, $de, $e5, $e5, $e5, $e3, $dc, $e7, $f8, $04, $08
10c81     0E 1E 2D 3A 
10c85     45 49 4D 58 
10c89     5A 57 4E 42 
10c8d     33 29 28 26 | 	byte	$0e, $1e, $2d, $3a, $45, $49, $4d, $58, $5a, $57, $4e, $42, $33, $29, $28, $26
10c91     1D 12 07 FD 
10c95     FB FE 06 0C 
10c99     11 10 0D 0B 
10c9d     0B 0C 0D 10 | 	byte	$1d, $12, $07, $fd, $fb, $fe, $06, $0c, $11, $10, $0d, $0b, $0b, $0c, $0d, $10
10ca1     1D 2D 39 3C 
10ca5     34 22 11 06 
10ca9     01 FE FA E9 
10cad     D9 D3 DB EA | 	byte	$1d, $2d, $39, $3c, $34, $22, $11, $06, $01, $fe, $fa, $e9, $d9, $d3, $db, $ea
10cb1     F5 F5 F5 02 
10cb5     15 1C 11 00 
10cb9     F2 EE DF D3 
10cbd     C9 C4 C4 CF | 	byte	$f5, $f5, $f5, $02, $15, $1c, $11, $00, $f2, $ee, $df, $d3, $c9, $c4, $c4, $cf
10cc1     E7 01 11 16 
10cc5     13 13 1C 28 
10cc9     2C 26 19 0D 
10ccd     0A 14 1C 1E | 	byte	$e7, $01, $11, $16, $13, $13, $1c, $28, $2c, $26, $19, $0d, $0a, $14, $1c, $1e
10cd1     1C 1B 1C 1F 
10cd5     22 22 23 2B 
10cd9     35 34 27 18 
10cdd     12 19 1B 11 | 	byte	$1c, $1b, $1c, $1f, $22, $22, $23, $2b, $35, $34, $27, $18, $12, $19, $1b, $11
10ce1     00 F4 F2 F2 
10ce5     F8 01 0C 17 
10ce9     20 23 20 1C 
10ced     1D 21 27 26 | 	byte	$00, $f4, $f2, $f2, $f8, $01, $0c, $17, $20, $23, $20, $1c, $1d, $21, $27, $26
10cf1     1E 12 0A 04 
10cf5     00 F8 F0 F1 
10cf9     F2 E3 CD B8 
10cfd     A7 99 90 8E | 	byte	$1e, $12, $0a, $04, $00, $f8, $f0, $f1, $f2, $e3, $cd, $b8, $a7, $99, $90, $8e
10d01     91 9D B3 CF 
10d05     EF 04 19 31 
10d09     52 64 64 60 
10d0d     58 5B 5F 60 | 	byte	$91, $9d, $b3, $cf, $ef, $04, $19, $31, $52, $64, $64, $60, $58, $5b, $5f, $60
10d11     55 42 34 30 
10d15     37 3C 3B 32 
10d19     2B 30 3E 4A 
10d1d     46 2F 14 04 | 	byte	$55, $42, $34, $30, $37, $3c, $3b, $32, $2b, $30, $3e, $4a, $46, $2f, $14, $04
10d21     FA EC CF B4 
10d25     9A 8D 8B 88 
10d29     87 8A 90 97 
10d2d     A3 A6 A4 A1 | 	byte	$fa, $ec, $cf, $b4, $9a, $8d, $8b, $88, $87, $8a, $90, $97, $a3, $a6, $a4, $a1
10d31     A6 B5 BE C4 
10d35     C3 C4 C8 C6 
10d39     BD BE CB DA 
10d3d     E7 EC E5 D8 | 	byte	$a6, $b5, $be, $c4, $c3, $c4, $c8, $c6, $bd, $be, $cb, $da, $e7, $ec, $e5, $d8
10d41     D2 DB E0 D7 
10d45     CC D6 EB 02 
10d49     06 03 0E 2E 
10d4d     51 5F 5A 50 | 	byte	$d2, $db, $e0, $d7, $cc, $d6, $eb, $02, $06, $03, $0e, $2e, $51, $5f, $5a, $50
10d51     4E 52 56 4C 
10d55     37 24 23 33 
10d59     47 4B 41 36 
10d5d     2D 28 1D 09 | 	byte	$4e, $52, $56, $4c, $37, $24, $23, $33, $47, $4b, $41, $36, $2d, $28, $1d, $09
10d61     F4 ED DF C9 
10d65     B5 AC A7 A7 
10d69     AA AE AC AB 
10d6d     B0 BA C1 CD | 	byte	$f4, $ed, $df, $c9, $b5, $ac, $a7, $a7, $aa, $ae, $ac, $ab, $b0, $ba, $c1, $cd
10d71     D4 D7 E2 F5 
10d75     07 0A FC E7 
10d79     E3 F3 02 FB 
10d7d     E9 DD D6 D9 | 	byte	$d4, $d7, $e2, $f5, $07, $0a, $fc, $e7, $e3, $f3, $02, $fb, $e9, $dd, $d6, $d9
10d81     ED 05 11 1A 
10d85     2A 42 56 57 
10d89     4E 49 49 4B 
10d8d     42 31 22 1F | 	byte	$ed, $05, $11, $1a, $2a, $42, $56, $57, $4e, $49, $49, $4b, $42, $31, $22, $1f
10d91     22 28 2D 2A 
10d95     26 27 28 23 
10d99     12 01 F9 FA 
10d9d     F8 F3 E6 E1 | 	byte	$22, $28, $2d, $2a, $26, $27, $28, $23, $12, $01, $f9, $fa, $f8, $f3, $e6, $e1
10da1     D9 D1 CD CD 
10da5     D1 CF CC C5 
10da9     BB B0 A8 AD 
10dad     BF CE D9 E2 | 	byte	$d9, $d1, $cd, $cd, $d1, $cf, $cc, $c5, $bb, $b0, $a8, $ad, $bf, $ce, $d9, $e2
10db1     EF FB 0F 24 
10db5     30 30 2D 31 
10db9     3D 49 4B 48 
10dbd     43 3B 34 35 | 	byte	$ef, $fb, $0f, $24, $30, $30, $2d, $31, $3d, $49, $4b, $48, $43, $3b, $34, $35
10dc1     41 4D 55 58 
10dc5     60 64 5E 53 
10dc9     4D 45 3E 38 
10dcd     31 2B 25 1A | 	byte	$41, $4d, $55, $58, $60, $64, $5e, $53, $4d, $45, $3e, $38, $31, $2b, $25, $1a
10dd1     10 0D 0D 0C 
10dd5     FF F5 EE ED 
10dd9     F5 FF FC EE 
10ddd     E7 EF F8 F7 | 	byte	$10, $0d, $0d, $0c, $ff, $f5, $ee, $ed, $f5, $ff, $fc, $ee, $e7, $ef, $f8, $f7
10de1     F3 E4 E8 F8 
10de5     09 0F 0D 06 
10de9     00 FD FE F8 
10ded     EB E4 E3 ED | 	byte	$f3, $e4, $e8, $f8, $09, $0f, $0d, $06, $00, $fd, $fe, $f8, $eb, $e4, $e3, $ed
10df1     EF EE E1 D7 
10df5     CC C6 C8 D1 
10df9     CB BD B2 AB 
10dfd     AD B6 BD BC | 	byte	$ef, $ee, $e1, $d7, $cc, $c6, $c8, $d1, $cb, $bd, $b2, $ab, $ad, $b6, $bd, $bc
10e01     BE CE EF 0E 
10e05     28 33 36 3D 
10e09     48 51 4D 3B 
10e0d     29 20 1C 18 | 	byte	$be, $ce, $ef, $0e, $28, $33, $36, $3d, $48, $51, $4d, $3b, $29, $20, $1c, $18
10e11     12 0A 06 09 
10e15     15 21 28 28 
10e19     24 19 0C 01 
10e1d     F7 EB DF D3 | 	byte	$12, $0a, $06, $09, $15, $21, $28, $28, $24, $19, $0c, $01, $f7, $eb, $df, $d3
10e21     C9 C8 D1 DF 
10e25     EB F1 F5 F5 
10e29     F2 EE E8 E3 
10e2d     D7 CD C8 C7 | 	byte	$c9, $c8, $d1, $df, $eb, $f1, $f5, $f5, $f2, $ee, $e8, $e3, $d7, $cd, $c8, $c7
10e31     CB D6 DA D7 
10e35     D5 D5 DB DF 
10e39     E0 E0 DA DD 
10e3d     DA CC C6 C9 | 	byte	$cb, $d6, $da, $d7, $d5, $d5, $db, $df, $e0, $e0, $da, $dd, $da, $cc, $c6, $c9
10e41     D9 E9 F9 0C 
10e45     21 36 44 46 
10e49     43 3F 3A 34 
10e4d     33 30 27 2A | 	byte	$d9, $e9, $f9, $0c, $21, $36, $44, $46, $43, $3f, $3a, $34, $33, $30, $27, $2a
10e51     2C 2D 26 1C 
10e55     15 16 1B 18 
10e59     06 F4 E5 DC 
10e5d     D6 D2 CF C7 | 	byte	$2c, $2d, $26, $1c, $15, $16, $1b, $18, $06, $f4, $e5, $dc, $d6, $d2, $cf, $c7
10e61     C3 C7 D1 D9 
10e65     DF DE DE DF 
10e69     D7 CB BE B7 
10e6d     B3 B0 AF B3 | 	byte	$c3, $c7, $d1, $d9, $df, $de, $de, $df, $d7, $cb, $be, $b7, $b3, $b0, $af, $b3
10e71     B4 B7 B9 BA 
10e75     B9 BD C2 C7 
10e79     C8 C0 BF BB 
10e7d     B9 C0 D3 EA | 	byte	$b4, $b7, $b9, $ba, $b9, $bd, $c2, $c7, $c8, $c0, $bf, $bb, $b9, $c0, $d3, $ea
10e81     04 17 27 38 
10e85     52 64 64 64 
10e89     64 60 5D 5B 
10e8d     5D 66 65 65 | 	byte	$04, $17, $27, $38, $52, $64, $64, $64, $64, $60, $5d, $5b, $5d, $66, $65, $65
10e91     65 65 62 63 
10e95     65 65 65 60 
10e99     4F 39 22 06 
10e9d     F0 DB CD CD | 	byte	$65, $65, $62, $63, $65, $65, $65, $60, $4f, $39, $22, $06, $f0, $db, $cd, $cd
10ea1     D4 CB C6 C5 
10ea5     C8 D0 CE C4 
10ea9     B7 B5 BB C7 
10ead     D6 DD E0 E4 | 	byte	$d4, $cb, $c6, $c5, $c8, $d0, $ce, $c4, $b7, $b5, $bb, $c7, $d6, $dd, $e0, $e4
10eb1     F2 FB FD 01 
10eb5     0B 16 22 29 
10eb9     2B 2C 32 38 
10ebd     3E 45 4A 4D | 	byte	$f2, $fb, $fd, $01, $0b, $16, $22, $29, $2b, $2c, $32, $38, $3e, $45, $4a, $4d
10ec1     4F 54 58 5B 
10ec5     5A 4D 3B 2D 
10ec9     26 1F 1C 12 
10ecd     0A 08 09 04 | 	byte	$4f, $54, $58, $5b, $5a, $4d, $3b, $2d, $26, $1f, $1c, $12, $0a, $08, $09, $04
10ed1     F9 F2 F5 FE 
10ed5     01 FE EE EB 
10ed9     ED F1 EC E1 
10edd     CF BB B2 B3 | 	byte	$f9, $f2, $f5, $fe, $01, $fe, $ee, $eb, $ed, $f1, $ec, $e1, $cf, $bb, $b2, $b3
10ee1     B3 B3 B5 BB 
10ee5     CA DE ED EE 
10ee9     DF D2 DD E8 
10eed     E3 D3 CA CB | 	byte	$b3, $b3, $b5, $bb, $ca, $de, $ed, $ee, $df, $d2, $dd, $e8, $e3, $d3, $ca, $cb
10ef1     DA E4 EE F8 
10ef5     FF 00 09 1D 
10ef9     2F 30 22 14 
10efd     0B 07 0B 17 | 	byte	$da, $e4, $ee, $f8, $ff, $00, $09, $1d, $2f, $30, $22, $14, $0b, $07, $0b, $17
10f01     28 3C 50 5D 
10f05     63 65 65 65 
10f09     5F 59 4C 3C 
10f0d     32 2B 20 15 | 	byte	$28, $3c, $50, $5d, $63, $65, $65, $65, $5f, $59, $4c, $3c, $32, $2b, $20, $15
10f11     11 12 12 0D 
10f15     04 00 08 13 
10f19     16 08 F4 DE 
10f1d     D2 CF D1 C3 | 	byte	$11, $12, $12, $0d, $04, $00, $08, $13, $16, $08, $f4, $de, $d2, $cf, $d1, $c3
10f21     AF A3 9E 9F 
10f25     A4 A7 A7 AA 
10f29     B2 B8 B6 AF 
10f2d     A8 A8 B3 BD | 	byte	$af, $a3, $9e, $9f, $a4, $a7, $a7, $aa, $b2, $b8, $b6, $af, $a8, $a8, $b3, $bd
10f31     B8 A8 A0 A5 
10f35     B6 C8 D1 D5 
10f39     E1 EF FF 0A 
10f3d     14 1B 24 28 | 	byte	$b8, $a8, $a0, $a5, $b6, $c8, $d1, $d5, $e1, $ef, $ff, $0a, $14, $1b, $24, $28
10f41     2B 2E 36 37 
10f45     35 37 3A 3E 
10f49     47 4A 41 2D 
10f4d     18 0A 07 02 | 	byte	$2b, $2e, $36, $37, $35, $37, $3a, $3e, $47, $4a, $41, $2d, $18, $0a, $07, $02
10f51     F1 D9 C7 BE 
10f55     C1 CC D8 E0 
10f59     E4 E4 DC CF 
10f5d     C7 CF DB ED | 	byte	$f1, $d9, $c7, $be, $c1, $cc, $d8, $e0, $e4, $e4, $dc, $cf, $c7, $cf, $db, $ed
10f61     F3 FA 01 0F 
10f65     21 2E 30 2B 
10f69     23 1E 19 11 
10f6d     03 EF E6 E2 | 	byte	$f3, $fa, $01, $0f, $21, $2e, $30, $2b, $23, $1e, $19, $11, $03, $ef, $e6, $e2
10f71     DD D4 C7 C1 
10f75     C6 D7 E2 E3 
10f79     DD DA E2 F2 
10f7d     FC FB F9 FC | 	byte	$dd, $d4, $c7, $c1, $c6, $d7, $e2, $e3, $dd, $da, $e2, $f2, $fc, $fb, $f9, $fc
10f81     08 1A 2B 37 
10f85     40 4A 61 64 
10f89     63 64 64 64 
10f8d     64 5D 47 38 | 	byte	$08, $1a, $2b, $37, $40, $4a, $61, $64, $63, $64, $64, $64, $64, $5d, $47, $38
10f91     2E 1C 00 E6 
10f95     D3 CF D9 E6 
10f99     EF F0 E3 D9 
10f9d     CF CD D7 DF | 	byte	$2e, $1c, $00, $e6, $d3, $cf, $d9, $e6, $ef, $f0, $e3, $d9, $cf, $cd, $d7, $df
10fa1     DB CF B8 A4 
10fa5     A4 BA D1 E3 
10fa9     E8 E8 E6 E9 
10fad     ED EB E3 DD | 	byte	$db, $cf, $b8, $a4, $a4, $ba, $d1, $e3, $e8, $e8, $e6, $e9, $ed, $eb, $e3, $dd
10fb1     DB DB D9 D8 
10fb5     DA EB 04 1B 
10fb9     29 34 3C 41 
10fbd     49 52 52 4A | 	byte	$db, $db, $d9, $d8, $da, $eb, $04, $1b, $29, $34, $3c, $41, $49, $52, $52, $4a
10fc1     49 51 5B 5E 
10fc5     55 4D 48 47 
10fc9     4A 4C 46 43 
10fcd     45 4B 4C 46 | 	byte	$49, $51, $5b, $5e, $55, $4d, $48, $47, $4a, $4c, $46, $43, $45, $4b, $4c, $46
10fd1     35 22 14 08 
10fd5     01 FB EE E7 
10fd9     E3 D8 D6 D7 
10fdd     DE EB FB 01 | 	byte	$35, $22, $14, $08, $01, $fb, $ee, $e7, $e3, $d8, $d6, $d7, $de, $eb, $fb, $01
10fe1     FB F3 E9 E3 
10fe5     DD D8 D2 D2 
10fe9     D6 DA DD E5 
10fed     F2 FB FF 08 | 	byte	$fb, $f3, $e9, $e3, $dd, $d8, $d2, $d2, $d6, $da, $dd, $e5, $f2, $fb, $ff, $08
10ff1     10 0E 05 F4 
10ff5     E0 D6 D8 E0 
10ff9     E0 E7 F0 FD 
10ffd     11 23 2A 28 | 	byte	$10, $0e, $05, $f4, $e0, $d6, $d8, $e0, $e0, $e7, $f0, $fd, $11, $23, $2a, $28
11001     25 23 26 27 
11005     21 14 06 09 
11009     20 34 3B 34 
1100d     2B 28 21 13 | 	byte	$25, $23, $26, $27, $21, $14, $06, $09, $20, $34, $3b, $34, $2b, $28, $21, $13
11011     04 EE DD D2 
11015     C9 C2 BE BD 
11019     BA C0 CA C7 
1101d     BF C0 C4 C3 | 	byte	$04, $ee, $dd, $d2, $c9, $c2, $be, $bd, $ba, $c0, $ca, $c7, $bf, $c0, $c4, $c3
11021     C6 C1 C2 C3 
11025     C5 C1 B3 A4 
11029     97 8F 8D 8F 
1102d     8E 89 8B 9B | 	byte	$c6, $c1, $c2, $c3, $c5, $c1, $b3, $a4, $97, $8f, $8d, $8f, $8e, $89, $8b, $9b
11031     B2 CC E4 F6 
11035     08 1B 2C 32 
11039     35 37 39 3C 
1103d     49 5D 65 65 | 	byte	$b2, $cc, $e4, $f6, $08, $1b, $2c, $32, $35, $37, $39, $3c, $49, $5d, $65, $65
11041     65 64 64 63 
11045     64 63 64 64 
11049     57 39 1F 05 
1104d     EC D6 CD CF | 	byte	$65, $64, $64, $63, $64, $63, $64, $64, $57, $39, $1f, $05, $ec, $d6, $cd, $cf
11051     D8 E1 E6 E6 
11055     E0 DB D7 D2 
11059     CF D3 CF C8 
1105d     C3 C5 D6 E9 | 	byte	$d8, $e1, $e6, $e6, $e0, $db, $d7, $d2, $cf, $d3, $cf, $c8, $c3, $c5, $d6, $e9
11061     F5 FB FE 03 
11065     0C 10 07 F9 
11069     EF EC E3 D0 
1106d     B0 91 87 90 | 	byte	$f5, $fb, $fe, $03, $0c, $10, $07, $f9, $ef, $ec, $e3, $d0, $b0, $91, $87, $90
11071     99 9F A9 B9 
11075     CA E5 F3 F6 
11079     FC 04 08 07 
1107d     FB E9 DB DD | 	byte	$99, $9f, $a9, $b9, $ca, $e5, $f3, $f6, $fc, $04, $08, $07, $fb, $e9, $db, $dd
11081     E9 F6 0B 29 
11085     4B 62 64 64 
11089     64 64 64 64 
1108d     50 2F 10 F5 | 	byte	$e9, $f6, $0b, $29, $4b, $62, $64, $64, $64, $64, $64, $64, $50, $2f, $10, $f5
11091     E0 D0 C5 BA 
11095     BB C8 DC E9 
11099     EB EA E6 DC 
1109d     D6 D2 CF CD | 	byte	$e0, $d0, $c5, $ba, $bb, $c8, $dc, $e9, $eb, $ea, $e6, $dc, $d6, $d2, $cf, $cd
110a1     CD D5 E6 FE 
110a5     19 29 30 39 
110a9     49 52 50 44 
110ad     31 1B 0A 04 | 	byte	$cd, $d5, $e6, $fe, $19, $29, $30, $39, $49, $52, $50, $44, $31, $1b, $0a, $04
110b1     05 06 06 0B 
110b5     18 27 2D 31 
110b9     33 39 43 4F 
110bd     55 52 48 41 | 	byte	$05, $06, $06, $0b, $18, $27, $2d, $31, $33, $39, $43, $4f, $55, $52, $48, $41
110c1     42 4C 58 5D 
110c5     5F 63 65 65 
110c9     65 65 65 53 
110cd     3E 29 16 07 | 	byte	$42, $4c, $58, $5d, $5f, $63, $65, $65, $65, $65, $65, $53, $3e, $29, $16, $07
110d1     EE D1 BC B0 
110d5     A7 9E 95 8F 
110d9     8F 94 9A 9F 
110dd     A5 AE BA C1 | 	byte	$ee, $d1, $bc, $b0, $a7, $9e, $95, $8f, $8f, $94, $9a, $9f, $a5, $ae, $ba, $c1
110e1     C6 C7 CA D5 
110e5     E5 F4 05 0C 
110e9     13 18 18 0C 
110ed     F6 EC E9 EB | 	byte	$c6, $c7, $ca, $d5, $e5, $f4, $05, $0c, $13, $18, $18, $0c, $f6, $ec, $e9, $eb
110f1     E8 DD D0 CD 
110f5     D4 D3 D4 D7 
110f9     E2 F0 F8 F2 
110fd     E3 E1 F0 03 | 	byte	$e8, $dd, $d0, $cd, $d4, $d3, $d4, $d7, $e2, $f0, $f8, $f2, $e3, $e1, $f0, $03
11101     15 1C 1D 21 
11105     2E 41 4D 4E 
11109     46 42 43 41 
1110d     37 29 21 20 | 	byte	$15, $1c, $1d, $21, $2e, $41, $4d, $4e, $46, $42, $43, $41, $37, $29, $21, $20
11111     1E 17 06 EE 
11115     DF E4 E8 E9 
11119     DE DB E4 F3 
1111d     F7 EF DF D2 | 	byte	$1e, $17, $06, $ee, $df, $e4, $e8, $e9, $de, $db, $e4, $f3, $f7, $ef, $df, $d2
11121     CC CA C7 BE 
11125     AF A8 AE BF 
11129     C6 C5 BE BA 
1112d     C6 D7 DF D8 | 	byte	$cc, $ca, $c7, $be, $af, $a8, $ae, $bf, $c6, $c5, $be, $ba, $c6, $d7, $df, $d8
11131     D1 D5 E8 FB 
11135     08 08 09 13 
11139     27 42 53 57 
1113d     51 4B 4B 4C | 	byte	$d1, $d5, $e8, $fb, $08, $08, $09, $13, $27, $42, $53, $57, $51, $4b, $4b, $4c
11141     4A 43 37 32 
11145     38 44 47 42 
11149     33 23 1A 14 
1114d     08 F8 E6 D8 | 	byte	$4a, $43, $37, $32, $38, $44, $47, $42, $33, $23, $1a, $14, $08, $f8, $e6, $d8
11151     CD C8 C0 B6 
11155     B0 B3 B9 C1 
11159     C5 CB CC CB 
1115d     C9 CA D4 D9 | 	byte	$cd, $c8, $c0, $b6, $b0, $b3, $b9, $c1, $c5, $cb, $cc, $cb, $c9, $ca, $d4, $d9
11161     DA D5 D8 E2 
11165     E9 EA E2 D9 
11169     D0 C5 B6 A9 
1116d     A7 B3 C5 D6 | 	byte	$da, $d5, $d8, $e2, $e9, $ea, $e2, $d9, $d0, $c5, $b6, $a9, $a7, $b3, $c5, $d6
11171     DB DB DF EE 
11175     01 0F 16 17 
11179     1C 23 2C 2E 
1117d     29 26 31 47 | 	byte	$db, $db, $df, $ee, $01, $0f, $16, $17, $1c, $23, $2c, $2e, $29, $26, $31, $47
11181     5B 65 65 5C 
11185     60 64 64 64 
11189     57 55 59 53 
1118d     3F 2A 1F 1F | 	byte	$5b, $65, $65, $5c, $60, $64, $64, $64, $57, $55, $59, $53, $3f, $2a, $1f, $1f
11191     1C 0B EB CF 
11195     C0 C3 CE D8 
11199     DE E4 E4 E6 
1119d     EB E8 EB F0 | 	byte	$1c, $0b, $eb, $cf, $c0, $c3, $ce, $d8, $de, $e4, $e4, $e6, $eb, $e8, $eb, $f0
111a1     F3 F5 F2 EF 
111a5     EC EB F1 FB 
111a9     07 0B 06 FC 
111ad     F9 FD 05 0C | 	byte	$f3, $f5, $f2, $ef, $ec, $eb, $f1, $fb, $07, $0b, $06, $fc, $f9, $fd, $05, $0c
111b1     0A FD F3 F8 
111b5     0D 20 2A 29 
111b9     23 23 25 22 
111bd     1B 18 19 1A | 	byte	$0a, $fd, $f3, $f8, $0d, $20, $2a, $29, $23, $23, $25, $22, $1b, $18, $19, $1a
111c1     21 28 2E 38 
111c5     45 51 5A 59 
111c9     4C 3B 30 2E 
111cd     29 24 1B 08 | 	byte	$21, $28, $2e, $38, $45, $51, $5a, $59, $4c, $3b, $30, $2e, $29, $24, $1b, $08
111d1     ED D3 C2 B6 
111d5     A7 99 8F 90 
111d9     9A 9C 97 96 
111dd     A1 BD DC F6 | 	byte	$ed, $d3, $c2, $b6, $a7, $99, $8f, $90, $9a, $9c, $97, $96, $a1, $bd, $dc, $f6
111e1     06 10 21 32 
111e5     36 2B 1F 1C 
111e9     21 27 23 1F 
111ed     22 29 2B 2A | 	byte	$06, $10, $21, $32, $36, $2b, $1f, $1c, $21, $27, $23, $1f, $22, $29, $2b, $2a
111f1     21 15 0B 06 
111f5     FE F3 E9 E2 
111f9     E9 F7 04 0D 
111fd     19 28 2F 2D | 	byte	$21, $15, $0b, $06, $fe, $f3, $e9, $e2, $e9, $f7, $04, $0d, $19, $28, $2f, $2d
11201     28 29 2E 32 
11205     2F 23 13 0A 
11209     08 0F 18 1B 
1120d     1B 15 06 F0 | 	byte	$28, $29, $2e, $32, $2f, $23, $13, $0a, $08, $0f, $18, $1b, $1b, $15, $06, $f0
11211     DC CB BB AC 
11215     A6 A8 B3 C1 
11219     C8 C7 C2 C9 
1121d     D4 D7 CF C4 | 	byte	$dc, $cb, $bb, $ac, $a6, $a8, $b3, $c1, $c8, $c7, $c2, $c9, $d4, $d7, $cf, $c4
11221     B9 B7 B8 B1 
11225     A2 99 9B A0 
11229     9E 95 91 9B 
1122d     B0 C0 C9 C9 | 	byte	$b9, $b7, $b8, $b1, $a2, $99, $9b, $a0, $9e, $95, $91, $9b, $b0, $c0, $c9, $c9
11231     D5 EF 10 25 
11235     2B 2B 32 3A 
11239     40 3C 34 30 
1123d     2D 29 21 19 | 	byte	$d5, $ef, $10, $25, $2b, $2b, $32, $3a, $40, $3c, $34, $30, $2d, $29, $21, $19
11241     22 32 3C 38 
11245     2D 23 1E 1B 
11249     1A 18 17 1A 
1124d     26 2C 27 1A | 	byte	$22, $32, $3c, $38, $2d, $23, $1e, $1b, $1a, $18, $17, $1a, $26, $2c, $27, $1a
11251     12 12 15 13 
11255     04 F2 E7 E9 
11259     EB EC EB EA 
1125d     F0 FA 00 FB | 	byte	$12, $12, $15, $13, $04, $f2, $e7, $e9, $eb, $ec, $eb, $ea, $f0, $fa, $00, $fb
11261     F3 E4 E1 E5 
11265     E6 DC CF C2 
11269     BF C4 CE DD 
1126d     E5 E5 EF FC | 	byte	$f3, $e4, $e1, $e5, $e6, $dc, $cf, $c2, $bf, $c4, $ce, $dd, $e5, $e5, $ef, $fc
11271     03 01 F8 F1 
11275     F2 FD 03 FF 
11279     FB FF 05 0C 
1127d     12 15 17 1F | 	byte	$03, $01, $f8, $f1, $f2, $fd, $03, $ff, $fb, $ff, $05, $0c, $12, $15, $17, $1f
11281     27 28 21 18 
11285     18 25 38 43 
11289     46 46 47 46 
1128d     36 1F 0A FB | 	byte	$27, $28, $21, $18, $18, $25, $38, $43, $46, $46, $47, $46, $36, $1f, $0a, $fb
11291     E6 CE BA B0 
11295     B1 B8 C7 D2 
11299     D8 D8 DA DD 
1129d     E7 F4 FA FD | 	byte	$e6, $ce, $ba, $b0, $b1, $b8, $c7, $d2, $d8, $d8, $da, $dd, $e7, $f4, $fa, $fd
112a1     FB F6 F0 F1 
112a5     F8 FE 00 02 
112a9     00 FE 01 FF 
112ad     F8 FB 08 13 | 	byte	$fb, $f6, $f0, $f1, $f8, $fe, $00, $02, $00, $fe, $01, $ff, $f8, $fb, $08, $13
112b1     19 18 12 10 
112b5     1D 2E 33 33 
112b9     34 33 34 40 
112bd     4E 55 5E 65 | 	byte	$19, $18, $12, $10, $1d, $2e, $33, $33, $34, $33, $34, $40, $4e, $55, $5e, $65
112c1     65 65 65 65 
112c5     65 65       | 	byte	$65[6]
112c7     61 5E 56 47 
112cb     36 27 27 25 
112cf     18 04 F4 E8 
112d3     DA D0 CB C7 | 	byte	$61, $5e, $56, $47, $36, $27, $27, $25, $18, $04, $f4, $e8, $da, $d0, $cb, $c7
112d7     C3 B9 BB C9 
112db     D6 E3 F0 04 
112df     17 1C 0E 02 
112e3     FC FC FF F7 | 	byte	$c3, $b9, $bb, $c9, $d6, $e3, $f0, $04, $17, $1c, $0e, $02, $fc, $fc, $ff, $f7
112e7     E5 D5 CF D7 
112eb     E1 EA EF F4 
112ef     F8 FC FF 02 
112f3     01 02 02 FD | 	byte	$e5, $d5, $cf, $d7, $e1, $ea, $ef, $f4, $f8, $fc, $ff, $02, $01, $02, $02, $fd
112f7     F7 F7 F5 EC 
112fb     E3 E0 E5 F0 
112ff     FA FA EB EA 
11303     F0 FE 08 09 | 	byte	$f7, $f7, $f5, $ec, $e3, $e0, $e5, $f0, $fa, $fa, $eb, $ea, $f0, $fe, $08, $09
11307     01 FA FB FB 
1130b     FB F7 ED E1 
1130f     D5 CB C0 B9 
11313     BC C9 D1 D4 | 	byte	$01, $fa, $fb, $fb, $fb, $f7, $ed, $e1, $d5, $cb, $c0, $b9, $bc, $c9, $d1, $d4
11317     C9 BE BE C5 
1131b     CE CC C5 BE 
1131f     BD BF C5 C3 
11323     C2 C4 C1 BE | 	byte	$c9, $be, $be, $c5, $ce, $cc, $c5, $be, $bd, $bf, $c5, $c3, $c2, $c4, $c1, $be
11327     BC C3 D5 E2 
1132b     EF FF 12 22 
1132f     32 3B 3A 3A 
11333     47 4F 49 3E | 	byte	$bc, $c3, $d5, $e2, $ef, $ff, $12, $22, $32, $3b, $3a, $3a, $47, $4f, $49, $3e
11337     36 34 3C 46 
1133b     45 3B 35 36 
1133f     36 33 2C 21 
11343     1A 1C 27 32 | 	byte	$36, $34, $3c, $46, $45, $3b, $35, $36, $36, $33, $2c, $21, $1a, $1c, $27, $32
11347     3A 3A 33 29 
1134b     2A 24 15 FD 
1134f     F0 E7 E2 DD 
11353     D3 C9 C1 BA | 	byte	$3a, $3a, $33, $29, $2a, $24, $15, $fd, $f0, $e7, $e2, $dd, $d3, $c9, $c1, $ba
11357     B9 C2 CD D6 
1135b     DC DC D6 D4 
1135f     D7 DB DC D4 
11363     C4 B9 B7 B4 | 	byte	$b9, $c2, $cd, $d6, $dc, $dc, $d6, $d4, $d7, $db, $dc, $d4, $c4, $b9, $b7, $b4
11367     B3 B5 B6 AF 
1136b     B1 B8 C6 D2 
1136f     DC DD D6 E3 
11373     F2 F7 F4 EF | 	byte	$b3, $b5, $b6, $af, $b1, $b8, $c6, $d2, $dc, $dd, $d6, $e3, $f2, $f7, $f4, $ef
11377     EC F0 F8 FC 
1137b     FC 00 0E 1F 
1137f     29 2B 2A 2B 
11383     2E 33 35 33 | 	byte	$ec, $f0, $f8, $fc, $fc, $00, $0e, $1f, $29, $2b, $2a, $2b, $2e, $33, $35, $33
11387     34 39 42 4A 
1138b     48 36 1E 09 
1138f     08 0C 08 FA 
11393     E5 DA DB EE | 	byte	$34, $39, $42, $4a, $48, $36, $1e, $09, $08, $0c, $08, $fa, $e5, $da, $db, $ee
11397     00 0C 16 26 
1139b     31 2E 25 23 
1139f     25 25 1C 0D 
113a3     01 F9 F4 F6 | 	byte	$00, $0c, $16, $26, $31, $2e, $25, $23, $25, $25, $1c, $0d, $01, $f9, $f4, $f6
113a7     05 13 17 19 
113ab     23 33 3D 3E 
113af     2E 17 0F 14 
113b3     1D 23 24 1F | 	byte	$05, $13, $17, $19, $23, $33, $3d, $3e, $2e, $17, $0f, $14, $1d, $23, $24, $1f
113b7     1D 23 2E 36 
113bb     39 3A 32 27 
113bf     1D 1A 1E 24 
113c3     26 28 2E 30 | 	byte	$1d, $23, $2e, $36, $39, $3a, $32, $27, $1d, $1a, $1e, $24, $26, $28, $2e, $30
113c7     27 1D 1D 1E 
113cb     1A 09 F4 EE 
113cf     EB E2 D9 D7 
113d3     D5 D2 CB C0 | 	byte	$27, $1d, $1d, $1e, $1a, $09, $f4, $ee, $eb, $e2, $d9, $d7, $d5, $d2, $cb, $c0
113d7     B9 BD D0 E4 
113db     EC ED EF FB 
113df     0F 1E 1E 14 
113e3     0B 03 FE FB | 	byte	$b9, $bd, $d0, $e4, $ec, $ed, $ef, $fb, $0f, $1e, $1e, $14, $0b, $03, $fe, $fb
113e7     F8 F2 ED F3 
113eb     FF 0A 0E 07 
113ef     FA F0 E9 EC 
113f3     F4 F6 E7 E1 | 	byte	$f8, $f2, $ed, $f3, $ff, $0a, $0e, $07, $fa, $f0, $e9, $ec, $f4, $f6, $e7, $e1
113f7     E4 E5 EA F1 
113fb     FA FE 02 05 
113ff     0C 12 1A 1E 
11403     1B 17 18 1A | 	byte	$e4, $e5, $ea, $f1, $fa, $fe, $02, $05, $0c, $12, $1a, $1e, $1b, $17, $18, $1a
11407     1A 1C 1A 17 
1140b     15 0F 04 F3 
1140f     E6 DB D4 D4 
11413     D6 DA D1 CA | 	byte	$1a, $1c, $1a, $17, $15, $0f, $04, $f3, $e6, $db, $d4, $d4, $d6, $da, $d1, $ca
11417     CB DB EC EC 
1141b     DA C7 C1 C6 
1141f     CE C8 C0 BE 
11423     BC C5 D1 DA | 	byte	$cb, $db, $ec, $ec, $da, $c7, $c1, $c6, $ce, $c8, $c0, $be, $bc, $c5, $d1, $da
11427     E1 E7 F0 F5 
1142b     F2 EE EC EE 
1142f     F2 F6 00 0A 
11433     16 24 33 3D | 	byte	$e1, $e7, $f0, $f5, $f2, $ee, $ec, $ee, $f2, $f6, $00, $0a, $16, $24, $33, $3d
11437     41 40 38 2F 
1143b     26 1C 10 00 
1143f     F1 F0 F5 FB 
11443     FD FB F6 F6 | 	byte	$41, $40, $38, $2f, $26, $1c, $10, $00, $f1, $f0, $f5, $fb, $fd, $fb, $f6, $f6
11447     FD 02 02 00 
1144b     FF F9 F3 E6 
1144f     E1 D9 D4 D7 
11453     DB DA DB DC | 	byte	$fd, $02, $02, $00, $ff, $f9, $f3, $e6, $e1, $d9, $d4, $d7, $db, $da, $db, $dc
11457     E8 F0 EE EA 
1145b     E3 E2 DB D4 
1145f     C8 BD B0 A3 
11463     A1 AD BE D3 | 	byte	$e8, $f0, $ee, $ea, $e3, $e2, $db, $d4, $c8, $bd, $b0, $a3, $a1, $ad, $be, $d3
11467     E7 FD 0E 17 
1146b     1E 21 1E 13 
1146f     FA E7 E5 DD 
11473     DA E1 F4 0C | 	byte	$e7, $fd, $0e, $17, $1e, $21, $1e, $13, $fa, $e7, $e5, $dd, $da, $e1, $f4, $0c
11477     22 2F 36 35 
1147b     33 34 3A 42 
1147f     40 2F 1A 0D 
11483     0F 1E 33 3F | 	byte	$22, $2f, $36, $35, $33, $34, $3a, $42, $40, $2f, $1a, $0d, $0f, $1e, $33, $3f
11487     40 3A 3E 45 
1148b     43 35 21 12 
1148f     09 03 FC EC 
11493     DC D4 DB E6 | 	byte	$40, $3a, $3e, $45, $43, $35, $21, $12, $09, $03, $fc, $ec, $dc, $d4, $db, $e6
11497     F9 FF FB F9 
1149b     FD 01 02 FB 
1149f     F3 ED EA E6 
114a3     E9 EC EB EB | 	byte	$f9, $ff, $fb, $f9, $fd, $01, $02, $fb, $f3, $ed, $ea, $e6, $e9, $ec, $eb, $eb
114a7     EC F6 04 0D 
114ab     0D 09 03 FD 
114af     F8 F9 FB FC 
114b3     01 0C 1F 2F | 	byte	$ec, $f6, $04, $0d, $0d, $09, $03, $fd, $f8, $f9, $fb, $fc, $01, $0c, $1f, $2f
114b7     35 34 32 32 
114bb     38 40 46 48 
114bf     3B 28 1C 17 
114c3     14 14 15 13 | 	byte	$35, $34, $32, $32, $38, $40, $46, $48, $3b, $28, $1c, $17, $14, $14, $15, $13
114c7     0E 0D 16 15 
114cb     0C 00 F6 EB 
114cf     E2 E7 EF F9 
114d3     02 0B 17 2A | 	byte	$0e, $0d, $16, $15, $0c, $00, $f6, $eb, $e2, $e7, $ef, $f9, $02, $0b, $17, $2a
114d7     3E 4B 50 53 
114db     51 47 3A 2F 
114df     1E 0D 03 07 
114e3     0C 0D 0A 07 | 	byte	$3e, $4b, $50, $53, $51, $47, $3a, $2f, $1e, $0d, $03, $07, $0c, $0d, $0a, $07
114e7     07 10 18 1A 
114eb     15 0F 02 ED 
114ef     E0 E0 E2 E0 
114f3     DD E3 EE F7 | 	byte	$07, $10, $18, $1a, $15, $0f, $02, $ed, $e0, $e0, $e2, $e0, $dd, $e3, $ee, $f7
114f7     FF FE F9 F5 
114fb     F2 F3 F4 EE 
114ff     E3 DB D1 C8 
11503     C7 D0 D6 DC | 	byte	$ff, $fe, $f9, $f5, $f2, $f3, $f4, $ee, $e3, $db, $d1, $c8, $c7, $d0, $d6, $dc
11507     DF D7 D5 DC 
1150b     E8 F2 F3 E6 
1150f     E3 E1 DF DB 
11513     D0 BE AF A5 | 	byte	$df, $d7, $d5, $dc, $e8, $f2, $f3, $e6, $e3, $e1, $df, $db, $d0, $be, $af, $a5
11517     A8 B9 C7 CC 
1151b     C3 B8 B3 BB 
1151f     C7 C6 C2 BF 
11523     C4 D5 E8 F1 | 	byte	$a8, $b9, $c7, $cc, $c3, $b8, $b3, $bb, $c7, $c6, $c2, $bf, $c4, $d5, $e8, $f1
11527     F3 F7 05 13 
1152b     1E 1F 19 17 
1152f     22 2E 2B 22 
11533     1F 25 2C 31 | 	byte	$f3, $f7, $05, $13, $1e, $1f, $19, $17, $22, $2e, $2b, $22, $1f, $25, $2c, $31
11537     2E 22 1B 1B 
1153b     18 0F 05 03 
1153f     0B 12 13 0A 
11543     0A 17 24 27 | 	byte	$2e, $22, $1b, $1b, $18, $0f, $05, $03, $0b, $12, $13, $0a, $0a, $17, $24, $27
11547     1F 16 0D 0A 
1154b     05 F7 E1 D0 
1154f     CE D6 DD E3 
11553     E7 EB EE EF | 	byte	$1f, $16, $0d, $0a, $05, $f7, $e1, $d0, $ce, $d6, $dd, $e3, $e7, $eb, $ee, $ef
11557     F3 F7 FB 01 
1155b     01 F5 DF CF 
1155f     CE DC EE F1 
11563     E5 D9 DF F0 | 	byte	$f3, $f7, $fb, $01, $01, $f5, $df, $cf, $ce, $dc, $ee, $f1, $e5, $d9, $df, $f0
11567     F9 F6 ED E9 
1156b     EF F8 F6 EB 
1156f     E1 E0 E1 E2 
11573     DA D4 DA E4 | 	byte	$f9, $f6, $ed, $e9, $ef, $f8, $f6, $eb, $e1, $e0, $e1, $e2, $da, $d4, $da, $e4
11577     F1 FF 0F 1C 
1157b     21 21 1E 23 
1157f     2C 2F 21 0E 
11583     02 FF 05 10 | 	byte	$f1, $ff, $0f, $1c, $21, $21, $1e, $23, $2c, $2f, $21, $0e, $02, $ff, $05, $10
11587     17 11 02 FB 
1158b     07 19 26 22 
1158f     15 0B 0C 0C 
11593     05 F8 EA EB | 	byte	$17, $11, $02, $fb, $07, $19, $26, $22, $15, $0b, $0c, $0c, $05, $f8, $ea, $eb
11597     F7 0D 1C 1D 
1159b     11 08 0B 15 
1159f     1B 1A 0F F9 
115a3     E7 DB DE E3 | 	byte	$f7, $0d, $1c, $1d, $11, $08, $0b, $15, $1b, $1a, $0f, $f9, $e7, $db, $de, $e3
115a7     EE FC 06 10 
115ab     1F 2B 2D 32 
115af     39 46 53 5A 
115b3     59 54 4C 43 | 	byte	$ee, $fc, $06, $10, $1f, $2b, $2d, $32, $39, $46, $53, $5a, $59, $54, $4c, $43
115b7     3F 3F 3B 2C 
115bb     18 08 02 07 
115bf     11 12 0B 0B 
115c3     14 1B 1F 20 | 	byte	$3f, $3f, $3b, $2c, $18, $08, $02, $07, $11, $12, $0b, $0b, $14, $1b, $1f, $20
115c7     21 21 1F 16 
115cb     0A 02 03 0F 
115cf     1E 25 26 2B 
115d3     37 43 41 36 | 	byte	$21, $21, $1f, $16, $0a, $02, $03, $0f, $1e, $25, $26, $2b, $37, $43, $41, $36
115d7     2C 28 29 26 
115db     1B 0A F7 E9 
115df     F0 F9 FB F3 
115e3     E3 E6 EB F1 | 	byte	$2c, $28, $29, $26, $1b, $0a, $f7, $e9, $f0, $f9, $fb, $f3, $e3, $e6, $eb, $f1
115e7     F2 E8 D9 D2 
115eb     D2 D4 D9 D6 
115ef     CF CB CB D4 
115f3     DB DF DE D3 | 	byte	$f2, $e8, $d9, $d2, $d2, $d4, $d9, $d6, $cf, $cb, $cb, $d4, $db, $df, $de, $d3
115f7     CE D4 D8 DA 
115fb     D3 C9 C0 C5 
115ff     D0 D5 D3 D8 
11603     DE E9 F4 F9 | 	byte	$ce, $d4, $d8, $da, $d3, $c9, $c0, $c5, $d0, $d5, $d3, $d8, $de, $e9, $f4, $f9
11607     FA 00 06 0A 
1160b     09 00 F5 EE 
1160f     EC EC F0 F3 
11613     EB DB D0 D6 | 	byte	$fa, $00, $06, $0a, $09, $00, $f5, $ee, $ec, $ec, $f0, $f3, $eb, $db, $d0, $d6
11617     E3 EA E5 DB 
1161b     DB E7 EF F1 
1161f     ED EE EF EE 
11623     EE E2 DA EC | 	byte	$e3, $ea, $e5, $db, $db, $e7, $ef, $f1, $ed, $ee, $ef, $ee, $ee, $e2, $da, $ec
11627     FD 08 0A 0B 
1162b     11 1A 22 24 
1162f     21 1F 21 25 
11633     27 1E 0F 05 | 	byte	$fd, $08, $0a, $0b, $11, $1a, $22, $24, $21, $1f, $21, $25, $27, $1e, $0f, $05
11637     08 0D 0C 07 
1163b     01 FE 04 05 
1163f     00 FF 05 09 
11643     08 02 F9 F2 | 	byte	$08, $0d, $0c, $07, $01, $fe, $04, $05, $00, $ff, $05, $09, $08, $02, $f9, $f2
11647     EB E9 DE D9 
1164b     CF CA C6 BF 
1164f     B7 B3 B8 C4 
11653     C2 BF C5 D3 | 	byte	$eb, $e9, $de, $d9, $cf, $ca, $c6, $bf, $b7, $b3, $b8, $c4, $c2, $bf, $c5, $d3
11657     DE E2 E3 DD 
1165b     E2 E8 F3 F5 
1165f     F3 F0 F2 FF 
11663     09 07 FC F2 | 	byte	$de, $e2, $e3, $dd, $e2, $e8, $f3, $f5, $f3, $f0, $f2, $ff, $09, $07, $fc, $f2
11667     EC E9 E8 E0 
1166b     D4 CC D3 E6 
1166f     FB 00 F8 F5 
11673     05 1C 27 1E | 	byte	$ec, $e9, $e8, $e0, $d4, $cc, $d3, $e6, $fb, $00, $f8, $f5, $05, $1c, $27, $1e
11677     0A 04 0C 19 
1167b     1E 19 14 18 
1167f     2C 41 4A 49 
11683     49 4B 4A 3E | 	byte	$0a, $04, $0c, $19, $1e, $19, $14, $18, $2c, $41, $4a, $49, $49, $4b, $4a, $3e
11687     29 19 16 16 
1168b     13 0D 07 07 
1168f     09 10 18 14 
11693     08 00 04 05 | 	byte	$29, $19, $16, $16, $13, $0d, $07, $07, $09, $10, $18, $14, $08, $00, $04, $05
11697     FD F5 F6 FC 
1169b     FE 00 FD F9 
1169f     F9 F9 F6 EA 
116a3     E9 E9 F5 09 | 	byte	$fd, $f5, $f6, $fc, $fe, $00, $fd, $f9, $f9, $f9, $f6, $ea, $e9, $e9, $f5, $09
116a7     19 1F 21 28 
116ab     34 41 49 4F 
116af     4C 50 52 4A 
116b3     35 21 16 13 | 	byte	$19, $1f, $21, $28, $34, $41, $49, $4f, $4c, $50, $52, $4a, $35, $21, $16, $13
116b7     18 1E 1B 0A 
116bb     FC F3 EC E9 
116bf     E9 E6 E6 ED 
116c3     FD 0D 16 17 | 	byte	$18, $1e, $1b, $0a, $fc, $f3, $ec, $e9, $e9, $e6, $e6, $ed, $fd, $0d, $16, $17
116c7     20 36 4E 56 
116cb     4A 35 24 1A 
116cf     19 1F 1F 16 
116d3     0E 13 1A 1C | 	byte	$20, $36, $4e, $56, $4a, $35, $24, $1a, $19, $1f, $1f, $16, $0e, $13, $1a, $1c
116d7     1F 25 2C 2D 
116db     2C 27 1F 13 
116df     07 FD F5 F4 
116e3     F9 01 0B 13 | 	byte	$1f, $25, $2c, $2d, $2c, $27, $1f, $13, $07, $fd, $f5, $f4, $f9, $01, $0b, $13
116e7     11 0B 04 02 
116eb     FB F4 EE EF 
116ef     E9 E2 D5 CA 
116f3     C2 BF BF C0 | 	byte	$11, $0b, $04, $02, $fb, $f4, $ee, $ef, $e9, $e2, $d5, $ca, $c2, $bf, $bf, $c0
116f7     B8 AB A1 A3 
116fb     AD B8 C6 D0 
116ff     D8 DB DD ED 
11703     FB 08 08 07 | 	byte	$b8, $ab, $a1, $a3, $ad, $b8, $c6, $d0, $d8, $db, $dd, $ed, $fb, $08, $08, $07
11707     05 06 0A 09 
1170b     07 0B 0F 0B 
1170f     03 F4 E6 E4 
11713     E6 E7 E2 D9 | 	byte	$05, $06, $0a, $09, $07, $0b, $0f, $0b, $03, $f4, $e6, $e4, $e6, $e7, $e2, $d9
11717     CD CA CB DD 
1171b     E9 ED EB E2 
1171f     E0 D9 D2 CA 
11723     C4 C2 CA D6 | 	byte	$cd, $ca, $cb, $dd, $e9, $ed, $eb, $e2, $e0, $d9, $d2, $ca, $c4, $c2, $ca, $d6
11727     DC E0 E7 F6 
1172b     0A 18 1B 15 
1172f     0E 0C 08 FC 
11733     E8 D9 D7 E6 | 	byte	$dc, $e0, $e7, $f6, $0a, $18, $1b, $15, $0e, $0c, $08, $fc, $e8, $d9, $d7, $e6
11737     F8 FE F8 F7 
1173b     FB 09 15 11 
1173f     04 FC 03 0E 
11743     17 12 03 F9 | 	byte	$f8, $fe, $f8, $f7, $fb, $09, $15, $11, $04, $fc, $03, $0e, $17, $12, $03, $f9
11747     F7 F7 F4 EF 
1174b     E1 CD C6 C6 
1174f     C2 B8 B6 BD 
11753     CA D3 DC E6 | 	byte	$f7, $f7, $f4, $ef, $e1, $cd, $c6, $c6, $c2, $b8, $b6, $bd, $ca, $d3, $dc, $e6
11757     F5 0A 1B 26 
1175b     2E 31 28 1F 
1175f     15 15 18 1A 
11763     16 0C 02 FA | 	byte	$f5, $0a, $1b, $26, $2e, $31, $28, $1f, $15, $15, $18, $1a, $16, $0c, $02, $fa
11767     F3 E9 E6 E8 
1176b     E7 E2 D6 D0 
1176f     CB CA CB DA 
11773     E7 F2 F4 F5 | 	byte	$f3, $e9, $e6, $e8, $e7, $e2, $d6, $d0, $cb, $ca, $cb, $da, $e7, $f2, $f4, $f5
11777     FB 0C 1C 22 
1177b     21 23 28 30 
1177f     35 37 37 43 
11783     53 56 4A 31 | 	byte	$fb, $0c, $1c, $22, $21, $23, $28, $30, $35, $37, $37, $43, $53, $56, $4a, $31
11787     1B 14 15 0C 
1178b     F6 E1 D5 D9 
1178f     E1 E5 DB CD 
11793     CA DB F5 04 | 	byte	$1b, $14, $15, $0c, $f6, $e1, $d5, $d9, $e1, $e5, $db, $cd, $ca, $db, $f5, $04
11797     07 06 09 0B 
1179b     0A 04 F8 EC 
1179f     E9 EC EE EF 
117a3     F3 F7 03 18 | 	byte	$07, $06, $09, $0b, $0a, $04, $f8, $ec, $e9, $ec, $ee, $ef, $f3, $f7, $03, $18
117a7     29 2E 35 3E 
117ab     4F 60 64 5C 
117af     43 30 2B 31 
117b3     38 38 30 26 | 	byte	$29, $2e, $35, $3e, $4f, $60, $64, $5c, $43, $30, $2b, $31, $38, $38, $30, $26
117b7     26 2F 34 36 
117bb     31 29 2B 36 
117bf     3F 3A 30 2F 
117c3     3F 52 57 49 | 	byte	$26, $2f, $34, $36, $31, $29, $2b, $36, $3f, $3a, $30, $2f, $3f, $52, $57, $49
117c7     39 32 35 38 
117cb     31 22 11 05 
117cf     01 01 FD F2 
117d3     EC EF FA 03 | 	byte	$39, $32, $35, $38, $31, $22, $11, $05, $01, $01, $fd, $f2, $ec, $ef, $fa, $03
117d7     03 05 0A 17 
117db     25 2A 23 1A 
117df     18 18 18 17 
117e3     15 0F 0E 0B | 	byte	$03, $05, $0a, $17, $25, $2a, $23, $1a, $18, $18, $18, $17, $15, $0f, $0e, $0b
117e7     01 FB FA FE 
117eb     05 FF EA CE 
117ef     B7 AF AC A7 
117f3     A1 9E 99 97 | 	byte	$01, $fb, $fa, $fe, $05, $ff, $ea, $ce, $b7, $af, $ac, $a7, $a1, $9e, $99, $97
117f7     95 91 8F 93 
117fb     9B AA B8 C7 
117ff     CF D7 E0 ED 
11803     00 10 12 0D | 	byte	$95, $91, $8f, $93, $9b, $aa, $b8, $c7, $cf, $d7, $e0, $ed, $00, $10, $12, $0d
11807     06 05 0A 0F 
1180b     10 09 03 FB 
1180f     F4 E8 E4 DC 
11813     DE E3 EA EC | 	byte	$06, $05, $0a, $0f, $10, $09, $03, $fb, $f4, $e8, $e4, $dc, $de, $e3, $ea, $ec
11817     EF F2 F4 F0 
1181b     EE EC E2 DB 
1181f     D0 CE DF F3 
11823     02 0A 10 16 | 	byte	$ef, $f2, $f4, $f0, $ee, $ec, $e2, $db, $d0, $ce, $df, $f3, $02, $0a, $10, $16
11827     1B 21 27 2A 
1182b     23 13 03 F7 
1182f     F4 EF E4 E4 
11833     E9 F3 F8 F6 | 	byte	$1b, $21, $27, $2a, $23, $13, $03, $f7, $f4, $ef, $e4, $e4, $e9, $f3, $f8, $f6
11837     F4 F7 02 08 
1183b     07 05 05 05 
1183f     06 08 0B 10 
11843     0D 01 F2 E4 | 	byte	$f4, $f7, $02, $08, $07, $05, $05, $05, $06, $08, $0b, $10, $0d, $01, $f2, $e4
11847     DB D8 CF C2 
1184b     B6 B1 B6 BA 
1184f     B2 A8 AE C2 
11853     D7 DF E1 E9 | 	byte	$db, $d8, $cf, $c2, $b6, $b1, $b6, $ba, $b2, $a8, $ae, $c2, $d7, $df, $e1, $e9
11857     FC 19 30 35 
1185b     2F 2E 36 41 
1185f     47 40 26 08 
11863     F6 F3 EE E0 | 	byte	$fc, $19, $30, $35, $2f, $2e, $36, $41, $47, $40, $26, $08, $f6, $f3, $ee, $e0
11867     CD BC BC C6 
1186b     C6 BF B4 AE 
1186f     B6 C6 D3 D8 
11873     D7 D1 CE D7 | 	byte	$cd, $bc, $bc, $c6, $c6, $bf, $b4, $ae, $b6, $c6, $d3, $d8, $d7, $d1, $ce, $d7
11877     E9 05 1C 2C 
1187b     34 37 41 52 
1187f     5A 53 46 39 
11883     33 2E 21 10 | 	byte	$e9, $05, $1c, $2c, $34, $37, $41, $52, $5a, $53, $46, $39, $33, $2e, $21, $10
11887     FE FA FD 03 
1188b     09 0C 0A 03 
1188f     00 FE FD FB 
11893     F9 FD 0B 1B | 	byte	$fe, $fa, $fd, $03, $09, $0c, $0a, $03, $00, $fe, $fd, $fb, $f9, $fd, $0b, $1b
11897     29 32 38 3C 
1189b     3B 3A 3B 3B 
1189f     33 24 13 06 
118a3     01 02 05 0A | 	byte	$29, $32, $38, $3c, $3b, $3a, $3b, $3b, $33, $24, $13, $06, $01, $02, $05, $0a
118a7     0E 0E 0B 10 
118ab     1C 1D 14 13 
118af     19 21 28 30 
118b3     36 3E 49 56 | 	byte	$0e, $0e, $0b, $10, $1c, $1d, $14, $13, $19, $21, $28, $30, $36, $3e, $49, $56
118b7     60 61 5B 54 
118bb     4D 4F 56 55 
118bf     48 3C 3B 42 
118c3     43 37 25 11 | 	byte	$60, $61, $5b, $54, $4d, $4f, $56, $55, $48, $3c, $3b, $42, $43, $37, $25, $11
118c7     05 FF F5 E6 
118cb     D2 C8 C8 C8 
118cf     C5 BD C0 CD 
118d3     E0 F0 F7 00 | 	byte	$05, $ff, $f5, $e6, $d2, $c8, $c8, $c8, $c5, $bd, $c0, $cd, $e0, $f0, $f7, $00
118d7     0D 1C 2C 32 
118db     31 2F 2D 2A 
118df     2C 2F 2A 1E 
118e3     11 05 FE F9 | 	byte	$0d, $1c, $2c, $32, $31, $2f, $2d, $2a, $2c, $2f, $2a, $1e, $11, $05, $fe, $f9
118e7     F4 EC E6 E0 
118eb     DF DD D9 D6 
118ef     D1 CE CD CA 
118f3     C8 CA D0 CA | 	byte	$f4, $ec, $e6, $e0, $df, $dd, $d9, $d6, $d1, $ce, $cd, $ca, $c8, $ca, $d0, $ca
118f7     BE B8 BD C0 
118fb     BD BA BE CA 
118ff     D6 E1 EA F1 
11903     F7 FD 04 0C | 	byte	$be, $b8, $bd, $c0, $bd, $ba, $be, $ca, $d6, $e1, $ea, $f1, $f7, $fd, $04, $0c
11907     13 18 1D 1C 
1190b     15 0E 08 01 
1190f     F7 EF E0 D6 
11913     CE C7 C9 DB | 	byte	$13, $18, $1d, $1c, $15, $0e, $08, $01, $f7, $ef, $e0, $d6, $ce, $c7, $c9, $db
11917     EC F6 FA FA 
1191b     FD FF FE FA 
1191f     F2 F0 F0 EC 
11923     EB F5 00 05 | 	byte	$ec, $f6, $fa, $fa, $fd, $ff, $fe, $fa, $f2, $f0, $f0, $ec, $eb, $f5, $00, $05
11927     07 04 00 FF 
1192b     03 02 FC F6 
1192f     EE E7 DC D8 
11933     DA E2 E6 E6 | 	byte	$07, $04, $00, $ff, $03, $02, $fc, $f6, $ee, $e7, $dc, $d8, $da, $e2, $e6, $e6
11937     E6 E6 E6 E5 
1193b     E4 E7 EE F5 
1193f     F7 F5 F1 F4 
11943     F7 F5 F2 ED | 	byte	$e6, $e6, $e6, $e5, $e4, $e7, $ee, $f5, $f7, $f5, $f1, $f4, $f7, $f5, $f2, $ed
11947     E0 D9 D3 C5 
1194b     B6 AC A7 A6 
1194f     A0 9B 9E B0 
11953     C4 D3 EC 05 | 	byte	$e0, $d9, $d3, $c5, $b6, $ac, $a7, $a6, $a0, $9b, $9e, $b0, $c4, $d3, $ec, $05
11957     23 39 46 52 
1195b     55 50 4D 50 
1195f     4D 41 2E 25 
11963     1F 1B 0F F9 | 	byte	$23, $39, $46, $52, $55, $50, $4d, $50, $4d, $41, $2e, $25, $1f, $1b, $0f, $f9
11967     E7 DA D3 D6 
1196b     DA D7 DA DC 
1196f     DD D9 DD EB 
11973     FB FA EC DE | 	byte	$e7, $da, $d3, $d6, $da, $d7, $da, $dc, $dd, $d9, $dd, $eb, $fb, $fa, $ec, $de
11977     DE ED F9 FD 
1197b     F5 ED F4 FF 
1197f     0B 0F 0D 0F 
11983     15 18 11 05 | 	byte	$de, $ed, $f9, $fd, $f5, $ed, $f4, $ff, $0b, $0f, $0d, $0f, $15, $18, $11, $05
11987     01 07 0E 11 
1198b     0D 07 01 FF 
1198f     FF FF 02 09 
11993     14 23 2B 3A | 	byte	$01, $07, $0e, $11, $0d, $07, $01, $ff, $ff, $ff, $02, $09, $14, $23, $2b, $3a
11997     54 64 64 64 
1199b     54 47 45 42 
1199f     34 1E FC E7 
119a3     E0 E7 E8 E3 | 	byte	$54, $64, $64, $64, $54, $47, $45, $42, $34, $1e, $fc, $e7, $e0, $e7, $e8, $e3
119a7     DF E6 F7 0D 
119ab     1F 2A 2A 2B 
119af     2B 27 21 1C 
119b3     19 1E 25 29 | 	byte	$df, $e6, $f7, $0d, $1f, $2a, $2a, $2b, $2b, $27, $21, $1c, $19, $1e, $25, $29
119b7     2E 33 39 3C 
119bb     3C 38 36 39 
119bf     3A 35 31 32 
119c3     33 2D 21 19 | 	byte	$2e, $33, $39, $3c, $3c, $38, $36, $39, $3a, $35, $31, $32, $33, $2d, $21, $19
119c7     14 13 13 11 
119cb     09 FE EF E1 
119cf     D6 CD C9 CB 
119d3     D4 E3 FA 15 | 	byte	$14, $13, $13, $11, $09, $fe, $ef, $e1, $d6, $cd, $c9, $cb, $d4, $e3, $fa, $15
119d7     2F 44 50 55 
119db     57 53 49 40 
119df     37 2A 17 08 
119e3     FA EF ED EE | 	byte	$2f, $44, $50, $55, $57, $53, $49, $40, $37, $2a, $17, $08, $fa, $ef, $ed, $ee
119e7     EF F1 EF E9 
119eb     DD D2 CD C9 
119ef     CB CD C4 B9 
119f3     BA C9 D3 D0 | 	byte	$ef, $f1, $ef, $e9, $dd, $d2, $cd, $c9, $cb, $cd, $c4, $b9, $ba, $c9, $d3, $d0
119f7     CA BD B7 B7 
119fb     B5 B2 B4 B8 
119ff     BD C8 D1 D9 
11a03     E4 F3 04 0D | 	byte	$ca, $bd, $b7, $b7, $b5, $b2, $b4, $b8, $bd, $c8, $d1, $d9, $e4, $f3, $04, $0d
11a07     0C 03 EE DD 
11a0b     D4 D1 CA BF 
11a0f     B6 B7 C3 D1 
11a13     E1 EE 03 1A | 	byte	$0c, $03, $ee, $dd, $d4, $d1, $ca, $bf, $b6, $b7, $c3, $d1, $e1, $ee, $03, $1a
11a17     2F 36 30 26 
11a1b     16 07 FD FA 
11a1f     FA EE DE CC 
11a23     C4 CA D2 D8 | 	byte	$2f, $36, $30, $26, $16, $07, $fd, $fa, $fa, $ee, $de, $cc, $c4, $ca, $d2, $d8
11a27     DD E3 EF FC 
11a2b     05 09 04 01 
11a2f     04 0A 09 04 
11a33     02 02 07 11 | 	byte	$dd, $e3, $ef, $fc, $05, $09, $04, $01, $04, $0a, $09, $04, $02, $02, $07, $11
11a37     16 11 0A 07 
11a3b     0A 0C 08 00 
11a3f     F8 F2 EC E8 
11a43     E7 EF F2 EC | 	byte	$16, $11, $0a, $07, $0a, $0c, $08, $00, $f8, $f2, $ec, $e8, $e7, $ef, $f2, $ec
11a47     E7 E6 E4 E1 
11a4b     D9 00 00 00 
11a4f     00 D4 17 60 
11a53     EF 0B 3D 34 | 	byte	$e7, $e6, $e4, $e1, $d9, $00, $00, $00, $00, $d4, $17, $60, $ef, $0b, $3d, $34
11a57     10 1F 50 07 
11a5b     2F 30 24 14 
11a5f     1D 20 08 0C 
11a63     14 FF E8 FF | 	byte	$10, $1f, $50, $07, $2f, $30, $24, $14, $1d, $20, $08, $0c, $14, $ff, $e8, $ff
11a67     00 E5 F2 D5 
11a6b     F0 D4 E0 B5 
11a6f     CF F0 F8 90 
11a73     AF E0 BF F7 | 	byte	$00, $e5, $f2, $d5, $f0, $d4, $e0, $b5, $cf, $f0, $f8, $90, $af, $e0, $bf, $f7
11a77     E0 C4 D0 E9 
11a7b     DD EF F9 FF 
11a7f     0B 13 1F 2B 
11a83     2F 3B 3F 47 | 	byte	$e0, $c4, $d0, $e9, $dd, $ef, $f9, $ff, $0b, $13, $1f, $2b, $2f, $3b, $3f, $47
11a87     50 54 4F 5D 
11a8b     63 67 6F 6F 
11a8f     6E 6E 6A 67 
11a93     63 62 5F 56 | 	byte	$50, $54, $4f, $5d, $63, $67, $6f, $6f, $6e, $6e, $6a, $67, $63, $62, $5f, $56
11a97     50 47 38 2F 
11a9b     24 18 0A F6 
11a9f     F8 E5 D5 C5 
11aa3     B8 B3 B0 87 | 	byte	$50, $47, $38, $2f, $24, $18, $0a, $f6, $f8, $e5, $d5, $c5, $b8, $b3, $b0, $87
11aa7     A5 84 82 80 
11aab     80 80 80 80 
11aaf     80 80 80 80 
11ab3     80 80 80 80 | 	byte	$a5, $84, $82, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80
11ab7     81 8C 92 97 
11abb     A7 AF B7 BF 
11abf     CB D3 E3 EF 
11ac3     07 0F 15 23 | 	byte	$81, $8c, $92, $97, $a7, $af, $b7, $bf, $cb, $d3, $e3, $ef, $07, $0f, $15, $23
11ac7     2F 3B 45 55 
11acb     55 68 73 7F 
11acf     7F 7F 7F 7F 
11ad3     7F 7F 7F 7F | 	byte	$2f, $3b, $45, $55, $55, $68, $73, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f
11ad7     7F 7F 7F 7F 
11adb     7F 7F 7F 7F 
11adf     7F 7F 7F 7F 
11ae3     7F 7F       | 	byte	$7f[14]
11ae5     74 6B 70 5C 
11ae9     3A 42 48 28 
11aed     10 14 0C E8 
11af1     E8 E0 D6 C5 | 	byte	$74, $6b, $70, $5c, $3a, $42, $48, $28, $10, $14, $0c, $e8, $e8, $e0, $d6, $c5
11af5     BC B0 A7 A0 
11af9     92 87 80 80 
11afd     80 80 80 80 
11b01     80 80 80 80 | 	byte	$bc, $b0, $a7, $a0, $92, $87, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80
11b05     80 80 80 80 
11b09     80 80 80 80 
11b0d     80 80 80 80 
11b11     80 80 80 80 
11b15     80          | 	byte	$80[17]
11b16     8B 8B 96 9F 
11b1a     AB AF BB C7 
11b1e     CF DB E7 F2 
11b22     FD 0B 12 1A | 	byte	$8b, $8b, $96, $9f, $ab, $af, $bb, $c7, $cf, $db, $e7, $f2, $fd, $0b, $12, $1a
11b26     27 37 3A 49 
11b2a     57 5E 64 6F 
11b2e     7F 7F 7F 7F 
11b32     7F 7F 7F 7F | 	byte	$27, $37, $3a, $49, $57, $5e, $64, $6f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f
11b36     7F 7F 7F 7F 
11b3a     7F 7F 7F 7F 
11b3e     7F 7F 7F 7F 
11b42     7F 7F 7F 7F 
11b46     7F 7F 7F 7F 
11b4a     7F 7F       | 	byte	$7f[22]
11b4c     7E 68 64 5C 
11b50     56 44 3E 30 
11b54     24 17 08 FF 
11b58     F0 E6 D6 CE | 	byte	$7e, $68, $64, $5c, $56, $44, $3e, $30, $24, $17, $08, $ff, $f0, $e6, $d6, $ce
11b5c     BE B0 A6 98 
11b60     91 84 80 80 
11b64     80 80 80 80 
11b68     80 80 80 80 | 	byte	$be, $b0, $a6, $98, $91, $84, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80
11b6c     80 80 80 80 
      ...             
11b84     80 80 80 80 
11b88     80          | 	byte	$80[29]
11b89     82 86 8F 99 
11b8d     A5 B5 BB C7 
11b91     CF DF E5 F3 
11b95     FD 09 13 1F | 	byte	$82, $86, $8f, $99, $a5, $b5, $bb, $c7, $cf, $df, $e5, $f3, $fd, $09, $13, $1f
11b99     29 35 3F 42 
11b9d     4D 5C 5D 65 
11ba1     6E 77 7A 7F 
11ba5     7F 7F 7F 7F | 	byte	$29, $35, $3f, $42, $4d, $5c, $5d, $65, $6e, $77, $7a, $7f, $7f, $7f, $7f, $7f
11ba9     7F 7F 7F 7F 
11bad     7F 7F 7F 7F 
11bb1     7F 7F 7F 7F 
11bb5     7F 7F 7F 7F 
11bb9     7F 7F 7F 7F 
11bbd     7F 7F 7F 7F 
11bc1     7F 7F 7F 7F | 	byte	$7f[28]
11bc5     76 76 6A 61 
11bc9     5D 52 47 3E 
11bcd     37 28 20 11 
11bd1     0D 02 F6 EC | 	byte	$76, $76, $6a, $61, $5d, $52, $47, $3e, $37, $28, $20, $11, $0d, $02, $f6, $ec
11bd5     E1 D7 D1 C2 
11bd9     B9 AE A4 9E 
11bdd     92 88 82 80 
11be1     80 80 80 80 | 	byte	$e1, $d7, $d1, $c2, $b9, $ae, $a4, $9e, $92, $88, $82, $80, $80, $80, $80, $80
11be5     80 80 80 80 
      ...             
11bfd     80 80 80 80 
11c01     80 80 80 80 | 	byte	$80[32]
11c05     83 88 8E 93 
11c09     99 A1 A7 A9 
11c0d     B5 B6 BF C9 
11c11     CD D1 DA DF | 	byte	$83, $88, $8e, $93, $99, $a1, $a7, $a9, $b5, $b6, $bf, $c9, $cd, $d1, $da, $df
11c15     E5 EB ED F1 
11c19     F9 FD 02 05 
11c1d     07 0D 15 14 
11c21     19 1E 23 24 | 	byte	$e5, $eb, $ed, $f1, $f9, $fd, $02, $05, $07, $0d, $15, $14, $19, $1e, $23, $24
11c25     29 2E 2F 33 
11c29     38 3B 3D 3F 
11c2d     44 45 47 49 
11c31     4A 4A 4D 4D | 	byte	$29, $2e, $2f, $33, $38, $3b, $3d, $3f, $44, $45, $47, $49, $4a, $4a, $4d, $4d
11c35     4C 50 4C 4B 
11c39     4C 4C 4B 4D 
11c3d     4B 4B 4A 4B 
11c41     48 48 46 46 | 	byte	$4c, $50, $4c, $4b, $4c, $4c, $4b, $4d, $4b, $4b, $4a, $4b, $48, $48, $46, $46
11c45     41 43 43 41 
11c49     3C 3D 3A 37 
11c4d     3D 33 31 36 
11c51     31 2E 2B 2C | 	byte	$41, $43, $43, $41, $3c, $3d, $3a, $37, $3d, $33, $31, $36, $31, $2e, $2b, $2c
11c55     28 22 25 22 
11c59     1E 1D 1F 1A 
11c5d     1A 19 16 17 
11c61     18 17 16 15 | 	byte	$28, $22, $25, $22, $1e, $1d, $1f, $1a, $1a, $19, $16, $17, $18, $17, $16, $15
11c65     18 17 17 17 
11c69     16 18 16 17 
11c6d     17 16 14 13 
11c71     12 11 0F 0E | 	byte	$18, $17, $17, $17, $16, $18, $16, $17, $17, $16, $14, $13, $12, $11, $0f, $0e
11c75     0D 0C 0B 09 
11c79     06 05 04 02 
11c7d     00 FE FC FA 
11c81     F6 F4 F3 EE | 	byte	$0d, $0c, $0b, $09, $06, $05, $04, $02, $00, $fe, $fc, $fa, $f6, $f4, $f3, $ee
11c85     EC EC E6 E2 
11c89     E1 DF D8 D5 
11c8d     D3 D0 C9 C2 
11c91     C0 BC B7 B0 | 	byte	$ec, $ec, $e6, $e2, $e1, $df, $d8, $d5, $d3, $d0, $c9, $c2, $c0, $bc, $b7, $b0
11c95     AD A9 A4 9F 
11c99     9B 99 95 90 
11c9d     8D 8C 8A 87 
11ca1     84 83 81 80 | 	byte	$ad, $a9, $a4, $9f, $9b, $99, $95, $90, $8d, $8c, $8a, $87, $84, $83, $81, $80
11ca5     80 80 80 80 
11ca9     80 80 80 80 
11cad     80 80 80 80 
11cb1     80 80 80 80 
11cb5     80 80 80 80 
11cb9     80 80       | 	byte	$80[22]
11cbb     81 85 87 8B 
11cbf     8F 93 99 9E 
11cc3     A2 A7 AC B3 
11cc7     B9 BE C5 CA | 	byte	$81, $85, $87, $8b, $8f, $93, $99, $9e, $a2, $a7, $ac, $b3, $b9, $be, $c5, $ca
11ccb     D1 D3 DD E3 
11ccf     EB F1 F7 FD 
11cd3     05 0B 13 18 
11cd7     1F 27 2F 33 | 	byte	$d1, $d3, $dd, $e3, $eb, $f1, $f7, $fd, $05, $0b, $13, $18, $1f, $27, $2f, $33
11cdb     3C 41 49 4F 
11cdf     57 5E 63 6A 
11ce3     6F 77 7B 7F 
11ce7     7F 7F 7F 7F | 	byte	$3c, $41, $49, $4f, $57, $5e, $63, $6a, $6f, $77, $7b, $7f, $7f, $7f, $7f, $7f
11ceb     7F 7F 7F 7F 
      ...             
11d03     7F 7F 7F 7F 
11d07     7F 7F       | 	byte	$7f[30]
11d09     7C 76 71 6B 
11d0d     66 60 58 54 
11d11     4B 44 40 36 
11d15     30 28 22 1C | 	byte	$7c, $76, $71, $6b, $66, $60, $58, $54, $4b, $44, $40, $36, $30, $28, $22, $1c
11d19     14 0E 08 00 
11d1d     FB F4 EE E8 
11d21     E0 DC D6 D1 
11d25     C8 C3 BD B8 | 	byte	$14, $0e, $08, $00, $fb, $f4, $ee, $e8, $e0, $dc, $d6, $d1, $c8, $c3, $bd, $b8
11d29     B0 AC A3 A0 
11d2d     98 93 8D 8B 
11d31     85 80 80 80 
11d35     80 80 80 80 | 	byte	$b0, $ac, $a3, $a0, $98, $93, $8d, $8b, $85, $80, $80, $80, $80, $80, $80, $80
11d39     80 80 80 80 
11d3d     80 80 80 80 
11d41     80 80 80 80 
11d45     80 80 80 80 
11d49     80 80 80 80 
11d4d     80 80 80 80 
11d51     80 80 80    | 	byte	$80[27]
11d54     85 89 8D 92 
11d58     97 9D A2 A7 
11d5c     AE B2 B9 BE 
11d60     C2 C8 CF D1 | 	byte	$85, $89, $8d, $92, $97, $9d, $a2, $a7, $ae, $b2, $b9, $be, $c2, $c8, $cf, $d1
11d64     D5 DE E4 E9 
11d68     EF F4 F9 FD 
11d6c     02 05 0C 0F 
11d70     15 1B 1E 22 | 	byte	$d5, $de, $e4, $e9, $ef, $f4, $f9, $fd, $02, $05, $0c, $0f, $15, $1b, $1e, $22
11d74     27 2B 2F 34 
11d78     39 3D 3F 43 
11d7c     47 4A 4E 51 
11d80     53 57 58 5A | 	byte	$27, $2b, $2f, $34, $39, $3d, $3f, $43, $47, $4a, $4e, $51, $53, $57, $58, $5a
11d84     5C 5F 5E 60 
11d88     61 61 62 62 
11d8c     61 61 60 61 
11d90     60 5F 5F 5D | 	byte	$5c, $5f, $5e, $60, $61, $61, $62, $62, $61, $61, $60, $61, $60, $5f, $5f, $5d
11d94     5D 5D 5C 5A 
11d98     5A 5A 58 58 
11d9c     55 53 53 52 
11da0     4F 4D 4B 49 | 	byte	$5d, $5d, $5c, $5a, $5a, $5a, $58, $58, $55, $53, $53, $52, $4f, $4d, $4b, $49
11da4     45 44 40 3D 
11da8     3C 39 35 33 
11dac     30 2D 2B 28 
11db0     25 23 20 1F | 	byte	$45, $44, $40, $3d, $3c, $39, $35, $33, $30, $2d, $2b, $28, $25, $23, $20, $1f
11db4     1C 1A 18 15 
11db8     13 12 10 0D 
11dbc     0A 09 07 05 
11dc0     03 01 00 FE | 	byte	$1c, $1a, $18, $15, $13, $12, $10, $0d, $0a, $09, $07, $05, $03, $01, $00, $fe
11dc4     FD FA F8 F6 
11dc8     F6 F4 EF EE 
11dcc     ED EB E8 E7 
11dd0     E8 E5 E5 E5 | 	byte	$fd, $fa, $f8, $f6, $f6, $f4, $ef, $ee, $ed, $eb, $e8, $e7, $e8, $e5, $e5, $e5
11dd4     E6 E3 E3 E6 
11dd8     E5 E3 E4 E5 
11ddc     E4 E4 E5 E4 
11de0     E3 E4 E3 E2 | 	byte	$e6, $e3, $e3, $e6, $e5, $e3, $e4, $e5, $e4, $e4, $e5, $e4, $e3, $e4, $e3, $e2
11de4     E2 E0 E1 DF 
11de8     E0 E0 DF DE 
11dec     DF DF DF DF 
11df0     DF DF DF E0 | 	byte	$e2, $e0, $e1, $df, $e0, $e0, $df, $de, $df, $df, $df, $df, $df, $df, $df, $e0
11df4     DF DF E2 E2 
11df8     E0 DF E2 E3 
11dfc     E2 E2 E3 E3 
11e00     E3 E2 E3 E3 | 	byte	$df, $df, $e2, $e2, $e0, $df, $e2, $e3, $e2, $e2, $e3, $e3, $e3, $e2, $e3, $e3
11e04     E3 E2 E3 E2 
11e08     E1 E1 E2 E2 
11e0c     E2 E3 E4 E5 
11e10     E6 E8 E8 EB | 	byte	$e3, $e2, $e3, $e2, $e1, $e1, $e2, $e2, $e2, $e3, $e4, $e5, $e6, $e8, $e8, $eb
11e14     EB ED ED F0 
11e18     F0 F0 F2 F4 
11e1c     F4 F5 F6 F7 
11e20     F7 F8 F9 F9 | 	byte	$eb, $ed, $ed, $f0, $f0, $f0, $f2, $f4, $f4, $f5, $f6, $f7, $f7, $f8, $f9, $f9
11e24     FA FB FD FA 
11e28     FC FD FE FC 
11e2c     FE FF 00 00 
11e30     01 03 04 05 | 	byte	$fa, $fb, $fd, $fa, $fc, $fd, $fe, $fc, $fe, $ff, $00, $00, $01, $03, $04, $05
11e34     04 07 07 09 
11e38     09 0A 0B 0C 
11e3c     0D 0E 0D 0E 
11e40     0E 0E 0E 0E | 	byte	$04, $07, $07, $09, $09, $0a, $0b, $0c, $0d, $0e, $0d, $0e, $0e, $0e, $0e, $0e
11e44     0F 0D 0E 0D 
11e48     0D 0E 0D 0E 
11e4c     0E 0F 0F 11 
11e50     12 11 13 14 | 	byte	$0f, $0d, $0e, $0d, $0d, $0e, $0d, $0e, $0e, $0f, $0f, $11, $12, $11, $13, $14
11e54     14 15 16 15 
11e58     17 17 19 16 
11e5c     17 1A 19 16 
11e60     17 17 17 16 | 	byte	$14, $15, $16, $15, $17, $17, $19, $16, $17, $1a, $19, $16, $17, $17, $17, $16
11e64     16 16 14 15 
11e68     14 13 14 14 
11e6c     13 13 13 14 
11e70     13 13 13 13 | 	byte	$16, $16, $14, $15, $14, $13, $14, $14, $13, $13, $13, $14, $13, $13, $13, $13
11e74     13 12 13 12 
11e78     12 12 11 11 
11e7c     10 12 0F 0E 
11e80     0F 0F 0E 0D | 	byte	$13, $12, $13, $12, $12, $12, $11, $11, $10, $12, $0f, $0e, $0f, $0f, $0e, $0d
11e84     0D 0C 0B 09 
11e88     09 09 0A 09 
11e8c     09 08 09 0C 
11e90     0B 09 0B 0B | 	byte	$0d, $0c, $0b, $09, $09, $09, $0a, $09, $09, $08, $09, $0c, $0b, $09, $0b, $0b
11e94     0C 0B 0C 0C 
11e98     0C 0C 0C 0B 
11e9c     0A 0A 0B 09 
11ea0     07 08 08 06 | 	byte	$0c, $0b, $0c, $0c, $0c, $0c, $0c, $0b, $0a, $0a, $0b, $09, $07, $08, $08, $06
11ea4     07 05 07 04 
11ea8     05 05 06 05 
11eac     06 05 07 07 
11eb0     06 04 06 07 | 	byte	$07, $05, $07, $04, $05, $05, $06, $05, $06, $05, $07, $07, $06, $04, $06, $07
11eb4     05 05 07 06 
11eb8     07 05 04 05 
11ebc     06 02 03 03 
11ec0     02 FF 01 00 | 	byte	$05, $05, $07, $06, $07, $05, $04, $05, $06, $02, $03, $03, $02, $ff, $01, $00
11ec4     FE FF FF FE 
11ec8     FE FF FE FF 
11ecc     01 01 01 01 
11ed0     03 02 02 03 | 	byte	$fe, $ff, $ff, $fe, $fe, $ff, $fe, $ff, $01, $01, $01, $01, $03, $02, $02, $03
11ed4     03 03 02 03 
11ed8     03 03 02 00 
11edc     03 02 02 FF 
11ee0     01 02 00 00 | 	byte	$03, $03, $02, $03, $03, $03, $02, $00, $03, $02, $02, $ff, $01, $02, $00, $00
11ee4     FE 00 FF FF 
11ee8     00 00 00 00 
11eec     05 FC F5 10 
11ef0     00 E8 15 05 | 	byte	$fe, $00, $ff, $ff, $00, $00, $00, $00, $05, $fc, $f5, $10, $00, $e8, $15, $05
11ef4     EB 00 0E F5 
11ef8     FC FD 04 03 
11efc     EF 00 FF 10 
11f00     FC EA 0C FB | 	byte	$eb, $00, $0e, $f5, $fc, $fd, $04, $03, $ef, $00, $ff, $10, $fc, $ea, $0c, $fb
11f04     FB 00 18 E4 
11f08     F0 27 EA F3 
11f0c     25 D0 17 EF 
11f10     16 F8 CF 2B | 	byte	$fb, $00, $18, $e4, $f0, $27, $ea, $f3, $25, $d0, $17, $ef, $16, $f8, $cf, $2b
11f14     00 EA 10 FD 
11f18     E0 3F D0 17 
11f1c     04 D9 0F F8 
11f20     F7 12 E9 F1 | 	byte	$00, $ea, $10, $fd, $e0, $3f, $d0, $17, $04, $d9, $0f, $f8, $f7, $12, $e9, $f1
11f24     27 DC FC 13 
11f28     F0 F6 15 EF 
11f2c     02 EB 01 23 
11f30     E8 EF 08 22 | 	byte	$27, $dc, $fc, $13, $f0, $f6, $15, $ef, $02, $eb, $01, $23, $e8, $ef, $08, $22
11f34     E2 EA 0F 18 
11f38     DF 18 F4 01 
11f3c     FC EB 0B 28 
11f40     BF 30 EA ED | 	byte	$e2, $ea, $0f, $18, $df, $18, $f4, $01, $fc, $eb, $0b, $28, $bf, $30, $ea, $ed
11f44     28 DB FF 28 
11f48     D3 1C ED 1E 
11f4c     D4 07 23 E4 
11f50     F4 EF 20 06 | 	byte	$28, $db, $ff, $28, $d3, $1c, $ed, $1e, $d4, $07, $23, $e4, $f4, $ef, $20, $06
11f54     CB 13 1C C6 
11f58     0B 48 9F 23 
11f5c     D8 4F D0 CF 
11f60     47 E8 FD 28 | 	byte	$cb, $13, $1c, $c6, $0b, $48, $9f, $23, $d8, $4f, $d0, $cf, $47, $e8, $fd, $28
11f64     BB 31 D5 30 
11f68     07 D7 30 AF 
11f6c     FB 52 E0 EF 
11f70     E9 F4 3F E8 | 	byte	$bb, $31, $d5, $30, $07, $d7, $30, $af, $fb, $52, $e0, $ef, $e9, $f4, $3f, $e8
11f74     DF 20 E3 00 
11f78     03 33 EA A2 
11f7c     7F EB C8 2B 
11f80     CE 36 06 CB | 	byte	$df, $20, $e3, $00, $03, $33, $ea, $a2, $7f, $eb, $c8, $2b, $ce, $36, $06, $cb
11f84     20 FF 1A D5 
11f88     2E E7 FD 20 
11f8c     E4 E7 34 BA 
11f90     56 00 8F 7F | 	byte	$20, $ff, $1a, $d5, $2e, $e7, $fd, $20, $e4, $e7, $34, $ba, $56, $00, $8f, $7f
11f94     08 D7 1B E8 
11f98     1D 00 DF 08 
11f9c     37 A0 FB 68 
11fa0     BF D8 35 F1 | 	byte	$08, $d7, $1b, $e8, $1d, $00, $df, $08, $37, $a0, $fb, $68, $bf, $d8, $35, $f1
11fa4     02 FF E7 32 
11fa8     B9 0B 1E FB 
11fac     20 A2 2F 42 
11fb0     C7 0A C6 17 | 	byte	$02, $ff, $e7, $32, $b9, $0b, $1e, $fb, $20, $a2, $2f, $42, $c7, $0a, $c6, $17
11fb4     70 AF 61 E8 
11fb8     DF 1D 15 F0 
11fbc     FF 30 B8 FF 
11fc0     38 1B B0 BF | 	byte	$70, $af, $61, $e8, $df, $1d, $15, $f0, $ff, $30, $b8, $ff, $38, $1b, $b0, $bf
11fc4     60 D8 FF E8 
11fc8     33 A7 18 5B 
11fcc     C8 0F F0 FF 
11fd0     00 D1 4B D8 | 	byte	$60, $d8, $ff, $e8, $33, $a7, $18, $5b, $c8, $0f, $f0, $ff, $00, $d1, $4b, $d8
11fd4     F7 0C 2F B4 
11fd8     7F E0 FF D7 
11fdc     18 D7 27 C0 
11fe0     27 1B DA D4 | 	byte	$f7, $0c, $2f, $b4, $7f, $e0, $ff, $d7, $18, $d7, $27, $c0, $27, $1b, $da, $d4
11fe4     1F 08 F0 D5 
11fe8     2F 40 DF 70 
11fec     90 3F 58 87 
11ff0     4E F5 10 9F | 	byte	$1f, $08, $f0, $d5, $2f, $40, $df, $70, $90, $3f, $58, $87, $4e, $f5, $10, $9f
11ff4     7F 82 27 E0 
11ff8     F7 57 C0 CB 
11ffc     27 2C 94 3F 
12000     31 CC DC 0C | 	byte	$7f, $82, $27, $e0, $f7, $57, $c0, $cb, $27, $2c, $94, $3f, $31, $cc, $dc, $0c
12004     4F C0 E8 2F 
12008     20 EC EF 09 
1200c     C8 1F 28 D3 
12010     F7 F9 18 17 | 	byte	$4f, $c0, $e8, $2f, $20, $ec, $ef, $09, $c8, $1f, $28, $d3, $f7, $f9, $18, $17
12014     00 EA EF 30 
12018     DF F3 13 18 
1201c     BF 50 CD 0B 
12020     20 FF 8F 7F | 	byte	$00, $ea, $ef, $30, $df, $f3, $13, $18, $bf, $50, $cd, $0b, $20, $ff, $8f, $7f
12024     B0 DF 54 C2 
12028     EB 10 F7 08 
1202c     BF 70 BA F7 
12030     20 C7 2E E2 | 	byte	$b0, $df, $54, $c2, $eb, $10, $f7, $08, $bf, $70, $ba, $f7, $20, $c7, $2e, $e2
12034     F9 FF 00 2F 
12038     CD 48 8F 4F 
1203c     F8 E3 14 17 
12040     00 E0 27 E6 | 	byte	$f9, $ff, $00, $2f, $cd, $48, $8f, $4f, $f8, $e3, $14, $17, $00, $e0, $27, $e6
12044     F8 11 B3 77 
12048     AE F8 53 E0 
1204c     B3 60 AF 70 
12050     DF C0 37 00 | 	byte	$f8, $11, $b3, $77, $ae, $f8, $53, $e0, $b3, $60, $af, $70, $df, $c0, $37, $00
12054     17 E8 CB 75 
12058     A0 1F 0F 18 
1205c     F2 B7 30 1B 
12060     F5 DF F2 67 | 	byte	$17, $e8, $cb, $75, $a0, $1f, $0f, $18, $f2, $b7, $30, $1b, $f5, $df, $f2, $67
12064     83 60 37 A0 
12068     18 FF DE 1B 
1206c     06 01 CF 20 
12070     E5 EB 58 BF | 	byte	$83, $60, $37, $a0, $18, $ff, $de, $1b, $06, $01, $cf, $20, $e5, $eb, $58, $bf
12074     0B 00 FB 0A 
12078     00 F7 E0 2F 
1207c     E8 17 A8 3F 
12080     28 AF 44 17 | 	byte	$0b, $00, $fb, $0a, $00, $f7, $e0, $2f, $e8, $17, $a8, $3f, $28, $af, $44, $17
12084     B4 3F E8 1F 
12088     00 E3 25 D4 
1208c     13 D4 37 C8 
12090     17 05 20 CF | 	byte	$b4, $3f, $e8, $1f, $00, $e3, $25, $d4, $13, $d4, $37, $c8, $17, $05, $20, $cf
12094     C1 54 D4 CF 
12098     20 18 07 D3 
1209c     08 FF D8 E0 
120a0     3F 18 AC FF | 	byte	$c1, $54, $d4, $cf, $20, $18, $07, $d3, $08, $ff, $d8, $e0, $3f, $18, $ac, $ff
120a4     48 D8 BB 2F 
120a8     24 0C 92 67 
120ac     D8 F0 F7 7E 
120b0     90 EB 02 59 | 	byte	$48, $d8, $bb, $2f, $24, $0c, $92, $67, $d8, $f0, $f7, $7e, $90, $eb, $02, $59
120b4     A8 1F 14 E5 
120b8     17 C4 37 00 
120bc     DB 33 E9 D1 
120c0     3F 0A B0 4F | 	byte	$a8, $1f, $14, $e5, $17, $c4, $37, $00, $db, $33, $e9, $d1, $3f, $0a, $b0, $4f
120c4     FD 08 97 7F 
120c8     C0 D6 3B 20 
120cc     C8 F7 20 1F 
120d0     C0 18 D7 60 | 	byte	$fd, $08, $97, $7f, $c0, $d6, $3b, $20, $c8, $f7, $20, $1f, $c0, $18, $d7, $60
120d4     AD F7 30 E7 
120d8     DB 20 E0 5B 
120dc     A8 2F D2 12 
120e0     33 E0 E8 DF | 	byte	$ad, $f7, $30, $e7, $db, $20, $e0, $5b, $a8, $2f, $d2, $12, $33, $e0, $e8, $df
120e4     38 C8 3F 00 
120e8     DD FA 08 10 
120ec     BF 56 C4 17 
120f0     30 9B 14 28 | 	byte	$38, $c8, $3f, $00, $dd, $fa, $08, $10, $bf, $56, $c4, $17, $30, $9b, $14, $28
120f4     09 D0 1F 0A 
120f8     BC 57 E0 FF 
120fc     08 DF 10 42 
12100     AA 2D 18 AD | 	byte	$09, $d0, $1f, $0a, $bc, $57, $e0, $ff, $08, $df, $10, $42, $aa, $2d, $18, $ad
12104     47 F0 DF 30 
12108     FB ED 2C E3 
1210c     EA 1F E8 EF 
12110     10 FB CF 34 | 	byte	$47, $f0, $df, $30, $fb, $ed, $2c, $e3, $ea, $1f, $e8, $ef, $10, $fb, $cf, $34
12114     DF 0C 00 C5 
12118     34 17 9D 7F 
1211c     98 EF 32 F6 
12120     00 E5 F5 0F | 	byte	$df, $0c, $00, $c5, $34, $17, $9d, $7f, $98, $ef, $32, $f6, $00, $e5, $f5, $0f
12124     20 EF F4 16 
12128     E5 13 F0 D9 
1212c     47 00 06 DB 
12130     2B E0 FF 10 | 	byte	$20, $ef, $f4, $16, $e5, $13, $f0, $d9, $47, $00, $06, $db, $2b, $e0, $ff, $10
12134     F5 E2 0B 1E 
12138     00 E7 E0 43 
1213c     CD 1C F2 EF 
12140     1C F9 F6 07 | 	byte	$f5, $e2, $0b, $1e, $00, $e7, $e0, $43, $cd, $1c, $f2, $ef, $1c, $f9, $f6, $07
12144     E7 22 CF 1A 
12148     10 DF 1D DB 
1214c     27 E0 1F D8 
12150     17 00 13 18 | 	byte	$e7, $22, $cf, $1a, $10, $df, $1d, $db, $27, $e0, $1f, $d8, $17, $00, $13, $18
12154     C7 F3 50 DD 
12158     D8 27 20 C7 
1215c     11 22 E1 04 
12160     F7 20 FD F0 | 	byte	$c7, $f3, $50, $dd, $d8, $27, $20, $c7, $11, $22, $e1, $04, $f7, $20, $fd, $f0
12164     ED 03 3E C9 
12168     FA 1F F5 EF 
1216c     16 FF 08 DF 
12170     2A C6 3C EB | 	byte	$ed, $03, $3e, $c9, $fa, $1f, $f5, $ef, $16, $ff, $08, $df, $2a, $c6, $3c, $eb
12174     0C E3 39 D7 
12178     FC 1F 00 F9 
1217c     03 00 15 DF 
12180     0B 10 F6 E7 | 	byte	$0c, $e3, $39, $d7, $fc, $1f, $00, $f9, $03, $00, $15, $df, $0b, $10, $f6, $e7
12184     31 DB FF 17 
12188     F0 FD 06 F6 
1218c     ED 25 06 EE 
12190     E8 29 EA 08 | 	byte	$31, $db, $ff, $17, $f0, $fd, $06, $f6, $ed, $25, $06, $ee, $e8, $29, $ea, $08
12194     FD 08 05 F3 
12198     00 FE 12 F8 
1219c     FB 10 EF 10 
121a0     FD FE 0D E8 | 	byte	$fd, $08, $05, $f3, $00, $fe, $12, $f8, $fb, $10, $ef, $10, $fd, $fe, $0d, $e8
121a4     0B 05 F7 05 
121a8     04 F6 FF 0E 
121ac     E9 1D 0A D9 
121b0     0F 15 E8 05 | 	byte	$0b, $05, $f7, $05, $04, $f6, $ff, $0e, $e9, $1d, $0a, $d9, $0f, $15, $e8, $05
121b4     FE 0C F8 00 
121b8     05 FF 10 E2 
121bc     15 08 F5 0E 
121c0     EB 08 01 0E | 	byte	$fe, $0c, $f8, $00, $05, $ff, $10, $e2, $15, $08, $f5, $0e, $eb, $08, $01, $0e
121c4     F0 FF 06 EC 
121c8     13 F7 00 05 
121cc     08 E5 06 14 
121d0     E5 27 DF 06 | 	byte	$f0, $ff, $06, $ec, $13, $f7, $00, $05, $08, $e5, $06, $14, $e5, $27, $df, $06
121d4     FF 00 07 00 
121d8     05 EF FF 20 
121dc     F2 E8 09 07 
121e0     00 F8 FB 07 | 	byte	$ff, $00, $07, $00, $05, $ef, $ff, $20, $f2, $e8, $09, $07, $00, $f8, $fb, $07
121e4     00 EF 13 F4 
121e8     F9 0B EC 0C 
121ec     F7 0A F3 03 
121f0     03 00 FE FB | 	byte	$00, $ef, $13, $f4, $f9, $0b, $ec, $0c, $f7, $0a, $f3, $03, $03, $00, $fe, $fb
121f4     10 F1 F7 12 
121f8     F3 00 08 FC 
121fc     FC F7 10 F9 
12200     04 03 EF 11 | 	byte	$10, $f1, $f7, $12, $f3, $00, $08, $fc, $fc, $f7, $10, $f9, $04, $03, $ef, $11
12204     F9 F7 FC 05 
12208     06 F2 02 08 
1220c     F4 0A F9 0B 
12210     EC 0D 0D F0 | 	byte	$f9, $f7, $fc, $05, $06, $f2, $02, $08, $f4, $0a, $f9, $0b, $ec, $0d, $0d, $f0
12214     07 F8 15 E9 
12218     10 0B E9 FF 
1221c     09 07 F3 0B 
12220     F8 FD 10 00 | 	byte	$07, $f8, $15, $e9, $10, $0b, $e9, $ff, $09, $07, $f3, $0b, $f8, $fd, $10, $00
12224     E9 20 ED F7 
12228     18 01 01 E8 
1222c     0F F9 03 FA 
12230     07 00 07 E8 | 	byte	$e9, $20, $ed, $f7, $18, $01, $01, $e8, $0f, $f9, $03, $fa, $07, $00, $07, $e8
12234     13 0C DE 0D 
12238     0D F1 03 07 
1223c     F5 0E F6 10 
12240     E7 0D F8 05 | 	byte	$13, $0c, $de, $0d, $0d, $f1, $03, $07, $f5, $0e, $f6, $10, $e7, $0d, $f8, $05
12244     02 F4 0F 08 
12248     E4 07 0D E6 
1224c     16 00 F7 08 
12250     F7 13 EC FF | 	byte	$02, $f4, $0f, $08, $e4, $07, $0d, $e6, $16, $00, $f7, $08, $f7, $13, $ec, $ff
12254     05 04 FC FE 
12258     0F E8 0D FA 
1225c     FC 0D 00 ED 
12260     10 03 EF 1C | 	byte	$05, $04, $fc, $fe, $0f, $e8, $0d, $fa, $fc, $0d, $00, $ed, $10, $03, $ef, $1c
12264     F5 EA 12 03 
12268     01 F6 05 FF 
1226c     08 F2 0F 00 
12270     F6 09 0F F2 | 	byte	$f5, $ea, $12, $03, $01, $f6, $05, $ff, $08, $f2, $0f, $00, $f6, $09, $0f, $f2
12274     FB FD 17 EA 
12278     07 0F F6 F3 
1227c     1B EA 10 F5 
12280     FB 18 ED 07 | 	byte	$fb, $fd, $17, $ea, $07, $0f, $f6, $f3, $1b, $ea, $10, $f5, $fb, $18, $ed, $07
12284     06 DE 10 02 
12288     F7 10 EF 10 
1228c     F7 00 FD 00 
12290     F7 0D 00 00 | 	byte	$06, $de, $10, $02, $f7, $10, $ef, $10, $f7, $00, $fd, $00, $f7, $0d, $00, $00
12294     ED 1B F5 FE 
12298     FD F5 18 F4 
1229c     FE 05 F6 FE 
122a0     08 FB 0D EE | 	byte	$ed, $1b, $f5, $fe, $fd, $f5, $18, $f4, $fe, $05, $f6, $fe, $08, $fb, $0d, $ee
122a4     08 FF 08 EF 
122a8     15 FC F7 10 
122ac     FD FC FC 02 
122b0     09 FA FB 08 | 	byte	$08, $ff, $08, $ef, $15, $fc, $f7, $10, $fd, $fc, $fc, $02, $09, $fa, $fb, $08
122b4     01 F7 07 F7 
122b8     14 E7 09 0A 
122bc     00 E7 15 00 
122c0     F7 06 F5 17 | 	byte	$01, $f7, $07, $f7, $14, $e7, $09, $0a, $00, $e7, $15, $00, $f7, $06, $f5, $17
122c4     F2 FE 06 F7 
122c8     12 ED 0D F5 
122cc     0C F1 17 E8 
122d0     09 FA 03 00 | 	byte	$f2, $fe, $06, $f7, $12, $ed, $0d, $f5, $0c, $f1, $17, $e8, $09, $fa, $03, $00
122d4     0D F1 04 FE 
122d8     04 FA 06 04 
122dc     F7 02 0A F8 
122e0     FB 01 0E 00 | 	byte	$0d, $f1, $04, $fe, $04, $fa, $06, $04, $f7, $02, $0a, $f8, $fb, $01, $0e, $00
122e4     F3 08 09 E9 
122e8     10 FE 09 F9 
122ec     FB 05 01 FC 
122f0     06 FD 07 00 | 	byte	$f3, $08, $09, $e9, $10, $fe, $09, $f9, $fb, $05, $01, $fc, $06, $fd, $07, $00
122f4     F5 16 E8 09 
122f8     0E E9 07 0C 
122fc     FB F7 01 0A 
12300     F6 F9 06 06 | 	byte	$f5, $16, $e8, $09, $0e, $e9, $07, $0c, $fb, $f7, $01, $0a, $f6, $f9, $06, $06
12304     F4 FD 09 FC 
12308     FD FC 0E F2 
1230c     05 F7 0E 00 
12310     F2 03 0A F4 | 	byte	$f4, $fd, $09, $fc, $fd, $fc, $0e, $f2, $05, $f7, $0e, $00, $f2, $03, $0a, $f4
12314     03 00 05 F7 
12318     04 08 EF 0D 
1231c     03 F7 08 FB 
12320     07 F1 09 09 | 	byte	$03, $00, $05, $f7, $04, $08, $ef, $0d, $03, $f7, $08, $fb, $07, $f1, $09, $09
12324     F6 00 01 02 
12328     FF 00 0F F4 
1232c     FF FA 11 FD 
12330     00 01 00 F8 | 	byte	$f6, $00, $01, $02, $ff, $00, $0f, $f4, $ff, $fa, $11, $fd, $00, $01, $00, $f8
12334     09 FB 00 0A 
12338     00 EB 0E 07 
1233c     EE 0B 00 01 
12340     FE F6 0D FA | 	byte	$09, $fb, $00, $0a, $00, $eb, $0e, $07, $ee, $0b, $00, $01, $fe, $f6, $0d, $fa
12344     06 FA FD 08 
12348     F2 04 0A FF 
1234c     FA FF 02 0C 
12350     FD F9 FC 04 | 	byte	$06, $fa, $fd, $08, $f2, $04, $0a, $ff, $fa, $ff, $02, $0c, $fd, $f9, $fc, $04
12354     FF 0A F5 03 
12358     01 FC 0A F8 
1235c     FE 03 F8 FF 
12360     11 ED 01 06 | 	byte	$ff, $0a, $f5, $03, $01, $fc, $0a, $f8, $fe, $03, $f8, $ff, $11, $ed, $01, $06
12364     00 FE FB 09 
12368     FD FB 00 07 
1236c     F7 04 06 F0 
12370     0F 04 EF 0D | 	byte	$00, $fe, $fb, $09, $fd, $fb, $00, $07, $f7, $04, $06, $f0, $0f, $04, $ef, $0d
12374     FB 03 F9 0B 
12378     F8 F2 13 FC 
1237c     F6 0E F7 09 
12380     F7 FD 07 08 | 	byte	$fb, $03, $f9, $0b, $f8, $f2, $13, $fc, $f6, $0e, $f7, $09, $f7, $fd, $07, $08
12384     FA FE 00 04 
12388     F1 12 FC F8 
1238c     FB 0E F6 07 
12390     F3 04 0C F2 | 	byte	$fa, $fe, $00, $04, $f1, $12, $fc, $f8, $fb, $0e, $f6, $07, $f3, $04, $0c, $f2
12394     F7 0D 02 EC 
12398     0A 01 FE F7 
1239c     0F F8 FB 00 
123a0     FB 0C F4 05 | 	byte	$f7, $0d, $02, $ec, $0a, $01, $fe, $f7, $0f, $f8, $fb, $00, $fb, $0c, $f4, $05
123a4     00 03 F3 0E 
123a8     01 F4 0E F5 
123ac     F9 04 02 FD 
123b0     02 FD 00 07 | 	byte	$00, $03, $f3, $0e, $01, $f4, $0e, $f5, $f9, $04, $02, $fd, $02, $fd, $00, $07
123b4     F0 02 09 F8 
123b8     FF 0A ED 09 
123bc     00 02 F8 09 
123c0     F4 0A FD FC | 	byte	$f0, $02, $09, $f8, $ff, $0a, $ed, $09, $00, $02, $f8, $09, $f4, $0a, $fd, $fc
123c4     06 FD 01 FB 
123c8     09 01 F2 0E 
123cc     FB FC 00 0B 
123d0     F9 07 00 F8 | 	byte	$06, $fd, $01, $fb, $09, $01, $f2, $0e, $fb, $fc, $00, $0b, $f9, $07, $00, $f8
123d4     11 F8 FB 0B 
123d8     F5 01 05 00 
123dc     01 04 E7 0F 
123e0     0D EC 04 07 | 	byte	$11, $f8, $fb, $0b, $f5, $01, $05, $00, $01, $04, $e7, $0f, $0d, $ec, $04, $07
123e4     FB F9 04 FC 
123e8     06 F3 0B 00 
123ec     FE FA 0D FF 
123f0     F4 08 FD FD | 	byte	$fb, $f9, $04, $fc, $06, $f3, $0b, $00, $fe, $fa, $0d, $ff, $f4, $08, $fd, $fd
123f4     07 00 04 F7 
123f8     FF 08 F1 10 
123fc     F4 FF 0D F5 
12400     FC 0B 00 F8 | 	byte	$07, $00, $04, $f7, $ff, $08, $f1, $10, $f4, $ff, $0d, $f5, $fc, $0b, $00, $f8
12404     F6 11 01 FB 
12408     F4 0D FD FC 
1240c     F7 0C 00 EE 
12410     13 04 F0 03 | 	byte	$f6, $11, $01, $fb, $f4, $0d, $fd, $fc, $f7, $0c, $00, $ee, $13, $04, $f0, $03
12414     FE 06 FA FE 
12418     00 F9 0A F5 
1241c     07 00 F6 06 
12420     F9 06 FF FA | 	byte	$fe, $06, $fa, $fe, $00, $f9, $0a, $f5, $07, $00, $f6, $06, $f9, $06, $ff, $fa
12424     03 0C F3 FF 
12428     09 FF 03 FA 
1242c     FF 09 F4 FF 
12430     03 00 F9 0B | 	byte	$03, $0c, $f3, $ff, $09, $ff, $03, $fa, $ff, $09, $f4, $ff, $03, $00, $f9, $0b
12434     F4 12 FB FD 
12438     FB 0D 00 EF 
1243c     10 F9 04 FE 
12440     10 F7 F7 09 | 	byte	$f4, $12, $fb, $fd, $fb, $0d, $00, $ef, $10, $f9, $04, $fe, $10, $f7, $f7, $09
12444     05 04 EC 13 
12448     00 01 00 FA 
1244c     03 F9 09 07 
12450     F6 FF 00 0A | 	byte	$05, $04, $ec, $13, $00, $01, $00, $fa, $03, $f9, $09, $07, $f6, $ff, $00, $0a
12454     F7 01 06 00 
12458     F3 09 0E E7 
1245c     0F F9 FB 0D 
12460     FE FB 09 F0 | 	byte	$f7, $01, $06, $00, $f3, $09, $0e, $e7, $0f, $f9, $fb, $0d, $fe, $fb, $09, $f0
12464     0D FB 00 FB 
12468     10 F6 03 06 
1246c     EC 07 0A 00 
12470     FA 02 02 0B | 	byte	$0d, $fb, $00, $fb, $10, $f6, $03, $06, $ec, $07, $0a, $00, $fa, $02, $02, $0b
12474     EF 00 09 FC 
12478     FF 03 03 F9 
1247c     FB 0A F3 09 
12480     FA 0A F2 06 | 	byte	$ef, $00, $09, $fc, $ff, $03, $03, $f9, $fb, $0a, $f3, $09, $fa, $0a, $f2, $06
12484     06 F0 05 04 
12488     01 FC FE 01 
1248c     02 F7 06 02 
12490     F8 09 00 FB | 	byte	$06, $f0, $05, $04, $01, $fc, $fe, $01, $02, $f7, $06, $02, $f8, $09, $00, $fb
12494     00 FD 05 05 
12498     FC F6 0D F9 
1249c     06 FC F8 06 
124a0     0B F6 09 F5 | 	byte	$00, $fd, $05, $05, $fc, $f6, $0d, $f9, $06, $fc, $f8, $06, $0b, $f6, $09, $f5
124a4     05 03 00 03 
124a8     00 FF 00 FF 
124ac     06 FD F9 04 
124b0     04 FF 04 F3 | 	byte	$05, $03, $00, $03, $00, $ff, $00, $ff, $06, $fd, $f9, $04, $04, $ff, $04, $f3
124b4     05 0A F8 01 
124b8     FC 03 00 F9 
124bc     0E F8 FD 05 
124c0     FB 07 FC 05 | 	byte	$05, $0a, $f8, $01, $fc, $03, $00, $f9, $0e, $f8, $fd, $05, $fb, $07, $fc, $05
124c4     FA FB 0C FB 
124c8     06 F4 FD 0B 
124cc     02 F4 0E F4 
124d0     07 05 F9 FA | 	byte	$fa, $fb, $0c, $fb, $06, $f4, $fd, $0b, $02, $f4, $0e, $f4, $07, $05, $f9, $fa
124d4     10 F8 F9 0B 
124d8     FA FB 0F F8 
124dc     FE 04 01 FB 
124e0     08 F6 00 0A | 	byte	$10, $f8, $f9, $0b, $fa, $fb, $0f, $f8, $fe, $04, $01, $fb, $08, $f6, $00, $0a
124e4     FC 02 FB 03 
124e8     FB 09 02 F7 
124ec     08 00 FF FE 
124f0     11 F0 FB 08 | 	byte	$fc, $02, $fb, $03, $fb, $09, $02, $f7, $08, $00, $ff, $fe, $11, $f0, $fb, $08
124f4     06 FD F6 0D 
124f8     F4 03 09 07 
124fc     ED 08 F9 0E 
12500     F4 07 FE 04 | 	byte	$06, $fd, $f6, $0d, $f4, $03, $09, $07, $ed, $08, $f9, $0e, $f4, $07, $fe, $04
12504     F6 07 02 FE 
12508     FC 05 FD 02 
1250c     00 FD 02 05 
12510     F6 FE 06 01 | 	byte	$f6, $07, $02, $fe, $fc, $05, $fd, $02, $00, $fd, $02, $05, $f6, $fe, $06, $01
12514     FD 02 06 F9 
12518     ED 0E 08 F5 
1251c     F9 0B F9 FB 
12520     06 00 FA FF | 	byte	$fd, $02, $06, $f9, $ed, $0e, $08, $f5, $f9, $0b, $f9, $fb, $06, $00, $fa, $ff
12524     01 04 F7 FD 
12528     07 F9 FA 0C 
1252c     FB F5 09 00 
12530     FF F8 0C F5 | 	byte	$01, $04, $f7, $fd, $07, $f9, $fa, $0c, $fb, $f5, $09, $00, $ff, $f8, $0c, $f5
12534     F9 08 00 FE 
12538     03 FE FD F5 
1253c     0B FA 05 F8 
12540     FF 06 F1 13 | 	byte	$f9, $08, $00, $fe, $03, $fe, $fd, $f5, $0b, $fa, $05, $f8, $ff, $06, $f1, $13
12544     F4 FD 08 FF 
12548     03 01 00 F2 
1254c     08 FD 08 00 
12550     F4 06 0B EC | 	byte	$f4, $fd, $08, $ff, $03, $01, $00, $f2, $08, $fd, $08, $00, $f4, $06, $0b, $ec
12554     03 06 02 F3 
12558     07 00 FC 01 
1255c     FD 05 00 F6 
12560     03 0C ED 06 | 	byte	$03, $06, $02, $f3, $07, $00, $fc, $01, $fd, $05, $00, $f6, $03, $0c, $ed, $06
12564     03 FA 0A FD 
12568     04 EE 10 F4 
1256c     04 09 F1 0C 
12570     FC 02 F9 05 | 	byte	$03, $fa, $0a, $fd, $04, $ee, $10, $f4, $04, $09, $f1, $0c, $fc, $02, $f9, $05
12574     00 05 F9 F3 
12578     18 F0 05 00 
1257c     FD FB 02 04 
12580     00 EF 06 10 | 	byte	$00, $05, $f9, $f3, $18, $f0, $05, $00, $fd, $fb, $02, $04, $00, $ef, $06, $10
12584     F4 F2 11 00 
12588     FB 00 04 02 
1258c     F1 13 F5 01 
12590     00 04 FA FF | 	byte	$f4, $f2, $11, $00, $fb, $00, $04, $02, $f1, $13, $f5, $01, $00, $04, $fa, $ff
12594     10 F4 05 FD 
12598     FD 04 FD 0E 
1259c     FB FA FF 08 
125a0     02 F5 07 04 | 	byte	$10, $f4, $05, $fd, $fd, $04, $fd, $0e, $fb, $fa, $ff, $08, $02, $f5, $07, $04
125a4     01 F6 03 00 
125a8     05 F3 0B 00 
125ac     05 F6 FE 05 
125b0     01 F9 09 FD | 	byte	$01, $f6, $03, $00, $05, $f3, $0b, $00, $05, $f6, $fe, $05, $01, $f9, $09, $fd
125b4     F2 05 10 F6 
125b8     F9 05 FF 06 
125bc     F8 01 FA 00 
125c0     0A 03 FA F9 | 	byte	$f2, $05, $10, $f6, $f9, $05, $ff, $06, $f8, $01, $fa, $00, $0a, $03, $fa, $f9
125c4     0D FA 03 FC 
125c8     FC 02 04 F9 
125cc     0B 00 F2 05 
125d0     00 08 FE FC | 	byte	$0d, $fa, $03, $fc, $fc, $02, $04, $f9, $0b, $00, $f2, $05, $00, $08, $fe, $fc
125d4     FB 0B F1 0B 
125d8     F6 12 EB 07 
125dc     06 F4 03 00 
125e0     01 03 00 F4 | 	byte	$fb, $0b, $f1, $0b, $f6, $12, $eb, $07, $06, $f4, $03, $00, $01, $03, $00, $f4
125e4     05 00 07 F7 
125e8     09 FA FD 06 
125ec     F6 FB 12 FA 
125f0     02 04 F4 07 | 	byte	$05, $00, $07, $f7, $09, $fa, $fd, $06, $f6, $fb, $12, $fa, $02, $04, $f4, $07
125f4     FB 05 00 FF 
125f8     03 05 04 EE 
125fc     05 0A F5 09 
12600     FA FF 0B F8 | 	byte	$fb, $05, $00, $ff, $03, $05, $04, $ee, $05, $0a, $f5, $09, $fa, $ff, $0b, $f8
12604     FF 04 F4 0E 
12608     F3 FF 09 06 
1260c     F4 00 07 FA 
12610     FB 02 09 00 | 	byte	$ff, $04, $f4, $0e, $f3, $ff, $09, $06, $f4, $00, $07, $fa, $fb, $02, $09, $00
12614     F6 0C F9 00 
12618     F4 0F 00 FC 
1261c     F6 10 F9 F9 
12620     01 05 F5 0B | 	byte	$f6, $0c, $f9, $00, $f4, $0f, $00, $fc, $f6, $10, $f9, $f9, $01, $05, $f5, $0b
12624     FD FF 00 F7 
12628     0C F0 0B 08 
1262c     FB 01 FA 07 
12630     FC F9 06 02 | 	byte	$fd, $ff, $00, $f7, $0c, $f0, $0b, $08, $fb, $01, $fa, $07, $fc, $f9, $06, $02
12634     F4 09 00 F3 
12638     02 01 08 E9 
1263c     07 06 04 FC 
12640     F3 0D F5 03 | 	byte	$f4, $09, $00, $f3, $02, $01, $08, $e9, $07, $06, $04, $fc, $f3, $0d, $f5, $03
12644     0A EE 07 FB 
12648     FD 08 03 F3 
1264c     07 08 EB 0F 
12650     02 FB F9 0B | 	byte	$0a, $ee, $07, $fb, $fd, $08, $03, $f3, $07, $08, $eb, $0f, $02, $fb, $f9, $0b
12654     00 FB FD 01 
12658     03 FD FB 08 
1265c     FD 00 F3 14 
12660     FC F3 07 0D | 	byte	$00, $fb, $fd, $01, $03, $fd, $fb, $08, $fd, $00, $f3, $14, $fc, $f3, $07, $0d
12664     ED 09 04 01 
12668     00 F2 10 00 
1266c     FF 04 F7 0C 
12670     F7 04 03 FC | 	byte	$ed, $09, $04, $01, $00, $f2, $10, $00, $ff, $04, $f7, $0c, $f7, $04, $03, $fc
12674     F2 13 F8 04 
12678     F8 03 FA 05 
1267c     04 05 F0 07 
12680     F8 05 00 F8 | 	byte	$f2, $13, $f8, $04, $f8, $03, $fa, $05, $04, $05, $f0, $07, $f8, $05, $00, $f8
12684     FF 09 05 F8 
12688     F4 0B FC F9 
1268c     09 10 EC 02 
12690     FB 07 00 FC | 	byte	$ff, $09, $05, $f8, $f4, $0b, $fc, $f9, $09, $10, $ec, $02, $fb, $07, $00, $fc
12694     02 06 F9 00 
12698     02 04 FA 03 
1269c     01 FF 01 03 
126a0     F8 00 0B F9 | 	byte	$02, $06, $f9, $00, $02, $04, $fa, $03, $01, $ff, $01, $03, $f8, $00, $0b, $f9
126a4     03 F3 0C 03 
126a8     FA 04 00 04 
126ac     F6 02 0A FE 
126b0     FB 01 05 FE | 	byte	$03, $f3, $0c, $03, $fa, $04, $00, $04, $f6, $02, $0a, $fe, $fb, $01, $05, $fe
126b4     FF FB 07 00 
126b8     F9 11 F2 07 
126bc     F7 07 00 FE 
126c0     05 FD 01 00 | 	byte	$ff, $fb, $07, $00, $f9, $11, $f2, $07, $f7, $07, $00, $fe, $05, $fd, $01, $00
126c4     07 00 F0 0D 
126c8     04 F6 03 0C 
126cc     FA FF FA 09 
126d0     FA 01 01 07 | 	byte	$07, $00, $f0, $0d, $04, $f6, $03, $0c, $fa, $ff, $fa, $09, $fa, $01, $01, $07
126d4     05 F5 FE 09 
126d8     FA 05 FD 02 
126dc     FD FD 09 08 
126e0     F7 F7 0D FE | 	byte	$05, $f5, $fe, $09, $fa, $05, $fd, $02, $fd, $fd, $09, $08, $f7, $f7, $0d, $fe
126e4     00 00 03 05 
126e8     F5 03 F8 0D 
126ec     00 F7 07 FB 
126f0     04 FD 00 07 | 	byte	$00, $00, $03, $05, $f5, $03, $f8, $0d, $00, $f7, $07, $fb, $04, $fd, $00, $07
126f4     F3 06 01 01 
126f8     FB 0E F0 FF 
126fc     0D F8 02 FD 
12700     06 01 F9 08 | 	byte	$f3, $06, $01, $01, $fb, $0e, $f0, $ff, $0d, $f8, $02, $fd, $06, $01, $f9, $08
12704     FF FC FB 0E 
12708     FD FB FE 09 
1270c     00 FE F8 0A 
12710     09 EB 0E 04 | 	byte	$ff, $fc, $fb, $0e, $fd, $fb, $fe, $09, $00, $fe, $f8, $0a, $09, $eb, $0e, $04
12714     F4 0C F8 FB 
12718     0D FC FB 03 
1271c     05 F2 13 00 
12720     F5 02 03 FC | 	byte	$f4, $0c, $f8, $fb, $0d, $fc, $fb, $03, $05, $f2, $13, $00, $f5, $02, $03, $fc
12724     00 04 FB 07 
12728     FD F7 04 03 
1272c     04 FA 0B F5 
12730     05 FE 01 00 | 	byte	$00, $04, $fb, $07, $fd, $f7, $04, $03, $04, $fa, $0b, $f5, $05, $fe, $01, $00
12734     01 FB 03 01 
12738     F8 0D FA F9 
1273c     07 0F ED FB 
12740     07 F7 07 06 | 	byte	$01, $fb, $03, $01, $f8, $0d, $fa, $f9, $07, $0f, $ed, $fb, $07, $f7, $07, $06
12744     F6 06 FA F9 
12748     0D F4 07 FD 
1274c     04 F6 FF 05 
12750     F0 07 09 F8 | 	byte	$f6, $06, $fa, $f9, $0d, $f4, $07, $fd, $04, $f6, $ff, $05, $f0, $07, $09, $f8
12754     00 FD FD FD 
12758     00 03 01 F3 
1275c     01 05 FA FA 
12760     08 03 FA FB | 	byte	$00, $fd, $fd, $fd, $00, $03, $01, $f3, $01, $05, $fa, $fa, $08, $03, $fa, $fb
12764     FD 0B FC F5 
12768     01 08 F5 03 
1276c     05 F5 F7 0A 
12770     06 F9 FF 01 | 	byte	$fd, $0b, $fc, $f5, $01, $08, $f5, $03, $05, $f5, $f7, $0a, $06, $f9, $ff, $01
12774     FF FC 05 F4 
12778     0F FA F7 08 
1277c     00 FE 05 FA 
12780     FC 05 FD 03 | 	byte	$ff, $fc, $05, $f4, $0f, $fa, $f7, $08, $00, $fe, $05, $fa, $fc, $05, $fd, $03
12784     08 F7 F9 08 
12788     FB FF 09 FB 
1278c     07 F4 FF 05 
12790     05 F4 FF 0D | 	byte	$08, $f7, $f9, $08, $fb, $ff, $09, $fb, $07, $f4, $ff, $05, $05, $f4, $ff, $0d
12794     F8 F3 16 FA 
12798     F0 06 07 05 
1279c     F4 02 03 FB 
127a0     08 F7 02 FE | 	byte	$f8, $f3, $16, $fa, $f0, $06, $07, $05, $f4, $02, $03, $fb, $08, $f7, $02, $fe
127a4     F9 0D 08 E8 
127a8     07 0A F2 00 
127ac     06 FD 05 FB 
127b0     08 F5 05 02 | 	byte	$f9, $0d, $08, $e8, $07, $0a, $f2, $00, $06, $fd, $05, $fb, $08, $f5, $05, $02
127b4     FB FF 05 FA 
127b8     04 FB 03 FB 
127bc     04 FB 03 01 
127c0     01 F3 0B 00 | 	byte	$fb, $ff, $05, $fa, $04, $fb, $03, $fb, $04, $fb, $03, $01, $01, $f3, $0b, $00
127c4     F7 0A 00 F0 
127c8     04 0F F8 F7 
127cc     02 01 08 F8 
127d0     FC 03 02 F8 | 	byte	$f7, $0a, $00, $f0, $04, $0f, $f8, $f7, $02, $01, $08, $f8, $fc, $03, $02, $f8
127d4     0D FD FA FB 
127d8     09 01 00 FA 
127dc     FD 0C FC F9 
127e0     08 F9 06 FD | 	byte	$0d, $fd, $fa, $fb, $09, $01, $00, $fa, $fd, $0c, $fc, $f9, $08, $f9, $06, $fd
127e4     00 00 00 00 
127e8     2B D5 82 81 
127ec     A1 FC 76 41 
127f0     0E 7F 7F 7F | 	byte	$00, $00, $00, $00, $2b, $d5, $82, $81, $a1, $fc, $76, $41, $0e, $7f, $7f, $7f
127f4     7F 7F 32 54 
127f8     26 79 7F 42 
127fc     B4 83 D0 AB 
12800     A2 C4 B4 B9 | 	byte	$7f, $7f, $32, $54, $26, $79, $7f, $42, $b4, $83, $d0, $ab, $a2, $c4, $b4, $b9
12804     84 80 98 84 
12808     E8 2B C9 F8 
1280c     B6 A2 A0 8D 
12810     33 7F 7F 04 | 	byte	$84, $80, $98, $84, $e8, $2b, $c9, $f8, $b6, $a2, $a0, $8d, $33, $7f, $7f, $04
12814     7F EA AB 64 
12818     FB 7F 68 BF 
1281c     60 7F 7F 7F 
12820     7F 77 7F 7F | 	byte	$7f, $ea, $ab, $64, $fb, $7f, $68, $bf, $60, $7f, $7f, $7f, $7f, $77, $7f, $7f
12824     5F D1 7F 9E 
12828     80 C1 7F 7F 
1282c     7F 8D 20 9F 
12830     80 80 80 82 | 	byte	$5f, $d1, $7f, $9e, $80, $c1, $7f, $7f, $7f, $8d, $20, $9f, $80, $80, $80, $82
12834     82 82 81 EC 
12838     DC C1 7F 53 
1283c     52 8B 52 A7 
12840     7F 29 3F 7F | 	byte	$82, $82, $81, $ec, $dc, $c1, $7f, $53, $52, $8b, $52, $a7, $7f, $29, $3f, $7f
12844     7F 7F 7F 7F 
12848     7F 7F       | 	byte	$7f[6]
1284a     6E 03 7F 1C 
1284e     EB 85 80 89 
12852     8B 31 8F 80 
12856     80 A1 A2 D8 | 	byte	$6e, $03, $7f, $1c, $eb, $85, $80, $89, $8b, $31, $8f, $80, $80, $a1, $a2, $d8
1285a     93 B5 85 16 
1285e     8A 80 8E 82 
12862     84 84 8D 32 
12866     B1 96 82 4D | 	byte	$93, $b5, $85, $16, $8a, $80, $8e, $82, $84, $84, $8d, $32, $b1, $96, $82, $4d
1286a     7F 5B 7F 74 
1286e     7F 7F 7F 7F 
12872     7F 7F 7F 7F 
12876     34 7F 7F D5 | 	byte	$7f, $5b, $7f, $74, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $34, $7f, $7f, $d5
1287a     22 94 80 DA 
1287e     96 80 80 81 
12882     82 81 81 81 
12886     81 81 81 81 | 	byte	$22, $94, $80, $da, $96, $80, $80, $81, $82, $81, $81, $81, $81, $81, $81, $81
1288a     81 81 81 81 
1288e     81          | 	byte	$81[5]
1288f     8D A4 8C 81 
12893     21 9C 7F 7F 
12897     7F 15 7F 44 
1289b     7F 7F 7F 7F | 	byte	$8d, $a4, $8c, $81, $21, $9c, $7f, $7f, $7f, $15, $7f, $44, $7f, $7f, $7f, $7f
1289f     7F 0F 7F 7F 
128a3     68 16 7F 1B 
128a7     EA 05 A2 2B 
128ab     8A 80 80 81 | 	byte	$7f, $0f, $7f, $7f, $68, $16, $7f, $1b, $ea, $05, $a2, $2b, $8a, $80, $80, $81
128af     81 81 81 81 
128b3     81          | 	byte	$81[5]
128b4     82 81 81 81 
128b8     81 81 81 84 
128bc     89 81 A3 90 
128c0     67 7F F3 EE | 	byte	$82, $81, $81, $81, $81, $81, $81, $84, $89, $81, $a3, $90, $67, $7f, $f3, $ee
128c4     7A 6B 7F 7F 
128c8     7F 7F 7F 7F 
128cc     7F 7F 7F 7F 
128d0     7F 7F 58 36 | 	byte	$7a, $6b, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $58, $36
128d4     D5 93 80 90 
128d8     82 81 81 81 
128dc     82 81 81 81 
128e0     81 81 81 81 | 	byte	$d5, $93, $80, $90, $82, $81, $81, $81, $82, $81, $81, $81, $81, $81, $81, $81
128e4     81 81 81 81 
128e8     81 81 81 81 
128ec     81          | 	byte	$81[9]
128ed     82 9D DD 2F 
128f1     19 79 7F 7F 
128f5     7F 7F 7F 7F 
128f9     7F 7F 7F 7F | 	byte	$82, $9d, $dd, $2f, $19, $79, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f
128fd     7F 7F 7F 7F 
12901     7F 7F       | 	byte	$7f[6]
12903     39 FA D9 AA 
12907     82 80 82 81 
1290b     81 81 81 81 
1290f     81 81 81 81 | 	byte	$39, $fa, $d9, $aa, $82, $80, $82, $81, $81, $81, $81, $81, $81, $81, $81, $81
12913     81 82 81 81 
12917     81 81 81 81 
1291b     81 81 81 81 
1291f     A3 EB 0A 1E | 	byte	$81, $82, $81, $81, $81, $81, $81, $81, $81, $81, $81, $81, $a3, $eb, $0a, $1e
12923     64 7F 7F 7F 
12927     7F 7F 7F 7F 
1292b     7F 7F 7F 7F 
1292f     7F 7F 7F 7F | 	byte	$64, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f
12933     7F 5C 47 54 
12937     ED 86 80 80 
1293b     82 82 81 81 
1293f     81 81 81 81 | 	byte	$7f, $5c, $47, $54, $ed, $86, $80, $80, $82, $82, $81, $81, $81, $81, $81, $81
12943     81 81 81 81 
12947     81 81 81 81 
1294b     81 81 81 81 
1294f     81          | 	byte	$81[13]
12950     89 8A 9A B5 
12954     F3 44 7F 7F 
12958     7F 7F 7F 7F 
1295c     7F 7F 7F 7F | 	byte	$89, $8a, $9a, $b5, $f3, $44, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f
12960     7F 7F 7F 7F 
12964     7F          | 	byte	$7f[5]
12965     4E 37 16 B3 
12969     8E 80 81 81 
1296d     81 81 81 81 
12971     81 81 81 81 | 	byte	$4e, $37, $16, $b3, $8e, $80, $81, $81, $81, $81, $81, $81, $81, $81, $81, $81
12975     81 81 81 81 
12979     81 81 81 81 
1297d     81 81 81    | 	byte	$81[11]
12980     87 8D D2 EF 
12984     0C 29 38 7F 
12988     7F 7F 7F 7F 
1298c     7F 7F 7F 7F | 	byte	$87, $8d, $d2, $ef, $0c, $29, $38, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f
12990     7F 7F 7F 7F 
12994     7F 7F       | 	byte	$7f[6]
12996     5B 2B 1F 07 
1299a     DA D6 AB 87 
1299e     81 81 81 81 
129a2     81 81 81 81 | 	byte	$5b, $2b, $1f, $07, $da, $d6, $ab, $87, $81, $81, $81, $81, $81, $81, $81, $81
129a6     81 81 81 81 
129aa     81 81 81 81 
129ae     81 81 81 81 
129b2     81          | 	byte	$81[13]
129b3     83 A9 D8 04 
129b7     0E 46 5F 7F 
129bb     7F 7F 7F 7F 
129bf     7F 7F 7F 7F | 	byte	$83, $a9, $d8, $04, $0e, $46, $5f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f
129c3     7F 7F 7F 7F 
129c7     7F          | 	byte	$7f[5]
129c8     5D 5E 4B 34 
129cc     17 FE 15 D3 
129d0     9A 91 A9 84 
129d4     80 82 81 81 | 	byte	$5d, $5e, $4b, $34, $17, $fe, $15, $d3, $9a, $91, $a9, $84, $80, $82, $81, $81
129d8     81 81 81 81 
129dc     81 81 81 81 
129e0     81 81 81 81 
129e4     81 81       | 	byte	$81[14]
129e6     87 8C 9C E4 
129ea     EA FA 24 43 
129ee     57 30 45 3F 
129f2     5E 2C 4D 6D | 	byte	$87, $8c, $9c, $e4, $ea, $fa, $24, $43, $57, $30, $45, $3f, $5e, $2c, $4d, $6d
129f6     7F 7F 76 76 
129fa     79 66 68 7B 
129fe     77 66 68 4C 
12a02     47 2B E0 CF | 	byte	$7f, $7f, $76, $76, $79, $66, $68, $7b, $77, $66, $68, $4c, $47, $2b, $e0, $cf
12a06     E0 C2 AB C0 
12a0a     B7 AB 81 83 
12a0e     82 81 81 81 
12a12     86 92 82 96 | 	byte	$e0, $c2, $ab, $c0, $b7, $ab, $81, $83, $82, $81, $81, $81, $86, $92, $82, $96
12a16     89 87 81 80 
12a1a     83 85 89 BF 
12a1e     C3 B5 C7 D6 
12a22     D1 DE DA EC | 	byte	$89, $87, $81, $80, $83, $85, $89, $bf, $c3, $b5, $c7, $d6, $d1, $de, $da, $ec
12a26     E4 F7 27 32 
12a2a     41 42 5D 4F 
12a2e     40 6C 76 70 
12a32     7F 7F 7F 7F | 	byte	$e4, $f7, $27, $32, $41, $42, $5d, $4f, $40, $6c, $76, $70, $7f, $7f, $7f, $7f
12a36     7F 67 56 39 
12a3a     6F 52 43 55 
12a3e     43 1F 25 0F 
12a42     38 1D 04 04 | 	byte	$7f, $67, $56, $39, $6f, $52, $43, $55, $43, $1f, $25, $0f, $38, $1d, $04, $04
12a46     E5 EC F0 9A 
12a4a     AF 8C 92 99 
12a4e     97 BD 96 91 
12a52     86 8F 82 91 | 	byte	$e5, $ec, $f0, $9a, $af, $8c, $92, $99, $97, $bd, $96, $91, $86, $8f, $82, $91
12a56     82 80 82 81 
12a5a     83 86 8D A0 
12a5e     95 C9 E3 EE 
12a62     03 F4 1C 2A | 	byte	$82, $80, $82, $81, $83, $86, $8d, $a0, $95, $c9, $e3, $ee, $03, $f4, $1c, $2a
12a66     40 59 5E 4C 
12a6a     4D 54 72 7F 
12a6e     7F 7F 7F 7F 
12a72     7F 7F 7F 7F | 	byte	$40, $59, $5e, $4c, $4d, $54, $72, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f
12a76     7F 7F 7F 67 
12a7a     76 7E 5C 3A 
12a7e     3C 28 32 39 
12a82     22 DC CF DB | 	byte	$7f, $7f, $7f, $67, $76, $7e, $5c, $3a, $3c, $28, $32, $39, $22, $dc, $cf, $db
12a86     AB 98 94 81 
12a8a     80 81 81 81 
12a8e     81 81 81 81 
12a92     81 81 81 81 | 	byte	$ab, $98, $94, $81, $80, $81, $81, $81, $81, $81, $81, $81, $81, $81, $81, $81
12a96     81 81 81 81 
12a9a     87 85 9B B1 
12a9e     BC C0 DC E6 
12aa2     13 2E 5B 5A | 	byte	$81, $81, $81, $81, $87, $85, $9b, $b1, $bc, $c0, $dc, $e6, $13, $2e, $5b, $5a
12aa6     69 7F 7F 7F 
12aaa     7F 7F 7F 7F 
12aae     7F 7F 7F 7F 
12ab2     7F 7F 7F 7F | 	byte	$69, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f
12ab6     7F 7F 75 79 
12aba     2B 2A 02 E3 
12abe     B8 B6 87 8E 
12ac2     83 81 81 81 | 	byte	$7f, $7f, $75, $79, $2b, $2a, $02, $e3, $b8, $b6, $87, $8e, $83, $81, $81, $81
12ac6     81 81 81 81 
12aca     81 81 81 81 
12ace     81 81 81 81 
12ad2     81 81 81 81 
12ad6     81          | 	byte	$81[17]
12ad7     82 92 97 B9 
12adb     F6 F7 22 55 
12adf     79 7A 7F 7F 
12ae3     7F 7F 7F 7F | 	byte	$82, $92, $97, $b9, $f6, $f7, $22, $55, $79, $7a, $7f, $7f, $7f, $7f, $7f, $7f
12ae7     7F 7F 7F 7F 
12aeb     7F 7F 7F 7F 
12aef     7F 7F       | 	byte	$7f[10]
12af1     7E 6E 41 0C 
12af5     1D FB CC BD 
12af9     94 81 80 81 
12afd     81 81 82 81 | 	byte	$7e, $6e, $41, $0c, $1d, $fb, $cc, $bd, $94, $81, $80, $81, $81, $81, $82, $81
12b01     81 81 81 81 
12b05     81 81 81 81 
12b09     81 81 81 81 
12b0d     81 81 81 81 
12b11     81          | 	byte	$81[17]
12b12     82 9E AD CC 
12b16     09 22 39 45 
12b1a     55 6C 7F 7F 
12b1e     7F 7F 7F 7F | 	byte	$82, $9e, $ad, $cc, $09, $22, $39, $45, $55, $6c, $7f, $7f, $7f, $7f, $7f, $7f
12b22     7F 7F 7F 7F 
12b26     7F 7F 7F 7F 
12b2a     7F 7F       | 	byte	$7f[10]
12b2c     7E 71 76 45 
12b30     56 24 FC F1 
12b34     D3 AE A6 8D 
12b38     86 83 81 81 | 	byte	$7e, $71, $76, $45, $56, $24, $fc, $f1, $d3, $ae, $a6, $8d, $86, $83, $81, $81
12b3c     81 81 81 81 
12b40     81 81 81 81 
12b44     81 81 81 81 
12b48     81 81 81 81 | 	byte	$81[16]
12b4c     82 82 89 A9 
12b50     D5 D9 DA F0 
12b54     07 24 2B 46 
12b58     53 65 62 7F | 	byte	$82, $82, $89, $a9, $d5, $d9, $da, $f0, $07, $24, $2b, $46, $53, $65, $62, $7f
12b5c     7F 7F 7D 7F 
12b60     7F 7F 7F 7F 
12b64     7F 7F 73 73 
12b68     5B 68 67 46 | 	byte	$7f, $7f, $7d, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $73, $73, $5b, $68, $67, $46
12b6c     2F 3B FE 07 
12b70     09 ED B5 BF 
12b74     B6 A6 9C 88 
12b78     86 83 90 9B | 	byte	$2f, $3b, $fe, $07, $09, $ed, $b5, $bf, $b6, $a6, $9c, $88, $86, $83, $90, $9b
12b7c     83 8A 84 8D 
12b80     82 81 81 85 
12b84     8C 98 9F 8C 
12b88     A9 BB BE BD | 	byte	$83, $8a, $84, $8d, $82, $81, $81, $85, $8c, $98, $9f, $8c, $a9, $bb, $be, $bd
12b8c     E7 F5 E3 F2 
12b90     01 FA 02 FC 
12b94     17 06 01 0D 
12b98     20 0F 21 0C | 	byte	$e7, $f5, $e3, $f2, $01, $fa, $02, $fc, $17, $06, $01, $0d, $20, $0f, $21, $0c
12b9c     2E 15 20 0C 
12ba0     2F 4D 27 26 
12ba4     44 34 30 2C 
12ba8     43 4B 31 40 | 	byte	$2e, $15, $20, $0c, $2f, $4d, $27, $26, $44, $34, $30, $2c, $43, $4b, $31, $40
12bac     3C 31 0E 1C 
12bb0     21 0F 2A 3B 
12bb4     31 35 33 19 
12bb8     20 1E 1A 19 | 	byte	$3c, $31, $0e, $1c, $21, $0f, $2a, $3b, $31, $35, $33, $19, $20, $1e, $1a, $19
12bbc     0E F8 F3 FF 
12bc0     E9 DE F2 DE 
12bc4     C5 D3 C1 C0 
12bc8     BB 8B 91 94 | 	byte	$0e, $f8, $f3, $ff, $e9, $de, $f2, $de, $c5, $d3, $c1, $c0, $bb, $8b, $91, $94
12bcc     9B 9F 93 92 
12bd0     8A 86 90 97 
12bd4     84 84 9E B3 
12bd8     B5 C4 D2 D9 | 	byte	$9b, $9f, $93, $92, $8a, $86, $90, $97, $84, $84, $9e, $b3, $b5, $c4, $d2, $d9
12bdc     E6 EB F9 FF 
12be0     05 2F 3C 24 
12be4     33 2C 43 49 
12be8     66 6A 76 72 | 	byte	$e6, $eb, $f9, $ff, $05, $2f, $3c, $24, $33, $2c, $43, $49, $66, $6a, $76, $72
12bec     6B 7F 72 7F 
12bf0     7F 7F 71 6C 
12bf4     69 62 67 5B 
12bf8     5C 58 41 45 | 	byte	$6b, $7f, $72, $7f, $7f, $7f, $71, $6c, $69, $62, $67, $5b, $5c, $58, $41, $45
12bfc     38 0B 13 11 
12c00     FD FF E3 D7 
12c04     C3 BB AB A4 
12c08     9A A5 9A 87 | 	byte	$38, $0b, $13, $11, $fd, $ff, $e3, $d7, $c3, $bb, $ab, $a4, $9a, $a5, $9a, $87
12c0c     93 90 96 91 
12c10     84 89 82 81 
12c14     87 93 82 80 
12c18     91 8A 83 95 | 	byte	$93, $90, $96, $91, $84, $89, $82, $81, $87, $93, $82, $80, $91, $8a, $83, $95
12c1c     A9 BC B3 CD 
12c20     BD D8 E3 FC 
12c24     10 07 0D 21 
12c28     40 45 4C 59 | 	byte	$a9, $bc, $b3, $cd, $bd, $d8, $e3, $fc, $10, $07, $0d, $21, $40, $45, $4c, $59
12c2c     61 7A 79 72 
12c30     66 7F 7F 7F 
12c34     7F 7F 7F 7F 
12c38     7F 7F 7F 7F | 	byte	$61, $7a, $79, $72, $66, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f
12c3c     7F 77 57 5E 
12c40     5C 4C 40 23 
12c44     19 19 FF F4 
12c48     E9 CC D0 9E | 	byte	$7f, $77, $57, $5e, $5c, $4c, $40, $23, $19, $19, $ff, $f4, $e9, $cc, $d0, $9e
12c4c     87 98 84 80 
12c50     81 81 81 81 
12c54     81 81 81 81 
12c58     81 81 81 81 | 	byte	$87, $98, $84, $80, $81, $81, $81, $81, $81, $81, $81, $81, $81, $81, $81, $81
12c5c     81 81 81 8A 
12c60     97 A7 B8 DD 
12c64     CE CA E0 03 
12c68     14 19 27 33 | 	byte	$81, $81, $81, $8a, $97, $a7, $b8, $dd, $ce, $ca, $e0, $03, $14, $19, $27, $33
12c6c     31 45 65 60 
12c70     75 7F 7F 7F 
12c74     7C 7F 7F 7F 
12c78     6F 72 6B 6F | 	byte	$31, $45, $65, $60, $75, $7f, $7f, $7f, $7c, $7f, $7f, $7f, $6f, $72, $6b, $6f
12c7c     66 6B 6D 4A 
12c80     43 4C 35 40 
12c84     18 15 0C F3 
12c88     FE EC E8 E9 | 	byte	$66, $6b, $6d, $4a, $43, $4c, $35, $40, $18, $15, $0c, $f3, $fe, $ec, $e8, $e9
12c8c     DD CE C1 B4 
12c90     AD 9C AE A5 
12c94     A1 86 8E 99 
12c98     91 AE AB 95 | 	byte	$dd, $ce, $c1, $b4, $ad, $9c, $ae, $a5, $a1, $86, $8e, $99, $91, $ae, $ab, $95
12c9c     98 97 88 A7 
12ca0     B0 AF A5 C6 
12ca4     B9 CB E7 EF 
12ca8     F4 04 0C 08 | 	byte	$98, $97, $88, $a7, $b0, $af, $a5, $c6, $b9, $cb, $e7, $ef, $f4, $04, $0c, $08
12cac     13 1A 1C 25 
12cb0     26 26 3F 3D 
12cb4     3F 2E 42 44 
12cb8     3F 41 39 3F | 	byte	$13, $1a, $1c, $25, $26, $26, $3f, $3d, $3f, $2e, $42, $44, $3f, $41, $39, $3f
12cbc     37 47 48 36 
12cc0     39 3A 35 2F 
12cc4     31 25 14 0F 
12cc8     0C 07 1B 04 | 	byte	$37, $47, $48, $36, $39, $3a, $35, $2f, $31, $25, $14, $0f, $0c, $07, $1b, $04
12ccc     08 09 03 F2 
12cd0     E9 F6 F2 F6 
12cd4     E9 E5 DF F6 
12cd8     F2 EF F5 EE | 	byte	$08, $09, $03, $f2, $e9, $f6, $f2, $f6, $e9, $e5, $df, $f6, $f2, $ef, $f5, $ee
12cdc     F7 EF F5 F3 
12ce0     EC FB F0 F1 
12ce4     FD F8 02 02 
12ce8     F5 F7 FC F5 | 	byte	$f7, $ef, $f5, $f3, $ec, $fb, $f0, $f1, $fd, $f8, $02, $02, $f5, $f7, $fc, $f5
12cec     DF D9 DF DE 
12cf0     D4 CF DB D8 
12cf4     D1 E2 E1 D4 
12cf8     D3 DB DF E6 | 	byte	$df, $d9, $df, $de, $d4, $cf, $db, $d8, $d1, $e2, $e1, $d4, $d3, $db, $df, $e6
12cfc     E3 E9 EA F2 
12d00     F5 02 09 13 
12d04     0B 17 19 1C 
12d08     27 21 23 30 | 	byte	$e3, $e9, $ea, $f2, $f5, $02, $09, $13, $0b, $17, $19, $1c, $27, $21, $23, $30
12d0c     34 32 32 32 
12d10     3E 3F 41 3E 
12d14     3B 40 3C 32 
12d18     39 2F 25 25 | 	byte	$34, $32, $32, $32, $3e, $3f, $41, $3e, $3b, $40, $3c, $32, $39, $2f, $25, $25
12d1c     1F 21 1C 17 
12d20     18 0C 02 FD 
12d24     F5 F4 F1 E1 
12d28     E7 ED E4 DB | 	byte	$1f, $21, $1c, $17, $18, $0c, $02, $fd, $f5, $f4, $f1, $e1, $e7, $ed, $e4, $db
12d2c     DC DA E1 DE 
12d30     D4 D4 DE E7 
12d34     E2 E6 F3 EF 
12d38     F4 F3 F7 FC | 	byte	$dc, $da, $e1, $de, $d4, $d4, $de, $e7, $e2, $e6, $f3, $ef, $f4, $f3, $f7, $fc
12d3c     00 FA FC 01 
12d40     F6 F7 F8 03 
12d44     03 FE F8 02 
12d48     00 08 06 02 | 	byte	$00, $fa, $fc, $01, $f6, $f7, $f8, $03, $03, $fe, $f8, $02, $00, $08, $06, $02
12d4c     02 FE FC 02 
12d50     02 03 04 02 
12d54     02 0C 10 04 
12d58     06 06 04 10 | 	byte	$02, $fe, $fc, $02, $02, $03, $04, $02, $02, $0c, $10, $04, $06, $06, $04, $10
12d5c     15 0A 07 05 
12d60     0D 12 15 14 
12d64     1D 15 18 1D 
12d68     12 16 19 16 | 	byte	$15, $0a, $07, $05, $0d, $12, $15, $14, $1d, $15, $18, $1d, $12, $16, $19, $16
12d6c     1C 22 1B 0B 
12d70     02 08 0A 06 
12d74     03 FC FB FE 
12d78     02 09 02 FC | 	byte	$1c, $22, $1b, $0b, $02, $08, $0a, $06, $03, $fc, $fb, $fe, $02, $09, $02, $fc
12d7c     02 00 FF 01 
12d80     F7 FB FF F9 
12d84     F4 FB F2 F0 
12d88     E7 EC F0 F3 | 	byte	$02, $00, $ff, $01, $f7, $fb, $ff, $f9, $f4, $fb, $f2, $f0, $e7, $ec, $f0, $f3
12d8c     F0 F0 F7 F9 
12d90     F9 F8 01 FE 
12d94     0A 14 15 1E 
12d98     1C 10 16 11 | 	byte	$f0, $f0, $f7, $f9, $f9, $f8, $01, $fe, $0a, $14, $15, $1e, $1c, $10, $16, $11
12d9c     0F 0D 1B 11 
12da0     0B 07 0A 0A 
12da4     0E 14 0B 02 
12da8     03 F8 F7 EE | 	byte	$0f, $0d, $1b, $11, $0b, $07, $0a, $0a, $0e, $14, $0b, $02, $03, $f8, $f7, $ee
12dac     EE F2 EB E7 
12db0     E5 F9 00 F4 
12db4     EA F1 F2 EB 
12db8     F1 ED F2 F6 | 	byte	$ee, $f2, $eb, $e7, $e5, $f9, $00, $f4, $ea, $f1, $f2, $eb, $f1, $ed, $f2, $f6
12dbc     F6 F3 FC FE 
12dc0     F8 FE 02 0A 
12dc4     08 0B 0A 10 
12dc8     15 1A 1D 29 | 	byte	$f6, $f3, $fc, $fe, $f8, $fe, $02, $0a, $08, $0b, $0a, $10, $15, $1a, $1d, $29
12dcc     18 12 0E 0D 
12dd0     13 13 07 00 
12dd4     FA F4 F6 F0 
12dd8     F3 EF F4 EA | 	byte	$18, $12, $0e, $0d, $13, $13, $07, $00, $fa, $f4, $f6, $f0, $f3, $ef, $f4, $ea
12ddc     E9 E9 E7 E5 
12de0     E1 E4 EA F8 
12de4     FC F6 00 FE 
12de8     FF 00 FD 04 | 	byte	$e9, $e9, $e7, $e5, $e1, $e4, $ea, $f8, $fc, $f6, $00, $fe, $ff, $00, $fd, $04
12dec     0C 07 02 FF 
12df0     07 07 07 0E 
12df4     09 02 07 0B 
12df8     0A 04 04 07 | 	byte	$0c, $07, $02, $ff, $07, $07, $07, $0e, $09, $02, $07, $0b, $0a, $04, $04, $07
12dfc     0A 00 F8 FA 
12e00     00 FD FD FC 
12e04     04 FF EF F0 
12e08     F9 FF 02 02 | 	byte	$0a, $00, $f8, $fa, $00, $fd, $fd, $fc, $04, $ff, $ef, $f0, $f9, $ff, $02, $02
12e0c     F2 F0 EC E9 
12e10     F8 01 F5 F7 
12e14     F4 F5 F3 F7 
12e18     FB 03 0B 09 | 	byte	$f2, $f0, $ec, $e9, $f8, $01, $f5, $f7, $f4, $f5, $f3, $f7, $fb, $03, $0b, $09
12e1c     0F 0D 06 01 
12e20     05 FB FB FA 
12e24     FE FF FB F6 
12e28     00 02 00 03 | 	byte	$0f, $0d, $06, $01, $05, $fb, $fb, $fa, $fe, $ff, $fb, $f6, $00, $02, $00, $03
12e2c     07 FC F5 F1 
12e30     F9 09 FF FA 
12e34     07 02 06 06 
12e38     08 04 04 FE | 	byte	$07, $fc, $f5, $f1, $f9, $09, $ff, $fa, $07, $02, $06, $06, $08, $04, $04, $fe
12e3c     FF 08 05 FD 
12e40     F8 06 03 04 
12e44     F9 FA FB F6 
12e48     F7 01 FF FD | 	byte	$ff, $08, $05, $fd, $f8, $06, $03, $04, $f9, $fa, $fb, $f6, $f7, $01, $ff, $fd
12e4c     F7 00 01 FD 
12e50     FD FD FC FA 
12e54     F6 F4 FF FD 
12e58     FA 03 08 01 | 	byte	$f7, $00, $01, $fd, $fd, $fd, $fc, $fa, $f6, $f4, $ff, $fd, $fa, $03, $08, $01
12e5c     F6 FB FE FF 
12e60     FF FE 09 08 
12e64     08 0F 08 0B 
12e68     0F 05 12 0F | 	byte	$f6, $fb, $fe, $ff, $ff, $fe, $09, $08, $08, $0f, $08, $0b, $0f, $05, $12, $0f
12e6c     0E 08 02 FF 
12e70     F3 F8 FB F2 
12e74     EE EC E9 F5 
12e78     F0 F2 F5 FC | 	byte	$0e, $08, $02, $ff, $f3, $f8, $fb, $f2, $ee, $ec, $e9, $f5, $f0, $f2, $f5, $fc
12e7c     F9 FF 01 05 
12e80     02 03 08 15 
12e84     11 0F 10 0E 
12e88     0A 16 1C 22 | 	byte	$f9, $ff, $01, $05, $02, $03, $08, $15, $11, $0f, $10, $0e, $0a, $16, $1c, $22
12e8c     26 0F 07 11 
12e90     0F 0C 05 FA 
12e94     F9 F6 F4 EE 
12e98     F2 EE EB EB | 	byte	$26, $0f, $07, $11, $0f, $0c, $05, $fa, $f9, $f6, $f4, $ee, $f2, $ee, $eb, $eb
12e9c     F5 ED E5 E2 
12ea0     DF E9 E5 E6 
12ea4     E8 E4 E7 E4 
12ea8     F0 F2 FA 00 | 	byte	$f5, $ed, $e5, $e2, $df, $e9, $e5, $e6, $e8, $e4, $e7, $e4, $f0, $f2, $fa, $00
12eac     05 08 10 18 
12eb0     16 16 19 1D 
12eb4     1E 26 25 27 
12eb8     2D 2B 26 2D | 	byte	$05, $08, $10, $18, $16, $16, $19, $1d, $1e, $26, $25, $27, $2d, $2b, $26, $2d
12ebc     31 33 26 16 
12ec0     15 10 0E 07 
12ec4     FA EE F0 E7 
12ec8     E3 DF DE DE | 	byte	$31, $33, $26, $16, $15, $10, $0e, $07, $fa, $ee, $f0, $e7, $e3, $df, $de, $de
12ecc     DB DB D3 C4 
12ed0     CF D6 DC D6 
12ed4     D5 D9 D3 D9 
12ed8     E5 F0 F8 F7 | 	byte	$db, $db, $d3, $c4, $cf, $d6, $dc, $d6, $d5, $d9, $d3, $d9, $e5, $f0, $f8, $f7
12edc     FB 00 0C 10 
12ee0     13 0F 11 1D 
12ee4     19 1F 21 1D 
12ee8     24 26 25 26 | 	byte	$fb, $00, $0c, $10, $13, $0f, $11, $1d, $19, $1f, $21, $1d, $24, $26, $25, $26
12eec     29 2A 28 21 
12ef0     23 18 0F 11 
12ef4     06 07 0B 07 
12ef8     F8 F6 F4 F9 | 	byte	$29, $2a, $28, $21, $23, $18, $0f, $11, $06, $07, $0b, $07, $f8, $f6, $f4, $f9
12efc     F7 F7 ED E7 
12f00     EC F1 EB E0 
12f04     E3 E7 E8 E3 
12f08     E1 E3 F2 F2 | 	byte	$f7, $f7, $ed, $e7, $ec, $f1, $eb, $e0, $e3, $e7, $e8, $e3, $e1, $e3, $f2, $f2
12f0c     F2 F9 F8 F7 
12f10     F4 FA FA 03 
12f14     03 02 00 00 
12f18     02 03 FF 03 | 	byte	$f2, $f9, $f8, $f7, $f4, $fa, $fa, $03, $03, $02, $00, $00, $02, $03, $ff, $03
12f1c     03 01 07 14 
12f20     17 18 11 0B 
12f24     10 0C 0B 0E 
12f28     10 10 09 0B | 	byte	$03, $01, $07, $14, $17, $18, $11, $0b, $10, $0c, $0b, $0e, $10, $10, $09, $0b
12f2c     14 22 21 14 
12f30     17 1D 13 11 
12f34     09 02 01 01 
12f38     01 FD FC FD | 	byte	$14, $22, $21, $14, $17, $1d, $13, $11, $09, $02, $01, $01, $01, $fd, $fc, $fd
12f3c     F8 EB F1 ED 
12f40     EB EB EF E7 
12f44     EB F2 EE E4 
12f48     EA EB EF E5 | 	byte	$f8, $eb, $f1, $ed, $eb, $eb, $ef, $e7, $eb, $f2, $ee, $e4, $ea, $eb, $ef, $e5
12f4c     E4 E3 EB EE 
12f50     F4 F2 F5 F8 
12f54     F6 FC FF 08 
12f58     09 0A 0D 08 | 	byte	$e4, $e3, $eb, $ee, $f4, $f2, $f5, $f8, $f6, $fc, $ff, $08, $09, $0a, $0d, $08
12f5c     0B 14 0F 0E 
12f60     0A 12 16 0E 
12f64     09 03 08 10 
12f68     0F 0D 0A 07 | 	byte	$0b, $14, $0f, $0e, $0a, $12, $16, $0e, $09, $03, $08, $10, $0f, $0d, $0a, $07
12f6c     0C 0A 0D 12 
12f70     0A 0B 0A 05 
12f74     02 FE FA FC 
12f78     FA FC F9 F7 | 	byte	$0c, $0a, $0d, $12, $0a, $0b, $0a, $05, $02, $fe, $fa, $fc, $fa, $fc, $f9, $f7
12f7c     FE F2 F4 FA 
12f80     FD F9 F8 F4 
12f84     F7 F2 EC E5 
12f88     E8 F5 F7 F2 | 	byte	$fe, $f2, $f4, $fa, $fd, $f9, $f8, $f4, $f7, $f2, $ec, $e5, $e8, $f5, $f7, $f2
12f8c     F0 F5 F6 F9 
12f90     FB FB F8 00 
12f94     FF FB 01 01 
12f98     00 FC FD 08 | 	byte	$f0, $f5, $f6, $f9, $fb, $fb, $f8, $00, $ff, $fb, $01, $01, $00, $fc, $fd, $08
12f9c     09 0A 0C 0B 
12fa0     06 09 08 0B 
12fa4     04 07 0A 0E 
12fa8     0D 0E 0A 04 | 	byte	$09, $0a, $0c, $0b, $06, $09, $08, $0b, $04, $07, $0a, $0e, $0d, $0e, $0a, $04
12fac     03 FE FC F4 
12fb0     F2 FC F8 F7 
12fb4     FA F8 FD 00 
12fb8     03 FF FA 02 | 	byte	$03, $fe, $fc, $f4, $f2, $fc, $f8, $f7, $fa, $f8, $fd, $00, $03, $ff, $fa, $02
12fbc     FE 01 06 01 
12fc0     FE 03 03 06 
12fc4     02 FF FD 03 
12fc8     0B 0A 00 FA | 	byte	$fe, $01, $06, $01, $fe, $03, $03, $06, $02, $ff, $fd, $03, $0b, $0a, $00, $fa
12fcc     F5 F6 F7 F8 
12fd0     FE FF F9 F7 
12fd4     F1 F2 F9 F4 
12fd8     F3 F4 F9 F7 | 	byte	$f5, $f6, $f7, $f8, $fe, $ff, $f9, $f7, $f1, $f2, $f9, $f4, $f3, $f4, $f9, $f7
12fdc     FC FD FC 00 
12fe0     04 03 05 FC 
12fe4     F7 FE 02 FE 
12fe8     FF FF 05 01 | 	byte	$fc, $fd, $fc, $00, $04, $03, $05, $fc, $f7, $fe, $02, $fe, $ff, $ff, $05, $01
12fec     01 0E 13 13 
12ff0     0B 04 03 0B 
12ff4     0C 0A 06 0E 
12ff8     0F 03 03 05 | 	byte	$01, $0e, $13, $13, $0b, $04, $03, $0b, $0c, $0a, $06, $0e, $0f, $03, $03, $05
12ffc     08 0C 0B 05 
13000     05 FC F7 F6 
13004     FD FF FC FC 
13008     FD 02 02 07 | 	byte	$08, $0c, $0b, $05, $05, $fc, $f7, $f6, $fd, $ff, $fc, $fc, $fd, $02, $02, $07
1300c     0B 0E 07 07 
13010     07 04 01 F9 
13014     FF 07 0C 0A 
13018     04 FB 00 FC | 	byte	$0b, $0e, $07, $07, $07, $04, $01, $f9, $ff, $07, $0c, $0a, $04, $fb, $00, $fc
1301c     F5 F5 F5 F0 
13020     F2 F2 F0 F0 
13024     F4 F6 F1 F3 
13028     F2 EF F4 EB | 	byte	$f5, $f5, $f5, $f0, $f2, $f2, $f0, $f0, $f4, $f6, $f1, $f3, $f2, $ef, $f4, $eb
1302c     EE F1 F7 FA 
13030     F9 FD 06 03 
13034     03 FE FF 08 
13038     08 0A 0A 0C | 	byte	$ee, $f1, $f7, $fa, $f9, $fd, $06, $03, $03, $fe, $ff, $08, $08, $0a, $0a, $0c
1303c     17 19 15 19 
13040     1A 16 16 16 
13044     1A 18 10 09 
13048     0B 0B FF 02 | 	byte	$17, $19, $15, $19, $1a, $16, $16, $16, $1a, $18, $10, $09, $0b, $0b, $ff, $02
1304c     FF F9 F9 FC 
13050     F5 F8 EC E7 
13054     EB ED F2 ED 
13058     EB EA E2 E3 | 	byte	$ff, $f9, $f9, $fc, $f5, $f8, $ec, $e7, $eb, $ed, $f2, $ed, $eb, $ea, $e2, $e3
1305c     E7 EF F3 EF 
13060     F0 F0 F2 F6 
13064     F4 EC F6 F7 
13068     F4 FC FB FD | 	byte	$e7, $ef, $f3, $ef, $f0, $f0, $f2, $f6, $f4, $ec, $f6, $f7, $f4, $fc, $fb, $fd
1306c     FC FE 07 0D 
13070     0C 06 08 0E 
13074     0F 10 10 10 
13078     0D 0B 07 0B | 	byte	$fc, $fe, $07, $0d, $0c, $06, $08, $0e, $0f, $10, $10, $10, $0d, $0b, $07, $0b
1307c     11 0D 0A 0E 
13080     09 0B 0C 0B 
13084     08 11 11 0E 
13088     09 0B 0A FF | 	byte	$11, $0d, $0a, $0e, $09, $0b, $0c, $0b, $08, $11, $11, $0e, $09, $0b, $0a, $ff
1308c     00 07 04 FD 
13090     F8 FC F5 F8 
13094     F8 F9 F8 F1 
13098     F2 F3 F9 F8 | 	byte	$00, $07, $04, $fd, $f8, $fc, $f5, $f8, $f8, $f9, $f8, $f1, $f2, $f3, $f9, $f8
1309c     F4 ED F2 EA 
130a0     E6 EC EF ED 
130a4     EA ED F5 F6 
130a8     F8 F4 EA F0 | 	byte	$f4, $ed, $f2, $ea, $e6, $ec, $ef, $ed, $ea, $ed, $f5, $f6, $f8, $f4, $ea, $f0
130ac     F8 F2 F7 FA 
130b0     00 04 04 03 
130b4     00 08 0F 1A 
130b8     18 1E 1D 1A | 	byte	$f8, $f2, $f7, $fa, $00, $04, $04, $03, $00, $08, $0f, $1a, $18, $1e, $1d, $1a
130bc     1E 26 28 26 
130c0     24 1B 16 18 
130c4     1A 20 1A 11 
130c8     0D 11 0E 03 | 	byte	$1e, $26, $28, $26, $24, $1b, $16, $18, $1a, $20, $1a, $11, $0d, $11, $0e, $03
130cc     03 03 05 02 
130d0     F8 F5 F2 EF 
130d4     E7 E8 E4 E0 
130d8     D6 D7 D9 DD | 	byte	$03, $03, $05, $02, $f8, $f5, $f2, $ef, $e7, $e8, $e4, $e0, $d6, $d7, $d9, $dd
130dc     E4 E9 E9 E4 
130e0     E3 E3 E6 E1 
130e4     E9 EE F6 F9 
130e8     00 0C 10 14 | 	byte	$e4, $e9, $e9, $e4, $e3, $e3, $e6, $e1, $e9, $ee, $f6, $f9, $00, $0c, $10, $14
130ec     14 13 15 1C 
130f0     1A 1E 1C 1B 
130f4     1E 1E 26 27 
130f8     20 18 16 11 | 	byte	$14, $13, $15, $1c, $1a, $1e, $1c, $1b, $1e, $1e, $26, $27, $20, $18, $16, $11
130fc     14 12 08 07 
13100     0A 09 05 00 
13104     FF FC F7 F9 
13108     F0 EF EE F5 | 	byte	$14, $12, $08, $07, $0a, $09, $05, $00, $ff, $fc, $f7, $f9, $f0, $ef, $ee, $f5
1310c     F2 F1 FA F8 
13110     F0 EF F0 EC 
13114     EC EA EC F5 
13118     F2 F8 FF 00 | 	byte	$f2, $f1, $fa, $f8, $f0, $ef, $f0, $ec, $ec, $ea, $ec, $f5, $f2, $f8, $ff, $00
1311c     03 02 02 05 
13120     01 00 00 04 
13124     05 03 00 08 
13128     0A 02 FA F7 | 	byte	$03, $02, $02, $05, $01, $00, $00, $04, $05, $03, $00, $08, $0a, $02, $fa, $f7
1312c     F5 F6 F8 FD 
13130     FC F7 F7 FB 
13134     FB 00 01 00 
13138     FD FC FF FF | 	byte	$f5, $f6, $f8, $fd, $fc, $f7, $f7, $fb, $fb, $00, $01, $00, $fd, $fc, $ff, $ff
1313c     00 FF 01 0A 
13140     09 08 04 09 
13144     09 0C 10 0A 
13148     08 07 06 07 | 	byte	$00, $ff, $01, $0a, $09, $08, $04, $09, $09, $0c, $10, $0a, $08, $07, $06, $07
1314c     07 07 09 0C 
13150     06 03 01 FE 
13154     FD FD F7 F3 
13158     F3 EF F1 F5 | 	byte	$07, $07, $09, $0c, $06, $03, $01, $fe, $fd, $fd, $f7, $f3, $f3, $ef, $f1, $f5
1315c     F7 F6 F8 F3 
13160     F5 F3 F4 ED 
13164     EA F0 F3 F5 
13168     F9 02 03 07 | 	byte	$f7, $f6, $f8, $f3, $f5, $f3, $f4, $ed, $ea, $f0, $f3, $f5, $f9, $02, $03, $07
1316c     06 08 0A 0A 
13170     06 03 07 0C 
13174     0A 0E 13 13 
13178     15 12 0F 0B | 	byte	$06, $08, $0a, $0a, $06, $03, $07, $0c, $0a, $0e, $13, $13, $15, $12, $0f, $0b
1317c     09 01 03 01 
13180     00 01 00 FE 
13184     F8 FC FE FD 
13188     F6 F1 F1 F5 | 	byte	$09, $01, $03, $01, $00, $01, $00, $fe, $f8, $fc, $fe, $fd, $f6, $f1, $f1, $f5
1318c     FC F7 FC FB 
13190     FA F6 F8 FB 
13194     FA FE 03 00 
13198     03 04 07 0C | 	byte	$fc, $f7, $fc, $fb, $fa, $f6, $f8, $fb, $fa, $fe, $03, $00, $03, $04, $07, $0c
1319c     0B 0D 09 08 
131a0     03 05 07 08 
131a4     0B 07 07 07 
131a8     0B 0D 05 04 | 	byte	$0b, $0d, $09, $08, $03, $05, $07, $08, $0b, $07, $07, $07, $0b, $0d, $05, $04
131ac     03 01 01 FD 
131b0     FC FE FD FB 
131b4     F8 F6 F7 F2 
131b8     F4 FA FB FD | 	byte	$03, $01, $01, $fd, $fc, $fe, $fd, $fb, $f8, $f6, $f7, $f2, $f4, $fa, $fb, $fd
131bc     F9 FA F9 FE 
131c0     00 FF FE FD 
131c4     FC 06 0B 06 
131c8     05 06 04 09 | 	byte	$f9, $fa, $f9, $fe, $00, $ff, $fe, $fd, $fc, $06, $0b, $06, $05, $06, $04, $09
131cc     07 06 0D 0D 
131d0     09 06 0C 0D 
131d4     0A 09 06 05 
131d8     04 01 FE FA | 	byte	$07, $06, $0d, $0d, $09, $06, $0c, $0d, $0a, $09, $06, $05, $04, $01, $fe, $fa
131dc     FA F8 FD FF 
131e0     FA FD FD FA 
131e4     F7 F7 F7 EF 
131e8     F0 F1 F7 F9 | 	byte	$fa, $f8, $fd, $ff, $fa, $fd, $fd, $fa, $f7, $f7, $f7, $ef, $f0, $f1, $f7, $f9
131ec     F9 F7 F9 FB 
131f0     F9 FF 00 FC 
131f4     F6 F5 00 01 
131f8     FF 05 05 07 | 	byte	$f9, $f7, $f9, $fb, $f9, $ff, $00, $fc, $f6, $f5, $00, $01, $ff, $05, $05, $07
131fc     0B 0A 0A 0A 
13200     07 0A 08 06 
13204     0B 0C 07 08 
13208     09 02 04 03 | 	byte	$0b, $0a, $0a, $0a, $07, $0a, $08, $06, $0b, $0c, $07, $08, $09, $02, $04, $03
1320c     00 00 04 01 
13210     FF FC 01 01 
13214     02 00 FF 00 
13218     FE FC FB FC | 	byte	$00, $00, $04, $01, $ff, $fc, $01, $01, $02, $00, $ff, $00, $fe, $fc, $fb, $fc
1321c     FC FB FC FB 
13220     FA FB FC FB 
13224     F7 FC FC FB 
13228     FB FB 00 00 | 	byte	$fc, $fb, $fc, $fb, $fa, $fb, $fc, $fb, $f7, $fc, $fc, $fb, $fb, $fb, $00, $00
1322c     01 FD FE 03 
13230     04 04 06 04 
13234     00 FE F8 F9 
13238     FB 00 FB FC | 	byte	$01, $fd, $fe, $03, $04, $04, $06, $04, $00, $fe, $f8, $f9, $fb, $00, $fb, $fc
1323c     FD FE 00 FE 
13240     FC FB FB F4 
13244     F8 FC FB F8 
13248     FC FC FF FD | 	byte	$fd, $fe, $00, $fe, $fc, $fb, $fb, $f4, $f8, $fc, $fb, $f8, $fc, $fc, $ff, $fd
1324c     00 08 0D 0C 
13250     0B 0B 10 12 
13254     0F 10 11 10 
13258     12 11 0F 0C | 	byte	$00, $08, $0d, $0c, $0b, $0b, $10, $12, $0f, $10, $11, $10, $12, $11, $0f, $0c
1325c     0D 0D 0D 0C 
13260     09 07 02 00 
13264     FD F9 F9 F5 
13268     F3 ED E8 EB | 	byte	$0d, $0d, $0d, $0c, $09, $07, $02, $00, $fd, $f9, $f9, $f5, $f3, $ed, $e8, $eb
1326c     EC E6 E4 E6 
13270     E8 E9 EA EA 
13274     EA F1 F2 F1 
13278     EF F3 F3 F3 | 	byte	$ec, $e6, $e4, $e6, $e8, $e9, $ea, $ea, $ea, $f1, $f2, $f1, $ef, $f3, $f3, $f3
1327c     F9 FE 01 00 
13280     03 08 07 0C 
13284     12 0E 10 12 
13288     0E 0F 11 14 | 	byte	$f9, $fe, $01, $00, $03, $08, $07, $0c, $12, $0e, $10, $12, $0e, $0f, $11, $14
1328c     18 19 1A 15 
13290     11 12 15 11 
13294     0F 0D 0D 0B 
13298     06 04 02 00 | 	byte	$18, $19, $1a, $15, $11, $12, $15, $11, $0f, $0d, $0d, $0b, $06, $04, $02, $00
1329c     00 FF FD FD 
132a0     FC FA F6 F3 
132a4     F2 F1 ED E9 
132a8     ED EF F4 F1 | 	byte	$00, $ff, $fd, $fd, $fc, $fa, $f6, $f3, $f2, $f1, $ed, $e9, $ed, $ef, $f4, $f1
132ac     F1 F3 F7 F8 
132b0     F7 FB FD FC 
132b4     FD FF 00 04 
132b8     07 0A 07 02 | 	byte	$f1, $f3, $f7, $f8, $f7, $fb, $fd, $fc, $fd, $ff, $00, $04, $07, $0a, $07, $02
132bc     FE 00 00 01 
132c0     02 03 07 0A 
132c4     0C 0C 0C 0B 
132c8     0C 09 07 03 | 	byte	$fe, $00, $00, $01, $02, $03, $07, $0a, $0c, $0c, $0c, $0b, $0c, $09, $07, $03
132cc     03 02 00 03 
132d0     04 08 07 FE 
132d4     F9 FE FF FC 
132d8     FB FB FC FB | 	byte	$03, $02, $00, $03, $04, $08, $07, $fe, $f9, $fe, $ff, $fc, $fb, $fb, $fc, $fb
132dc     FD FE FE FE 
132e0     FF FF 00 00 
132e4     00 00 02 01 
132e8     FF 02 05 01 | 	byte	$fd, $fe, $fe, $fe, $ff, $ff, $00, $00, $00, $00, $02, $01, $ff, $02, $05, $01
132ec     FF FC FE FD 
132f0     FB F8 00 00 
132f4     FE FB FB FB 
132f8     FB FB FE FE | 	byte	$ff, $fc, $fe, $fd, $fb, $f8, $00, $00, $fe, $fb, $fb, $fb, $fb, $fb, $fe, $fe
132fc     00 00 00 01 
13300     01 01 05 05 
13304     FE FE FE FE 
13308     01 01 02 0A | 	byte	$00, $00, $00, $01, $01, $01, $05, $05, $fe, $fe, $fe, $fe, $01, $01, $02, $0a
1330c     05 05 07 09 
13310     0C 0A 08 0A 
13314     09 07 04 00 
13318     01 00 02 01 | 	byte	$05, $05, $07, $09, $0c, $0a, $08, $0a, $09, $07, $04, $00, $01, $00, $02, $01
1331c     FE FA FB F9 
13320     F7 F5 F3 F5 
13324     F7 F4 F3 F2 
13328     F1 F3 F2 F1 | 	byte	$fe, $fa, $fb, $f9, $f7, $f5, $f3, $f5, $f7, $f4, $f3, $f2, $f1, $f3, $f2, $f1
1332c     F6 F6 F3 F5 
13330     F9 FC 00 01 
13334     05 07 08 0A 
13338     0C 0E 0D 10 | 	byte	$f6, $f6, $f3, $f5, $f9, $fc, $00, $01, $05, $07, $08, $0a, $0c, $0e, $0d, $10
1333c     12 14 13 15 
13340     16 1B 1B 17 
13344     15 14 12 12 
13348     0D 0A 06 03 | 	byte	$12, $14, $13, $15, $16, $1b, $1b, $17, $15, $14, $12, $12, $0d, $0a, $06, $03
1334c     00 FE FB FA 
13350     F5 EF EC EB 
13354     E9 EA EA E9 
13358     E9 ED EA E5 | 	byte	$00, $fe, $fb, $fa, $f5, $ef, $ec, $eb, $e9, $ea, $ea, $e9, $e9, $ed, $ea, $e5
1335c     E7 E9 EB EC 
13360     F0 F3 F4 F6 
13364     F8 FC 02 06 
13368     06 06 0A 0F | 	byte	$e7, $e9, $eb, $ec, $f0, $f3, $f4, $f6, $f8, $fc, $02, $06, $06, $06, $0a, $0f
1336c     12 12 15 19 
13370     1B 22 26 23 
13374     21 1F 1C 1B 
13378     18 16 12 0D | 	byte	$12, $12, $15, $19, $1b, $22, $26, $23, $21, $1f, $1c, $1b, $18, $16, $12, $0d
1337c     04 00 FF 00 
13380     FB F8 F6 F4 
13384     F3 ED ED EB 
13388     E9 EA EC EA | 	byte	$04, $00, $ff, $00, $fb, $f8, $f6, $f4, $f3, $ed, $ed, $eb, $e9, $ea, $ec, $ea
1338c     E8 EB EC EC 
13390     EB ED F1 F5 
13394     F7 F4 F4 F9 
13398     FF 00 00 05 | 	byte	$e8, $eb, $ec, $ec, $eb, $ed, $f1, $f5, $f7, $f4, $f4, $f9, $ff, $00, $00, $05
1339c     04 04 09 0D 
133a0     10 10 0E 0D 
133a4     0B 0B 0D 0F 
133a8     11 0F 12 10 | 	byte	$04, $04, $09, $0d, $10, $10, $0e, $0d, $0b, $0b, $0d, $0f, $11, $0f, $12, $10
133ac     09 05 03 00 
133b0     FE FE FB F8 
133b4     F7 F6 F4 F7 
133b8     F7 F8 F9 F6 | 	byte	$09, $05, $03, $00, $fe, $fe, $fb, $f8, $f7, $f6, $f4, $f7, $f7, $f8, $f9, $f6
133bc     F2 EC EE F3 
133c0     F8 F8 F9 F9 
133c4     F8 FB FF 00 
133c8     FD FD FB FD | 	byte	$f2, $ec, $ee, $f3, $f8, $f8, $f9, $f9, $f8, $fb, $ff, $00, $fd, $fd, $fb, $fd
133cc     00 01 00 00 
133d0     01 03 05 06 
133d4     05 FF FD 00 
133d8     06 06 05 05 | 	byte	$00, $01, $00, $00, $01, $03, $05, $06, $05, $ff, $fd, $00, $06, $06, $05, $05
133dc     06 08 06 06 
133e0     03 02 02 00 
133e4     00 00 FF FC 
133e8     00 00 00 FC | 	byte	$06, $08, $06, $06, $03, $02, $02, $00, $00, $00, $ff, $fc, $00, $00, $00, $fc
133ec     FC FF FD FC 
133f0     FE 00 FE FF 
133f4     00 00 01 00 
133f8     00 01 03 01 | 	byte	$fc, $ff, $fd, $fc, $fe, $00, $fe, $ff, $00, $00, $01, $00, $00, $01, $03, $01
133fc     FF 00 00 00 
13400     03 05 04 00 
13404     FF 00 01 00 
13408     FE 00 01 01 | 	byte	$ff, $00, $00, $00, $03, $05, $04, $00, $ff, $00, $01, $00, $fe, $00, $01, $01
1340c     01 01 01 01 
13410     FF 01 02 03 
13414     00 FC FF 00 
13418     00 01 03 01 | 	byte	$01, $01, $01, $01, $ff, $01, $02, $03, $00, $fc, $ff, $00, $00, $01, $03, $01
1341c     FF FF 00 01 
13420     02 04 02 04 
13424     05 06 08 0A 
13428     09 07 0B 0A | 	byte	$ff, $ff, $00, $01, $02, $04, $02, $04, $05, $06, $08, $0a, $09, $07, $0b, $0a
1342c     08 09 07 05 
13430     07 06 05 04 
13434     02 00 00 00 
13438     00 FE FD FA | 	byte	$08, $09, $07, $05, $07, $06, $05, $04, $02, $00, $00, $00, $00, $fe, $fd, $fa
1343c     F8 F8 F9 F7 
13440     F4 F3 F4 F7 
13444     F6 F3 F5 F6 
13448     F7 F7 F9 FC | 	byte	$f8, $f8, $f9, $f7, $f4, $f3, $f4, $f7, $f6, $f3, $f5, $f6, $f7, $f7, $f9, $fc
1344c     FA FA FB 00 
13450     01 02 02 03 
13454     04 04 07 09 
13458     09 09 0A 0D | 	byte	$fa, $fa, $fb, $00, $01, $02, $02, $03, $04, $04, $07, $09, $09, $09, $0a, $0d
1345c     0F 0D 0B 0D 
13460     0D 0B 09 09 
13464     08 04 02 05 
13468     05 02 FF FB | 	byte	$0f, $0d, $0b, $0d, $0d, $0b, $09, $09, $08, $04, $02, $05, $05, $02, $ff, $fb
1346c     FA FB FA F8 
13470     F4 F6 F5 F5 
13474     F7 F5 F4 F5 
13478     F7 F9 FB FC | 	byte	$fa, $fb, $fa, $f8, $f4, $f6, $f5, $f5, $f7, $f5, $f4, $f5, $f7, $f9, $fb, $fc
1347c     FC FD FE 00 
13480     03 03 02 03 
13484     02 04 05 06 
13488     06 06 07 07 | 	byte	$fc, $fd, $fe, $00, $03, $03, $02, $03, $02, $04, $05, $06, $06, $06, $07, $07
1348c     04 05 05 05 
13490     03 03 02 04 
13494     03 02 00 00 
13498     00 FE FE FE | 	byte	$04, $05, $05, $05, $03, $03, $02, $04, $03, $02, $00, $00, $00, $fe, $fe, $fe
1349c     FB FA FA FA 
134a0     FA FB FC FB 
134a4     FC FB FA FB 
134a8     FC FC FC FE | 	byte	$fb, $fa, $fa, $fa, $fa, $fb, $fc, $fb, $fc, $fb, $fa, $fb, $fc, $fc, $fc, $fe
134ac     00 02 03 04 
134b0     05 06 05 06 
134b4     07 08 08 07 
134b8     06 07 09 0B | 	byte	$00, $02, $03, $04, $05, $06, $05, $06, $07, $08, $08, $07, $06, $07, $09, $0b
134bc     0A 09 05 03 
134c0     02 01 03 01 
134c4     FF FE FF 00 
134c8     00 FF FD FB | 	byte	$0a, $09, $05, $03, $02, $01, $03, $01, $ff, $fe, $ff, $00, $00, $ff, $fd, $fb
134cc     F9 FA FA F9 
134d0     F8 F9 FA FD 
134d4     FE FC FA FC 
134d8     FD FD FD FE | 	byte	$f9, $fa, $fa, $f9, $f8, $f9, $fa, $fd, $fe, $fc, $fa, $fc, $fd, $fd, $fd, $fe
134dc     FD FD FD FE 
134e0     FF FF 00 02 
134e4     03 04 03 01 
134e8     02 05 05 05 | 	byte	$fd, $fd, $fd, $fe, $ff, $ff, $00, $02, $03, $04, $03, $01, $02, $05, $05, $05
134ec     06 05 02 03 
134f0     04 03 01 00 
134f4     00 01 02 02 
134f8     01 01 02 00 | 	byte	$06, $05, $02, $03, $04, $03, $01, $00, $00, $01, $02, $02, $01, $01, $02, $00
134fc     02 04 03 01 
13500     01 02 01 00 
13504     00 00 00 01 
13508     01 00 02 02 | 	byte	$02, $04, $03, $01, $01, $02, $01, $00, $00, $00, $00, $01, $01, $00, $02, $02
1350c     02 02 03 01 
13510     00 00 00 00 
13514     00 FF FF 00 
13518     00 FF FE FD | 	byte	$02, $02, $03, $01, $00, $00, $00, $00, $00, $ff, $ff, $00, $00, $ff, $fe, $fd
1351c     FD FF FF FC 
13520     FB FB FB FD 
13524     FC FC FC FC 
13528     FA FA FB FD | 	byte	$fd, $ff, $ff, $fc, $fb, $fb, $fb, $fd, $fc, $fc, $fc, $fc, $fa, $fa, $fb, $fd
1352c     FC FD FC FE 
13530     00 00 FF FE 
13534     FF 00 01 00 
13538     00 02 02 03 | 	byte	$fc, $fd, $fc, $fe, $00, $00, $ff, $fe, $ff, $00, $01, $00, $00, $02, $02, $03
1353c     03 04 05 06 
13540     06 08 07 06 
13544     06 06 08 08 
13548     06 08 07 05 | 	byte	$03, $04, $05, $06, $06, $08, $07, $06, $06, $06, $08, $08, $06, $08, $07, $05
1354c     06 05 04 02 
13550     01 01 01 00 
13554     FF FD FE FE 
13558     FC FC F9 F7 | 	byte	$06, $05, $04, $02, $01, $01, $01, $00, $ff, $fd, $fe, $fe, $fc, $fc, $f9, $f7
1355c     F7 F7 F7 F7 
13560     F6 F5 F7 F7 
13564     F7 F6 F6 F7 
13568     F8 F9 FB FD | 	byte	$f7, $f7, $f7, $f7, $f6, $f5, $f7, $f7, $f7, $f6, $f6, $f7, $f8, $f9, $fb, $fd
1356c     FD FD 00 02 
13570     02 01 00 01 
13574     02 03 04 05 
13578     05 05 05 06 | 	byte	$fd, $fd, $00, $02, $02, $01, $00, $01, $02, $03, $04, $05, $05, $05, $05, $06
1357c     06 06 03 02 
13580     03 03 03 04 
13584     02 02 04 03 
13588     02 02 01 00 | 	byte	$06, $06, $03, $02, $03, $03, $03, $04, $02, $02, $04, $03, $02, $02, $01, $00
1358c     FF FE FE FE 
13590     FE FE FE FE 
13594     FF 00 00 FF 
13598     FE FE FF 01 | 	byte	$ff, $fe, $fe, $fe, $fe, $fe, $fe, $fe, $ff, $00, $00, $ff, $fe, $fe, $ff, $01
1359c     01 00 01 01 
135a0     00 00 00 00 
135a4     01 00 00 00 
135a8     00 00 FE FD | 	byte	$01, $00, $01, $01, $00, $00, $00, $00, $01, $00, $00, $00, $00, $00, $fe, $fd
135ac     FE FE FD FD 
135b0     FC FA FA FC 
135b4     FD FD FC FD 
135b8     FD FB FA FC | 	byte	$fe, $fe, $fd, $fd, $fc, $fa, $fa, $fc, $fd, $fd, $fc, $fd, $fd, $fb, $fa, $fc
135bc     FD FE FE FF 
135c0     00 00 00 00 
135c4     00 03 04 04 
135c8     04 04 05 07 | 	byte	$fd, $fe, $fe, $ff, $00, $00, $00, $00, $00, $03, $04, $04, $04, $04, $05, $07
135cc     07 08 08 07 
135d0     08 07 05 05 
135d4     04 03 02 01 
135d8     00 01 00 FF | 	byte	$07, $08, $08, $07, $08, $07, $05, $05, $04, $03, $02, $01, $00, $01, $00, $ff
135dc     FE FF FE FF 
135e0     FD FB FB FB 
135e4     FB FB FB FB 
135e8     FA FB FB FC | 	byte	$fe, $ff, $fe, $ff, $fd, $fb, $fb, $fb, $fb, $fb, $fb, $fb, $fa, $fb, $fb, $fc
135ec     FD FC FC FD 
135f0     FE FE FF FF 
135f4     00 00 02 03 
135f8     01 01 01 02 | 	byte	$fd, $fc, $fc, $fd, $fe, $fe, $ff, $ff, $00, $00, $02, $03, $01, $01, $01, $02
135fc     03 03 04 03 
13600     04 06 06 04 
13604     04 03 02 01 
13608     00 00 00 00 | 	byte	$03, $03, $04, $03, $04, $06, $06, $04, $04, $03, $02, $01, $00, $00, $00, $00
1360c     FE FD FE FD 
13610     FC FC FC FD 
13614     FD FC FC FC 
13618     FD FE FE 00 | 	byte	$fe, $fd, $fe, $fd, $fc, $fc, $fc, $fd, $fd, $fc, $fc, $fc, $fd, $fe, $fe, $00
1361c     00 FE FF 01 
13620     01 01 01 02 
13624     04 04 05 04 
13628     05 06 07 06 | 	byte	$00, $fe, $ff, $01, $01, $01, $01, $02, $04, $04, $05, $04, $05, $06, $07, $06
1362c     07 06 05 05 
13630     05 05 03 02 
13634     02 01 01 00 
13638     FF FE FE FD | 	byte	$07, $06, $05, $05, $05, $05, $03, $02, $02, $01, $01, $00, $ff, $fe, $fe, $fd
1363c     FC FB FA FA 
13640     F9 F9 F9 F9 
13644     F9 F9 F9 FA 
13648     FB FB FC FC | 	byte	$fc, $fb, $fa, $fa, $f9, $f9, $f9, $f9, $f9, $f9, $f9, $fa, $fb, $fb, $fc, $fc
1364c     FD FC FC FD 
13650     FF 00 01 04 
13654     04 02 03 03 
13658     05 05 04 05 | 	byte	$fd, $fc, $fc, $fd, $ff, $00, $01, $04, $04, $02, $03, $03, $05, $05, $04, $05
1365c     05 07 07 06 
13660     06 05 04 04 
13664     04 03 02 01 
13668     00 00 01 01 | 	byte	$05, $07, $07, $06, $06, $05, $04, $04, $04, $03, $02, $01, $00, $00, $01, $01
1366c     00 00 FE FD 
13670     FE FC FB FB 
13674     FB FC FD FE 
13678     FE FF 00 00 | 	byte	$00, $00, $fe, $fd, $fe, $fc, $fb, $fb, $fb, $fc, $fd, $fe, $fe, $ff, $00, $00
1367c     00 00 00 00 
13680     00 00 00 00 
13684     00          | 	byte	$00[9]
13685     01 01 00 01 
13689     02 01 01 01 
1368d     01 01 01 01 
13691     01 02 01 00 | 	byte	$01, $01, $00, $01, $02, $01, $01, $01, $01, $01, $01, $01, $01, $02, $01, $00
13695     00 00 00 00 
13699     00 00 00 00 
1369d     00 00 00 00 | 	byte	$00[12]
136a1     FF FF FF FF 
136a5     00 FF FF 00 
136a9     00 00 00 00 
136ad     00 01 02 03 | 	byte	$ff, $ff, $ff, $ff, $00, $ff, $ff, $00, $00, $00, $00, $00, $00, $01, $02, $03
136b1     02 02 02 02 
136b5     02          | 	byte	$02[5]
136b6     03 01 00 00 
136ba     00 00 00 00 
136be     00 00 FF FF 
136c2     FF FF FF FF | 	byte	$03, $01, $00, $00, $00, $00, $00, $00, $00, $00, $ff, $ff, $ff, $ff, $ff, $ff
136c6     00 FF FF FF 
136ca     FE FE FF FF 
136ce     00 FF FF 00 
136d2     FF FF FF FF | 	byte	$00, $ff, $ff, $ff, $fe, $fe, $ff, $ff, $00, $ff, $ff, $00, $ff, $ff, $ff, $ff
136d6     00 00 00 00 
136da     00 00 00    | 	byte	$00[7]
136dd     01 00 01 01 
136e1     01 01 01 01 
136e5     01 01 01 01 
136e9     01 01 01 01 | 	byte	$01, $00, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01
136ed     00 01 01 01 
136f1     00 00 00 00 
136f5     00 00 00 FF 
136f9     FF FF FF FF | 	byte	$00, $01, $01, $01, $00, $00, $00, $00, $00, $00, $00, $ff, $ff, $ff, $ff, $ff
136fd     FF FE FF FF 
13701     FF FF FE FE 
13705     FF FF FF 00 
13709     FF 00 00 00 | 	byte	$ff, $fe, $ff, $ff, $ff, $ff, $fe, $fe, $ff, $ff, $ff, $00, $ff, $00, $00, $00
1370d     00 00 00 01 
13711     01 01 02 02 
13715     03 02 02 01 
13719     02 02 02 02 | 	byte	$00, $00, $00, $01, $01, $01, $02, $02, $03, $02, $02, $01, $02, $02, $02, $02
1371d     01 02 01 00 
13721     00 00 00 FF 
13725     00 FF 34 48 
13729     54 49 5C 72 | 	byte	$01, $02, $01, $00, $00, $00, $00, $ff, $00, $ff, $34, $48, $54, $49, $5c, $72
1372d     7E 70 7C 6B 
13731     60 46 6E 25 
13735     3F 1C 14 38 
13739     FF 29 A7 90 | 	byte	$7e, $70, $7c, $6b, $60, $46, $6e, $25, $3f, $1c, $14, $38, $ff, $29, $a7, $90
1373d     FB CD BD A0 
13741     A1 B1 81 80 
13745     92 89 A2 82 
13749     80 83 81 80 | 	byte	$fb, $cd, $bd, $a0, $a1, $b1, $81, $80, $92, $89, $a2, $82, $80, $83, $81, $80
1374d     81 81 80 AA 
13751     92 AF 81 88 
13755     A9 BC 04 BB 
13759     30 BC AE AD | 	byte	$81, $81, $80, $aa, $92, $af, $81, $88, $a9, $bc, $04, $bb, $30, $bc, $ae, $ad
1375d     D6 4B D6 5A 
13761     6F 46 7F 7D 
13765     7F 7F 7F 6E 
13769     5B 4C 52 5F | 	byte	$d6, $4b, $d6, $5a, $6f, $46, $7f, $7d, $7f, $7f, $7f, $6e, $5b, $4c, $52, $5f
1376d     56 58 15 D6 
13771     46 C0 40 35 
13775     7A 4F 22 6B 
13779     72 57 52 50 | 	byte	$56, $58, $15, $d6, $46, $c0, $40, $35, $7a, $4f, $22, $6b, $72, $57, $52, $50
1377d     41 3E 30 2E 
13781     22 20 17 15 
13785     1C C6 18 24 
13789     1D D6 F6 86 | 	byte	$41, $3e, $30, $2e, $22, $20, $17, $15, $1c, $c6, $18, $24, $1d, $d6, $f6, $86
1378d     8C 81 80 9A 
13791     D3 80 80 80 
13795     80 82 83 97 
13799     B6 82 F5 EF | 	byte	$8c, $81, $80, $9a, $d3, $80, $80, $80, $80, $82, $83, $97, $b6, $82, $f5, $ef
1379d     84 89 B0 B4 
137a1     5D 56 7E 7F 
137a5     51 DD 4D 5A 
137a9     40 61 28 4D | 	byte	$84, $89, $b0, $b4, $5d, $56, $7e, $7f, $51, $dd, $4d, $5a, $40, $61, $28, $4d
137ad     50 4C 45 E4 
137b1     AC 0F 36 FB 
137b5     EF C3 97 B6 
137b9     80 86 CE B8 | 	byte	$50, $4c, $45, $e4, $ac, $0f, $36, $fb, $ef, $c3, $97, $b6, $80, $86, $ce, $b8
137bd     8C 95 C2 AF 
137c1     B7 BA BA B7 
137c5     BF CC CB D0 
137c9     00 0E DC 0E | 	byte	$8c, $95, $c2, $af, $b7, $ba, $ba, $b7, $bf, $cc, $cb, $d0, $00, $0e, $dc, $0e
137cd     E3 E4 13 16 
137d1     13 2B 02 E5 
137d5     0E 1E 36 7F 
137d9     4D 0F 03 00 | 	byte	$e3, $e4, $13, $16, $13, $2b, $02, $e5, $0e, $1e, $36, $7f, $4d, $0f, $03, $00
137dd     16 65 77 0D 
137e1     33 F0 D6 06 
137e5     36 43 3D 0E 
137e9     DE 0A 46 18 | 	byte	$16, $65, $77, $0d, $33, $f0, $d6, $06, $36, $43, $3d, $0e, $de, $0a, $46, $18
137ed     71 71 40 30 
137f1     33 31 4F 5C 
137f5     1A 2A 42 05 
137f9     0F 26 2E 31 | 	byte	$71, $71, $40, $30, $33, $31, $4f, $5c, $1a, $2a, $42, $05, $0f, $26, $2e, $31
137fd     2A 24 38 2F 
13801     27 2D 20 1D 
13805     07 E8 EE FC 
13809     FD 20 15 A2 | 	byte	$2a, $24, $38, $2f, $27, $2d, $20, $1d, $07, $e8, $ee, $fc, $fd, $20, $15, $a2
1380d     B4 DD EF 00 
13811     FA D9 AA 8D 
13815     AD A2 C5 A1 
13819     AC DC 12 19 | 	byte	$b4, $dd, $ef, $00, $fa, $d9, $aa, $8d, $ad, $a2, $c5, $a1, $ac, $dc, $12, $19
1381d     FC D7 B3 B6 
13821     38 57 36 19 
13825     F8 ED 11 3D 
13829     47 12 21 37 | 	byte	$fc, $d7, $b3, $b6, $38, $57, $36, $19, $f8, $ed, $11, $3d, $47, $12, $21, $37
1382d     39 20 EF CF 
13831     C8 CB E1 16 
13835     31 D0 9B C6 
13839     DF DF E4 D9 | 	byte	$39, $20, $ef, $cf, $c8, $cb, $e1, $16, $31, $d0, $9b, $c6, $df, $df, $e4, $d9
1383d     C9 BE B1 BA 
13841     C4 C8 C7 D8 
13845     D4 CF D9 ED 
13849     E7 D7 E2 01 | 	byte	$c9, $be, $b1, $ba, $c4, $c8, $c7, $d8, $d4, $cf, $d9, $ed, $e7, $d7, $e2, $01
1384d     E6 DE E7 FA 
13851     04 FA EE F9 
13855     1E 09 05 3E 
13859     4F 23 01 05 | 	byte	$e6, $de, $e7, $fa, $04, $fa, $ee, $f9, $1e, $09, $05, $3e, $4f, $23, $01, $05
1385d     27 3A 16 04 
13861     27 15 ED F3 
13865     19 32 20 03 
13869     0F 3C 2A 09 | 	byte	$27, $3a, $16, $04, $27, $15, $ed, $f3, $19, $32, $20, $03, $0f, $3c, $2a, $09
1386d     34 55 47 34 
13871     32 37 3A 1E 
13875     07 37 56 41 
13879     21 1D 2C 2E | 	byte	$34, $55, $47, $34, $32, $37, $3a, $1e, $07, $37, $56, $41, $21, $1d, $2c, $2e
1387d     2E 41 37 35 
13881     2B 22 31 26 
13885     09 F0 F5 11 
13889     24 24 03 A0 | 	byte	$2e, $41, $37, $35, $2b, $22, $31, $26, $09, $f0, $f5, $11, $24, $24, $03, $a0
1388d     8B B5 E8 FD 
13891     F5 CC 95 A4 
13895     B3 A2 CE BC 
13899     A9 DA 0D 12 | 	byte	$8b, $b5, $e8, $fd, $f5, $cc, $95, $a4, $b3, $a2, $ce, $bc, $a9, $da, $0d, $12
1389d     E7 B6 AF CE 
138a1     3D 5E 51 2E 
138a5     05 FC 21 46 
138a9     25 03 2C 39 | 	byte	$e7, $b6, $af, $ce, $3d, $5e, $51, $2e, $05, $fc, $21, $46, $25, $03, $2c, $39
138ad     31 2F FB D5 
138b1     CD DE 0A 2C 
138b5     19 C1 95 A3 
138b9     BC D0 DA CC | 	byte	$31, $2f, $fb, $d5, $cd, $de, $0a, $2c, $19, $c1, $95, $a3, $bc, $d0, $da, $cc
138bd     B4 AC B3 B6 
138c1     C5 D1 C5 C8 
138c5     CE CE D3 D6 
138c9     D7 DB E6 F9 | 	byte	$b4, $ac, $b3, $b6, $c5, $d1, $c5, $c8, $ce, $ce, $d3, $d6, $d7, $db, $e6, $f9
138cd     F1 E9 ED F9 
138d1     02 04 03 0B 
138d5     0D FF FC 13 
138d9     21 12 01 00 | 	byte	$f1, $e9, $ed, $f9, $02, $04, $03, $0b, $0d, $ff, $fc, $13, $21, $12, $01, $00
138dd     08 0C 07 11 
138e1     25 21 0E 0A 
138e5     1E 2E 2C 26 
138e9     34 39 1D 09 | 	byte	$08, $0c, $07, $11, $25, $21, $0e, $0a, $1e, $2e, $2c, $26, $34, $39, $1d, $09
138ed     1B 31 36 35 
138f1     33 27 17 0A 
138f5     17 43 60 5B 
138f9     41 2F 31 39 | 	byte	$1b, $31, $36, $35, $33, $27, $17, $0a, $17, $43, $60, $5b, $41, $2f, $31, $39
138fd     48 4E 3E 42 
13901     33 25 31 32 
13905     15 FC 0A 26 
13909     28 24 FF A8 | 	byte	$48, $4e, $3e, $42, $33, $25, $31, $32, $15, $fc, $0a, $26, $28, $24, $ff, $a8
1390d     8C A6 DA F9 
13911     EE B8 95 B3 
13915     B0 A5 CA C5 
13919     AE DB 0E 08 | 	byte	$8c, $a6, $da, $f9, $ee, $b8, $95, $b3, $b0, $a5, $ca, $c5, $ae, $db, $0e, $08
1391d     D6 B6 B8 E2 
13921     43 5F 57 3D 
13925     13 0A 33 42 
13929     17 0D 31 3A | 	byte	$d6, $b6, $b8, $e2, $43, $5f, $57, $3d, $13, $0a, $33, $42, $17, $0d, $31, $3a
1392d     31 30 02 DA 
13931     D7 F3 19 26 
13935     07 BD 9A 9E 
13939     B3 C9 D3 C1 | 	byte	$31, $30, $02, $da, $d7, $f3, $19, $26, $07, $bd, $9a, $9e, $b3, $c9, $d3, $c1
1393d     AC AB B0 B6 
13941     C6 D0 C8 C5 
13945     CA CD D0 D5 
13949     DB DC E2 ED | 	byte	$ac, $ab, $b0, $b6, $c6, $d0, $c8, $c5, $ca, $cd, $d0, $d5, $db, $dc, $e2, $ed
1394d     ED E9 EC F4 
13951     FE 06 09 07 
13955     FF F8 F9 04 
13959     0D 07 FF FB | 	byte	$ed, $e9, $ec, $f4, $fe, $06, $09, $07, $ff, $f8, $f9, $04, $0d, $07, $ff, $fb
1395d     FB FE 04 11 
13961     1C 1E 14 0F 
13965     1A 27 2E 32 
13969     3A 30 16 0A | 	byte	$fb, $fe, $04, $11, $1c, $1e, $14, $0f, $1a, $27, $2e, $32, $3a, $30, $16, $0a
1396d     12 23 2E 35 
13971     2F 1B 09 0A 
13975     20 49 64 64 
13979     4C 36 34 43 | 	byte	$12, $23, $2e, $35, $2f, $1b, $09, $0a, $20, $49, $64, $64, $4c, $36, $34, $43
1397d     55 53 49 49 
13981     38 2B 33 38 
13985     1B 06 18 2D 
13989     2B 25 FD B0 | 	byte	$55, $53, $49, $49, $38, $2b, $33, $38, $1b, $06, $18, $2d, $2b, $25, $fd, $b0
1398d     93 A8 D8 F6 
13991     E4 AD 9A B5 
13995     AF A9 C6 C4 
13999     B5 DF 0C 01 | 	byte	$93, $a8, $d8, $f6, $e4, $ad, $9a, $b5, $af, $a9, $c6, $c4, $b5, $df, $0c, $01
1399d     D2 BB C1 F0 
139a1     45 5E 57 40 
139a5     1C 1A 3D 3C 
139a9     17 15 32 38 | 	byte	$d2, $bb, $c1, $f0, $45, $5e, $57, $40, $1c, $1a, $3d, $3c, $17, $15, $32, $38
139ad     33 2C 02 DE 
139b1     E0 FD 1A 1E 
139b5     FC BD 9E A1 
139b9     B3 C9 CE BA | 	byte	$33, $2c, $02, $de, $e0, $fd, $1a, $1e, $fc, $bd, $9e, $a1, $b3, $c9, $ce, $ba
139bd     A8 AA AF B7 
139c1     C7 CF C9 C4 
139c5     C8 CC D2 D9 
139c9     DC DB DD E5 | 	byte	$a8, $aa, $af, $b7, $c7, $cf, $c9, $c4, $c8, $cc, $d2, $d9, $dc, $db, $dd, $e5
139cd     E6 E5 E8 EE 
139d1     F9 03 05 FF 
139d5     F7 F4 F6 FD 
139d9     03 02 FC F9 | 	byte	$e6, $e5, $e8, $ee, $f9, $03, $05, $ff, $f7, $f4, $f6, $fd, $03, $02, $fc, $f9
139dd     F9 FB 02 0D 
139e1     16 17 12 0E 
139e5     15 22 2D 35 
139e9     38 29 13 0A | 	byte	$f9, $fb, $02, $0d, $16, $17, $12, $0e, $15, $22, $2d, $35, $38, $29, $13, $0a
139ed     10 1E 2C 35 
139f1     2C 14 07 0C 
139f5     26 4B 66 65 
139f9     4F 39 39 4B | 	byte	$10, $1e, $2c, $35, $2c, $14, $07, $0c, $26, $4b, $66, $65, $4f, $39, $39, $4b
139fd     5C 5A 51 4F 
13a01     3C 2F 38 3C 
13a05     21 0F 21 30 
13a09     2D 26 F9 B3 | 	byte	$5c, $5a, $51, $4f, $3c, $2f, $38, $3c, $21, $0f, $21, $30, $2d, $26, $f9, $b3
13a0d     9A AE DA F1 
13a11     DB A9 A1 B8 
13a15     B1 AD C4 C1 
13a19     BA E6 0B FD | 	byte	$9a, $ae, $da, $f1, $db, $a9, $a1, $b8, $b1, $ad, $c4, $c1, $ba, $e6, $0b, $fd
13a1d     D3 C1 C8 FE 
13a21     48 5D 56 3F 
13a25     22 25 42 37 
13a29     19 1B 32 37 | 	byte	$d3, $c1, $c8, $fe, $48, $5d, $56, $3f, $22, $25, $42, $37, $19, $1b, $32, $37
13a2d     31 27 00 E4 
13a31     EA 04 19 19 
13a35     F4 BE A4 A8 
13a39     B9 CA CB B5 | 	byte	$31, $27, $00, $e4, $ea, $04, $19, $19, $f4, $be, $a4, $a8, $b9, $ca, $cb, $b5
13a3d     A8 A9 AF BA 
13a41     C9 CF C8 C3 
13a45     C6 CD D5 DC 
13a49     DE D9 D9 DF | 	byte	$a8, $a9, $af, $ba, $c9, $cf, $c8, $c3, $c6, $cd, $d5, $dc, $de, $d9, $d9, $df
13a4d     E0 E2 E5 EA 
13a51     F3 FC FE F7 
13a55     F2 F0 F3 F8 
13a59     FC FD FA F8 | 	byte	$e0, $e2, $e5, $ea, $f3, $fc, $fe, $f7, $f2, $f0, $f3, $f8, $fc, $fd, $fa, $f8
13a5d     F9 FB FF 08 
13a61     0E 11 0C 0A 
13a65     10 1C 29 32 
13a69     32 23 10 09 | 	byte	$f9, $fb, $ff, $08, $0e, $11, $0c, $0a, $10, $1c, $29, $32, $32, $23, $10, $09
13a6d     0F 1C 2B 33 
13a71     28 12 07 0E 
13a75     28 4C 65 64 
13a79     4F 3B 3C 50 | 	byte	$0f, $1c, $2b, $33, $28, $12, $07, $0e, $28, $4c, $65, $64, $4f, $3b, $3c, $50
13a7d     62 5F 57 52 
13a81     40 35 3D 3E 
13a85     24 18 27 32 
13a89     2F 25 F8 B8 | 	byte	$62, $5f, $57, $52, $40, $35, $3d, $3e, $24, $18, $27, $32, $2f, $25, $f8, $b8
13a8d     A3 B5 DB ED 
13a91     D4 A8 A7 BA 
13a95     B3 B1 C0 BF 
13a99     C1 EC 0B FA | 	byte	$a3, $b5, $db, $ed, $d4, $a8, $a7, $ba, $b3, $b1, $c0, $bf, $c1, $ec, $0b, $fa
13a9d     D6 C6 D3 09 
13aa1     49 5A 53 3E 
13aa5     27 2C 42 34 
13aa9     1B 20 31 34 | 	byte	$d6, $c6, $d3, $09, $49, $5a, $53, $3e, $27, $2c, $42, $34, $1b, $20, $31, $34
13aad     30 22 FE E9 
13ab1     F1 08 16 11 
13ab5     EE C0 AC AF 
13ab9     BE CC C8 B3 | 	byte	$30, $22, $fe, $e9, $f1, $08, $16, $11, $ee, $c0, $ac, $af, $be, $cc, $c8, $b3
13abd     A7 A9 B1 BE 
13ac1     CB CF C7 C3 
13ac5     C6 CE D9 DF 
13ac9     DE D7 D6 D8 | 	byte	$a7, $a9, $b1, $be, $cb, $cf, $c7, $c3, $c6, $ce, $d9, $df, $de, $d7, $d6, $d8
13acd     DB DF E1 E4 
13ad1     EC F4 F5 F1 
13ad5     EE EF F1 F5 
13ad9     F9 FA F8 F9 | 	byte	$db, $df, $e1, $e4, $ec, $f4, $f5, $f1, $ee, $ef, $f1, $f5, $f9, $fa, $f8, $f9
13add     FC FC FD 03 
13ae1     08 0A 07 06 
13ae5     0A 16 24 2D 
13ae9     2C 1D 0E 08 | 	byte	$fc, $fc, $fd, $03, $08, $0a, $07, $06, $0a, $16, $24, $2d, $2c, $1d, $0e, $08
13aed     0F 1B 2A 30 
13af1     24 10 07 10 
13af5     29 4C 63 62 
13af9     4C 3A 3F 55 | 	byte	$0f, $1b, $2a, $30, $24, $10, $07, $10, $29, $4c, $63, $62, $4c, $3a, $3f, $55
13afd     65 62 5B 55 
13b01     43 3A 42 3F 
13b05     27 1D 2C 34 
13b09     31 25 F5 BD | 	byte	$65, $62, $5b, $55, $43, $3a, $42, $3f, $27, $1d, $2c, $34, $31, $25, $f5, $bd
13b0d     AB BC DC E9 
13b11     CD A8 AB BB 
13b15     B4 B3 BF BE 
13b19     C8 F2 0A F8 | 	byte	$ab, $bc, $dc, $e9, $cd, $a8, $ab, $bb, $b4, $b3, $bf, $be, $c8, $f2, $0a, $f8
13b1d     D8 CD DC 12 
13b21     49 57 50 3C 
13b25     2A 33 42 32 
13b29     1F 23 30 33 | 	byte	$d8, $cd, $dc, $12, $49, $57, $50, $3c, $2a, $33, $42, $32, $1f, $23, $30, $33
13b2d     2E 1D FE ED 
13b31     F7 0A 15 0D 
13b35     EC C4 B4 B8 
13b39     C6 CF C8 B3 | 	byte	$2e, $1d, $fe, $ed, $f7, $0a, $15, $0d, $ec, $c4, $b4, $b8, $c6, $cf, $c8, $b3
13b3d     A8 AA B3 C2 
13b41     CD CE C6 C3 
13b45     C7 D2 DE E4 
13b49     DF D6 D3 D5 | 	byte	$a8, $aa, $b3, $c2, $cd, $ce, $c6, $c3, $c7, $d2, $de, $e4, $df, $d6, $d3, $d5
13b4d     D9 DE E0 E1 
13b51     E6 EC ED EB 
13b55     EC EE EF F1 
13b59     F4 F6 F6 FA | 	byte	$d9, $de, $e0, $e1, $e6, $ec, $ed, $eb, $ec, $ee, $ef, $f1, $f4, $f6, $f6, $fa
13b5d     FE FD FC FE 
13b61     02 04 02 02 
13b65     06 10 1C 25 
13b69     24 18 0B 08 | 	byte	$fe, $fd, $fc, $fe, $02, $04, $02, $02, $06, $10, $1c, $25, $24, $18, $0b, $08
13b6d     0E 19 27 2C 
13b71     1F 0E 07 11 
13b75     2A 4B 61 5D 
13b79     49 3A 42 59 | 	byte	$0e, $19, $27, $2c, $1f, $0e, $07, $11, $2a, $4b, $61, $5d, $49, $3a, $42, $59
13b7d     68 65 5E 56 
13b81     46 3F 45 41 
13b85     2A 21 2E 35 
13b89     31 21 F3 BF | 	byte	$68, $65, $5e, $56, $46, $3f, $45, $41, $2a, $21, $2e, $35, $31, $21, $f3, $bf
13b8d     B1 C2 DC E3 
13b91     C7 AA B0 BD 
13b95     B8 B6 BE BF 
13b99     CF F6 09 F7 | 	byte	$b1, $c2, $dc, $e3, $c7, $aa, $b0, $bd, $b8, $b6, $be, $bf, $cf, $f6, $09, $f7
13b9d     DC D3 E6 1A 
13ba1     49 54 4C 3A 
13ba5     2E 37 42 31 
13ba9     22 26 30 30 | 	byte	$dc, $d3, $e6, $1a, $49, $54, $4c, $3a, $2e, $37, $42, $31, $22, $26, $30, $30
13bad     2B 1A FE F3 
13bb1     FD 0D 13 0A 
13bb5     EA C9 BC C3 
13bb9     CD D3 C7 B3 | 	byte	$2b, $1a, $fe, $f3, $fd, $0d, $13, $0a, $ea, $c9, $bc, $c3, $cd, $d3, $c7, $b3
13bbd     A9 AC B7 C6 
13bc1     D0 CE C6 C3 
13bc5     C9 D6 E3 E7 
13bc9     E0 D5 D1 D3 | 	byte	$a9, $ac, $b7, $c6, $d0, $ce, $c6, $c3, $c9, $d6, $e3, $e7, $e0, $d5, $d1, $d3
13bcd     D9 DE E0 DD 
13bd1     DF E3 E5 E6 
13bd5     EA ED EE EE 
13bd9     F1 F2 F5 FC | 	byte	$d9, $de, $e0, $dd, $df, $e3, $e5, $e6, $ea, $ed, $ee, $ee, $f1, $f2, $f5, $fc
13bdd     00 FF FA FA 
13be1     FD FE FE FF 
13be5     01 08 15 1D 
13be9     1D 12 08 06 | 	byte	$00, $ff, $fa, $fa, $fd, $fe, $fe, $ff, $01, $08, $15, $1d, $1d, $12, $08, $06
13bed     0C 18 24 28 
13bf1     1C 0D 08 12 
13bf5     2A 4A 5B 58 
13bf9     46 3B 44 5B | 	byte	$0c, $18, $24, $28, $1c, $0d, $08, $12, $2a, $4a, $5b, $58, $46, $3b, $44, $5b
13bfd     69 66 5F 56 
13c01     48 42 47 40 
13c05     2B 24 2F 35 
13c09     31 1E F0 C4 | 	byte	$69, $66, $5f, $56, $48, $42, $47, $40, $2b, $24, $2f, $35, $31, $1e, $f0, $c4
13c0d     B7 C6 DC DE 
13c11     C2 AC B4 BF 
13c15     BB BA BF C2 
13c19     D6 FB 08 F7 | 	byte	$b7, $c6, $dc, $de, $c2, $ac, $b4, $bf, $bb, $ba, $bf, $c2, $d6, $fb, $08, $f7
13c1d     E0 DA F0 20 
13c21     47 50 48 39 
13c25     31 3A 41 30 
13c29     24 28 2F 2F | 	byte	$e0, $da, $f0, $20, $47, $50, $48, $39, $31, $3a, $41, $30, $24, $28, $2f, $2f
13c2d     28 17 00 F8 
13c31     02 0F 13 07 
13c35     EB CE C5 CB 
13c39     D5 D6 C8 B4 | 	byte	$28, $17, $00, $f8, $02, $0f, $13, $07, $eb, $ce, $c5, $cb, $d5, $d6, $c8, $b4
13c3d     AC AF BC CA 
13c41     D2 CF C7 C5 
13c45     CC DA E7 EB 
13c49     E2 D6 D1 D4 | 	byte	$ac, $af, $bc, $ca, $d2, $cf, $c7, $c5, $cc, $da, $e7, $eb, $e2, $d6, $d1, $d4
13c4d     DB E1 E0 DB 
13c51     D9 DC DF E3 
13c55     E9 ED ED EB 
13c59     EC EF F4 FE | 	byte	$db, $e1, $e0, $db, $d9, $dc, $df, $e3, $e9, $ed, $ed, $eb, $ec, $ef, $f4, $fe
13c5d     02 FE F8 F6 
13c61     F7 F8 FA FB 
13c65     FC 02 0C 15 
13c69     14 0B 04 03 | 	byte	$02, $fe, $f8, $f6, $f7, $f8, $fa, $fb, $fc, $02, $0c, $15, $14, $0b, $04, $03
13c6d     08 14 1F 21 
13c71     16 0A 07 11 
13c75     29 46 57 53 
13c79     43 3B 46 5D | 	byte	$08, $14, $1f, $21, $16, $0a, $07, $11, $29, $46, $57, $53, $43, $3b, $46, $5d
13c7d     6B 67 60 57 
13c81     4A 46 4A 3E 
13c85     2B 27 30 35 
13c89     2F 1B EF C7 | 	byte	$6b, $67, $60, $57, $4a, $46, $4a, $3e, $2b, $27, $30, $35, $2f, $1b, $ef, $c7
13c8d     BD CA DC DA 
13c91     BF AF B8 C1 
13c95     BD BC C1 C7 
13c99     DE FD 07 F7 | 	byte	$bd, $ca, $dc, $da, $bf, $af, $b8, $c1, $bd, $bc, $c1, $c7, $de, $fd, $07, $f7
13c9d     E4 E2 F8 24 
13ca1     45 4C 44 37 
13ca5     32 3C 3F 30 
13ca9     27 2A 2E 2D | 	byte	$e4, $e2, $f8, $24, $45, $4c, $44, $37, $32, $3c, $3f, $30, $27, $2a, $2e, $2d
13cad     26 15 02 FD 
13cb1     08 11 12 05 
13cb5     EB D5 CF D5 
13cb9     DC DA C9 B6 | 	byte	$26, $15, $02, $fd, $08, $11, $12, $05, $eb, $d5, $cf, $d5, $dc, $da, $c9, $b6
13cbd     AE B3 C1 CF 
13cc1     D5 D0 C8 C5 
13cc5     CF E0 EE EE 
13cc9     E3 D7 D2 D5 | 	byte	$ae, $b3, $c1, $cf, $d5, $d0, $c8, $c5, $cf, $e0, $ee, $ee, $e3, $d7, $d2, $d5
13ccd     DE E3 E1 D9 
13cd1     D5 D6 DA DF 
13cd5     E8 EC EA E8 
13cd9     E8 EC F4 FE | 	byte	$de, $e3, $e1, $d9, $d5, $d6, $da, $df, $e8, $ec, $ea, $e8, $e8, $ec, $f4, $fe
13cdd     03 FE F5 F2 
13ce1     F1 F4 F6 F8 
13ce5     F8 FC 04 0B 
13ce9     0B 04 00 FF | 	byte	$03, $fe, $f5, $f2, $f1, $f4, $f6, $f8, $f8, $fc, $04, $0b, $0b, $04, $00, $ff
13ced     05 10 1A 1C 
13cf1     11 08 06 11 
13cf5     27 42 51 4D 
13cf9     3F 39 47 5E | 	byte	$05, $10, $1a, $1c, $11, $08, $06, $11, $27, $42, $51, $4d, $3f, $39, $47, $5e
13cfd     69 66 5F 56 
13d01     4B 48 49 3D 
13d05     2B 27 30 33 
13d09     2E 16 EC CA | 	byte	$69, $66, $5f, $56, $4b, $48, $49, $3d, $2b, $27, $30, $33, $2e, $16, $ec, $ca
13d0d     C2 CE DB D5 
13d11     BD B1 BC C5 
13d15     C2 C0 C4 CC 
13d19     E4 00 07 F8 | 	byte	$c2, $ce, $db, $d5, $bd, $b1, $bc, $c5, $c2, $c0, $c4, $cc, $e4, $00, $07, $f8
13d1d     E9 E8 00 28 
13d21     43 48 40 36 
13d25     35 3D 3E 31 
13d29     29 2B 2E 2C | 	byte	$e9, $e8, $00, $28, $43, $48, $40, $36, $35, $3d, $3e, $31, $29, $2b, $2e, $2c
13d2d     24 14 05 03 
13d31     0C 13 12 05 
13d35     EE DC D8 DF 
13d39     E4 DE CD B9 | 	byte	$24, $14, $05, $03, $0c, $13, $12, $05, $ee, $dc, $d8, $df, $e4, $de, $cd, $b9
13d3d     B2 B8 C8 D4 
13d41     D9 D2 C9 C8 
13d45     D4 E5 F1 F1 
13d49     E6 D9 D4 D8 | 	byte	$b2, $b8, $c8, $d4, $d9, $d2, $c9, $c8, $d4, $e5, $f1, $f1, $e6, $d9, $d4, $d8
13d4d     E1 E6 E2 D8 
13d51     D1 D1 D5 DE 
13d55     E8 EC E9 E5 
13d59     E5 E9 F4 FE | 	byte	$e1, $e6, $e2, $d8, $d1, $d1, $d5, $de, $e8, $ec, $e9, $e5, $e5, $e9, $f4, $fe
13d5d     03 FC F3 EE 
13d61     ED EF F2 F5 
13d65     F4 F4 FA 01 
13d69     02 FD FB FB | 	byte	$03, $fc, $f3, $ee, $ed, $ef, $f2, $f5, $f4, $f4, $fa, $01, $02, $fd, $fb, $fb
13d6d     01 0B 14 16 
13d71     0D 05 04 0F 
13d75     25 3D 4A 47 
13d79     3B 39 48 5D | 	byte	$01, $0b, $14, $16, $0d, $05, $04, $0f, $25, $3d, $4a, $47, $3b, $39, $48, $5d
13d7d     67 64 5E 55 
13d81     4C 49 48 3A 
13d85     2B 28 2F 32 
13d89     2A 11 EB CC | 	byte	$67, $64, $5e, $55, $4c, $49, $48, $3a, $2b, $28, $2f, $32, $2a, $11, $eb, $cc
13d8d     C6 D0 D8 D1 
13d91     BC B5 C0 C8 
13d95     C6 C4 C8 D2 
13d99     EC 03 07 F9 | 	byte	$c6, $d0, $d8, $d1, $bc, $b5, $c0, $c8, $c6, $c4, $c8, $d2, $ec, $03, $07, $f9
13d9d     ED EF 07 2A 
13da1     40 45 3D 35 
13da5     36 3D 3D 31 
13da9     2C 2D 2D 2A | 	byte	$ed, $ef, $07, $2a, $40, $45, $3d, $35, $36, $3d, $3d, $31, $2c, $2d, $2d, $2a
13dad     23 14 09 08 
13db1     10 14 12 05 
13db5     F1 E4 E2 E7 
13db9     EA E2 D0 BE | 	byte	$23, $14, $09, $08, $10, $14, $12, $05, $f1, $e4, $e2, $e7, $ea, $e2, $d0, $be
13dbd     B8 BF CF DA 
13dc1     DC D3 CB CC 
13dc5     D9 EB F6 F5 
13dc9     E8 DB D6 DC | 	byte	$b8, $bf, $cf, $da, $dc, $d3, $cb, $cc, $d9, $eb, $f6, $f5, $e8, $db, $d6, $dc
13dcd     E5 EA E4 D7 
13dd1     CE CD D4 DE 
13dd5     E8 EB E7 E2 
13dd9     E2 E7 F3 FE | 	byte	$e5, $ea, $e4, $d7, $ce, $cd, $d4, $de, $e8, $eb, $e7, $e2, $e2, $e7, $f3, $fe
13ddd     02 FA F0 EA 
13de1     E9 EB F0 F2 
13de5     EE ED F2 F8 
13de9     F9 F7 F6 F7 | 	byte	$02, $fa, $f0, $ea, $e9, $eb, $f0, $f2, $ee, $ed, $f2, $f8, $f9, $f7, $f6, $f7
13ded     FC 05 0E 0F 
13df1     08 02 02 0D 
13df5     22 38 43 41 
13df9     38 38 48 5D | 	byte	$fc, $05, $0e, $0f, $08, $02, $02, $0d, $22, $38, $43, $41, $38, $38, $48, $5d
13dfd     66 62 5C 53 
13e01     4C 4A 46 38 
13e05     29 28 2D 2F 
13e09     26 0D E9 CF | 	byte	$66, $62, $5c, $53, $4c, $4a, $46, $38, $29, $28, $2d, $2f, $26, $0d, $e9, $cf
13e0d     CA D2 D7 CE 
13e11     BC B8 C3 C9 
13e15     C8 C7 CB D9 
13e19     F0 05 06 FA | 	byte	$ca, $d2, $d7, $ce, $bc, $b8, $c3, $c9, $c8, $c7, $cb, $d9, $f0, $05, $06, $fa
13e1d     F1 F5 0D 2C 
13e21     3E 41 3B 35 
13e25     36 3E 3C 33 
13e29     2E 2E 2E 2A | 	byte	$f1, $f5, $0d, $2c, $3e, $41, $3b, $35, $36, $3e, $3c, $33, $2e, $2e, $2e, $2a
13e2d     22 15 0B 0D 
13e31     13 16 13 07 
13e35     F5 EA EA EF 
13e39     F0 E6 D4 C3 | 	byte	$22, $15, $0b, $0d, $13, $16, $13, $07, $f5, $ea, $ea, $ef, $f0, $e6, $d4, $c3
13e3d     BE C7 D6 DF 
13e41     DF D7 CF D0 
13e45     DE F0 F9 F7 
13e49     EA DE DA E0 | 	byte	$be, $c7, $d6, $df, $df, $d7, $cf, $d0, $de, $f0, $f9, $f7, $ea, $de, $da, $e0
13e4d     EA EE E6 D8 
13e51     CE CB D2 DD 
13e55     E7 EA E4 DF 
13e59     DE E6 F1 FE | 	byte	$ea, $ee, $e6, $d8, $ce, $cb, $d2, $dd, $e7, $ea, $e4, $df, $de, $e6, $f1, $fe
13e5d     01 F8 ED E7 
13e61     E5 E8 ED ED 
13e65     E9 E6 E9 EE 
13e69     F0 EF F0 F2 | 	byte	$01, $f8, $ed, $e7, $e5, $e8, $ed, $ed, $e9, $e6, $e9, $ee, $f0, $ef, $f0, $f2
13e6d     F7 00 08 08 
13e71     03 FE 00 0A 
13e75     1E 34 3E 3B 
13e79     35 37 48 5B | 	byte	$f7, $00, $08, $08, $03, $fe, $00, $0a, $1e, $34, $3e, $3b, $35, $37, $48, $5b
13e7d     63 60 5A 53 
13e81     4B 49 43 35 
13e85     28 26 2C 2C 
13e89     21 08 E7 D1 | 	byte	$63, $60, $5a, $53, $4b, $49, $43, $35, $28, $26, $2c, $2c, $21, $08, $e7, $d1
13e8d     CE D4 D7 CC 
13e91     BC BC C7 CC 
13e95     CC CB D1 DE 
13e99     F5 05 06 FB | 	byte	$ce, $d4, $d7, $cc, $bc, $bc, $c7, $cc, $cc, $cb, $d1, $de, $f5, $05, $06, $fb
13e9d     F4 FA 12 2D 
13ea1     3B 3D 37 33 
13ea5     37 3E 3C 34 
13ea9     30 30 2E 2A | 	byte	$f4, $fa, $12, $2d, $3b, $3d, $37, $33, $37, $3e, $3c, $34, $30, $30, $2e, $2a
13ead     22 16 10 12 
13eb1     16 18 13 08 
13eb5     FA F1 F2 F5 
13eb9     F5 EB D9 CA | 	byte	$22, $16, $10, $12, $16, $18, $13, $08, $fa, $f1, $f2, $f5, $f5, $eb, $d9, $ca
13ebd     C6 CF DC E4 
13ec1     E3 D9 D3 D6 
13ec5     E3 F4 FC F9 
13ec9     EC E2 DF E5 | 	byte	$c6, $cf, $dc, $e4, $e3, $d9, $d3, $d6, $e3, $f4, $fc, $f9, $ec, $e2, $df, $e5
13ecd     EE F1 E8 D8 
13ed1     CD CA D1 DD 
13ed5     E7 E9 E3 DD 
13ed9     DC E4 F1 FC | 	byte	$ee, $f1, $e8, $d8, $cd, $ca, $d1, $dd, $e7, $e9, $e3, $dd, $dc, $e4, $f1, $fc
13edd     FF F6 E9 E3 
13ee1     E2 E5 EA EA 
13ee5     E4 DF E1 E5 
13ee9     E8 E9 EB ED | 	byte	$ff, $f6, $e9, $e3, $e2, $e5, $ea, $ea, $e4, $df, $e1, $e5, $e8, $e9, $eb, $ed
13eed     F2 FA 01 03 
13ef1     FE FB FD 08 
13ef5     1B 2F 37 36 
13ef9     31 36 47 59 | 	byte	$f2, $fa, $01, $03, $fe, $fb, $fd, $08, $1b, $2f, $37, $36, $31, $36, $47, $59
13efd     5F 5C 57 50 
13f01     4B 48 40 31 
13f05     26 25 29 28 
13f09     1C 04 E6 D4 | 	byte	$5f, $5c, $57, $50, $4b, $48, $40, $31, $26, $25, $29, $28, $1c, $04, $e6, $d4
13f0d     D0 D5 D6 CB 
13f11     BF C0 CA CF 
13f15     CF CF D6 E4 
13f19     F9 07 06 FD | 	byte	$d0, $d5, $d6, $cb, $bf, $c0, $ca, $cf, $cf, $cf, $d6, $e4, $f9, $07, $06, $fd
13f1d     F9 00 16 2D 
13f21     38 3A 34 32 
13f25     37 3E 3D 36 
13f29     33 31 2E 2A | 	byte	$f9, $00, $16, $2d, $38, $3a, $34, $32, $37, $3e, $3d, $36, $33, $31, $2e, $2a
13f2d     22 18 14 16 
13f31     19 19 15 0A 
13f35     FE F9 FA FE 
13f39     FC F0 DF D1 | 	byte	$22, $18, $14, $16, $19, $19, $15, $0a, $fe, $f9, $fa, $fe, $fc, $f0, $df, $d1
13f3d     CE D7 E3 E9 
13f41     E5 DD D7 DB 
13f45     E9 F7 FD FA 
13f49     EF E6 E3 EA | 	byte	$ce, $d7, $e3, $e9, $e5, $dd, $d7, $db, $e9, $f7, $fd, $fa, $ef, $e6, $e3, $ea
13f4d     F2 F4 E9 DA 
13f51     CE CB D2 DE 
13f55     E7 E8 E0 DA 
13f59     DA E3 EF FA | 	byte	$f2, $f4, $e9, $da, $ce, $cb, $d2, $de, $e7, $e8, $e0, $da, $da, $e3, $ef, $fa
13f5d     FB F3 E7 E0 
13f61     DE E3 E6 E5 
13f65     DE D9 D9 DD 
13f69     E0 E2 E4 E7 | 	byte	$fb, $f3, $e7, $e0, $de, $e3, $e6, $e5, $de, $d9, $d9, $dd, $e0, $e2, $e4, $e7
13f6d     EC F4 FA FC 
13f71     F9 F6 FA 05 
13f75     18 2A 31 31 
13f79     2E 35 46 58 | 	byte	$ec, $f4, $fa, $fc, $f9, $f6, $fa, $05, $18, $2a, $31, $31, $2e, $35, $46, $58
13f7d     5D 59 54 4E 
13f81     49 45 3C 2D 
13f85     24 23 27 24 
13f89     17 00 E4 D6 | 	byte	$5d, $59, $54, $4e, $49, $45, $3c, $2d, $24, $23, $27, $24, $17, $00, $e4, $d6
13f8d     D2 D5 D4 C9 
13f91     C0 C3 CD D1 
13f95     D2 D4 DB EA 
13f99     FD 08 06 FE | 	byte	$d2, $d5, $d4, $c9, $c0, $c3, $cd, $d1, $d2, $d4, $db, $ea, $fd, $08, $06, $fe
13f9d     FB 05 18 2C 
13fa1     35 36 32 30 
13fa5     38 3D 3D 38 
13fa9     34 31 2E 2B | 	byte	$fb, $05, $18, $2c, $35, $36, $32, $30, $38, $3d, $3d, $38, $34, $31, $2e, $2b
13fad     23 1B 18 19 
13fb1     1B 1A 15 0D 
13fb5     04 00 02 03 
13fb9     00 F5 E6 D8 | 	byte	$23, $1b, $18, $19, $1b, $1a, $15, $0d, $04, $00, $02, $03, $00, $f5, $e6, $d8
13fbd     D6 DF E9 ED 
13fc1     EA E1 DC E1 
13fc5     EE FB 00 FC 
13fc9     F2 E9 E7 EE | 	byte	$d6, $df, $e9, $ed, $ea, $e1, $dc, $e1, $ee, $fb, $00, $fc, $f2, $e9, $e7, $ee
13fcd     F4 F6 EB DC 
13fd1     D0 CD D4 DF 
13fd5     E6 E6 DF D9 
13fd9     D8 E1 ED F7 | 	byte	$f4, $f6, $eb, $dc, $d0, $cd, $d4, $df, $e6, $e6, $df, $d9, $d8, $e1, $ed, $f7
13fdd     F7 EF E3 DD 
13fe1     DC E0 E3 E1 
13fe5     D9 D4 D2 D6 
13fe9     D9 DC DF E2 | 	byte	$f7, $ef, $e3, $dd, $dc, $e0, $e3, $e1, $d9, $d4, $d2, $d6, $d9, $dc, $df, $e2
13fed     E7 EE F5 F6 
13ff1     F4 F3 F7 03 
13ff5     15 25 2D 2D 
13ff9     2C 34 45 54 | 	byte	$e7, $ee, $f5, $f6, $f4, $f3, $f7, $03, $15, $25, $2d, $2d, $2c, $34, $45, $54
13ffd     59 56 51 4B 
14001     47 42 38 2A 
14005     21 20 23 20 
14009     13 FB E4 D7 | 	byte	$59, $56, $51, $4b, $47, $42, $38, $2a, $21, $20, $23, $20, $13, $fb, $e4, $d7
1400d     D4 D6 D3 CA 
14011     C2 C7 CF D4 
14015     D5 D8 E0 EF 
14019     00 08 07 00 | 	byte	$d4, $d6, $d3, $ca, $c2, $c7, $cf, $d4, $d5, $d8, $e0, $ef, $00, $08, $07, $00
1401d     FF 08 1B 2C 
14021     33 32 30 30 
14025     37 3E 3E 39 
14029     35 32 2F 2B | 	byte	$ff, $08, $1b, $2c, $33, $32, $30, $30, $37, $3e, $3e, $39, $35, $32, $2f, $2b
1402d     24 1E 1B 1C 
14031     1D 1B 17 10 
14035     09 05 07 08 
14039     05 FA EC E1 | 	byte	$24, $1e, $1b, $1c, $1d, $1b, $17, $10, $09, $05, $07, $08, $05, $fa, $ec, $e1
1403d     DF E7 EF F2 
14041     ED E5 E1 E6 
14045     F3 FC 01 FD 
14049     F4 ED EC F2 | 	byte	$df, $e7, $ef, $f2, $ed, $e5, $e1, $e6, $f3, $fc, $01, $fd, $f4, $ed, $ec, $f2
1404d     F7 F7 EE DF 
14051     D3 D0 D7 E1 
14055     E6 E5 DE D8 
14059     D8 E0 EC F4 | 	byte	$f7, $f7, $ee, $df, $d3, $d0, $d7, $e1, $e6, $e5, $de, $d8, $d8, $e0, $ec, $f4
1405d     F5 EC E1 DB 
14061     DA DE E1 DD 
14065     D5 CE CC CF 
14069     D3 D6 DA DD | 	byte	$f5, $ec, $e1, $db, $da, $de, $e1, $dd, $d5, $ce, $cc, $cf, $d3, $d6, $da, $dd
1406d     E2 E9 EF F1 
14071     F0 F0 F5 01 
14075     12 21 27 28 
14079     29 33 44 51 | 	byte	$e2, $e9, $ef, $f1, $f0, $f0, $f5, $01, $12, $21, $27, $28, $29, $33, $44, $51
1407d     55 52 4D 48 
14081     44 3F 33 26 
14085     1F 1E 1F 1B 
14089     0E F8 E3 D8 | 	byte	$55, $52, $4d, $48, $44, $3f, $33, $26, $1f, $1e, $1f, $1b, $0e, $f8, $e3, $d8
1408d     D6 D7 D3 C9 
14091     C4 C9 D1 D6 
14095     D8 DB E4 F3 
14099     02 08 06 01 | 	byte	$d6, $d7, $d3, $c9, $c4, $c9, $d1, $d6, $d8, $db, $e4, $f3, $02, $08, $06, $01
1409d     02 0C 1C 2A 
140a1     30 30 2D 30 
140a5     37 3D 3E 3A 
140a9     36 33 2F 2C | 	byte	$02, $0c, $1c, $2a, $30, $30, $2d, $30, $37, $3d, $3e, $3a, $36, $33, $2f, $2c
140ad     26 21 1F 1F 
140b1     1E 1C 19 13 
140b5     0D 0B 0B 0C 
140b9     08 FF F3 EA | 	byte	$26, $21, $1f, $1f, $1e, $1c, $19, $13, $0d, $0b, $0b, $0c, $08, $ff, $f3, $ea
140bd     E8 EE F4 F6 
140c1     F1 E9 E6 EC 
140c5     F6 FF 01 FE 
140c9     F6 F0 F0 F5 | 	byte	$e8, $ee, $f4, $f6, $f1, $e9, $e6, $ec, $f6, $ff, $01, $fe, $f6, $f0, $f0, $f5
140cd     FA F8 EF E2 
140d1     D7 D4 D9 E2 
140d5     E6 E4 DD D8 
140d9     D8 E0 EB F2 | 	byte	$fa, $f8, $ef, $e2, $d7, $d4, $d9, $e2, $e6, $e4, $dd, $d8, $d8, $e0, $eb, $f2
140dd     F2 E9 E0 DA 
140e1     D9 DC DE DA 
140e5     D0 C9 C7 CA 
140e9     CE D2 D5 D7 | 	byte	$f2, $e9, $e0, $da, $d9, $dc, $de, $da, $d0, $c9, $c7, $ca, $ce, $d2, $d5, $d7
140ed     DD E4 EA EC 
140f1     EC ED F3 FF 
140f5     0F 1C 23 24 
140f9     28 33 43 4F | 	byte	$dd, $e4, $ea, $ec, $ec, $ed, $f3, $ff, $0f, $1c, $23, $24, $28, $33, $43, $4f
140fd     52 4E 4A 46 
14101     42 3B 2F 23 
14105     1B 1B 1C 17 
14109     08 F5 E3 DA | 	byte	$52, $4e, $4a, $46, $42, $3b, $2f, $23, $1b, $1b, $1c, $17, $08, $f5, $e3, $da
1410d     D8 D8 D2 CA 
14111     C7 CC D4 D8 
14115     DA DF E8 F7 
14119     04 09 06 02 | 	byte	$d8, $d8, $d2, $ca, $c7, $cc, $d4, $d8, $da, $df, $e8, $f7, $04, $09, $06, $02
1411d     04 0E 1E 29 
14121     2D 2C 2A 2E 
14125     36 3D 3E 3A 
14129     37 33 30 2C | 	byte	$04, $0e, $1e, $29, $2d, $2c, $2a, $2e, $36, $3d, $3e, $3a, $37, $33, $30, $2c
1412d     29 24 21 21 
14131     1F 1C 1A 15 
14135     11 0F 0F 0F 
14139     0C 04 F9 F1 | 	byte	$29, $24, $21, $21, $1f, $1c, $1a, $15, $11, $0f, $0f, $0f, $0c, $04, $f9, $f1
1413d     F1 F5 FA FA 
14141     F4 EF EC F1 
14145     FA 00 02 FE 
14149     F8 F3 F3 F8 | 	byte	$f1, $f5, $fa, $fa, $f4, $ef, $ec, $f1, $fa, $00, $02, $fe, $f8, $f3, $f3, $f8
1414d     FB FA F1 E4 
14151     DA D8 DC E3 
14155     E7 E4 DC D8 
14159     D8 DF E9 EF | 	byte	$fb, $fa, $f1, $e4, $da, $d8, $dc, $e3, $e7, $e4, $dc, $d8, $d8, $df, $e9, $ef
1415d     EE E7 DD D8 
14161     D8 DA DC D7 
14165     CD C6 C3 C5 
14169     C9 CD D0 D4 | 	byte	$ee, $e7, $dd, $d8, $d8, $da, $dc, $d7, $cd, $c6, $c3, $c5, $c9, $cd, $d0, $d4
1416d     D9 E1 E5 E8 
14171     E9 EB F1 FD 
14175     0D 1A 1F 21 
14179     26 32 41 4B | 	byte	$d9, $e1, $e5, $e8, $e9, $eb, $f1, $fd, $0d, $1a, $1f, $21, $26, $32, $41, $4b
1417d     4E 4B 47 43 
14181     3E 36 2A 1F 
14185     19 18 18 12 
14189     04 F1 E2 DB | 	byte	$4e, $4b, $47, $43, $3e, $36, $2a, $1f, $19, $18, $18, $12, $04, $f1, $e2, $db
1418d     D9 D8 D2 CB 
14191     C9 CE D6 DA 
14195     DD E3 EC FA 
14199     04 08 05 03 | 	byte	$d9, $d8, $d2, $cb, $c9, $ce, $d6, $da, $dd, $e3, $ec, $fa, $04, $08, $05, $03
1419d     06 10 1D 27 
141a1     2A 29 28 2D 
141a5     36 3D 3E 3B 
141a9     37 33 30 2E | 	byte	$06, $10, $1d, $27, $2a, $29, $28, $2d, $36, $3d, $3e, $3b, $37, $33, $30, $2e
141ad     2A 26 24 23 
141b1     20 1D 1B 18 
141b5     15 13 12 11 
141b9     0E 08 00 FA | 	byte	$2a, $26, $24, $23, $20, $1d, $1b, $18, $15, $13, $12, $11, $0e, $08, $00, $fa
141bd     F8 FC FE FE 
141c1     F9 F4 F2 F6 
141c5     FD 01 02 FF 
141c9     FA F7 F7 FA | 	byte	$f8, $fc, $fe, $fe, $f9, $f4, $f2, $f6, $fd, $01, $02, $ff, $fa, $f7, $f7, $fa
141cd     FC FA F3 E8 
141d1     DF DC E0 E5 
141d5     E7 E4 DC D8 
141d9     D8 E0 E8 ED | 	byte	$fc, $fa, $f3, $e8, $df, $dc, $e0, $e5, $e7, $e4, $dc, $d8, $d8, $e0, $e8, $ed
141dd     EC E4 DC D7 
141e1     D7 D9 DA D4 
141e5     CA C2 BF C2 
141e9     C6 C9 CC D0 | 	byte	$ec, $e4, $dc, $d7, $d7, $d9, $da, $d4, $ca, $c2, $bf, $c2, $c6, $c9, $cc, $d0
141ed     D6 DD E2 E5 
141f1     E6 E9 F1 FC 
141f5     0C 17 1C 1F 
141f9     25 31 3F 49 | 	byte	$d6, $dd, $e2, $e5, $e6, $e9, $f1, $fc, $0c, $17, $1c, $1f, $25, $31, $3f, $49
141fd     4A 48 43 3F 
14201     3A 32 26 1B 
14205     16 15 14 0D 
14209     FF EF E2 DC | 	byte	$4a, $48, $43, $3f, $3a, $32, $26, $1b, $16, $15, $14, $0d, $ff, $ef, $e2, $dc
1420d     DA D8 D3 CC 
14211     CB D0 D7 DB 
14215     E0 E6 EF FC 
14219     05 08 05 04 | 	byte	$da, $d8, $d3, $cc, $cb, $d0, $d7, $db, $e0, $e6, $ef, $fc, $05, $08, $05, $04
1421d     07 11 1D 25 
14221     26 25 26 2C 
14225     34 3B 3D 3A 
14229     36 33 30 2F | 	byte	$07, $11, $1d, $25, $26, $25, $26, $2c, $34, $3b, $3d, $3a, $36, $33, $30, $2f
1422d     2C 29 27 24 
14231     20 1E 1C 1A 
14235     17 16 14 12 
14239     11 0C 06 01 | 	byte	$2c, $29, $27, $24, $20, $1e, $1c, $1a, $17, $16, $14, $12, $11, $0c, $06, $01
1423d     00 02 03 02 
14241     FD F9 F7 FA 
14245     FF 02 02 00 
14249     FC F9 F9 FB | 	byte	$00, $02, $03, $02, $fd, $f9, $f7, $fa, $ff, $02, $02, $00, $fc, $f9, $f9, $fb
1424d     FC FB F4 EC 
14251     E4 E1 E4 E7 
14255     E8 E4 DD D9 
14259     DA E0 E7 EB | 	byte	$fc, $fb, $f4, $ec, $e4, $e1, $e4, $e7, $e8, $e4, $dd, $d9, $da, $e0, $e7, $eb
1425d     EA E2 DB D7 
14261     D6 D9 D8 D2 
14265     C7 BF BD BE 
14269     C2 C6 C9 CD | 	byte	$ea, $e2, $db, $d7, $d6, $d9, $d8, $d2, $c7, $bf, $bd, $be, $c2, $c6, $c9, $cd
1426d     D3 DA E0 E2 
14271     E4 E7 EF FC 
14275     0A 15 1A 1E 
14279     24 30 3E 46 | 	byte	$d3, $da, $e0, $e2, $e4, $e7, $ef, $fc, $0a, $15, $1a, $1e, $24, $30, $3e, $46
1427d     47 44 40 3B 
14281     36 2D 22 17 
14285     13 12 10 09 
14289     FC EC E1 DC | 	byte	$47, $44, $40, $3b, $36, $2d, $22, $17, $13, $12, $10, $09, $fc, $ec, $e1, $dc
1428d     DB D9 D3 CD 
14291     CD D3 D9 DD 
14295     E1 E8 F2 FE 
14299     06 07 06 04 | 	byte	$db, $d9, $d3, $cd, $cd, $d3, $d9, $dd, $e1, $e8, $f2, $fe, $06, $07, $06, $04
1429d     08 11 1C 22 
142a1     24 22 23 2A 
142a5     33 39 3C 39 
142a9     35 32 31 2F | 	byte	$08, $11, $1c, $22, $24, $22, $23, $2a, $33, $39, $3c, $39, $35, $32, $31, $2f
142ad     2D 2A 27 24 
142b1     1F 1E 1D 1B 
142b5     1A 18 15 13 
142b9     11 10 0C 07 | 	byte	$2d, $2a, $27, $24, $1f, $1e, $1d, $1b, $1a, $18, $15, $13, $11, $10, $0c, $07
142bd     06 07 07 05 
142c1     01 FD FC FE 
142c5     01 03 03 01 
142c9     FD FC FB FD | 	byte	$06, $07, $07, $05, $01, $fd, $fc, $fe, $01, $03, $03, $01, $fd, $fc, $fb, $fd
142cd     FD FB F6 EF 
142d1     E8 E6 E7 EA 
142d5     EA E6 E0 DC 
142d9     DC E1 E7 EB | 	byte	$fd, $fb, $f6, $ef, $e8, $e6, $e7, $ea, $ea, $e6, $e0, $dc, $dc, $e1, $e7, $eb
142dd     E8 E1 DB D7 
142e1     D7 D8 D8 D0 
142e5     C6 BD BB BC 
142e9     C0 C3 C6 CB | 	byte	$e8, $e1, $db, $d7, $d7, $d8, $d8, $d0, $c6, $bd, $bb, $bc, $c0, $c3, $c6, $cb
142ed     D1 D8 DD E0 
142f1     E3 E7 F0 FC 
142f5     08 13 18 1C 
142f9     24 2F 3C 43 | 	byte	$d1, $d8, $dd, $e0, $e3, $e7, $f0, $fc, $08, $13, $18, $1c, $24, $2f, $3c, $43
142fd     44 40 3C 38 
14301     32 28 1D 14 
14305     10 0F 0C 05 
14309     F8 EB E1 DE | 	byte	$44, $40, $3c, $38, $32, $28, $1d, $14, $10, $0f, $0c, $05, $f8, $eb, $e1, $de
1430d     DC D9 D3 D0 
14311     CF D5 DA DE 
14315     E3 EA F4 FE 
14319     05 06 04 04 | 	byte	$dc, $d9, $d3, $d0, $cf, $d5, $da, $de, $e3, $ea, $f4, $fe, $05, $06, $04, $04
1431d     08 12 1A 20 
14321     20 1F 21 28 
14325     31 37 3A 37 
14329     34 31 30 30 | 	byte	$08, $12, $1a, $20, $20, $1f, $21, $28, $31, $37, $3a, $37, $34, $31, $30, $30
1432d     2F 2B 27 22 
14331     1F 1D 1D 1C 
14335     1B 18 15 12 
14339     12 12 10 0D | 	byte	$2f, $2b, $27, $22, $1f, $1d, $1d, $1c, $1b, $18, $15, $12, $12, $12, $10, $0d
1433d     0C 0B 0A 08 
14341     06 03 01 02 
14345     04 04 03 02 
14349     00 FE FE FE | 	byte	$0c, $0b, $0a, $08, $06, $03, $01, $02, $04, $04, $03, $02, $00, $fe, $fe, $fe
1434d     FE FD F9 F3 
14351     ED EB EC ED 
14355     EC E8 E2 DE 
14359     DF E3 E8 EA | 	byte	$fe, $fd, $f9, $f3, $ed, $eb, $ec, $ed, $ec, $e8, $e2, $de, $df, $e3, $e8, $ea
1435d     E7 E1 DB D7 
14361     D7 D8 D7 CF 
14365     C5 BD BA BB 
14369     BE C1 C5 C9 | 	byte	$e7, $e1, $db, $d7, $d7, $d8, $d7, $cf, $c5, $bd, $ba, $bb, $be, $c1, $c5, $c9
1436d     CF D6 DB DF 
14371     E2 E6 F0 FC 
14375     08 11 16 1B 
14379     24 2F 3A 3F | 	byte	$cf, $d6, $db, $df, $e2, $e6, $f0, $fc, $08, $11, $16, $1b, $24, $2f, $3a, $3f
1437d     40 3C 39 34 
14381     2D 23 19 11 
14385     0D 0C 09 00 
14389     F4 E8 E1 DE | 	byte	$40, $3c, $39, $34, $2d, $23, $19, $11, $0d, $0c, $09, $00, $f4, $e8, $e1, $de
1438d     DC D9 D4 D0 
14391     D1 D6 DB DF 
14395     E5 EC F5 FF 
14399     04 05 04 03 | 	byte	$dc, $d9, $d4, $d0, $d1, $d6, $db, $df, $e5, $ec, $f5, $ff, $04, $05, $04, $03
1439d     08 11 19 1C 
143a1     1D 1B 1E 25 
143a5     2F 35 37 36 
143a9     32 30 30 30 | 	byte	$08, $11, $19, $1c, $1d, $1b, $1e, $25, $2f, $35, $37, $36, $32, $30, $30, $30
143ad     2F 2C 27 23 
143b1     1F 1D 1D 1D 
143b5     1B 18 14 12 
143b9     12 14 14 12 | 	byte	$2f, $2c, $27, $23, $1f, $1d, $1d, $1d, $1b, $18, $14, $12, $12, $14, $14, $12
143bd     10 0E 0C 0B 
143c1     0A 07 06 06 
143c5     06 05 03 03 
143c9     02 00 00 FF | 	byte	$10, $0e, $0c, $0b, $0a, $07, $06, $06, $06, $05, $03, $03, $02, $00, $00, $ff
143cd     FF FE FB F7 
143d1     F3 F0 F0 F0 
143d5     EF EA E4 E1 
143d9     E1 E5 E9 EA | 	byte	$ff, $fe, $fb, $f7, $f3, $f0, $f0, $f0, $ef, $ea, $e4, $e1, $e1, $e5, $e9, $ea
143dd     E8 E2 DC D9 
143e1     D8 D9 D6 CE 
143e5     C4 BC B9 BA 
143e9     BC C0 C4 C8 | 	byte	$e8, $e2, $dc, $d9, $d8, $d9, $d6, $ce, $c4, $bc, $b9, $ba, $bc, $c0, $c4, $c8
143ed     CE D5 DB DE 
143f1     E1 E8 F0 FC 
143f5     07 10 15 1A 
143f9     24 2E 39 3D | 	byte	$ce, $d5, $db, $de, $e1, $e8, $f0, $fc, $07, $10, $15, $1a, $24, $2e, $39, $3d
143fd     3D 3A 35 30 
14401     29 1F 15 0E 
14405     0A 09 04 FC 
14409     F1 E7 E1 DE | 	byte	$3d, $3a, $35, $30, $29, $1f, $15, $0e, $0a, $09, $04, $fc, $f1, $e7, $e1, $de
1440d     DC D9 D4 D1 
14411     D3 D7 DC E0 
14415     E5 EC F6 FF 
14419     03 04 02 03 | 	byte	$dc, $d9, $d4, $d1, $d3, $d7, $dc, $e0, $e5, $ec, $f6, $ff, $03, $04, $02, $03
1441d     08 0F 16 1A 
14421     1A 18 1B 23 
14425     2C 33 34 33 
14429     2F 2E 2E 2F | 	byte	$08, $0f, $16, $1a, $1a, $18, $1b, $23, $2c, $33, $34, $33, $2f, $2e, $2e, $2f
1442d     2F 2B 26 21 
14431     1C 1C 1C 1C 
14435     1A 16 13 11 
14439     13 15 16 15 | 	byte	$2f, $2b, $26, $21, $1c, $1c, $1c, $1c, $1a, $16, $13, $11, $13, $15, $16, $15
1443d     13 10 0F 0E 
14441     0D 0B 0A 09 
14445     08 05 05 04 
14449     04 03 02 01 | 	byte	$13, $10, $0f, $0e, $0d, $0b, $0a, $09, $08, $05, $05, $04, $04, $03, $02, $01
1444d     00 FF FF FC 
14451     F7 F6 F5 F4 
14455     F2 EE E8 E5 
14459     E5 E8 EB EB | 	byte	$00, $ff, $ff, $fc, $f7, $f6, $f5, $f4, $f2, $ee, $e8, $e5, $e5, $e8, $eb, $eb
1445d     E8 E2 DD DB 
14461     D9 D9 D6 CE 
14465     C5 BD BA BA 
14469     BC BF C3 C8 | 	byte	$e8, $e2, $dd, $db, $d9, $d9, $d6, $ce, $c5, $bd, $ba, $ba, $bc, $bf, $c3, $c8
1446d     CE D5 DB DE 
14471     E2 E9 F2 FD 
14475     08 10 15 1A 
14479     23 2D 36 3A | 	byte	$ce, $d5, $db, $de, $e2, $e9, $f2, $fd, $08, $10, $15, $1a, $23, $2d, $36, $3a
1447d     3A 36 32 2C 
14481     25 1A 11 0A 
14485     08 05 01 F9 
14489     EF E6 E1 DF | 	byte	$3a, $36, $32, $2c, $25, $1a, $11, $0a, $08, $05, $01, $f9, $ef, $e6, $e1, $df
1448d     DE DA D5 D2 
14491     D3 D7 DC E1 
14495     E6 ED F6 FE 
14499     01 02 01 02 | 	byte	$de, $da, $d5, $d2, $d3, $d7, $dc, $e1, $e6, $ed, $f6, $fe, $01, $02, $01, $02
1449d     07 0F 14 16 
144a1     15 14 17 1F 
144a5     29 2F 31 2F 
144a9     2D 2C 2E 2F | 	byte	$07, $0f, $14, $16, $15, $14, $17, $1f, $29, $2f, $31, $2f, $2d, $2c, $2e, $2f
144ad     2E 2C 26 1F 
144b1     1C 1B 1C 1C 
144b5     19 15 11 10 
144b9     12 15 17 17 | 	byte	$2e, $2c, $26, $1f, $1c, $1b, $1c, $1c, $19, $15, $11, $10, $12, $15, $17, $17
144bd     14 13 11 11 
144c1     10 0F 0D 0C 
144c5     09 07 06 06 
144c9     06 05 03 02 | 	byte	$14, $13, $11, $11, $10, $0f, $0d, $0c, $09, $07, $06, $06, $06, $05, $03, $02
144cd     01 01 01 00 
144d1     FD FA F9 F9 
144d5     F6 F1 ED E9 
144d9     E9 EB EC ED | 	byte	$01, $01, $01, $00, $fd, $fa, $f9, $f9, $f6, $f1, $ed, $e9, $e9, $eb, $ec, $ed
144dd     E9 E3 DF DC 
144e1     DB DA D6 CE 
144e5     C5 BD BB BB 
144e9     BC C0 C3 C8 | 	byte	$e9, $e3, $df, $dc, $db, $da, $d6, $ce, $c5, $bd, $bb, $bb, $bc, $c0, $c3, $c8
144ed     CF D6 DB DF 
144f1     E4 EA F3 FF 
144f5     08 0F 15 1B 
144f9     23 2D 34 37 | 	byte	$cf, $d6, $db, $df, $e4, $ea, $f3, $ff, $08, $0f, $15, $1b, $23, $2d, $34, $37
144fd     37 33 2E 28 
14501     20 17 0E 08 
14505     05 02 FD F5 
14509     EC E5 E1 E0 | 	byte	$37, $33, $2e, $28, $20, $17, $0e, $08, $05, $02, $fd, $f5, $ec, $e5, $e1, $e0
1450d     DD DA D5 D3 
14511     D4 D8 DD E0 
14515     E6 ED F5 FC 
14519     FF FF FF 00 | 	byte	$dd, $da, $d5, $d3, $d4, $d8, $dd, $e0, $e6, $ed, $f5, $fc, $ff, $ff, $ff, $00
1451d     06 0C 11 12 
14521     12 11 14 1B 
14525     25 2A 2D 2B 
14529     2A 2A 2B 2D | 	byte	$06, $0c, $11, $12, $12, $11, $14, $1b, $25, $2a, $2d, $2b, $2a, $2a, $2b, $2d
1452d     2D 29 24 1D 
14531     1B 1A 1B 1A 
14535     18 13 0F 0F 
14539     11 16 18 19 | 	byte	$2d, $29, $24, $1d, $1b, $1a, $1b, $1a, $18, $13, $0f, $0f, $11, $16, $18, $19
1453d     17 15 12 12 
14541     13 12 11 0E 
14545     0B 08 07 07 
14549     08 07 06 03 | 	byte	$17, $15, $12, $12, $13, $12, $11, $0e, $0b, $08, $07, $07, $08, $07, $06, $03
1454d     03 03 04 04 
14551     02 00 FE FD 
14555     FA F6 F1 EE 
14559     ED EE EF EE | 	byte	$03, $03, $04, $04, $02, $00, $fe, $fd, $fa, $f6, $f1, $ee, $ed, $ee, $ef, $ee
1455d     EA E6 E1 DF 
14561     DD DC D7 CF 
14565     C6 BF BC BB 
14569     BE C0 C3 C9 | 	byte	$ea, $e6, $e1, $df, $dd, $dc, $d7, $cf, $c6, $bf, $bc, $bb, $be, $c0, $c3, $c9
1456d     CF D6 DC E0 
14571     E5 EC F6 00 
14575     09 0F 15 1B 
14579     23 2C 32 34 | 	byte	$cf, $d6, $dc, $e0, $e5, $ec, $f6, $00, $09, $0f, $15, $1b, $23, $2c, $32, $34
1457d     33 30 2B 25 
14581     1D 13 0B 05 
14585     02 FE FA F2 
14589     EA E4 E2 DF | 	byte	$33, $30, $2b, $25, $1d, $13, $0b, $05, $02, $fe, $fa, $f2, $ea, $e4, $e2, $df
1458d     DE D9 D6 D4 
14591     D5 D9 DC E1 
14595     E6 ED F4 FA 
14599     FD FE FD FF | 	byte	$de, $d9, $d6, $d4, $d5, $d9, $dc, $e1, $e6, $ed, $f4, $fa, $fd, $fe, $fd, $ff
1459d     04 0A 0D 0F 
145a1     0D 0D 10 18 
145a5     20 26 28 27 
145a9     26 26 29 2B | 	byte	$04, $0a, $0d, $0f, $0d, $0d, $10, $18, $20, $26, $28, $27, $26, $26, $29, $2b
145ad     2B 28 22 1D 
145b1     19 18 1A 19 
145b5     16 11 0E 0D 
145b9     10 15 19 19 | 	byte	$2b, $28, $22, $1d, $19, $18, $1a, $19, $16, $11, $0e, $0d, $10, $15, $19, $19
145bd     17 15 14 14 
145c1     16 16 13 11 
145c5     0D 0A 09 0A 
145c9     0A 09 07 05 | 	byte	$17, $15, $14, $14, $16, $16, $13, $11, $0d, $0a, $09, $0a, $0a, $09, $07, $05
145cd     04 06 07 07 
145d1     06 05 03 02 
145d5     FF FA F5 F2 
145d9     F1 F2 F2 F1 | 	byte	$04, $06, $07, $07, $06, $05, $03, $02, $ff, $fa, $f5, $f2, $f1, $f2, $f2, $f1
145dd     ED E7 E3 E0 
145e1     DF DD D8 D0 
145e5     C8 C1 BD BD 
145e9     BE C1 C4 CA | 	byte	$ed, $e7, $e3, $e0, $df, $dd, $d8, $d0, $c8, $c1, $bd, $bd, $be, $c1, $c4, $ca
145ed     D0 D7 DD E2 
145f1     E7 EF F8 02 
145f5     09 10 15 1B 
145f9     23 2B 31 32 | 	byte	$d0, $d7, $dd, $e2, $e7, $ef, $f8, $02, $09, $10, $15, $1b, $23, $2b, $31, $32
145fd     31 2D 27 21 
14601     19 0F 08 02 
14605     FF FC F7 F0 
14609     E9 E4 E1 E0 | 	byte	$31, $2d, $27, $21, $19, $0f, $08, $02, $ff, $fc, $f7, $f0, $e9, $e4, $e1, $e0
1460d     DE DA D7 D4 
14611     D6 D8 DC E0 
14615     E6 EC F3 F8 
14619     FB FB FB FD | 	byte	$de, $da, $d7, $d4, $d6, $d8, $dc, $e0, $e6, $ec, $f3, $f8, $fb, $fb, $fb, $fd
1461d     03 07 0A 0A 
14621     09 09 0E 15 
14625     1C 21 23 23 
14629     22 23 26 29 | 	byte	$03, $07, $0a, $0a, $09, $09, $0e, $15, $1c, $21, $23, $23, $22, $23, $26, $29
1462d     29 25 1F 19 
14631     17 17 18 18 
14635     14 0F 0C 0C 
14639     10 15 18 18 | 	byte	$29, $25, $1f, $19, $17, $17, $18, $18, $14, $0f, $0c, $0c, $10, $15, $18, $18
1463d     17 15 15 17 
14641     18 18 16 13 
14645     0E 0C 0C 0C 
14649     0D 0B 0A 08 | 	byte	$17, $15, $15, $17, $18, $18, $16, $13, $0e, $0c, $0c, $0c, $0d, $0b, $0a, $08
1464d     07 09 0B 0C 
14651     0C 0A 09 07 
14655     04 00 FB F7 
14659     F6 F5 F5 F3 | 	byte	$07, $09, $0b, $0c, $0c, $0a, $09, $07, $04, $00, $fb, $f7, $f6, $f5, $f5, $f3
1465d     EF EA E5 E3 
14661     E1 DE D9 D1 
14665     C9 C2 BE BF 
14669     BF C2 C6 CB | 	byte	$ef, $ea, $e5, $e3, $e1, $de, $d9, $d1, $c9, $c2, $be, $bf, $bf, $c2, $c6, $cb
1466d     D2 DA DF E3 
14671     E9 F0 FA 03 
14675     0A 11 16 1B 
14679     23 2A 2E 2F | 	byte	$d2, $da, $df, $e3, $e9, $f0, $fa, $03, $0a, $11, $16, $1b, $23, $2a, $2e, $2f
1467d     2E 2A 24 1E 
14681     15 0C 05 00 
14685     FD F9 F4 EE 
14689     E8 E3 E1 E0 | 	byte	$2e, $2a, $24, $1e, $15, $0c, $05, $00, $fd, $f9, $f4, $ee, $e8, $e3, $e1, $e0
1468d     DE DB D7 D5 
14691     D6 D9 DC E0 
14695     E5 EB F2 F6 
14699     F8 F8 F9 FC | 	byte	$de, $db, $d7, $d5, $d6, $d9, $dc, $e0, $e5, $eb, $f2, $f6, $f8, $f8, $f9, $fc
1469d     FF 04 07 07 
146a1     06 06 0A 11 
146a5     17 1C 1E 1E 
146a9     1E 20 23 26 | 	byte	$ff, $04, $07, $07, $06, $06, $0a, $11, $17, $1c, $1e, $1e, $1e, $20, $23, $26
146ad     26 22 1C 18 
146b1     15 15 16 15 
146b5     11 0D 0A 0A 
146b9     0F 13 16 18 | 	byte	$26, $22, $1c, $18, $15, $15, $16, $15, $11, $0d, $0a, $0a, $0f, $13, $16, $18
146bd     17 15 16 17 
146c1     1A 1A 18 14 
146c5     10 0E 0E 0E 
146c9     0F 0E 0C 0A | 	byte	$17, $15, $16, $17, $1a, $1a, $18, $14, $10, $0e, $0e, $0e, $0f, $0e, $0c, $0a
146cd     0A 0B 0E 10 
146d1     0F 0F 0D 0B 
146d5     08 05 00 FD 
146d9     FA FA F9 F6 | 	byte	$0a, $0b, $0e, $10, $0f, $0f, $0d, $0b, $08, $05, $00, $fd, $fa, $fa, $f9, $f6
146dd     F2 ED E9 E6 
146e1     E3 E0 DB D2 
146e5     CB C4 C1 C1 
146e9     C2 C4 C7 CD | 	byte	$f2, $ed, $e9, $e6, $e3, $e0, $db, $d2, $cb, $c4, $c1, $c1, $c2, $c4, $c7, $cd
146ed     D5 DC E1 E6 
146f1     EC F4 FC 05 
146f5     0D 12 16 1C 
146f9     23 29 2C 2D | 	byte	$d5, $dc, $e1, $e6, $ec, $f4, $fc, $05, $0d, $12, $16, $1c, $23, $29, $2c, $2d
146fd     2B 27 22 1A 
14701     12 09 03 FD 
14705     FB F7 F2 EC 
14709     E6 E3 E1 E1 | 	byte	$2b, $27, $22, $1a, $12, $09, $03, $fd, $fb, $f7, $f2, $ec, $e6, $e3, $e1, $e1
1470d     DF DB D7 D6 
14711     D6 D8 DC DF 
14715     E4 E9 EF F3 
14719     F5 F6 F7 F9 | 	byte	$df, $db, $d7, $d6, $d6, $d8, $dc, $df, $e4, $e9, $ef, $f3, $f5, $f6, $f7, $f9
1471d     FD 01 03 03 
14721     02 03 07 0D 
14725     13 17 19 19 
14729     19 1C 20 23 | 	byte	$fd, $01, $03, $03, $02, $03, $07, $0d, $13, $17, $19, $19, $19, $1c, $20, $23
1472d     23 1F 19 15 
14731     12 13 14 14 
14735     10 0B 09 09 
14739     0D 12 16 16 | 	byte	$23, $1f, $19, $15, $12, $13, $14, $14, $10, $0b, $09, $09, $0d, $12, $16, $16
1473d     16 15 16 19 
14741     1B 1C 1A 16 
14745     13 10 10 11 
14749     11 11 0E 0C | 	byte	$16, $15, $16, $19, $1b, $1c, $1a, $16, $13, $10, $10, $11, $11, $11, $0e, $0c
1474d     0D 0F 11 14 
14751     13 13 11 10 
14755     0E 09 05 01 
14759     FF FE FB F8 | 	byte	$0d, $0f, $11, $14, $13, $13, $11, $10, $0e, $09, $05, $01, $ff, $fe, $fb, $f8
1475d     F4 EF EB E8 
14761     E6 E2 DC D4 
14765     CB C7 C4 C3 
14769     C4 C5 CA D0 | 	byte	$f4, $ef, $eb, $e8, $e6, $e2, $dc, $d4, $cb, $c7, $c4, $c3, $c4, $c5, $ca, $d0
1476d     D8 DE E3 E9 
14771     EF F6 FF 07 
14775     0D 12 16 1C 
14779     22 27 2B 2B | 	byte	$d8, $de, $e3, $e9, $ef, $f6, $ff, $07, $0d, $12, $16, $1c, $22, $27, $2b, $2b
1477d     28 24 1E 17 
14781     0F 07 00 FC 
14785     F8 F5 F0 EB 
14789     E5 E3 E2 E1 | 	byte	$28, $24, $1e, $17, $0f, $07, $00, $fc, $f8, $f5, $f0, $eb, $e5, $e3, $e2, $e1
1478d     DF DB D8 D6 
14791     D7 D9 DB DE 
14795     E3 E8 ED F1 
14799     F2 F4 F5 F7 | 	byte	$df, $db, $d8, $d6, $d7, $d9, $db, $de, $e3, $e8, $ed, $f1, $f2, $f4, $f5, $f7
1479d     FB FE FF FF 
147a1     FF 00 03 09 
147a5     0E 11 13 14 
147a9     15 18 1C 1F | 	byte	$fb, $fe, $ff, $ff, $ff, $00, $03, $09, $0e, $11, $13, $14, $15, $18, $1c, $1f
147ad     1F 1B 17 12 
147b1     11 12 12 11 
147b5     0D 09 07 08 
147b9     0C 11 14 15 | 	byte	$1f, $1b, $17, $12, $11, $12, $12, $11, $0d, $09, $07, $08, $0c, $11, $14, $15
147bd     14 15 17 1A 
147c1     1C 1D 1B 18 
147c5     14 12 13 14 
147c9     14 13 11 0F | 	byte	$14, $15, $17, $1a, $1c, $1d, $1b, $18, $14, $12, $13, $14, $14, $13, $11, $0f
147cd     10 12 15 17 
147d1     18 17 16 15 
147d5     11 0E 09 06 
147d9     04 01 FF FC | 	byte	$10, $12, $15, $17, $18, $17, $16, $15, $11, $0e, $09, $06, $04, $01, $ff, $fc
147dd     F6 F1 ED EA 
147e1     E8 E3 DD D6 
147e5     CE C8 C5 C5 
147e9     C5 C8 CD D3 | 	byte	$f6, $f1, $ed, $ea, $e8, $e3, $dd, $d6, $ce, $c8, $c5, $c5, $c5, $c8, $cd, $d3
147ed     DA E0 E7 EC 
147f1     F2 FA 02 0A 
147f5     0E 13 17 1D 
147f9     22 27 29 28 | 	byte	$da, $e0, $e7, $ec, $f2, $fa, $02, $0a, $0e, $13, $17, $1d, $22, $27, $29, $28
147fd     26 22 1B 14 
14801     0C 04 FD F9 
14805     F7 F3 EE E9 
14809     E6 E3 E2 E1 | 	byte	$26, $22, $1b, $14, $0c, $04, $fd, $f9, $f7, $f3, $ee, $e9, $e6, $e3, $e2, $e1
1480d     DF DC D8 D7 
14811     D8 D9 DB DE 
14815     E2 E6 EB EE 
14819     F0 F1 F2 F5 | 	byte	$df, $dc, $d8, $d7, $d8, $d9, $db, $de, $e2, $e6, $eb, $ee, $f0, $f1, $f2, $f5
1481d     F8 FA FC FC 
14821     FB FD 00 05 
14825     09 0C 0E 0E 
14829     11 14 18 1B | 	byte	$f8, $fa, $fc, $fc, $fb, $fd, $00, $05, $09, $0c, $0e, $0e, $11, $14, $18, $1b
1482d     1B 18 13 10 
14831     0F 10 10 0F 
14835     0C 09 06 07 
14839     0B 0F 12 13 | 	byte	$1b, $18, $13, $10, $0f, $10, $10, $0f, $0c, $09, $06, $07, $0b, $0f, $12, $13
1483d     13 14 17 1A 
14841     1E 1E 1D 19 
14845     16 15 16 17 
14849     17 15 14 12 | 	byte	$13, $14, $17, $1a, $1e, $1e, $1d, $19, $16, $15, $16, $17, $17, $15, $14, $12
1484d     13 16 19 1B 
14851     1B 1B 1A 18 
14855     16 12 0F 0B 
14859     07 05 02 FE | 	byte	$13, $16, $19, $1b, $1b, $1b, $1a, $18, $16, $12, $0f, $0b, $07, $05, $02, $fe
1485d     F9 F3 F0 EC 
14861     E9 E4 DE D6 
14865     CF CA C8 C7 
14869     C8 CA CF D6 | 	byte	$f9, $f3, $f0, $ec, $e9, $e4, $de, $d6, $cf, $ca, $c8, $c7, $c8, $ca, $cf, $d6
1486d     DD E3 EA EE 
14871     F5 FC 04 0B 
14875     10 14 18 1C 
14879     22 25 27 26 | 	byte	$dd, $e3, $ea, $ee, $f5, $fc, $04, $0b, $10, $14, $18, $1c, $22, $25, $27, $26
1487d     24 20 1A 12 
14881     0A 02 FB F9 
14885     F6 F1 ED E9 
14889     E5 E3 E3 E2 | 	byte	$24, $20, $1a, $12, $0a, $02, $fb, $f9, $f6, $f1, $ed, $e9, $e5, $e3, $e3, $e2
1488d     E0 DC D9 D8 
14891     D8 D9 DB DD 
14895     E0 E4 E8 EB 
14899     ED EE F0 F2 | 	byte	$e0, $dc, $d9, $d8, $d8, $d9, $db, $dd, $e0, $e4, $e8, $eb, $ed, $ee, $f0, $f2
1489d     F5 F7 F8 F8 
148a1     F9 F9 FD 01 
148a5     04 08 09 0A 
148a9     0C 0F 14 16 | 	byte	$f5, $f7, $f8, $f8, $f9, $f9, $fd, $01, $04, $08, $09, $0a, $0c, $0f, $14, $16
148ad     16 13 10 0D 
148b1     0D 0D 0E 0C 
148b5     0A 06 05 07 
148b9     0A 0E 11 12 | 	byte	$16, $13, $10, $0d, $0d, $0d, $0e, $0c, $0a, $06, $05, $07, $0a, $0e, $11, $12
148bd     13 14 17 1B 
148c1     1E 1F 1D 1B 
148c5     18 17 18 19 
148c9     19 18 16 14 | 	byte	$13, $14, $17, $1b, $1e, $1f, $1d, $1b, $18, $17, $18, $19, $19, $18, $16, $14
148cd     16 19 1B 1E 
148d1     1F 1E 1E 1D 
148d5     1A 17 13 0E 
148d9     0B 08 04 00 | 	byte	$16, $19, $1b, $1e, $1f, $1e, $1e, $1d, $1a, $17, $13, $0e, $0b, $08, $04, $00
148dd     FA F6 F2 EE 
148e1     EB E6 DF D8 
148e5     D1 CD CB C9 
148e9     CA CC D2 D9 | 	byte	$fa, $f6, $f2, $ee, $eb, $e6, $df, $d8, $d1, $cd, $cb, $c9, $ca, $cc, $d2, $d9
148ed     E0 E7 EC F2 
148f1     F8 00 07 0D 
148f5     11 15 18 1D 
148f9     21 25 26 25 | 	byte	$e0, $e7, $ec, $f2, $f8, $00, $07, $0d, $11, $15, $18, $1d, $21, $25, $26, $25
148fd     21 1D 17 10 
14901     07 00 FB F8 
14905     F4 F0 ED E8 
14909     E5 E4 E3 E3 | 	byte	$21, $1d, $17, $10, $07, $00, $fb, $f8, $f4, $f0, $ed, $e8, $e5, $e4, $e3, $e3
1490d     E0 DD DA D8 
14911     D8 D9 DA DC 
14915     DF E2 E5 E8 
14919     EA EC EE EF | 	byte	$e0, $dd, $da, $d8, $d8, $d9, $da, $dc, $df, $e2, $e5, $e8, $ea, $ec, $ee, $ef
1491d     F2 F4 F6 F6 
14921     F6 F8 FA FC 
14925     01 03 05 06 
14929     08 0C 0F 11 | 	byte	$f2, $f4, $f6, $f6, $f6, $f8, $fa, $fc, $01, $03, $05, $06, $08, $0c, $0f, $11
1492d     12 10 0D 0B 
14931     0B 0B 0C 0B 
14935     08 06 05 06 
14939     09 0D 0F 10 | 	byte	$12, $10, $0d, $0b, $0b, $0b, $0c, $0b, $08, $06, $05, $06, $09, $0d, $0f, $10
1493d     11 13 16 1A 
14941     1D 1F 1E 1B 
14945     1A 19 1A 1B 
14949     1B 1A 18 17 | 	byte	$11, $13, $16, $1a, $1d, $1f, $1e, $1b, $1a, $19, $1a, $1b, $1b, $1a, $18, $17
1494d     19 1B 1F 21 
14951     21 22 21 20 
14955     1E 1A 15 11 
14959     0E 0B 07 02 | 	byte	$19, $1b, $1f, $21, $21, $22, $21, $20, $1e, $1a, $15, $11, $0e, $0b, $07, $02
1495d     FD F7 F3 EF 
14961     EC E6 E0 D9 
14965     D3 CF CC CB 
14969     CC CF D5 DB | 	byte	$fd, $f7, $f3, $ef, $ec, $e6, $e0, $d9, $d3, $cf, $cc, $cb, $cc, $cf, $d5, $db
1496d     E3 E9 EF F5 
14971     FC 02 09 0E 
14975     12 15 19 1D 
14979     21 23 24 22 | 	byte	$e3, $e9, $ef, $f5, $fc, $02, $09, $0e, $12, $15, $19, $1d, $21, $23, $24, $22
1497d     20 1C 15 0D 
14981     06 FF FA F6 
14985     F3 F0 EC E8 
14989     E5 E4 E4 E3 | 	byte	$20, $1c, $15, $0d, $06, $ff, $fa, $f6, $f3, $f0, $ec, $e8, $e5, $e4, $e4, $e3
1498d     E1 DF DB DA 
14991     D9 DA DB DD 
14995     DE E1 E4 E6 
14999     E9 EA EC EF | 	byte	$e1, $df, $db, $da, $d9, $da, $db, $dd, $de, $e1, $e4, $e6, $e9, $ea, $ec, $ef
1499d     F0 F2 F3 F3 
149a1     F4 F5 F7 FA 
149a5     FD FF 00 01 
149a9     04 07 0A 0D | 	byte	$f0, $f2, $f3, $f3, $f4, $f5, $f7, $fa, $fd, $ff, $00, $01, $04, $07, $0a, $0d
149ad     0E 0C 0A 09 
149b1     09 09 09 09 
149b5     07 05 04 05 
149b9     08 0B 0D 0E | 	byte	$0e, $0c, $0a, $09, $09, $09, $09, $09, $07, $05, $04, $05, $08, $0b, $0d, $0e
149bd     0F 12 15 19 
149c1     1D 1E 1E 1C 
149c5     1B 1B 1B 1C 
149c9     1D 1B 1A 1A | 	byte	$0f, $12, $15, $19, $1d, $1e, $1e, $1c, $1b, $1b, $1b, $1c, $1d, $1b, $1a, $1a
149cd     1B 1E 21 23 
149d1     24 24 24 23 
149d5     21 1D 19 15 
149d9     11 0D 08 04 | 	byte	$1b, $1e, $21, $23, $24, $24, $24, $23, $21, $1d, $19, $15, $11, $0d, $08, $04
149dd     FE F9 F5 F1 
149e1     ED E7 E1 DB 
149e5     D5 D0 CE CE 
149e9     CF D2 D8 DE | 	byte	$fe, $f9, $f5, $f1, $ed, $e7, $e1, $db, $d5, $d0, $ce, $ce, $cf, $d2, $d8, $de
149ed     E6 EC F2 F7 
149f1     FE 05 0B 10 
149f5     13 16 19 1D 
149f9     20 22 22 21 | 	byte	$e6, $ec, $f2, $f7, $fe, $05, $0b, $10, $13, $16, $19, $1d, $20, $22, $22, $21
149fd     1E 19 13 0C 
14a01     04 FE FA F6 
14a05     F3 EF EC E8 
14a09     E6 E5 E5 E4 | 	byte	$1e, $19, $13, $0c, $04, $fe, $fa, $f6, $f3, $ef, $ec, $e8, $e6, $e5, $e5, $e4
14a0d     E3 DF DD DB 
14a11     DA DB DB DC 
14a15     DD DF E1 E4 
14a19     E6 E8 EA EC | 	byte	$e3, $df, $dd, $db, $da, $db, $db, $dc, $dd, $df, $e1, $e4, $e6, $e8, $ea, $ec
14a1d     ED F0 F1 F2 
14a21     F3 F4 F6 F8 
14a25     FA FC FD FE 
14a29     00 02 06 08 | 	byte	$ed, $f0, $f1, $f2, $f3, $f4, $f6, $f8, $fa, $fc, $fd, $fe, $00, $02, $06, $08
14a2d     09 08 08 07 
14a31     07 07 08 06 
14a35     05 04 04 05 
14a39     07 09 0C 0D | 	byte	$09, $08, $08, $07, $07, $07, $08, $06, $05, $04, $04, $05, $07, $09, $0c, $0d
14a3d     0F 11 14 19 
14a41     1C 1D 1D 1C 
14a45     1B 1C 1C 1E 
14a49     1E 1D 1C 1C | 	byte	$0f, $11, $14, $19, $1c, $1d, $1d, $1c, $1b, $1c, $1c, $1e, $1e, $1d, $1c, $1c
14a4d     1D 20 22 25 
14a51     26 27 27 26 
14a55     24 20 1C 17 
14a59     13 0E 0B 05 | 	byte	$1d, $20, $22, $25, $26, $27, $27, $26, $24, $20, $1c, $17, $13, $0e, $0b, $05
14a5d     FF FA F6 F1 
14a61     ED E8 E2 DC 
14a65     D6 D2 D1 D0 
14a69     D1 D5 DB E2 | 	byte	$ff, $fa, $f6, $f1, $ed, $e8, $e2, $dc, $d6, $d2, $d1, $d0, $d1, $d5, $db, $e2
14a6d     E9 EF F4 FB 
14a71     01 08 0C 11 
14a75     14 17 1A 1D 
14a79     1F 21 21 20 | 	byte	$e9, $ef, $f4, $fb, $01, $08, $0c, $11, $14, $17, $1a, $1d, $1f, $21, $21, $20
14a7d     1C 18 12 0B 
14a81     03 FD F9 F6 
14a85     F2 EF EB E8 
14a89     E6 E6 E6 E6 | 	byte	$1c, $18, $12, $0b, $03, $fd, $f9, $f6, $f2, $ef, $eb, $e8, $e6, $e6, $e6, $e6
14a8d     E3 E1 DE DC 
14a91     DB DB DC DC 
14a95     DD DE E1 E3 
14a99     E4 E7 E8 EA | 	byte	$e3, $e1, $de, $dc, $db, $db, $dc, $dc, $dd, $de, $e1, $e3, $e4, $e7, $e8, $ea
14a9d     EC EE EF F0 
14aa1     F1 F3 F4 F6 
14aa5     F7 F9 FA FB 
14aa9     FD 00 02 05 | 	byte	$ec, $ee, $ef, $f0, $f1, $f3, $f4, $f6, $f7, $f9, $fa, $fb, $fd, $00, $02, $05
14aad     05 05 04 04 
14ab1     05 05 06 05 
14ab5     04 03 03 04 
14ab9     06 08 0A 0C | 	byte	$05, $05, $04, $04, $05, $05, $06, $05, $04, $03, $03, $04, $06, $08, $0a, $0c
14abd     0D 0F 13 17 
14ac1     1A 1C 1C 1B 
14ac5     1B 1C 1D 1E 
14ac9     1F 1E 1D 1D | 	byte	$0d, $0f, $13, $17, $1a, $1c, $1c, $1b, $1b, $1c, $1d, $1e, $1f, $1e, $1d, $1d
14acd     1F 21 25 27 
14ad1     28 28 29 28 
14ad5     26 23 1E 19 
14ad9     14 11 0C 06 | 	byte	$1f, $21, $25, $27, $28, $28, $29, $28, $26, $23, $1e, $19, $14, $11, $0c, $06
14add     00 FB F6 F2 
14ae1     ED E9 E3 DC 
14ae5     D8 D5 D2 D2 
14ae9     D4 D8 DE E5 | 	byte	$00, $fb, $f6, $f2, $ed, $e9, $e3, $dc, $d8, $d5, $d2, $d2, $d4, $d8, $de, $e5
14aed     EC F2 F8 FE 
14af1     04 09 0E 12 
14af5     15 17 1A 1C 
14af9     1F 20 20 1E | 	byte	$ec, $f2, $f8, $fe, $04, $09, $0e, $12, $15, $17, $1a, $1c, $1f, $20, $20, $1e
14afd     1A 16 10 0A 
14b01     03 FD F9 F5 
14b05     F2 EF EC E9 
14b09     E7 E7 E7 E6 | 	byte	$1a, $16, $10, $0a, $03, $fd, $f9, $f5, $f2, $ef, $ec, $e9, $e7, $e7, $e7, $e6
14b0d     E5 E1 E0 DE 
14b11     DE DD DD DC 
14b15     DD DE DF E1 
14b19     E4 E5 E7 E9 | 	byte	$e5, $e1, $e0, $de, $de, $dd, $dd, $dc, $dd, $de, $df, $e1, $e4, $e5, $e7, $e9
14b1d     EA EC ED EF 
14b21     F1 F2 F3 F4 
14b25     F5 F7 F8 F9 
14b29     FB FC FF 00 | 	byte	$ea, $ec, $ed, $ef, $f1, $f2, $f3, $f4, $f5, $f7, $f8, $f9, $fb, $fc, $ff, $00
14b2d     01 01 01 02 
14b31     03 03 04 03 
14b35     03 02 03 04 
14b39     06 07 09 0A | 	byte	$01, $01, $01, $02, $03, $03, $04, $03, $03, $02, $03, $04, $06, $07, $09, $0a
14b3d     0B 0E 11 14 
14b41     18 1A 1B 1B 
14b45     1B 1C 1D 1E 
14b49     1F 1E 1E 1E | 	byte	$0b, $0e, $11, $14, $18, $1a, $1b, $1b, $1b, $1c, $1d, $1e, $1f, $1e, $1e, $1e
14b4d     20 23 25 27 
14b51     29 2A 2A 29 
14b55     28 24 1F 1A 
14b59     16 11 0C 06 | 	byte	$20, $23, $25, $27, $29, $2a, $2a, $29, $28, $24, $1f, $1a, $16, $11, $0c, $06
14b5d     01 FB F7 F2 
14b61     EE E9 E3 DD 
14b65     DA D6 D4 D5 
14b69     D6 DA E1 E8 | 	byte	$01, $fb, $f7, $f2, $ee, $e9, $e3, $dd, $da, $d6, $d4, $d5, $d6, $da, $e1, $e8
14b6d     EE F5 FB 01 
14b71     06 0C 11 14 
14b75     16 18 1A 1D 
14b79     1E 1F 1E 1D | 	byte	$ee, $f5, $fb, $01, $06, $0c, $11, $14, $16, $18, $1a, $1d, $1e, $1f, $1e, $1d
14b7d     19 16 10 0A 
14b81     03 FE FA F6 
14b85     F2 F0 ED EA 
14b89     E9 E8 E9 E8 | 	byte	$19, $16, $10, $0a, $03, $fe, $fa, $f6, $f2, $f0, $ed, $ea, $e9, $e8, $e9, $e8
14b8d     E6 E3 E2 E0 
14b91     DF DF DE DD 
14b95     DD DD DE E1 
14b99     E2 E4 E6 E8 | 	byte	$e6, $e3, $e2, $e0, $df, $df, $de, $dd, $dd, $dd, $de, $e1, $e2, $e4, $e6, $e8
14b9d     EA EB EC EF 
14ba1     F0 F1 F2 F3 
14ba5     F4 F5 F6 F7 
14ba9     F8 FA FB FC | 	byte	$ea, $eb, $ec, $ef, $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $fa, $fb, $fc
14bad     FE FE FE FF 
14bb1     00 01 01 01 
14bb5     01 02 02 03 
14bb9     04 05 06 07 | 	byte	$fe, $fe, $fe, $ff, $00, $01, $01, $01, $01, $02, $02, $03, $04, $05, $06, $07
14bbd     09 0C 0F 13 
14bc1     16 18 19 1A 
14bc5     1B 1C 1D 1E 
14bc9     1F 1F 1E 1F | 	byte	$09, $0c, $0f, $13, $16, $18, $19, $1a, $1b, $1c, $1d, $1e, $1f, $1f, $1e, $1f
14bcd     21 23 26 29 
14bd1     2A 2B 2B 2B 
14bd5     29 25 20 1C 
14bd9     17 12 0C 06 | 	byte	$21, $23, $26, $29, $2a, $2b, $2b, $2b, $29, $25, $20, $1c, $17, $12, $0c, $06
14bdd     01 FB F6 F2 
14be1     EE E9 E3 DF 
14be5     DB D8 D6 D7 
14be9     D9 DD E4 EA | 	byte	$01, $fb, $f6, $f2, $ee, $e9, $e3, $df, $db, $d8, $d6, $d7, $d9, $dd, $e4, $ea
14bed     F1 F8 FE 03 
14bf1     09 0E 12 14 
14bf5     17 18 1B 1C 
14bf9     1D 1E 1D 1C | 	byte	$f1, $f8, $fe, $03, $09, $0e, $12, $14, $17, $18, $1b, $1c, $1d, $1e, $1d, $1c
14bfd     19 15 0F 0A 
14c01     04 FE FB F7 
14c05     F4 F1 ED EC 
14c09     EA EA EA E9 | 	byte	$19, $15, $0f, $0a, $04, $fe, $fb, $f7, $f4, $f1, $ed, $ec, $ea, $ea, $ea, $e9
14c0d     E8 E6 E3 E2 
14c11     E1 E1 E0 DE 
14c15     DD DD DF E0 
14c19     E2 E4 E5 E7 | 	byte	$e8, $e6, $e3, $e2, $e1, $e1, $e0, $de, $dd, $dd, $df, $e0, $e2, $e4, $e5, $e7
14c1d     E8 EA EC EE 
14c21     F0 F1 F2 F3 
14c25     F4 F4 F5 F6 
14c29     F7 F8 F8 FA | 	byte	$e8, $ea, $ec, $ee, $f0, $f1, $f2, $f3, $f4, $f4, $f5, $f6, $f7, $f8, $f8, $fa
14c2d     FB FB FC FD 
14c31     FE FF FF 00 
14c35     00 01 01 02 
14c39     03 04 04 06 | 	byte	$fb, $fb, $fc, $fd, $fe, $ff, $ff, $00, $00, $01, $01, $02, $03, $04, $04, $06
14c3d     07 09 0D 10 
14c41     13 15 16 18 
14c45     19 1A 1C 1E 
14c49     1E 1E 1E 1F | 	byte	$07, $09, $0d, $10, $13, $15, $16, $18, $19, $1a, $1c, $1e, $1e, $1e, $1e, $1f
14c4d     22 24 27 29 
14c51     2B 2C 2C 2C 
14c55     2A 26 21 1C 
14c59     17 11 0C 06 | 	byte	$22, $24, $27, $29, $2b, $2c, $2c, $2c, $2a, $26, $21, $1c, $17, $11, $0c, $06
14c5d     00 FB F7 F2 
14c61     ED E8 E4 DF 
14c65     DC D9 D8 D9 
14c69     DC E0 E6 ED | 	byte	$00, $fb, $f7, $f2, $ed, $e8, $e4, $df, $dc, $d9, $d8, $d9, $dc, $e0, $e6, $ed
14c6d     F4 FB 00 06 
14c71     0B 10 13 15 
14c75     17 19 1B 1C 
14c79     1E 1E 1D 1B | 	byte	$f4, $fb, $00, $06, $0b, $10, $13, $15, $17, $19, $1b, $1c, $1e, $1e, $1d, $1b
14c7d     18 14 10 0A 
14c81     04 FF FC F8 
14c85     F5 F1 EF ED 
14c89     EC EC EC EB | 	byte	$18, $14, $10, $0a, $04, $ff, $fc, $f8, $f5, $f1, $ef, $ed, $ec, $ec, $ec, $eb
14c8d     EA E7 E6 E5 
14c91     E4 E3 E2 E0 
14c95     DF DE DF E0 
14c99     E2 E4 E5 E7 | 	byte	$ea, $e7, $e6, $e5, $e4, $e3, $e2, $e0, $df, $de, $df, $e0, $e2, $e4, $e5, $e7
14c9d     E8 EA EC EE 
14ca1     F0 F1 F2 F2 
14ca5     F3 F4 F5 F5 
14ca9     F5 F6 F6 F7 | 	byte	$e8, $ea, $ec, $ee, $f0, $f1, $f2, $f2, $f3, $f4, $f5, $f5, $f5, $f6, $f6, $f7
14cad     F8 F9 FA FB 
14cb1     FB FC FD FD 
14cb5     FE FF 00 00 
14cb9     01 02 02 03 | 	byte	$f8, $f9, $fa, $fb, $fb, $fc, $fd, $fd, $fe, $ff, $00, $00, $01, $02, $02, $03
14cbd     04 07 0A 0E 
14cc1     10 12 14 15 
14cc5     17 19 1B 1D 
14cc9     1D 1E 1E 1F | 	byte	$04, $07, $0a, $0e, $10, $12, $14, $15, $17, $19, $1b, $1d, $1d, $1e, $1e, $1f
14ccd     21 25 27 29 
14cd1     2B 2C 2C 2C 
14cd5     2A 26 22 1C 
14cd9     17 12 0C 06 | 	byte	$21, $25, $27, $29, $2b, $2c, $2c, $2c, $2a, $26, $22, $1c, $17, $12, $0c, $06
14cdd     00 FB F6 F2 
14ce1     ED E9 E4 E0 
14ce5     DD DB DA DB 
14ce9     DE E2 E9 F0 | 	byte	$00, $fb, $f6, $f2, $ed, $e9, $e4, $e0, $dd, $db, $da, $db, $de, $e2, $e9, $f0
14ced     F7 FD 02 08 
14cf1     0D 11 14 16 
14cf5     18 19 1A 1C 
14cf9     1D 1D 1C 1A | 	byte	$f7, $fd, $02, $08, $0d, $11, $14, $16, $18, $19, $1a, $1c, $1d, $1d, $1c, $1a
14cfd     17 15 10 0B 
14d01     05 01 FC F9 
14d05     F6 F3 F1 EF 
14d09     EE EE EE EE | 	byte	$17, $15, $10, $0b, $05, $01, $fc, $f9, $f6, $f3, $f1, $ef, $ee, $ee, $ee, $ee
14d0d     EC EA E9 E7 
14d11     E6 E5 E4 E2 
14d15     E0 DF E0 E1 
14d19     E2 E4 E5 E7 | 	byte	$ec, $ea, $e9, $e7, $e6, $e5, $e4, $e2, $e0, $df, $e0, $e1, $e2, $e4, $e5, $e7
14d1d     E8 EA EC EF 
14d21     F1 F2 F3 F3 
14d25     F3 F4 F4 F5 
14d29     F4 F4 F4 F4 | 	byte	$e8, $ea, $ec, $ef, $f1, $f2, $f3, $f3, $f3, $f4, $f4, $f5, $f4, $f4, $f4, $f4
14d2d     F6 F7 F7 F8 
14d31     F9 FB FB FB 
14d35     FD FD FE FF 
14d39     FF 00 00 01 | 	byte	$f6, $f7, $f7, $f8, $f9, $fb, $fb, $fb, $fd, $fd, $fe, $ff, $ff, $00, $00, $01
14d3d     03 04 07 0A 
14d41     0D 10 11 13 
14d45     15 17 1A 1B 
14d49     1C 1D 1E 1F | 	byte	$03, $04, $07, $0a, $0d, $10, $11, $13, $15, $17, $1a, $1b, $1c, $1d, $1e, $1f
14d4d     22 24 27 29 
14d51     2A 2C 2C 2C 
14d55     2A 26 21 1C 
14d59     17 10 0A 05 | 	byte	$22, $24, $27, $29, $2a, $2c, $2c, $2c, $2a, $26, $21, $1c, $17, $10, $0a, $05
14d5d     FF FA F5 F1 
14d61     ED E8 E4 E0 
14d65     DE DD DC DE 
14d69     E0 E5 EC F3 | 	byte	$ff, $fa, $f5, $f1, $ed, $e8, $e4, $e0, $de, $dd, $dc, $de, $e0, $e5, $ec, $f3
14d6d     F9 FF 05 0B 
14d71     0E 13 15 18 
14d75     19 1A 1B 1C 
14d79     1D 1D 1C 1A | 	byte	$f9, $ff, $05, $0b, $0e, $13, $15, $18, $19, $1a, $1b, $1c, $1d, $1d, $1c, $1a
14d7d     18 15 10 0B 
14d81     07 02 FE FB 
14d85     F8 F6 F2 F1 
14d89     F1 F0 F0 F0 | 	byte	$18, $15, $10, $0b, $07, $02, $fe, $fb, $f8, $f6, $f2, $f1, $f1, $f0, $f0, $f0
14d8d     EF ED EB EA 
14d91     E9 E8 E7 E4 
14d95     E2 E2 E2 E2 
14d99     E4 E5 E6 E7 | 	byte	$ef, $ed, $eb, $ea, $e9, $e8, $e7, $e4, $e2, $e2, $e2, $e2, $e4, $e5, $e6, $e7
14d9d     E9 EA ED EF 
14da1     F1 F2 F3 F3 
14da5     F4 F4 F5 F4 
14da9     F4 F3 F2 F3 | 	byte	$e9, $ea, $ed, $ef, $f1, $f2, $f3, $f3, $f4, $f4, $f5, $f4, $f4, $f3, $f2, $f3
14dad     F3 F4 F5 F6 
14db1     F7 F8 F8 FA 
14db5     FA FC FC FC 
14db9     FD FD FD FE | 	byte	$f3, $f4, $f5, $f6, $f7, $f8, $f8, $fa, $fa, $fc, $fc, $fc, $fd, $fd, $fd, $fe
14dbd     FF 01 03 06 
14dc1     0A 0C 0E 10 
14dc5     12 15 18 19 
14dc9     1B 1C 1D 1F | 	byte	$ff, $01, $03, $06, $0a, $0c, $0e, $10, $12, $15, $18, $19, $1b, $1c, $1d, $1f
14dcd     21 24 26 28 
14dd1     2A 2B 2C 2B 
14dd5     29 25 21 1C 
14dd9     16 0F 0A 03 | 	byte	$21, $24, $26, $28, $2a, $2b, $2c, $2b, $29, $25, $21, $1c, $16, $0f, $0a, $03
14ddd     FD F8 F5 F1 
14de1     EC E8 E4 E1 
14de5     E0 DE DE DF 
14de9     E3 E8 EF F5 | 	byte	$fd, $f8, $f5, $f1, $ec, $e8, $e4, $e1, $e0, $de, $de, $df, $e3, $e8, $ef, $f5
14ded     FC 02 07 0C 
14df1     10 14 17 18 
14df5     19 1B 1B 1C 
14df9     1C 1C 1B 19 | 	byte	$fc, $02, $07, $0c, $10, $14, $17, $18, $19, $1b, $1b, $1c, $1c, $1c, $1b, $19
14dfd     18 14 10 0C 
14e01     08 03 FF FD 
14e05     FA F7 F5 F3 
14e09     F3 F2 F2 F2 | 	byte	$18, $14, $10, $0c, $08, $03, $ff, $fd, $fa, $f7, $f5, $f3, $f3, $f2, $f2, $f2
14e0d     F1 EF EE ED 
14e11     EC EB E9 E7 
14e15     E5 E3 E3 E4 
14e19     E5 E6 E7 E8 | 	byte	$f1, $ef, $ee, $ed, $ec, $eb, $e9, $e7, $e5, $e3, $e3, $e4, $e5, $e6, $e7, $e8
14e1d     E9 EC EE F1 
14e21     F2 F3 F3 F4 
14e25     F4 F5 F5 F5 
14e29     F3 F3 F1 F1 | 	byte	$e9, $ec, $ee, $f1, $f2, $f3, $f3, $f4, $f4, $f5, $f5, $f5, $f3, $f3, $f1, $f1
14e2d     F2 F3 F4 F4 
14e31     F5 F5 F6 F7 
14e35     F8 F9 FA FA 
14e39     FA FA FB FB | 	byte	$f2, $f3, $f4, $f4, $f5, $f5, $f6, $f7, $f8, $f9, $fa, $fa, $fa, $fa, $fb, $fb
14e3d     FD FE FF 03 
14e41     06 08 0B 0D 
14e45     11 13 15 18 
14e49     19 1A 1C 1E | 	byte	$fd, $fe, $ff, $03, $06, $08, $0b, $0d, $11, $13, $15, $18, $19, $1a, $1c, $1e
14e4d     21 23 25 28 
14e51     29 2A 2B 2A 
14e55     28 25 20 1A 
14e59     14 0F 08 02 | 	byte	$21, $23, $25, $28, $29, $2a, $2b, $2a, $28, $25, $20, $1a, $14, $0f, $08, $02
14e5d     FC F8 F4 F0 
14e61     EC E8 E5 E2 
14e65     E0 E0 E0 E2 
14e69     E5 EB F1 F7 | 	byte	$fc, $f8, $f4, $f0, $ec, $e8, $e5, $e2, $e0, $e0, $e0, $e2, $e5, $eb, $f1, $f7
14e6d     FD 04 08 0E 
14e71     12 16 17 18 
14e75     1A 1A 1B 1C 
14e79     1C 1B 1B 19 | 	byte	$fd, $04, $08, $0e, $12, $16, $17, $18, $1a, $1a, $1b, $1c, $1c, $1b, $1b, $19
14e7d     17 15 12 0E 
14e81     09 05 02 00 
14e85     FC F9 F7 F5 
14e89     F5 F5 F5 F4 | 	byte	$17, $15, $12, $0e, $09, $05, $02, $00, $fc, $f9, $f7, $f5, $f5, $f5, $f5, $f4
14e8d     F3 F2 F1 F0 
14e91     EF EE EC EA 
14e95     E7 E6 E6 E6 
14e99     E7 E8 E8 E9 | 	byte	$f3, $f2, $f1, $f0, $ef, $ee, $ec, $ea, $e7, $e6, $e6, $e6, $e7, $e8, $e8, $e9
14e9d     EB EC EF F1 
14ea1     F3 F4 F4 F4 
14ea5     F5 F5 F5 F4 
14ea9     F3 F1 F0 F0 | 	byte	$eb, $ec, $ef, $f1, $f3, $f4, $f4, $f4, $f5, $f5, $f5, $f4, $f3, $f1, $f0, $f0
14ead     F0 F1 F2 F2 
14eb1     F2 F3 F4 F5 
14eb5     F6 F7 F7 F8 
14eb9     F8 F8 F8 F9 | 	byte	$f0, $f1, $f2, $f2, $f2, $f3, $f4, $f5, $f6, $f7, $f7, $f8, $f8, $f8, $f8, $f9
14ebd     F9 FA FD FF 
14ec1     02 05 08 0B 
14ec5     0D 10 14 16 
14ec9     17 19 1B 1D | 	byte	$f9, $fa, $fd, $ff, $02, $05, $08, $0b, $0d, $10, $14, $16, $17, $19, $1b, $1d
14ecd     20 22 25 27 
14ed1     28 2A 2A 29 
14ed5     27 23 1E 19 
14ed9     13 0C 06 00 | 	byte	$20, $22, $25, $27, $28, $2a, $2a, $29, $27, $23, $1e, $19, $13, $0c, $06, $00
14edd     FB F7 F3 EF 
14ee1     EC E8 E5 E2 
14ee5     E1 E1 E1 E3 
14ee9     E8 ED F3 F9 | 	byte	$fb, $f7, $f3, $ef, $ec, $e8, $e5, $e2, $e1, $e1, $e1, $e3, $e8, $ed, $f3, $f9
14eed     FF 04 0A 0F 
14ef1     13 16 18 19 
14ef5     1A 1A 1B 1B 
14ef9     1C 1B 1A 19 | 	byte	$ff, $04, $0a, $0f, $13, $16, $18, $19, $1a, $1a, $1b, $1b, $1c, $1b, $1a, $19
14efd     18 15 12 0E 
14f01     0A 07 04 01 
14f05     FE FC FA F8 
14f09     F8 F8 F8 F7 | 	byte	$18, $15, $12, $0e, $0a, $07, $04, $01, $fe, $fc, $fa, $f8, $f8, $f8, $f8, $f7
14f0d     F7 F5 F4 F3 
14f11     F2 F1 EF EC 
14f15     EB E9 E8 E8 
14f19     E9 EA EA EB | 	byte	$f7, $f5, $f4, $f3, $f2, $f1, $ef, $ec, $eb, $e9, $e8, $e8, $e9, $ea, $ea, $eb
14f1d     EC EE F0 F2 
14f21     F4 F5 F5 F5 
14f25     F5 F6 F5 F5 
14f29     F2 F1 F0 EF | 	byte	$ec, $ee, $f0, $f2, $f4, $f5, $f5, $f5, $f5, $f6, $f5, $f5, $f2, $f1, $f0, $ef
14f2d     EF EF EF F0 
14f31     F0 F1 F1 F3 
14f35     F4 F5 F5 F5 
14f39     F5 F5 F5 F6 | 	byte	$ef, $ef, $ef, $f0, $f0, $f1, $f1, $f3, $f4, $f5, $f5, $f5, $f5, $f5, $f5, $f6
14f3d     F6 F7 F9 FB 
14f41     FE 01 05 08 
14f45     0B 0F 11 13 
14f49     16 17 1A 1C | 	byte	$f6, $f7, $f9, $fb, $fe, $01, $05, $08, $0b, $0f, $11, $13, $16, $17, $1a, $1c
14f4d     1E 22 24 25 
14f51     27 28 29 28 
14f55     26 21 1C 17 
14f59     11 0B 04 FF | 	byte	$1e, $22, $24, $25, $27, $28, $29, $28, $26, $21, $1c, $17, $11, $0b, $04, $ff
14f5d     FA F5 F2 EF 
14f61     EB E8 E5 E4 
14f65     E2 E3 E3 E5 
14f69     E9 EF F5 FB | 	byte	$fa, $f5, $f2, $ef, $eb, $e8, $e5, $e4, $e2, $e3, $e3, $e5, $e9, $ef, $f5, $fb
14f6d     01 06 0C 11 
14f71     14 16 18 19 
14f75     1A 1B 1B 1C 
14f79     1C 1B 1A 19 | 	byte	$01, $06, $0c, $11, $14, $16, $18, $19, $1a, $1b, $1b, $1c, $1c, $1b, $1a, $19
14f7d     18 16 13 0F 
14f81     0D 0A 06 04 
14f85     01 FE FC FB 
14f89     FA FA FA FA | 	byte	$18, $16, $13, $0f, $0d, $0a, $06, $04, $01, $fe, $fc, $fb, $fa, $fa, $fa, $fa
14f8d     F9 F7 F7 F6 
14f91     F5 F4 F2 F0 
14f95     EE EC EC EB 
14f99     EC EC EC EC | 	byte	$f9, $f7, $f7, $f6, $f5, $f4, $f2, $f0, $ee, $ec, $ec, $eb, $ec, $ec, $ec, $ec
14f9d     EE EF F1 F3 
14fa1     F5 F5 F5 F6 
14fa5     F6 F6 F6 F4 
14fa9     F3 F1 EF EE | 	byte	$ee, $ef, $f1, $f3, $f5, $f5, $f5, $f6, $f6, $f6, $f6, $f4, $f3, $f1, $ef, $ee
14fad     EE EE EE EE 
14fb1     EE EE       | 	byte	$ee[6]
14fb3     F0 F0 F2 F2 
14fb7     F3 F3 F3 F3 
14fbb     F3 F3 F3 F4 
14fbf     F5 F8 FB FD | 	byte	$f0, $f0, $f2, $f2, $f3, $f3, $f3, $f3, $f3, $f3, $f3, $f4, $f5, $f8, $fb, $fd
14fc3     01 04 08 0C 
14fc7     0F 12 14 17 
14fcb     19 1B 1E 20 
14fcf     22 25 26 28 | 	byte	$01, $04, $08, $0c, $0f, $12, $14, $17, $19, $1b, $1e, $20, $22, $25, $26, $28
14fd3     28 27 23 20 
14fd7     1B 15 0F 09 
14fdb     03 FD F8 F4 
14fdf     F1 ED EA E7 | 	byte	$28, $27, $23, $20, $1b, $15, $0f, $09, $03, $fd, $f8, $f4, $f1, $ed, $ea, $e7
14fe3     E6 E4 E3 E4 
14fe7     E4 E7 EC F1 
14feb     F6 FC 03 08 
14fef     0D 11 14 17 | 	byte	$e6, $e4, $e3, $e4, $e4, $e7, $ec, $f1, $f6, $fc, $03, $08, $0d, $11, $14, $17
14ff3     19 19 1A 1B 
14ff7     1B 1B 1B 1B 
14ffb     1A 19 18 16 
14fff     13 11 0E 0B | 	byte	$19, $19, $1a, $1b, $1b, $1b, $1b, $1b, $1a, $19, $18, $16, $13, $11, $0e, $0b
15003     08 06 03 01 
15007     FE FE FD FD 
1500b     FD FC FB FA 
1500f     F9 F9 F9 F7 | 	byte	$08, $06, $03, $01, $fe, $fe, $fd, $fd, $fd, $fc, $fb, $fa, $f9, $f9, $f9, $f7
15013     F5 F3 F1 EF 
15017     EE EE EE EE 
1501b     EE EF F0 F1 
1501f     F3 F5 F5 F6 | 	byte	$f5, $f3, $f1, $ef, $ee, $ee, $ee, $ee, $ee, $ef, $f0, $f1, $f3, $f5, $f5, $f6
15023     F7 F7 F7 F7 
15027     F7          | 	byte	$f7[5]
15028     F5 F3 F1 EF 
1502c     EE ED ED EC 
15030     EC EC ED ED 
15034     EE EF F0 F0 | 	byte	$f5, $f3, $f1, $ef, $ee, $ed, $ed, $ec, $ec, $ec, $ed, $ed, $ee, $ef, $f0, $f0
15038     F0 F0 F0 F0 
1503c     F0 F0       | 	byte	$f0[6]
1503e     F1 F2 F4 F7 
15042     FA FE 02 05 
15046     09 0D 10 13 
1504a     15 17 1B 1D | 	byte	$f1, $f2, $f4, $f7, $fa, $fe, $02, $05, $09, $0d, $10, $13, $15, $17, $1b, $1d
1504e     1F 22 23 25 
15052     26 26 25 22 
15056     1E 19 13 0D 
1505a     07 01 FB F6 | 	byte	$1f, $22, $23, $25, $26, $26, $25, $22, $1e, $19, $13, $0d, $07, $01, $fb, $f6
1505e     F3 EF ED E9 
15062     E8 E6 E5 E4 
15066     E5 E6 E9 ED 
1506a     F2 F8 FE 04 | 	byte	$f3, $ef, $ed, $e9, $e8, $e6, $e5, $e4, $e5, $e6, $e9, $ed, $f2, $f8, $fe, $04
1506e     08 0D 11 15 
15072     17 19 1A 1A 
15076     1A 1B 1B 1B 
1507a     1B 1A 19 18 | 	byte	$08, $0d, $11, $15, $17, $19, $1a, $1a, $1a, $1b, $1b, $1b, $1b, $1a, $19, $18
1507e     16 15 12 10 
15082     0D 0B 08 06 
15086     03 02 01 00 
1508a     00 FF FF FE | 	byte	$16, $15, $12, $10, $0d, $0b, $08, $06, $03, $02, $01, $00, $00, $ff, $ff, $fe
1508e     FD FC FC FB 
15092     FA F9 F6 F4 
15096     F2 F1 F1 F0 
1509a     F0 F0 F0 F1 | 	byte	$fd, $fc, $fc, $fb, $fa, $f9, $f6, $f4, $f2, $f1, $f1, $f0, $f0, $f0, $f0, $f1
1509e     F3 F4 F5 F6 
150a2     F6 F7 F7 F7 
150a6     F7 F6 F5 F3 
150aa     F1 EF EE ED | 	byte	$f3, $f4, $f5, $f6, $f6, $f7, $f7, $f7, $f7, $f6, $f5, $f3, $f1, $ef, $ee, $ed
150ae     ED EC EB EB 
150b2     EB EC EC ED 
150b6     ED EE EE EE 
150ba     EE EE EE EE | 	byte	$ed, $ec, $eb, $eb, $eb, $ec, $ec, $ed, $ed, $ee, $ee, $ee, $ee, $ee, $ee, $ee
150be     EE EF F1 F4 
150c2     F7 FC FF 03 
150c6     07 0B 0D 11 
150ca     13 17 19 1C | 	byte	$ee, $ef, $f1, $f4, $f7, $fc, $ff, $03, $07, $0b, $0d, $11, $13, $17, $19, $1c
150ce     1F 21 23 24 
150d2     25 25 24 21 
150d6     1C 17 11 0B 
150da     05 FF FA F6 | 	byte	$1f, $21, $23, $24, $25, $25, $24, $21, $1c, $17, $11, $0b, $05, $ff, $fa, $f6
150de     F2 EF EB E9 
150e2     E8 E6 E5 E5 
150e6     E6 E7 EB EF 
150ea     F3 F9 FF 04 | 	byte	$f2, $ef, $eb, $e9, $e8, $e6, $e5, $e5, $e6, $e7, $eb, $ef, $f3, $f9, $ff, $04
150ee     09 0E 12 15 
150f2     17 19 19 1A 
150f6     1A 1B 1A 1B 
150fa     1A 1A 19 18 | 	byte	$09, $0e, $12, $15, $17, $19, $19, $1a, $1a, $1b, $1a, $1b, $1a, $1a, $19, $18
150fe     17 15 13 11 
15102     0F 0D 0A 07 
15106     06 04 03 03 
1510a     02 02 01 00 | 	byte	$17, $15, $13, $11, $0f, $0d, $0a, $07, $06, $04, $03, $03, $02, $02, $01, $00
1510e     00 FF FE FD 
15112     FD FA F9 F7 
15116     F6 F4 F4 F3 
1511a     F3 F2 F2 F3 | 	byte	$00, $ff, $fe, $fd, $fd, $fa, $f9, $f7, $f6, $f4, $f4, $f3, $f3, $f2, $f2, $f3
1511e     F4 F5 F7 F7 
15122     F7 F8 F8 F8 
15126     F7 F7 F5 F3 
1512a     F1 EF EE EC | 	byte	$f4, $f5, $f7, $f7, $f7, $f8, $f8, $f8, $f7, $f7, $f5, $f3, $f1, $ef, $ee, $ec
1512e     EB EB EA E9 
15132     E9 EA EA EB 
15136     EC EB EB EB 
1513a     EC EC EC EC | 	byte	$eb, $eb, $ea, $e9, $e9, $ea, $ea, $eb, $ec, $eb, $eb, $eb, $ec, $ec, $ec, $ec
1513e     EC ED EF F1 
15142     F5 F8 FC 01 
15146     05 09 0C 0F 
1514a     13 15 18 1B | 	byte	$ec, $ed, $ef, $f1, $f5, $f8, $fc, $01, $05, $09, $0c, $0f, $13, $15, $18, $1b
1514e     1D 20 21 22 
15152     24 23 22 1F 
15156     1A 14 0F 09 
1515a     03 FD F9 F4 | 	byte	$1d, $20, $21, $22, $24, $23, $22, $1f, $1a, $14, $0f, $09, $03, $fd, $f9, $f4
1515e     F1 ED EB E9 
15162     E8 E7 E7 E7 
15166     E8 E9 EC F0 
1516a     F5 FB 00 05 | 	byte	$f1, $ed, $eb, $e9, $e8, $e7, $e7, $e7, $e8, $e9, $ec, $f0, $f5, $fb, $00, $05
1516e     0A 0F 12 15 
15172     17 19 19 19 
15176     1A 1A 1A 1A 
1517a     1A 19 19 18 | 	byte	$0a, $0f, $12, $15, $17, $19, $19, $19, $1a, $1a, $1a, $1a, $1a, $19, $19, $18
1517e     17 16 14 13 
15182     10 0E 0C 0A 
15186     09 06 06 05 
1518a     04 04 03 02 | 	byte	$17, $16, $14, $13, $10, $0e, $0c, $0a, $09, $06, $06, $05, $04, $04, $03, $02
1518e     02 01 01 00 
15192     FE FD FB FA 
15196     F8 F7 F6 F5 
1519a     F5 F4 F4 F5 | 	byte	$02, $01, $01, $00, $fe, $fd, $fb, $fa, $f8, $f7, $f6, $f5, $f5, $f4, $f4, $f5
1519e     F5 F7 F8 F8 
151a2     F8 F8 F8 F8 
151a6     F8 F7 F6 F3 
151aa     F1 F0 EE EC | 	byte	$f5, $f7, $f8, $f8, $f8, $f8, $f8, $f8, $f8, $f7, $f6, $f3, $f1, $f0, $ee, $ec
151ae     EB EA E9 E8 
151b2     E8 E8 E9 E9 
151b6     E9 E9 E9 E9 
151ba     E9 E9 E9 E9 | 	byte	$eb, $ea, $e9, $e8, $e8, $e8, $e9, $e9, $e9, $e9, $e9, $e9, $e9, $e9, $e9, $e9
151be     E9 EA EC F0 
151c2     F2 F6 FB 00 
151c6     03 08 0B 0F 
151ca     12 14 18 1A | 	byte	$e9, $ea, $ec, $f0, $f2, $f6, $fb, $00, $03, $08, $0b, $0f, $12, $14, $18, $1a
151ce     1C 1F 20 22 
151d2     22 22 20 1D 
151d6     18 13 0D 07 
151da     01 FC F6 F2 | 	byte	$1c, $1f, $20, $22, $22, $22, $20, $1d, $18, $13, $0d, $07, $01, $fc, $f6, $f2
151de     EF ED EB E9 
151e2     E8 E7 E7 E8 
151e6     E9 EB ED F1 
151ea     F6 FB 00 06 | 	byte	$ef, $ed, $eb, $e9, $e8, $e7, $e7, $e8, $e9, $eb, $ed, $f1, $f6, $fb, $00, $06
151ee     0B 0E 12 15 
151f2     17 18 19 19 
151f6     19 1A 1A 1A 
151fa     19 19 18 18 | 	byte	$0b, $0e, $12, $15, $17, $18, $19, $19, $19, $1a, $1a, $1a, $19, $19, $18, $18
151fe     17 16 15 13 
15202     12 0F 0E 0C 
15206     0A 09 08 07 
1520a     07 05 05 04 | 	byte	$17, $16, $15, $13, $12, $0f, $0e, $0c, $0a, $09, $08, $07, $07, $05, $05, $04
1520e     04 03 03 02 
15212     01 FF FE FC 
15216     FB FA F9 F8 
1521a     F7 F6 F6 F6 | 	byte	$04, $03, $03, $02, $01, $ff, $fe, $fc, $fb, $fa, $f9, $f8, $f7, $f6, $f6, $f6
1521e     F7 F8 F8 F9 
15222     F9 F9 F9 F9 
15226     F9 F8 F6 F4 
1522a     F2 F0 EE ED | 	byte	$f7, $f8, $f8, $f9, $f9, $f9, $f9, $f9, $f9, $f8, $f6, $f4, $f2, $f0, $ee, $ed
1522e     EB EA E8 E7 
15232     E7 E7 E8 E8 
15236     E8 E7 E7 E7 
1523a     E7 E7 E7 E7 | 	byte	$eb, $ea, $e8, $e7, $e7, $e7, $e8, $e8, $e8, $e7, $e7, $e7, $e7, $e7, $e7, $e7
1523e     E7 E8 EB ED 
15242     F0 F4 F9 FD 
15246     02 07 0B 0E 
1524a     11 14 17 19 | 	byte	$e7, $e8, $eb, $ed, $f0, $f4, $f9, $fd, $02, $07, $0b, $0e, $11, $14, $17, $19
1524e     1C 1E 20 21 
15252     21 20 1E 1B 
15256     16 11 0B 05 
1525a     FF FA F5 F1 | 	byte	$1c, $1e, $20, $21, $21, $20, $1e, $1b, $16, $11, $0b, $05, $ff, $fa, $f5, $f1
1525e     EF ED EA E9 
15262     E8 E7 E8 E9 
15266     EA EB EF F2 
1526a     F6 FB 01 06 | 	byte	$ef, $ed, $ea, $e9, $e8, $e7, $e8, $e9, $ea, $eb, $ef, $f2, $f6, $fb, $01, $06
1526e     0A 0E 12 14 
15272     16 18 18 18 
15276     18 19 19 19 
1527a     19 18 18 18 | 	byte	$0a, $0e, $12, $14, $16, $18, $18, $18, $18, $19, $19, $19, $19, $18, $18, $18
1527e     17 17 16 15 
15282     12 11 10 0E 
15286     0D 0B 0A 09 
1528a     08 08 07 06 | 	byte	$17, $17, $16, $15, $12, $11, $10, $0e, $0d, $0b, $0a, $09, $08, $08, $07, $06
1528e     05 05 04 03 
15292     02 01 00 FE 
15296     FD FC FB FA 
1529a     F9 F9 F8 F8 | 	byte	$05, $05, $04, $03, $02, $01, $00, $fe, $fd, $fc, $fb, $fa, $f9, $f9, $f8, $f8
1529e     F9 F9 F9 FA 
152a2     F9 F9 F9 F9 
152a6     F9 F8 F6 F5 
152aa     F2 F1 EF ED | 	byte	$f9, $f9, $f9, $fa, $f9, $f9, $f9, $f9, $f9, $f8, $f6, $f5, $f2, $f1, $ef, $ed
152ae     EB E9 E8 E7 
152b2     E7 E6 E7 E7 
152b6     E7 E6 E6 E6 
152ba     E6 E6 E6 E6 | 	byte	$eb, $e9, $e8, $e7, $e7, $e6, $e7, $e7, $e7, $e6, $e6, $e6, $e6, $e6, $e6, $e6
152be     E6 E7 E9 EB 
152c2     EF F3 F7 FC 
152c6     01 06 09 0D 
152ca     11 14 16 19 | 	byte	$e6, $e7, $e9, $eb, $ef, $f3, $f7, $fc, $01, $06, $09, $0d, $11, $14, $16, $19
152ce     1B 1D 1E 1F 
152d2     1F 1F 1C 19 
152d6     14 0F 09 04 
152da     FD F8 F3 F0 | 	byte	$1b, $1d, $1e, $1f, $1f, $1f, $1c, $19, $14, $0f, $09, $04, $fd, $f8, $f3, $f0
152de     EE EB EA E9 
152e2     E8 E8 E9 E9 
152e6     EA ED EF F2 
152ea     F7 FC 01 05 | 	byte	$ee, $eb, $ea, $e9, $e8, $e8, $e9, $e9, $ea, $ed, $ef, $f2, $f7, $fc, $01, $05
152ee     0A 0E 11 13 
152f2     16 17 18 18 
152f6     18 18 18 18 
152fa     18 17 17 17 | 	byte	$0a, $0e, $11, $13, $16, $17, $18, $18, $18, $18, $18, $18, $18, $17, $17, $17
152fe     17 17 16 15 
15302     14 13 11 10 
15306     0F 0D 0C 0B 
1530a     0A 09 08 07 | 	byte	$17, $17, $16, $15, $14, $13, $11, $10, $0f, $0d, $0c, $0b, $0a, $09, $08, $07
1530e     07 06 05 04 
15312     03 03 01 00 
15316     00 FE FD FC 
1531a     FB FB FA FA | 	byte	$07, $06, $05, $04, $03, $03, $01, $00, $00, $fe, $fd, $fc, $fb, $fb, $fa, $fa
1531e     FA FA FA FB 
15322     FB FA FA FA 
15326     F9 F8 F7 F5 
1532a     F4 F2 F0 EE | 	byte	$fa, $fa, $fa, $fb, $fb, $fa, $fa, $fa, $f9, $f8, $f7, $f5, $f4, $f2, $f0, $ee
1532e     EC EA E8 E7 
15332     E6 E6 E6 E6 
15336     E6 E5 E5 E5 
1533a     E4 E4 E4 E4 | 	byte	$ec, $ea, $e8, $e7, $e6, $e6, $e6, $e6, $e6, $e5, $e5, $e5, $e4, $e4, $e4, $e4
1533e     E4 E5 E7 EA 
15342     EE F1 F6 FC 
15346     01 05 09 0D 
1534a     10 13 16 18 | 	byte	$e4, $e5, $e7, $ea, $ee, $f1, $f6, $fc, $01, $05, $09, $0d, $10, $13, $16, $18
1534e     1B 1C 1D 1E 
15352     1E 1D 1A 17 
15356     12 0D 08 02 
1535a     FB F6 F3 F0 | 	byte	$1b, $1c, $1d, $1e, $1e, $1d, $1a, $17, $12, $0d, $08, $02, $fb, $f6, $f3, $f0
1535e     ED EB EA E9 
15362     E8 E9 E9 EA 
15366     EC EE F0 F4 
1536a     F8 FD 01 05 | 	byte	$ed, $eb, $ea, $e9, $e8, $e9, $e9, $ea, $ec, $ee, $f0, $f4, $f8, $fd, $01, $05
1536e     0A 0E 10 13 
15372     15 16 17 17 
15376     17 17 17 17 
1537a     17 16 16 16 | 	byte	$0a, $0e, $10, $13, $15, $16, $17, $17, $17, $17, $17, $17, $17, $16, $16, $16
1537e     16 16 16 15 
15382     14 13 12 11 
15386     0F 0F 0D 0C 
1538a     0B 0A 09 08 | 	byte	$16, $16, $16, $15, $14, $13, $12, $11, $0f, $0f, $0d, $0c, $0b, $0a, $09, $08
1538e     08 07 06 05 
15392     05 04 03 02 
15396     01 00 FF FF 
1539a     FE FD FC FC | 	byte	$08, $07, $06, $05, $05, $04, $03, $02, $01, $00, $ff, $ff, $fe, $fd, $fc, $fc
1539e     FC FC FB FB 
153a2     FB FB FB FA 
153a6     FA F9 F7 F6 
153aa     F5 F2 F1 EF | 	byte	$fc, $fc, $fb, $fb, $fb, $fb, $fb, $fa, $fa, $f9, $f7, $f6, $f5, $f2, $f1, $ef
153ae     EC EA E8 E7 
153b2     E7 E6 E6 E5 
153b6     E5 E4 E4 E3 
153ba     E3 E3 E3 E3 | 	byte	$ec, $ea, $e8, $e7, $e7, $e6, $e6, $e5, $e5, $e4, $e4, $e3, $e3, $e3, $e3, $e3
153be     E3 E4 E7 E9 
153c2     EC F1 F6 FB 
153c6     00 05 09 0C 
153ca     0F 13 15 18 | 	byte	$e3, $e4, $e7, $e9, $ec, $f1, $f6, $fb, $00, $05, $09, $0c, $0f, $13, $15, $18
153ce     1A 1B 1C 1D 
153d2     1D 1B 19 14 
153d6     11 0B 05 00 
153da     FB F6 F2 EE | 	byte	$1a, $1b, $1c, $1d, $1d, $1b, $19, $14, $11, $0b, $05, $00, $fb, $f6, $f2, $ee
153de     EC EB E9 E9 
153e2     E9 E9 E9 EB 
153e6     EC EE F1 F4 
153ea     F8 FC 00 05 | 	byte	$ec, $eb, $e9, $e9, $e9, $e9, $e9, $eb, $ec, $ee, $f1, $f4, $f8, $fc, $00, $05
153ee     09 0C 10 12 
153f2     14 15 16 17 
153f6     17 17 17 16 
153fa     16 16 15 16 | 	byte	$09, $0c, $10, $12, $14, $15, $16, $17, $17, $17, $17, $16, $16, $16, $15, $16
153fe     15 16 15 15 
15402     14 14 13 12 
15406     11 10 0F 0D 
1540a     0C 0B 0A 09 | 	byte	$15, $16, $15, $15, $14, $14, $13, $12, $11, $10, $0f, $0d, $0c, $0b, $0a, $09
1540e     09 08 07 06 
15412     05 05 04 03 
15416     02 01 00 FF 
1541a     FD FC FC FA | 	byte	$09, $08, $07, $06, $05, $05, $04, $03, $02, $01, $00, $ff, $fd, $fc, $fc, $fa
1541e     FA F9 F8 F7 
15422     F6 F6 F5 F3 
15426     F2 F0 EF EE 
1542a     EB EA E9 E7 | 	byte	$fa, $f9, $f8, $f7, $f6, $f6, $f5, $f3, $f2, $f0, $ef, $ee, $eb, $ea, $e9, $e7
1542e     E6 E5 E5 E5 
15432     E5 E6 E6 E7 
15436     E9 EA EB EC 
1543a     EF F0 F3 F5 | 	byte	$e6, $e5, $e5, $e5, $e5, $e6, $e6, $e7, $e9, $ea, $eb, $ec, $ef, $f0, $f3, $f5
1543e     F7 FB FD FF 
15442     02 05 08 09 
15446     0B 0C 0D 0F 
1544a     0F 10 10 10 | 	byte	$f7, $fb, $fd, $ff, $02, $05, $08, $09, $0b, $0c, $0d, $0f, $0f, $10, $10, $10
1544e     10 10 10 0F 
15452     0E 0D 0C 0B 
15456     0A 08 06 05 
1545a     03 02 00 FF | 	byte	$10, $10, $10, $0f, $0e, $0d, $0c, $0b, $0a, $08, $06, $05, $03, $02, $00, $ff
1545e     FE FC FB FA 
15462     F9 F9 F8 F7 
15466     F7 F7 F6 F6 
1546a     F6 F7 F7 F7 | 	byte	$fe, $fc, $fb, $fa, $f9, $f9, $f8, $f7, $f7, $f7, $f6, $f6, $f6, $f7, $f7, $f7
1546e     F8 F8 F9 FA 
15472     FB FB FD FD 
15476     FE FF 00 01 
1547a     02 02 04 04 | 	byte	$f8, $f8, $f9, $fa, $fb, $fb, $fd, $fd, $fe, $ff, $00, $01, $02, $02, $04, $04
1547e     05 06 07 08 
15482     08 09 09 09 
15486     0A 0A 0A 0A 
1548a     0A 0A 0A 09 | 	byte	$05, $06, $07, $08, $08, $09, $09, $09, $0a, $0a, $0a, $0a, $0a, $0a, $0a, $09
1548e     09 09 08 08 
15492     08 07 06 06 
15496     05 04 04 03 
1549a     02 02 01 00 | 	byte	$09, $09, $08, $08, $08, $07, $06, $06, $05, $04, $04, $03, $02, $02, $01, $00
1549e     00 FE FE FD 
154a2     FD FD FC FC 
154a6     FB FB FB FA 
154aa     FA FA FA FA | 	byte	$00, $fe, $fe, $fd, $fd, $fd, $fc, $fc, $fb, $fb, $fb, $fa, $fa, $fa, $fa, $fa
154ae     FB FB FB FB 
154b2     FC FC FC FD 
154b6     FD FD FE FF 
154ba     FF 00 00 00 | 	byte	$fb, $fb, $fb, $fb, $fc, $fc, $fc, $fd, $fd, $fd, $fe, $ff, $ff, $00, $00, $00
154be     01 02 02 03 
154c2     03 03 04 04 
154c6     04 04 04 04 
154ca     05 04 04 04 | 	byte	$01, $02, $02, $03, $03, $03, $04, $04, $04, $04, $04, $04, $05, $04, $04, $04
154ce     05 04 04 03 
154d2     03 03 03 03 
154d6     02 02 02 01 
154da     01 00 00 00 | 	byte	$05, $04, $04, $03, $03, $03, $03, $03, $02, $02, $02, $01, $01, $00, $00, $00
154de     FF FF FE FE 
154e2     FE FD FD FD 
154e6     FD FD FD FD 
154ea     FD FC FC FC | 	byte	$ff, $ff, $fe, $fe, $fe, $fd, $fd, $fd, $fd, $fd, $fd, $fd, $fd, $fc, $fc, $fc
154ee     FC FC FD FD 
154f2     FD FD FD FD 
154f6     FE FE FE FF 
154fa     FF FF 00 00 | 	byte	$fc, $fc, $fd, $fd, $fd, $fd, $fd, $fd, $fe, $fe, $fe, $ff, $ff, $ff, $00, $00
154fe     00 01 01 01 
15502     01 01 01 01 
15506     01 02 02 02 
1550a     02 02 03 02 | 	byte	$00, $01, $01, $01, $01, $01, $01, $01, $01, $02, $02, $02, $02, $02, $03, $02
1550e     02 02 02 02 
15512     02          | 	byte	$02[5]
15513     01 01 01 01 
15517     01 01 01 01 | 	byte	$01[8]
1551b     00 00 00 FF 
1551f     FF FF FF FE 
15523     FE FE FE FE 
15527     FE FE FE FE | 	byte	$00, $00, $00, $ff, $ff, $ff, $ff, $fe, $fe, $fe, $fe, $fe, $fe, $fe, $fe, $fe
1552b     FE FE FE FE 
1552f     FE FE FE FE 
15533     FE FE FE FE | 	byte	$fe[12]
15537     FF FF FF FF 
1553b     FF FF FF    | 	byte	$ff[7]
1553e     00 00 00 00 
15542     00 00       | 	byte	$00[6]
15544     20 AB 00 00 
15548     00 11 13 FF 
1554c     ED E3 D8 E5 
15550     00 0E 23 3C | 	byte	$20, $ab, $00, $00, $00, $11, $13, $ff, $ed, $e3, $d8, $e5, $00, $0e, $23, $3c
15554     3F 33 26 D8 
15558     80 80 80 97 
1555c     D9 1B 4B 7F 
15560     70 62 30 0F | 	byte	$3f, $33, $26, $d8, $80, $80, $80, $97, $d9, $1b, $4b, $7f, $70, $62, $30, $0f
15564     F5 F9 17 1A 
15568     16 16 E8 D5 
1556c     D1 D4 E8 0E 
15570     25 30 44 44 | 	byte	$f5, $f9, $17, $1a, $16, $16, $e8, $d5, $d1, $d4, $e8, $0e, $25, $30, $44, $44
15574     26 F3 90 80 
15578     80 84 BB F8 
1557c     2B 4A 72 69 
15580     44 27 14 00 | 	byte	$26, $f3, $90, $80, $80, $84, $bb, $f8, $2b, $4a, $72, $69, $44, $27, $14, $00
15584     09 12 0B 03 
15588     F4 D5 CF CF 
1558c     E2 02 1F 35 
15590     3E 3D 3B 1D | 	byte	$09, $12, $0b, $03, $f4, $d5, $cf, $cf, $e2, $02, $1f, $35, $3e, $3d, $3b, $1d
15594     E9 A3 80 80 
15598     87 B0 FC 31 
1559c     55 6A 69 4D 
155a0     26 20 16 0E | 	byte	$e9, $a3, $80, $80, $87, $b0, $fc, $31, $55, $6a, $69, $4d, $26, $20, $16, $0e
155a4     15 07 E6 DB 
155a8     C2 CB D1 FF 
155ac     11 2E 40 41 
155b0     42 33 F1 D5 | 	byte	$15, $07, $e6, $db, $c2, $cb, $d1, $ff, $11, $2e, $40, $41, $42, $33, $f1, $d5
155b4     97 80 96 BF 
155b8     C4 15 38 42 
155bc     44 53 43 2F 
155c0     36 28 09 06 | 	byte	$97, $80, $96, $bf, $c4, $15, $38, $42, $44, $53, $43, $2f, $36, $28, $09, $06
155c4     E3 C9 D7 D4 
155c8     D8 F6 09 12 
155cc     34 3F 31 2A 
155d0     10 D2 CA B9 | 	byte	$e3, $c9, $d7, $d4, $d8, $f6, $09, $12, $34, $3f, $31, $2a, $10, $d2, $ca, $b9
155d4     A2 B1 CB B9 
155d8     DC 1C 29 40 
155dc     60 45 32 2E 
155e0     1B 03 FF E3 | 	byte	$a2, $b1, $cb, $b9, $dc, $1c, $29, $40, $60, $45, $32, $2e, $1b, $03, $ff, $e3
155e4     C4 D4 D6 D8 
155e8     04 0A 0B 1F 
155ec     25 2A 34 18 
155f0     E4 CC B1 AD | 	byte	$c4, $d4, $d6, $d8, $04, $0a, $0b, $1f, $25, $2a, $34, $18, $e4, $cc, $b1, $ad
155f4     B3 D1 DB EA 
155f8     0D 0F 1E 4D 
155fc     4E 54 54 31 
15600     0D E8 CC C2 | 	byte	$b3, $d1, $db, $ea, $0d, $0f, $1e, $4d, $4e, $54, $54, $31, $0d, $e8, $cc, $c2
15604     C9 D1 D5 04 
15608     12 2C 3C 3F 
1560c     34 10 E4 CA 
15610     C0 CF E1 EA | 	byte	$c9, $d1, $d5, $04, $12, $2c, $3c, $3f, $34, $10, $e4, $ca, $c0, $cf, $e1, $ea
15614     D2 E3 C7 D9 
15618     07 23 3D 68 
1561c     5E 57 3D 0F 
15620     D7 C0 BE CC | 	byte	$d2, $e3, $c7, $d9, $07, $23, $3d, $68, $5e, $57, $3d, $0f, $d7, $c0, $be, $cc
15624     ED 09 13 21 
15628     20 1D 1F 21 
1562c     0D E4 DB CD 
15630     CA F3 FE EF | 	byte	$ed, $09, $13, $21, $20, $1d, $1f, $21, $0d, $e4, $db, $cd, $ca, $f3, $fe, $ef
15634     F0 DE BC E7 
15638     09 19 53 7B 
1563c     59 4F 1A DB 
15640     D0 CE CC CF | 	byte	$f0, $de, $bc, $e7, $09, $19, $53, $7b, $59, $4f, $1a, $db, $d0, $ce, $cc, $cf
15644     FD F4 09 2A 
15648     26 2F 2E 05 
1564c     D4 D1 CA D8 
15650     15 17 0A E4 | 	byte	$fd, $f4, $09, $2a, $26, $2f, $2e, $05, $d4, $d1, $ca, $d8, $15, $17, $0a, $e4
15654     D2 A6 C2 F0 
15658     11 36 7F 6E 
1565c     60 3F E4 BD 
15660     AF B4 DE 08 | 	byte	$d2, $a6, $c2, $f0, $11, $36, $7f, $6e, $60, $3f, $e4, $bd, $af, $b4, $de, $08
15664     16 14 2B 10 
15668     16 20 F1 DD 
1566c     D7 C0 DF 0C 
15670     24 2C 2C E5 | 	byte	$16, $14, $2b, $10, $16, $20, $f1, $dd, $d7, $c0, $df, $0c, $24, $2c, $2c, $e5
15674     B0 A5 B2 EE 
15678     2E 48 67 62 
1567c     42 0E E7 CB 
15680     C0 D2 E2 FF | 	byte	$b0, $a5, $b2, $ee, $2e, $48, $67, $62, $42, $0e, $e7, $cb, $c0, $d2, $e2, $ff
15684     21 2A 25 17 
15688     FE D4 C8 C7 
1568c     C7 F8 25 33 
15690     48 43 08 A9 | 	byte	$21, $2a, $25, $17, $fe, $d4, $c8, $c7, $c7, $f8, $25, $33, $48, $43, $08, $a9
15694     9E 84 AA 05 
15698     2F 53 7C 64 
1569c     33 05 D9 C4 
156a0     D7 E5 EA 12 | 	byte	$9e, $84, $aa, $05, $2f, $53, $7c, $64, $33, $05, $d9, $c4, $d7, $e5, $ea, $12
156a4     20 06 25 01 
156a8     D4 DE C7 CD 
156ac     FE 1B 26 47 
156b0     58 2D 03 BC | 	byte	$20, $06, $25, $01, $d4, $de, $c7, $cd, $fe, $1b, $26, $47, $58, $2d, $03, $bc
156b4     86 8E BC FC 
156b8     30 6E 7D 5D 
156bc     3F FB D4 D1 
156c0     CD D6 0F 1D | 	byte	$86, $8e, $bc, $fc, $30, $6e, $7d, $5d, $3f, $fb, $d4, $d1, $cd, $d6, $0f, $1d
156c4     1E 1A F7 BC 
156c8     C5 BC CB 18 
156cc     33 3D 59 4D 
156d0     28 09 CD 84 | 	byte	$1e, $1a, $f7, $bc, $c5, $bc, $cb, $18, $33, $3d, $59, $4d, $28, $09, $cd, $84
156d4     AF A4 BB 0F 
156d8     3D 4A 6E 62 
156dc     2D 0D FA DA 
156e0     E6 F1 E3 FB | 	byte	$af, $a4, $bb, $0f, $3d, $4a, $6e, $62, $2d, $0d, $fa, $da, $e6, $f1, $e3, $fb
156e4     12 E7 D6 C4 
156e8     BF CD 0B 2B 
156ec     3F 5B 5A 34 
156f0     2C FA B1 81 | 	byte	$12, $e7, $d6, $c4, $bf, $cd, $0b, $2b, $3f, $5b, $5a, $34, $2c, $fa, $b1, $81
156f4     8A 9D CD 13 
156f8     40 62 7E 64 
156fc     3B 11 DE DA 
15700     E7 E6 F3 FA | 	byte	$8a, $9d, $cd, $13, $40, $62, $7e, $64, $3b, $11, $de, $da, $e7, $e6, $f3, $fa
15704     E3 C5 BF B9 
15708     CC 06 33 4C 
1570c     60 57 33 13 
15710     F3 D6 C6 98 | 	byte	$e3, $c5, $bf, $b9, $cc, $06, $33, $4c, $60, $57, $33, $13, $f3, $d6, $c6, $98
15714     95 B7 C4 FE 
15718     3D 5C 72 76 
1571c     4E 1B E7 DC 
15720     D5 E2 EC DD | 	byte	$95, $b7, $c4, $fe, $3d, $5c, $72, $76, $4e, $1b, $e7, $dc, $d5, $e2, $ec, $dd
15724     DC A8 BB BA 
15728     D9 2D 55 68 
1572c     79 53 2A F4 
15730     DD CA CA 9D | 	byte	$dc, $a8, $bb, $ba, $d9, $2d, $55, $68, $79, $53, $2a, $f4, $dd, $ca, $ca, $9d
15734     A1 AE AA EA 
15738     2D 54 78 7F 
1573c     6B 44 F6 C8 
15740     C7 C8 D0 CC | 	byte	$a1, $ae, $aa, $ea, $2d, $54, $78, $7f, $6b, $44, $f6, $c8, $c7, $c8, $d0, $cc
15744     AB 9D B5 BF 
15748     02 4A 79 7F 
1574c     7C 50 0C DE 
15750     B9 B9 BE 94 | 	byte	$ab, $9d, $b5, $bf, $02, $4a, $79, $7f, $7c, $50, $0c, $de, $b9, $b9, $be, $94
15754     A4 CE C0 06 
15758     41 60 7D 7F 
1575c     67 27 E8 A0 
15760     AD C3 C7 BF | 	byte	$a4, $ce, $c0, $06, $41, $60, $7d, $7f, $67, $27, $e8, $a0, $ad, $c3, $c7, $bf
15764     C2 B2 BE E5 
15768     2B 5B 78 7F 
1576c     5E 1F F4 C8 
15770     CD D1 D1 BA | 	byte	$c2, $b2, $be, $e5, $2b, $5b, $78, $7f, $5e, $1f, $f4, $c8, $cd, $d1, $d1, $ba
15774     A8 B3 BF E1 
15778     2B 69 7F 7F 
1577c     65 36 E3 B7 
15780     AD B8 C9 BF | 	byte	$a8, $b3, $bf, $e1, $2b, $69, $7f, $7f, $65, $36, $e3, $b7, $ad, $b8, $c9, $bf
15784     B1 AB B3 F1 
15788     2D 64 7E 7F 
1578c     6D 32 E2 AA 
15790     B2 CD D1 C7 | 	byte	$b1, $ab, $b3, $f1, $2d, $64, $7e, $7f, $6d, $32, $e2, $aa, $b2, $cd, $d1, $c7
15794     B0 AA B6 E3 
15798     2F 6F 7F 7F 
1579c     71 35 BC 83 
157a0     97 A3 BE B7 | 	byte	$b0, $aa, $b6, $e3, $2f, $6f, $7f, $7f, $71, $35, $bc, $83, $97, $a3, $be, $b7
157a4     B4 B3 C3 0C 
157a8     2E 71 7F 7F 
157ac     66 1C D1 9E 
157b0     A8 B8 C9 D0 | 	byte	$b4, $b3, $c3, $0c, $2e, $71, $7f, $7f, $66, $1c, $d1, $9e, $a8, $b8, $c9, $d0
157b4     B6 B5 CE D3 
157b8     3C 6E 7F 7F 
157bc     66 1D AB 8B 
157c0     92 AC CB AA | 	byte	$b6, $b5, $ce, $d3, $3c, $6e, $7f, $7f, $66, $1d, $ab, $8b, $92, $ac, $cb, $aa
157c4     B3 A6 BF 00 
157c8     49 73 7F 7F 
157cc     5C E8 9E 8D 
157d0     AC CC DF E2 | 	byte	$b3, $a6, $bf, $00, $49, $73, $7f, $7f, $5c, $e8, $9e, $8d, $ac, $cc, $df, $e2
157d4     C5 B3 C6 D6 
157d8     37 7B 7F 7F 
157dc     73 1A 90 86 
157e0     92 B7 C8 B5 | 	byte	$c5, $b3, $c6, $d6, $37, $7b, $7f, $7f, $73, $1a, $90, $86, $92, $b7, $c8, $b5
157e4     B3 98 B8 07 
157e8     3E 72 7F 7F 
157ec     65 EF 94 81 
157f0     9B B9 DC F8 | 	byte	$b3, $98, $b8, $07, $3e, $72, $7f, $7f, $65, $ef, $94, $81, $9b, $b9, $dc, $f8
157f4     D7 B9 C0 C6 
157f8     22 68 7F 7F 
157fc     6B 14 B3 80 
15800     81 9F B0 9A | 	byte	$d7, $b9, $c0, $c6, $22, $68, $7f, $7f, $6b, $14, $b3, $80, $81, $9f, $b0, $9a
15804     AC A6 C6 1B 
15808     54 7D 7F 7F 
1580c     40 D8 80 80 
15810     9B BE F1 0A | 	byte	$ac, $a6, $c6, $1b, $54, $7d, $7f, $7f, $40, $d8, $80, $80, $9b, $be, $f1, $0a
15814     E6 B1 C8 C7 
15818     25 67 7F 7C 
1581c     64 F8 97 83 
15820     8B AE B7 A8 | 	byte	$e6, $b1, $c8, $c7, $25, $67, $7f, $7c, $64, $f8, $97, $83, $8b, $ae, $b7, $a8
15824     A3 AB C0 FE 
15828     59 7F 7F 7D 
1582c     3B A3 80 80 
15830     9F CD 20 34 | 	byte	$a3, $ab, $c0, $fe, $59, $7f, $7f, $7d, $3b, $a3, $80, $80, $9f, $cd, $20, $34
15834     05 C3 A2 A3 
15838     F5 3E 7F 7F 
1583c     78 22 9E 80 
15840     80 A4 AD B1 | 	byte	$05, $c3, $a2, $a3, $f5, $3e, $7f, $7f, $78, $22, $9e, $80, $80, $a4, $ad, $b1
15844     B1 AA D0 06 
15848     4C 7C 7F 7E 
1584c     46 B6 80 81 
15850     9B BE 0C 26 | 	byte	$b1, $aa, $d0, $06, $4c, $7c, $7f, $7e, $46, $b6, $80, $81, $9b, $be, $0c, $26
15854     0C D6 C2 B7 
15858     D4 3E 76 7D 
1585c     7B 20 AF 80 
15860     88 9F B7 B9 | 	byte	$0c, $d6, $c2, $b7, $d4, $3e, $76, $7d, $7b, $20, $af, $80, $88, $9f, $b7, $b9
15864     AA B3 DB 0A 
15868     60 7F 7F 7F 
1586c     23 9A 80 81 
15870     A8 E5 2D 3E | 	byte	$aa, $b3, $db, $0a, $60, $7f, $7f, $7f, $23, $9a, $80, $81, $a8, $e5, $2d, $3e
15874     14 D0 AB B0 
15878     E4 3F 7F 7E 
1587c     79 1F A3 80 
15880     91 AB C2 CE | 	byte	$14, $d0, $ab, $b0, $e4, $3f, $7f, $7e, $79, $1f, $a3, $80, $91, $ab, $c2, $ce
15884     BA B8 CF F8 
15888     4B 7F 7F 7A 
1588c     26 BF 80 80 
15890     A7 EB 42 4E | 	byte	$ba, $b8, $cf, $f8, $4b, $7f, $7f, $7a, $26, $bf, $80, $80, $a7, $eb, $42, $4e
15894     31 C5 96 A6 
15898     C5 50 7A 7F 
1589c     77 1D B9 80 
158a0     9D BA C1 D0 | 	byte	$31, $c5, $96, $a6, $c5, $50, $7a, $7f, $77, $1d, $b9, $80, $9d, $ba, $c1, $d0
158a4     A9 A0 CD F2 
158a8     51 7F 7F 7F 
158ac     43 B2 80 81 
158b0     A0 D4 35 56 | 	byte	$a9, $a0, $cd, $f2, $51, $7f, $7f, $7f, $43, $b2, $80, $81, $a0, $d4, $35, $56
158b4     2D B6 8C 9C 
158b8     BD 44 7A 7F 
158bc     76 1C AB 80 
158c0     A3 CA DF D9 | 	byte	$2d, $b6, $8c, $9c, $bd, $44, $7a, $7f, $76, $1c, $ab, $80, $a3, $ca, $df, $d9
158c4     A2 8C B2 D9 
158c8     3C 7F 7F 7F 
158cc     35 97 80 80 
158d0     96 E1 37 67 | 	byte	$a2, $8c, $b2, $d9, $3c, $7f, $7f, $7f, $35, $97, $80, $80, $96, $e1, $37, $67
158d4     2F CB 83 98 
158d8     BB 23 71 79 
158dc     61 00 A3 81 
158e0     AB D3 D8 D5 | 	byte	$2f, $cb, $83, $98, $bb, $23, $71, $79, $61, $00, $a3, $81, $ab, $d3, $d8, $d5
158e4     96 80 A2 C9 
158e8     3E 7F 7F 7E 
158ec     29 80 80 80 
158f0     A4 D6 3D 50 | 	byte	$96, $80, $a2, $c9, $3e, $7f, $7f, $7e, $29, $80, $80, $80, $a4, $d6, $3d, $50
158f4     21 AF 80 A2 
158f8     C6 34 77 72 
158fc     4B E8 90 91 
15900     B7 D8 D5 B4 | 	byte	$21, $af, $80, $a2, $c6, $34, $77, $72, $4b, $e8, $90, $91, $b7, $d8, $d5, $b4
15904     86 81 A7 CE 
15908     4F 7F 7F 7F 
1590c     1F 80 80 81 
15910     A2 E0 4F 61 | 	byte	$86, $81, $a7, $ce, $4f, $7f, $7f, $7f, $1f, $80, $80, $81, $a2, $e0, $4f, $61
15914     1B 9F 81 9E 
15918     C0 28 7A 77 
1591c     3A CA 8C 8E 
15920     B5 EA EB B4 | 	byte	$1b, $9f, $81, $9e, $c0, $28, $7a, $77, $3a, $ca, $8c, $8e, $b5, $ea, $eb, $b4
15924     80 80 A8 DC 
15928     4C 7F 7F 7F 
1592c     15 91 80 84 
15930     AF EB 4D 5A | 	byte	$80, $80, $a8, $dc, $4c, $7f, $7f, $7f, $15, $91, $80, $84, $af, $eb, $4d, $5a
15934     14 C4 80 AC 
15938     CA 22 70 60 
1593c     2F E4 A0 AF 
15940     C9 0E E7 9B | 	byte	$14, $c4, $80, $ac, $ca, $22, $70, $60, $2f, $e4, $a0, $af, $c9, $0e, $e7, $9b
15944     80 80 A8 FF 
15948     60 7F 7F 76 
1594c     F4 80 80 80 
15950     C5 02 45 4C | 	byte	$80, $80, $a8, $ff, $60, $7f, $7f, $76, $f4, $80, $80, $80, $c5, $02, $45, $4c
15954     EE A3 80 AC 
15958     CF 37 77 69 
1595c     2E DD 9F AC 
15960     C2 F6 D4 8E | 	byte	$ee, $a3, $80, $ac, $cf, $37, $77, $69, $2e, $dd, $9f, $ac, $c2, $f6, $d4, $8e
15964     80 80 AD FD 
15968     58 7F 7F 6C 
1596c     DB 80 80 89 
15970     C3 02 40 41 | 	byte	$80, $80, $ad, $fd, $58, $7f, $7f, $6c, $db, $80, $80, $89, $c3, $02, $40, $41
15974     ED 96 83 B8 
15978     F5 3A 6C 56 
1597c     11 CA AA BE 
15980     CF F5 C1 86 | 	byte	$ed, $96, $83, $b8, $f5, $3a, $6c, $56, $11, $ca, $aa, $be, $cf, $f5, $c1, $86
15984     80 80 B9 13 
15988     6E 7F 7F 61 
1598c     CC 80 80 89 
15990     D3 0E 34 3A | 	byte	$80, $80, $b9, $13, $6e, $7f, $7f, $61, $cc, $80, $80, $89, $d3, $0e, $34, $3a
15994     E8 8E 80 AF 
15998     E2 33 63 5B 
1599c     11 E0 AF C4 
159a0     DB FA D4 80 | 	byte	$e8, $8e, $80, $af, $e2, $33, $63, $5b, $11, $e0, $af, $c4, $db, $fa, $d4, $80
159a4     80 80 9B 07 
159a8     53 7F 7F 6A 
159ac     EB 80 80 80 
159b0     C0 E9 04 12 | 	byte	$80, $80, $9b, $07, $53, $7f, $7f, $6a, $eb, $80, $80, $80, $c0, $e9, $04, $12
159b4     D4 9E 82 AF 
159b8     F2 27 5B 50 
159bc     0F DA A0 C0 
159c0     CF DC CA 80 | 	byte	$d4, $9e, $82, $af, $f2, $27, $5b, $50, $0f, $da, $a0, $c0, $cf, $dc, $ca, $80
159c4     80 80 A7 18 
159c8     68 7F 7F 59 
159cc     C8 80 80 8B 
159d0     C4 F5 08 19 | 	byte	$80, $80, $a7, $18, $68, $7f, $7f, $59, $c8, $80, $80, $8b, $c4, $f5, $08, $19
159d4     DD BC 98 BE 
159d8     00 15 3D 37 
159dc     FB DC C1 CF 
159e0     CF EA B9 80 | 	byte	$dd, $bc, $98, $be, $00, $15, $3d, $37, $fb, $dc, $c1, $cf, $cf, $ea, $b9, $80
159e4     80 80 9D F5 
159e8     61 7F 7F 7B 
159ec     DE 82 80 80 
159f0     C3 F4 1A 1F | 	byte	$80, $80, $9d, $f5, $61, $7f, $7f, $7b, $de, $82, $80, $80, $c3, $f4, $1a, $1f
159f4     EB A5 88 A1 
159f8     E5 1B 45 46 
159fc     0C E1 C1 C5 
15a00     D2 D2 A8 80 | 	byte	$eb, $a5, $88, $a1, $e5, $1b, $45, $46, $0c, $e1, $c1, $c5, $d2, $d2, $a8, $80
15a04     80 80 93 16 
15a08     63 7F 7F 67 
15a0c     F3 80 80 80 
15a10     A1 E4 04 11 | 	byte	$80, $80, $93, $16, $63, $7f, $7f, $67, $f3, $80, $80, $80, $a1, $e4, $04, $11
15a14     FA C8 A1 B2 
15a18     F6 14 36 46 
15a1c     05 D5 C2 BA 
15a20     CF CF CF 80 | 	byte	$fa, $c8, $a1, $b2, $f6, $14, $36, $46, $05, $d5, $c2, $ba, $cf, $cf, $cf, $80
15a24     80 80 9E 03 
15a28     5E 7F 7F 74 
15a2c     F9 80 80 81 
15a30     B4 E5 04 0F | 	byte	$80, $80, $9e, $03, $5e, $7f, $7f, $74, $f9, $80, $80, $81, $b4, $e5, $04, $0f
15a34     EF D1 A8 A9 
15a38     D7 06 2B 3D 
15a3c     17 E2 C0 B4 
15a40     C2 CE D8 92 | 	byte	$ef, $d1, $a8, $a9, $d7, $06, $2b, $3d, $17, $e2, $c0, $b4, $c2, $ce, $d8, $92
15a44     80 80 81 E6 
15a48     46 7F 7F 7D 
15a4c     1F 87 80 80 
15a50     97 D2 FB 0E | 	byte	$80, $80, $81, $e6, $46, $7f, $7f, $7d, $1f, $87, $80, $80, $97, $d2, $fb, $0e
15a54     03 DC B2 9E 
15a58     DF 00 22 44 
15a5c     27 E6 CC AD 
15a60     B8 C6 D2 9D | 	byte	$03, $dc, $b2, $9e, $df, $00, $22, $44, $27, $e6, $cc, $ad, $b8, $c6, $d2, $9d
15a64     80 80 88 C2 
15a68     29 6F 7F 7F 
15a6c     49 BA 80 80 
15a70     87 BC DC 03 | 	byte	$80, $80, $88, $c2, $29, $6f, $7f, $7f, $49, $ba, $80, $80, $87, $bc, $dc, $03
15a74     0F F4 D8 BC 
15a78     CB 06 14 2F 
15a7c     17 DA BE B8 
15a80     C8 DD EF AD | 	byte	$0f, $f4, $d8, $bc, $cb, $06, $14, $2f, $17, $da, $be, $b8, $c8, $dd, $ef, $ad
15a84     80 80 80 B9 
15a88     2A 7D 7F 7F 
15a8c     4C B0 80 80 
15a90     80 C8 F5 0C | 	byte	$80, $80, $80, $b9, $2a, $7d, $7f, $7f, $4c, $b0, $80, $80, $80, $c8, $f5, $0c
15a94     14 E2 CA AD 
15a98     CD 09 1F 32 
15a9c     1C DB B6 AD 
15aa0     CA E6 F8 D9 | 	byte	$14, $e2, $ca, $ad, $cd, $09, $1f, $32, $1c, $db, $b6, $ad, $ca, $e6, $f8, $d9
15aa4     80 80 80 A1 
15aa8     23 73 7F 7F 
15aac     5C C3 80 80 
15ab0     87 BE FB 10 | 	byte	$80, $80, $80, $a1, $23, $73, $7f, $7f, $5c, $c3, $80, $80, $87, $be, $fb, $10
15ab4     1B F4 D0 A0 
15ab8     BA 06 25 3C 
15abc     31 E1 B0 AA 
15ac0     CC E1 01 D8 | 	byte	$1b, $f4, $d0, $a0, $ba, $06, $25, $3c, $31, $e1, $b0, $aa, $cc, $e1, $01, $d8
15ac4     80 80 80 A6 
15ac8     FE 74 7F 7F 
15acc     63 C1 80 80 
15ad0     84 BE 05 0E | 	byte	$80, $80, $80, $a6, $fe, $74, $7f, $7f, $63, $c1, $80, $80, $84, $be, $05, $0e
15ad4     11 EE CA AC 
15ad8     CB 07 20 38 
15adc     24 D2 AD A8 
15ae0     CB F9 0D EC | 	byte	$11, $ee, $ca, $ac, $cb, $07, $20, $38, $24, $d2, $ad, $a8, $cb, $f9, $0d, $ec
15ae4     86 80 80 9A 
15ae8     0D 7F 7F 7F 
15aec     66 DF 80 80 
15af0     80 BA 00 17 | 	byte	$86, $80, $80, $9a, $0d, $7f, $7f, $7f, $66, $df, $80, $80, $80, $ba, $00, $17
15af4     0B D8 B3 96 
15af8     B9 0C 3C 4D 
15afc     42 EA 9F A1 
15b00     C5 ED 0A 04 | 	byte	$0b, $d8, $b3, $96, $b9, $0c, $3c, $4d, $42, $ea, $9f, $a1, $c5, $ed, $0a, $04
15b04     8C 80 80 90 
15b08     F9 74 7F 7F 
15b0c     6C DD 80 80 
15b10     84 B0 FC 08 | 	byte	$8c, $80, $80, $90, $f9, $74, $7f, $7f, $6c, $dd, $80, $80, $84, $b0, $fc, $08
15b14     FD E5 B4 9C 
15b18     BC 17 36 4F 
15b1c     3E DE 92 95 
15b20     CC F2 18 03 | 	byte	$fd, $e5, $b4, $9c, $bc, $17, $36, $4f, $3e, $de, $92, $95, $cc, $f2, $18, $03
15b24     9E 80 80 94 
15b28     F1 6C 7F 7F 
15b2c     71 D0 80 80 
15b30     93 B1 ED F9 | 	byte	$9e, $80, $80, $94, $f1, $6c, $7f, $7f, $71, $d0, $80, $80, $93, $b1, $ed, $f9
15b34     DF CE A6 A5 
15b38     CD 2B 4A 50 
15b3c     2F C4 82 98 
15b40     CD 03 27 F5 | 	byte	$df, $ce, $a6, $a5, $cd, $2b, $4a, $50, $2f, $c4, $82, $98, $cd, $03, $27, $f5
15b44     82 80 80 99 
15b48     07 7F 7F 7F 
15b4c     5D DA 80 80 
15b50     8E C5 EF FA | 	byte	$82, $80, $80, $99, $07, $7f, $7f, $7f, $5d, $da, $80, $80, $8e, $c5, $ef, $fa
15b54     DA B4 A3 A4 
15b58     D3 28 51 51 
15b5c     21 B0 80 9A 
15b60     CE 01 21 E7 | 	byte	$da, $b4, $a3, $a4, $d3, $28, $51, $51, $21, $b0, $80, $9a, $ce, $01, $21, $e7
15b64     80 80 81 A2 
15b68     FE 7A 7F 7F 
15b6c     55 CA 80 80 
15b70     94 C7 E1 E5 | 	byte	$80, $80, $81, $a2, $fe, $7a, $7f, $7f, $55, $ca, $80, $80, $94, $c7, $e1, $e5
15b74     D4 BE C2 B7 
15b78     D4 28 37 2B 
15b7c     01 A4 91 B1 
15b80     F7 10 1E DF | 	byte	$d4, $be, $c2, $b7, $d4, $28, $37, $2b, $01, $a4, $91, $b1, $f7, $10, $1e, $df
15b84     80 80 81 B3 
15b88     06 77 7F 7E 
15b8c     47 B7 80 84 
15b90     99 C0 DC DA | 	byte	$80, $80, $81, $b3, $06, $77, $7f, $7e, $47, $b7, $80, $84, $99, $c0, $dc, $da
15b94     BF BE CA C5 
15b98     E0 2F 36 22 
15b9c     F1 94 9F C9 
15ba0     FA 19 19 B2 | 	byte	$bf, $be, $ca, $c5, $e0, $2f, $36, $22, $f1, $94, $9f, $c9, $fa, $19, $19, $b2
15ba4     80 80 86 D0 
15ba8     3C 7F 7F 7F 
15bac     22 B5 80 8A 
15bb0     A7 C6 E2 E0 | 	byte	$80, $80, $86, $d0, $3c, $7f, $7f, $7f, $22, $b5, $80, $8a, $a7, $c6, $e2, $e0
15bb4     D1 CF CF C6 
15bb8     EC 35 37 29 
15bbc     FF B4 A4 CD 
15bc0     FA 1A 0C C3 | 	byte	$d1, $cf, $cf, $c6, $ec, $35, $37, $29, $ff, $b4, $a4, $cd, $fa, $1a, $0c, $c3
15bc4     80 80 96 ED 
15bc8     41 7F 7F 68 
15bcc     13 C7 8C 98 
15bd0     B9 CA D7 EE | 	byte	$80, $80, $96, $ed, $41, $7f, $7f, $68, $13, $c7, $8c, $98, $b9, $ca, $d7, $ee
15bd4     D7 E3 EE DC 
15bd8     E6 2D 26 15 
15bdc     FD C8 B6 E2 
15be0     0B 16 02 B8 | 	byte	$d7, $e3, $ee, $dc, $e6, $2d, $26, $15, $fd, $c8, $b6, $e2, $0b, $16, $02, $b8
15be4     80 81 A6 FD 
15be8     48 7C 7E 59 
15bec     14 BB 9B A1 
15bf0     B9 CA E1 EF | 	byte	$80, $81, $a6, $fd, $48, $7c, $7e, $59, $14, $bb, $9b, $a1, $b9, $ca, $e1, $ef
15bf4     EA E8 F9 E4 
15bf8     D6 26 13 08 
15bfc     FC CD C4 F2 
15c00     1D 15 F5 9C | 	byte	$ea, $e8, $f9, $e4, $d6, $26, $13, $08, $fc, $cd, $c4, $f2, $1d, $15, $f5, $9c
15c04     80 83 BA E9 
15c08     3A 7F 77 49 
15c0c     1B DA A9 AB 
15c10     AE C7 EC F2 | 	byte	$80, $83, $ba, $e9, $3a, $7f, $77, $49, $1b, $da, $a9, $ab, $ae, $c7, $ec, $f2
15c14     E8 F8 F9 D8 
15c18     EC 1B 13 0F 
15c1c     FC C6 C9 FC 
15c20     19 1B F1 90 | 	byte	$e8, $f8, $f9, $d8, $ec, $1b, $13, $0f, $fc, $c6, $c9, $fc, $19, $1b, $f1, $90
15c24     80 80 B9 01 
15c28     42 73 79 45 
15c2c     18 E4 BB A7 
15c30     B4 C5 DA ED | 	byte	$80, $80, $b9, $01, $42, $73, $79, $45, $18, $e4, $bb, $a7, $b4, $c5, $da, $ed
15c34     F5 FD 00 FA 
15c38     DA 1E 0A 00 
15c3c     F9 D5 D3 F5 
15c40     1F 16 F2 B4 | 	byte	$f5, $fd, $00, $fa, $da, $1e, $0a, $00, $f9, $d5, $d3, $f5, $1f, $16, $f2, $b4
15c44     80 86 BD E4 
15c48     3B 7A 79 4D 
15c4c     1D E7 A7 AF 
15c50     B2 C2 E1 E8 | 	byte	$80, $86, $bd, $e4, $3b, $7a, $79, $4d, $1d, $e7, $a7, $af, $b2, $c2, $e1, $e8
15c54     E9 04 0A FB 
15c58     E6 1D 02 F4 
15c5c     EC D0 D9 00 
15c60     29 18 ED 98 | 	byte	$e9, $04, $0a, $fb, $e6, $1d, $02, $f4, $ec, $d0, $d9, $00, $29, $18, $ed, $98
15c64     80 88 BD FF 
15c68     45 7F 76 4F 
15c6c     26 DB A5 A0 
15c70     AB C0 EC F2 | 	byte	$80, $88, $bd, $ff, $45, $7f, $76, $4f, $26, $db, $a5, $a0, $ab, $c0, $ec, $f2
15c74     FB 0F 16 06 
15c78     E2 13 F9 F2 
15c7c     F5 DA E6 0B 
15c80     2C 17 E1 90 | 	byte	$fb, $0f, $16, $06, $e2, $13, $f9, $f2, $f5, $da, $e6, $0b, $2c, $17, $e1, $90
15c84     80 8D C9 F6 
15c88     56 79 7E 50 
15c8c     29 D4 A5 9E 
15c90     A0 BB E6 F6 | 	byte	$80, $8d, $c9, $f6, $56, $79, $7e, $50, $29, $d4, $a5, $9e, $a0, $bb, $e6, $f6
15c94     17 24 26 07 
15c98     D3 FC DD D5 
15c9c     F2 E1 F2 16 
15ca0     3B 15 E1 93 | 	byte	$17, $24, $26, $07, $d3, $fc, $dd, $d5, $f2, $e1, $f2, $16, $3b, $15, $e1, $93
15ca4     80 91 D4 F2 
15ca8     4E 7F 75 56 
15cac     21 B6 9D AA 
15cb0     9C C1 F4 04 | 	byte	$80, $91, $d4, $f2, $4e, $7f, $75, $56, $21, $b6, $9d, $aa, $9c, $c1, $f4, $04
15cb4     11 38 2E ED 
15cb8     D6 F1 D5 F1 
15cbc     09 F0 F9 20 
15cc0     23 04 E0 94 | 	byte	$11, $38, $2e, $ed, $d6, $f1, $d5, $f1, $09, $f0, $f9, $20, $23, $04, $e0, $94
15cc4     80 A0 D3 11 
15cc8     75 7F 75 49 
15ccc     03 A7 9E B0 
15cd0     B1 CD 01 FB | 	byte	$80, $a0, $d3, $11, $75, $7f, $75, $49, $03, $a7, $9e, $b0, $b1, $cd, $01, $fb
15cd4     21 30 31 FC 
15cd8     D8 EB D3 F4 
15cdc     F9 F8 0D 26 
15ce0     2F 03 D5 80 | 	byte	$21, $30, $31, $fc, $d8, $eb, $d3, $f4, $f9, $f8, $0d, $26, $2f, $03, $d5, $80
15ce4     81 BB E2 29 
15ce8     7F 7F 68 3C 
15cec     05 B7 AC AC 
15cf0     AE D5 06 12 | 	byte	$81, $bb, $e2, $29, $7f, $7f, $68, $3c, $05, $b7, $ac, $ac, $ae, $d5, $06, $12
15cf4     38 3A 2F EB 
15cf8     D0 E7 CD FF 
15cfc     02 00 15 32 
15d00     30 FD CD 80 | 	byte	$38, $3a, $2f, $eb, $d0, $e7, $cd, $ff, $02, $00, $15, $32, $30, $fd, $cd, $80
15d04     80 CF F1 38 
15d08     7B 7F 61 39 
15d0c     F6 B1 B6 B1 
15d10     B8 E0 FF 1C | 	byte	$80, $cf, $f1, $38, $7b, $7f, $61, $39, $f6, $b1, $b6, $b1, $b8, $e0, $ff, $1c
15d14     40 45 20 DA 
15d18     D5 E2 DE 0C 
15d1c     05 FE 18 2B 
15d20     2A 01 B1 80 | 	byte	$40, $45, $20, $da, $d5, $e2, $de, $0c, $05, $fe, $18, $2b, $2a, $01, $b1, $80
15d24     8A C3 04 66 
15d28     7F 7D 55 0C 
15d2c     DF AE BA AF 
15d30     C3 E2 01 34 | 	byte	$8a, $c3, $04, $66, $7f, $7d, $55, $0c, $df, $ae, $ba, $af, $c3, $e2, $01, $34
15d34     4B 4F 22 BD 
15d38     BD D0 E3 11 
15d3c     1E 19 1C 2D 
15d40     22 F2 96 80 | 	byte	$4b, $4f, $22, $bd, $bd, $d0, $e3, $11, $1e, $19, $1c, $2d, $22, $f2, $96, $80
15d44     91 C6 FF 6D 
15d48     7F 7F 5B 10 
15d4c     D4 A6 B7 AD 
15d50     C6 F7 22 3D | 	byte	$91, $c6, $ff, $6d, $7f, $7f, $5b, $10, $d4, $a6, $b7, $ad, $c6, $f7, $22, $3d
15d54     50 4C FB B0 
15d58     BC D3 EE 20 
15d5c     23 13 24 2A 
15d60     23 F1 80 80 | 	byte	$50, $4c, $fb, $b0, $bc, $d3, $ee, $20, $23, $13, $24, $2a, $23, $f1, $80, $80
15d64     9C C9 0C 64 
15d68     7F 7F 65 1A 
15d6c     C5 A3 A7 97 
15d70     CD EF 22 5F | 	byte	$9c, $c9, $0c, $64, $7f, $7f, $65, $1a, $c5, $a3, $a7, $97, $cd, $ef, $22, $5f
15d74     5F 53 E1 90 
15d78     C3 D1 02 23 
15d7c     29 0F 1A 28 
15d80     0A DE 80 80 | 	byte	$5f, $53, $e1, $90, $c3, $d1, $02, $23, $29, $0f, $1a, $28, $0a, $de, $80, $80
15d84     B5 CF 46 7F 
15d88     7F 6E 2F F8 
15d8c     C1 BB A4 AC 
15d90     D5 F7 34 5D | 	byte	$b5, $cf, $46, $7f, $7f, $6e, $2f, $f8, $c1, $bb, $a4, $ac, $d5, $f7, $34, $5d
15d94     67 44 D5 88 
15d98     C2 D8 0B 2C 
15d9c     30 16 18 23 
15da0     15 BC 80 86 | 	byte	$67, $44, $d5, $88, $c2, $d8, $0b, $2c, $30, $16, $18, $23, $15, $bc, $80, $86
15da4     B3 E3 4C 7B 
15da8     7F 6F 4A F7 
15dac     A6 8D 8C B2 
15db0     EC 1A 5F 68 | 	byte	$b3, $e3, $4c, $7b, $7f, $6f, $4a, $f7, $a6, $8d, $8c, $b2, $ec, $1a, $5f, $68
15db4     59 12 8E 9A 
15db8     D2 F3 17 37 
15dbc     24 09 1A 1B 
15dc0     F7 96 80 91 | 	byte	$59, $12, $8e, $9a, $d2, $f3, $17, $37, $24, $09, $1a, $1b, $f7, $96, $80, $91
15dc4     CE 32 76 7F 
15dc8     70 4E 15 EB 
15dcc     C2 89 86 BB 
15dd0     DE 48 7C 7C | 	byte	$ce, $32, $76, $7f, $70, $4e, $15, $eb, $c2, $89, $86, $bb, $de, $48, $7c, $7c
15dd4     51 F7 80 86 
15dd8     E0 F8 22 3C 
15ddc     31 11 1C 2C 
15de0     EB 80 80 8D | 	byte	$51, $f7, $80, $86, $e0, $f8, $22, $3c, $31, $11, $1c, $2c, $eb, $80, $80, $8d
15de4     DE 48 78 7F 
15de8     7E 44 17 D3 
15dec     9C 80 9A BE 
15df0     14 69 7F 72 | 	byte	$de, $48, $78, $7f, $7e, $44, $17, $d3, $9c, $80, $9a, $be, $14, $69, $7f, $72
15df4     20 B8 80 A1 
15df8     F2 08 33 3F 
15dfc     18 08 1B 26 
15e00     CF 80 80 9B | 	byte	$20, $b8, $80, $a1, $f2, $08, $33, $3f, $18, $08, $1b, $26, $cf, $80, $80, $9b
15e04     00 5D 7C 7F 
15e08     61 36 15 CD 
15e0c     90 81 A6 C4 
15e10     1E 7F 7F 7D | 	byte	$00, $5d, $7c, $7f, $61, $36, $15, $cd, $90, $81, $a6, $c4, $1e, $7f, $7f, $7d
15e14     04 93 81 B4 
15e18     14 14 3C 3D 
15e1c     0F 0F 1B 1F 
15e20     A9 80 82 B7 | 	byte	$04, $93, $81, $b4, $14, $14, $3c, $3d, $0f, $0f, $1b, $1f, $a9, $80, $82, $b7
15e24     28 6D 7F 71 
15e28     3F 21 FC D6 
15e2c     90 85 AE EB 
15e30     41 7F 7F 59 | 	byte	$28, $6d, $7f, $71, $3f, $21, $fc, $d6, $90, $85, $ae, $eb, $41, $7f, $7f, $59
15e34     E8 80 80 CB 
15e38     0A 19 44 3C 
15e3c     12 15 20 E5 
15e40     85 98 8F D4 | 	byte	$e8, $80, $80, $cb, $0a, $19, $44, $3c, $12, $15, $20, $e5, $85, $98, $8f, $d4
15e44     46 6B 63 5D 
15e48     40 2C 04 BB 
15e4c     80 86 B9 0D 
15e50     6B 7F 79 23 | 	byte	$46, $6b, $63, $5d, $40, $2c, $04, $bb, $80, $86, $b9, $0d, $6b, $7f, $79, $23
15e54     BE 89 80 D3 
15e58     09 23 4C 41 
15e5c     1B 14 15 AE 
15e60     82 9B 9D F4 | 	byte	$be, $89, $80, $d3, $09, $23, $4c, $41, $1b, $14, $15, $ae, $82, $9b, $9d, $f4
15e64     53 6A 49 5F 
15e68     3E 36 02 9D 
15e6c     80 8F CC 33 
15e70     76 7F 5E 01 | 	byte	$53, $6a, $49, $5f, $3e, $36, $02, $9d, $80, $8f, $cc, $33, $76, $7f, $5e, $01
15e74     96 80 91 EA 
15e78     0B 24 4D 3E 
15e7c     12 16 F5 81 
15e80     90 99 AC 15 | 	byte	$96, $80, $91, $ea, $0b, $24, $4d, $3e, $12, $16, $f5, $81, $90, $99, $ac, $15
15e84     5F 48 3D 54 
15e88     3E 30 EB 80 
15e8c     80 99 E6 54 
15e90     7F 7F 45 CB | 	byte	$5f, $48, $3d, $54, $3e, $30, $eb, $80, $80, $99, $e6, $54, $7f, $7f, $45, $cb
15e94     88 80 9B FF 
15e98     05 35 57 3D 
15e9c     0C 06 D4 80 
15ea0     A3 A0 BE 27 | 	byte	$88, $80, $9b, $ff, $05, $35, $57, $3d, $0c, $06, $d4, $80, $a3, $a0, $be, $27
15ea4     52 4A 49 3D 
15ea8     33 14 D4 80 
15eac     80 98 F9 6F 
15eb0     7F 7F 46 B9 | 	byte	$52, $4a, $49, $3d, $33, $14, $d4, $80, $80, $98, $f9, $6f, $7f, $7f, $46, $b9
15eb4     80 80 95 DF 
15eb8     07 42 54 3F 
15ebc     09 F6 BA 8A 
15ec0     BE B8 FB 23 | 	byte	$80, $80, $95, $df, $07, $42, $54, $3f, $09, $f6, $ba, $8a, $be, $b8, $fb, $23
15ec4     36 33 43 2F 
15ec8     39 07 AE 80 
15ecc     83 B8 1B 7F 
15ed0     7F 76 1F 9C | 	byte	$36, $33, $43, $2f, $39, $07, $ae, $80, $83, $b8, $1b, $7f, $7f, $76, $1f, $9c
15ed4     87 80 97 EC 
15ed8     0E 4E 67 43 
15edc     FA C4 83 A8 
15ee0     CE EB 07 1E | 	byte	$87, $80, $97, $ec, $0e, $4e, $67, $43, $fa, $c4, $83, $a8, $ce, $eb, $07, $1e
15ee4     0B 14 34 4F 
15ee8     43 FF 98 80 
15eec     8F D0 47 7F 
15ef0     7F 50 E3 9F | 	byte	$0b, $14, $34, $4f, $43, $ff, $98, $80, $8f, $d0, $47, $7f, $7f, $50, $e3, $9f
15ef4     8A 80 A3 E1 
15ef8     20 5A 68 34 
15efc     EC A3 86 C3 
15f00     D1 09 18 0F | 	byte	$8a, $80, $a3, $e1, $20, $5a, $68, $34, $ec, $a3, $86, $c3, $d1, $09, $18, $0f
15f04     03 1C 40 3E 
15f08     34 CA 81 81 
15f0c     9A F5 68 7F 
15f10     78 45 CC 97 | 	byte	$03, $1c, $40, $3e, $34, $ca, $81, $81, $9a, $f5, $68, $7f, $78, $45, $cc, $97
15f14     8E 80 9E 0B 
15f18     2C 66 6A 23 
15f1c     BD 82 AE CF 
15f20     02 17 05 EE | 	byte	$8e, $80, $9e, $0b, $2c, $66, $6a, $23, $bd, $82, $ae, $cf, $02, $17, $05, $ee
15f24     F5 27 45 4F 
15f28     28 99 80 8B 
15f2c     DB 2B 6F 7F 
15f30     58 18 D5 A2 | 	byte	$f5, $27, $45, $4f, $28, $99, $80, $8b, $db, $2b, $6f, $7f, $58, $18, $d5, $a2
15f34     88 80 B5 0C 
15f38     46 72 64 04 
15f3c     8D 8C CA EA 
15f40     1B 21 F2 DD | 	byte	$88, $80, $b5, $0c, $46, $72, $64, $04, $8d, $8c, $ca, $ea, $1b, $21, $f2, $dd
15f44     F4 22 4D 5C 
15f48     0F 98 80 A4 
15f4c     F1 3C 7C 68 
15f50     3A 0D D0 A9 | 	byte	$f4, $22, $4d, $5c, $0f, $98, $80, $a4, $f1, $3c, $7c, $68, $3a, $0d, $d0, $a9
15f54     85 88 CB 23 
15f58     5A 74 54 E6 
15f5c     81 B3 F0 08 
15f60     32 0E CB D4 | 	byte	$85, $88, $cb, $23, $5a, $74, $54, $e6, $81, $b3, $f0, $08, $32, $0e, $cb, $d4
15f64     00 3C 59 5F 
15f68     ED 99 80 AD 
15f6c     0E 4C 6F 66 
15f70     37 02 C1 95 | 	byte	$00, $3c, $59, $5f, $ed, $99, $80, $ad, $0e, $4c, $6f, $66, $37, $02, $c1, $95
15f74     80 9D 01 41 
15f78     6F 76 33 8E 
15f7c     90 DC 02 2B 
15f80     29 D8 B8 DD | 	byte	$80, $9d, $01, $41, $6f, $76, $33, $8e, $90, $dc, $02, $2b, $29, $d8, $b8, $dd
15f84     19 4E 62 4C 
15f88     D0 AC AB F0 
15f8c     19 3E 47 3D 
15f90     39 0D C9 87 | 	byte	$19, $4e, $62, $4c, $d0, $ac, $ab, $f0, $19, $3e, $47, $3d, $39, $0d, $c9, $87
15f94     80 8E 04 52 
15f98     70 6E 16 80 
15f9c     AA FA 14 38 
15fa0     1E AA BC EC | 	byte	$80, $8e, $04, $52, $70, $6e, $16, $80, $aa, $fa, $14, $38, $1e, $aa, $bc, $ec
15fa4     20 53 66 1A 
15fa8     D3 B6 BA 01 
15fac     21 39 37 3D 
15fb0     39 FC CB 85 | 	byte	$20, $53, $66, $1a, $d3, $b6, $ba, $01, $21, $39, $37, $3d, $39, $fc, $cb, $85
15fb4     80 9F 25 5A 
15fb8     6F 69 CC 80 
15fbc     CD 10 38 44 
15fc0     E9 A3 C6 05 | 	byte	$80, $9f, $25, $5a, $6f, $69, $cc, $80, $cd, $10, $38, $44, $e9, $a3, $c6, $05
15fc4     35 4F 4E F0 
15fc8     D0 D1 F1 0B 
15fcc     16 1A 1C 39 
15fd0     3C 00 B6 83 | 	byte	$35, $4f, $4e, $f0, $d0, $d1, $f1, $0b, $16, $1a, $1c, $39, $3c, $00, $b6, $83
15fd4     80 AB 40 51 
15fd8     5E 3D 9F 9A 
15fdc     EA 1F 4F 43 
15fe0     CC 9B D2 01 | 	byte	$80, $ab, $40, $51, $5e, $3d, $9f, $9a, $ea, $1f, $4f, $43, $cc, $9b, $d2, $01
15fe4     2B 52 46 FA 
15fe8     DE E5 04 16 
15fec     14 02 09 25 
15ff0     2D 02 C8 94 | 	byte	$2b, $52, $46, $fa, $de, $e5, $04, $16, $14, $02, $09, $25, $2d, $02, $c8, $94
15ff4     80 B1 1B 48 
15ff8     48 18 81 B3 
15ffc     F5 36 5F 34 
16000     C7 A0 CD F0 | 	byte	$80, $b1, $1b, $48, $48, $18, $81, $b3, $f5, $36, $5f, $34, $c7, $a0, $cd, $f0
16004     0F 42 1C FC 
16008     0E 1A 0D 0C 
1600c     EF E0 0D 36 
16010     2B FC A7 9D | 	byte	$0f, $42, $1c, $fc, $0e, $1a, $0d, $0c, $ef, $e0, $0d, $36, $2b, $fc, $a7, $9d
16014     9B BE 19 36 
16018     3A FC A7 D9 
1601c     08 4C 63 0C 
16020     AA AB CD EE | 	byte	$9b, $be, $19, $36, $3a, $fc, $a7, $d9, $08, $4c, $63, $0c, $aa, $ab, $cd, $ee
16024     1C 27 0D 12 
16028     28 3A 1D F2 
1602c     D2 DE 10 30 
16030     2E FE BF BC | 	byte	$1c, $27, $0d, $12, $28, $3a, $1d, $f2, $d2, $de, $10, $30, $2e, $fe, $bf, $bc
16034     AF C5 27 27 
16038     25 CF CB F8 
1603c     1E 67 59 EA 
16040     AA B2 D1 EC | 	byte	$af, $c5, $27, $27, $25, $cf, $cb, $f8, $1e, $67, $59, $ea, $aa, $b2, $d1, $ec
16044     0A 10 14 30 
16048     4D 62 21 D6 
1604c     B4 CC 06 3B 
16050     39 F5 C5 BF | 	byte	$0a, $10, $14, $30, $4d, $62, $21, $d6, $b4, $cc, $06, $3b, $39, $f5, $c5, $bf
16054     AF C4 0A 11 
16058     F1 CD 00 14 
1605c     3E 6F 3B D8 
16060     B3 B1 CC E5 | 	byte	$af, $c4, $0a, $11, $f1, $cd, $00, $14, $3e, $6f, $3b, $d8, $b3, $b1, $cc, $e5
16064     EC 09 24 4E 
16068     6E 5F 1B C9 
1606c     B4 C8 F1 28 
16070     22 F8 DC D9 | 	byte	$ec, $09, $24, $4e, $6e, $5f, $1b, $c9, $b4, $c8, $f1, $28, $22, $f8, $dc, $d9
16074     98 C0 06 F8 
16078     DA 02 23 27 
1607c     4E 57 FE C5 
16080     A8 A9 CD E2 | 	byte	$98, $c0, $06, $f8, $da, $02, $23, $27, $4e, $57, $fe, $c5, $a8, $a9, $cd, $e2
16084     E8 22 4B 6D 
16088     7D 5A F4 AC 
1608c     A7 C1 F8 2E 
16090     1F 0A FD E9 | 	byte	$e8, $22, $4b, $6d, $7d, $5a, $f4, $ac, $a7, $c1, $f8, $2e, $1f, $0a, $fd, $e9
16094     9C B5 FE C2 
16098     D3 30 37 44 
1609c     5D 3A ED D5 
160a0     A5 A2 C1 CD | 	byte	$9c, $b5, $fe, $c2, $d3, $30, $37, $44, $5d, $3a, $ed, $d5, $a5, $a2, $c1, $cd
160a4     D9 24 76 7F 
160a8     7F 55 BB 86 
160ac     AA CE 08 30 
160b0     24 11 01 E2 | 	byte	$d9, $24, $76, $7f, $7f, $55, $bb, $86, $aa, $ce, $08, $30, $24, $11, $01, $e2
160b4     94 B4 B9 A6 
160b8     FE 4B 5A 5D 
160bc     4F 1C E0 DB 
160c0     A9 9D A8 AE | 	byte	$94, $b4, $b9, $a6, $fe, $4b, $5a, $5d, $4f, $1c, $e0, $db, $a9, $9d, $a8, $ae
160c4     ED 37 7F 7F 
160c8     7F 3C 9D 84 
160cc     A0 CA F9 24 
160d0     2B 2A 0D E2 | 	byte	$ed, $37, $7f, $7f, $7f, $3c, $9d, $84, $a0, $ca, $f9, $24, $2b, $2a, $0d, $e2
160d4     80 9A 96 CD 
160d8     39 66 72 55 
160dc     21 07 E7 D7 
160e0     97 88 8E B9 | 	byte	$80, $9a, $96, $cd, $39, $66, $72, $55, $21, $07, $e7, $d7, $97, $88, $8e, $b9
160e4     15 78 7F 7F 
160e8     65 F1 87 90 
160ec     B0 C7 FA 24 
160f0     3A 43 11 D1 | 	byte	$15, $78, $7f, $7f, $65, $f1, $87, $90, $b0, $c7, $fa, $24, $3a, $43, $11, $d1
160f4     80 80 9F FC 
160f8     60 77 75 3B 
160fc     08 06 F7 D0 
16100     93 80 87 BF | 	byte	$80, $80, $9f, $fc, $60, $77, $75, $3b, $08, $06, $f7, $d0, $93, $80, $87, $bf
16104     20 7F 7F 7F 
16108     50 C7 97 95 
1610c     A5 BC E5 21 
16110     40 4A 05 AA | 	byte	$20, $7f, $7f, $7f, $50, $c7, $97, $95, $a5, $bc, $e5, $21, $40, $4a, $05, $aa
16114     80 85 BE 20 
16118     75 7F 6A 1A 
1611c     F4 04 F2 BA 
16120     84 80 9C D4 | 	byte	$80, $85, $be, $20, $75, $7f, $6a, $1a, $f4, $04, $f2, $ba, $84, $80, $9c, $d4
16124     52 7F 7F 7F 
16128     18 BD 99 8E 
1612c     A2 B5 EC 27 
16130     4A 2E D7 8D | 	byte	$52, $7f, $7f, $7f, $18, $bd, $99, $8e, $a2, $b5, $ec, $27, $4a, $2e, $d7, $8d
16134     80 98 1E 3C 
16138     7B 7E 56 F0 
1613c     EF 11 E2 9E 
16140     80 80 A9 F2 | 	byte	$80, $98, $1e, $3c, $7b, $7e, $56, $f0, $ef, $11, $e2, $9e, $80, $80, $a9, $f2
16144     6E 7F 7F 74 
16148     F0 A6 87 85 
1614c     91 B0 F4 2B 
16150     4F 2E B1 80 | 	byte	$6e, $7f, $7f, $74, $f0, $a6, $87, $85, $91, $b0, $f4, $2b, $4f, $2e, $b1, $80
16154     80 B7 2A 5C 
16158     7F 6E 04 DA 
1615c     F8 12 E2 80 
16160     80 80 B7 20 | 	byte	$80, $b7, $2a, $5c, $7f, $6e, $04, $da, $f8, $12, $e2, $80, $80, $80, $b7, $20
16164     7F 7F 7F 41 
16168     DD A9 88 80 
1616c     9A BC F2 36 
16170     38 07 83 80 | 	byte	$7f, $7f, $7f, $41, $dd, $a9, $88, $80, $9a, $bc, $f2, $36, $38, $07, $83, $80
16174     80 E1 48 7F 
16178     7F 55 F3 E5 
1617c     00 FD C1 80 
16180     80 9E F8 61 | 	byte	$80, $e1, $48, $7f, $7f, $55, $f3, $e5, $00, $fd, $c1, $80, $80, $9e, $f8, $61
16184     7F 7F 61 17 
16188     FB D7 91 86 
1618c     A9 D4 23 58 
16190     43 E8 80 80 | 	byte	$7f, $7f, $61, $17, $fb, $d7, $91, $86, $a9, $d4, $23, $58, $43, $e8, $80, $80
16194     8A F6 5E 7F 
16198     7F 37 F1 F6 
1619c     0C EC AB 80 
161a0     85 BC 1F 7A | 	byte	$8a, $f6, $5e, $7f, $7f, $37, $f1, $f6, $0c, $ec, $ab, $80, $85, $bc, $1f, $7a
161a4     7F 78 43 1A 
161a8     F4 D2 90 8B 
161ac     C2 ED 37 59 
161b0     36 BC 80 80 | 	byte	$7f, $78, $43, $1a, $f4, $d2, $90, $8b, $c2, $ed, $37, $59, $36, $bc, $80, $80
161b4     8F 33 79 7F 
161b8     60 1A F6 02 
161bc     1B E8 86 80 
161c0     87 DA 55 7F | 	byte	$8f, $33, $79, $7f, $60, $1a, $f6, $02, $1b, $e8, $86, $80, $87, $da, $55, $7f
161c4     7F 6D 2D 11 
161c8     FB C4 8E A3 
161cc     CD FC 40 44 
161d0     0E 99 87 8F | 	byte	$7f, $6d, $2d, $11, $fb, $c4, $8e, $a3, $cd, $fc, $40, $44, $0e, $99, $87, $8f
161d4     B7 4E 77 5E 
161d8     37 12 00 03 
161dc     09 A5 80 8D 
161e0     B2 0C 5C 74 | 	byte	$b7, $4e, $77, $5e, $37, $12, $00, $03, $09, $a5, $80, $8d, $b2, $0c, $5c, $74
161e4     5E 42 3A 09 
161e8     F0 BB 93 BC 
161ec     EB 08 35 31 
161f0     BB 80 B5 9D | 	byte	$5e, $42, $3a, $09, $f0, $bb, $93, $bc, $eb, $08, $35, $31, $bb, $80, $b5, $9d
161f4     D8 50 67 39 
161f8     35 22 06 00 
161fc     F4 83 81 99 
16200     DE 22 6F 61 | 	byte	$d8, $50, $67, $39, $35, $22, $06, $00, $f4, $83, $81, $99, $de, $22, $6f, $61
16204     51 36 1F 0E 
16208     E8 C1 AF CC 
1620c     F5 11 33 FA 
16210     8C B4 CB CE | 	byte	$51, $36, $1f, $0e, $e8, $c1, $af, $cc, $f5, $11, $33, $fa, $8c, $b4, $cb, $ce
16214     FF 4A 34 28 
16218     43 2D 00 F3 
1621c     D3 89 C0 D3 
16220     FA 2E 39 33 | 	byte	$ff, $4a, $34, $28, $43, $2d, $00, $f3, $d3, $89, $c0, $d3, $fa, $2e, $39, $33
16224     37 35 2A 05 
16228     DB C0 CA E2 
1622c     F9 0E 0E CB 
16230     A0 D4 DE D8 | 	byte	$37, $35, $2a, $05, $db, $c0, $ca, $e2, $f9, $0e, $0e, $cb, $a0, $d4, $de, $d8
16234     FB 30 20 3D 
16238     5E 28 F2 C7 
1623c     96 9E D4 F2 
16240     14 27 14 23 | 	byte	$fb, $30, $20, $3d, $5e, $28, $f2, $c7, $96, $9e, $d4, $f2, $14, $27, $14, $23
16244     41 42 27 F6 
16248     CD C1 D9 F5 
1624c     F6 FF DC 96 
16250     DD F7 F9 E2 | 	byte	$41, $42, $27, $f6, $cd, $c1, $d9, $f5, $f6, $ff, $dc, $96, $dd, $f7, $f9, $e2
16254     FD 10 21 55 
16258     6F 10 D8 98 
1625c     A3 D1 FF 11 
16260     16 08 FD 2F | 	byte	$fd, $10, $21, $55, $6f, $10, $d8, $98, $a3, $d1, $ff, $11, $16, $08, $fd, $2f
16264     52 39 17 E4 
16268     CD D3 F3 F9 
1626c     EE DB 96 C4 
16270     0C 16 07 D1 | 	byte	$52, $39, $17, $e4, $cd, $d3, $f3, $f9, $ee, $db, $96, $c4, $0c, $16, $07, $d1
16274     E2 FF 38 79 
16278     5A F4 9D 90 
1627c     D0 FD 1A 24 
16280     F5 DC 04 45 | 	byte	$e2, $ff, $38, $79, $5a, $f4, $9d, $90, $d0, $fd, $1a, $24, $f5, $dc, $04, $45
16284     45 28 18 D8 
16288     D2 01 02 ED 
1628c     D9 88 A0 05 
16290     27 29 FA C3 | 	byte	$45, $28, $18, $d8, $d2, $01, $02, $ed, $d9, $88, $a0, $05, $27, $29, $fa, $c3
16294     D0 11 55 7E 
16298     4B CD 80 A9 
1629c     E3 14 2F 14 
162a0     D6 D1 19 5D | 	byte	$d0, $11, $55, $7e, $4b, $cd, $80, $a9, $e3, $14, $2f, $14, $d6, $d1, $19, $5d
162a4     43 2F F4 C2 
162a8     DF 07 02 E6 
162ac     C1 85 C9 1E 
162b0     47 39 CE 9E | 	byte	$43, $2f, $f4, $c2, $df, $07, $02, $e6, $c1, $85, $c9, $1e, $47, $39, $ce, $9e
162b4     DC 21 71 77 
162b8     41 B0 85 CC 
162bc     0B 3B 3C 05 
162c0     C0 CD 1D 45 | 	byte	$dc, $21, $71, $77, $41, $b0, $85, $cc, $0b, $3b, $3c, $05, $c0, $cd, $1d, $45
162c4     44 2F EC D7 
162c8     F6 07 F9 D5 
162cc     80 AF 07 31 
162d0     47 09 95 AB | 	byte	$44, $2f, $ec, $d7, $f6, $07, $f9, $d5, $80, $af, $07, $31, $47, $09, $95, $ab
162d4     EF 44 7C 72 
162d8     00 90 9A EB 
162dc     1F 46 28 C6 
162e0     B1 E4 2F 3F | 	byte	$ef, $44, $7c, $72, $00, $90, $9a, $eb, $1f, $46, $28, $c6, $b1, $e4, $2f, $3f
162e4     3E 1B E0 E8 
162e8     FF 08 DF 98 
162ec     95 D7 1B 57 
162f0     3B D7 8C C6 | 	byte	$3e, $1b, $e0, $e8, $ff, $08, $df, $98, $95, $d7, $1b, $57, $3b, $d7, $8c, $c6
162f4     17 60 79 47 
162f8     B4 92 C3 0B 
162fc     3D 46 F7 BD 
16300     D0 0B 36 3F | 	byte	$17, $60, $79, $47, $b4, $92, $c3, $0b, $3d, $46, $f7, $bd, $d0, $0b, $36, $3f
16304     34 06 EF F2 
16308     04 E8 B6 97 
1630c     D2 08 48 4A 
16310     EE 81 A8 DD | 	byte	$34, $06, $ef, $f2, $04, $e8, $b6, $97, $d2, $08, $48, $4a, $ee, $81, $a8, $dd
16314     3B 68 67 05 
16318     A9 BD F8 27 
1631c     3B 12 C8 BA 
16320     E1 11 27 2F | 	byte	$3b, $68, $67, $05, $a9, $bd, $f8, $27, $3b, $12, $c8, $ba, $e1, $11, $27, $2f
16324     28 16 03 04 
16328     EA 9C 90 D1 
1632c     04 44 53 18 
16330     80 97 D2 22 | 	byte	$28, $16, $03, $04, $ea, $9c, $90, $d1, $04, $44, $53, $18, $80, $97, $d2, $22
16334     55 73 24 D3 
16338     C0 F5 21 3A 
1633c     1F E2 AA C5 
16340     FE 2E 35 3B | 	byte	$55, $73, $24, $d3, $c0, $f5, $21, $3a, $1f, $e2, $aa, $c5, $fe, $2e, $35, $3b
16344     24 07 FF F6 
16348     CC 8A CA F9 
1634c     2C 5D 3B C2 
16350     82 C1 05 32 | 	byte	$24, $07, $ff, $f6, $cc, $8a, $ca, $f9, $2c, $5d, $3b, $c2, $82, $c1, $05, $32
16354     7B 4A EE D3 
16358     DB 13 35 35 
1635c     F7 AE B4 D6 
16360     10 2E 3E 39 | 	byte	$7b, $4a, $ee, $d3, $db, $13, $35, $35, $f7, $ae, $b4, $d6, $10, $2e, $3e, $39
16364     1A 01 F4 D1 
16368     89 C5 FB 31 
1636c     55 4D DA 80 
16370     A9 D9 16 57 | 	byte	$1a, $01, $f4, $d1, $89, $c5, $fb, $31, $55, $4d, $da, $80, $a9, $d9, $16, $57
16374     64 28 E1 EF 
16378     0C 1F 32 18 
1637c     D0 AE C7 EF 
16380     15 36 46 2B | 	byte	$64, $28, $e1, $ef, $0c, $1f, $32, $18, $d0, $ae, $c7, $ef, $15, $36, $46, $2b
16384     13 F4 C3 8E 
16388     C3 FD 30 54 
1638c     56 F0 80 95 
16390     C0 F9 3C 66 | 	byte	$13, $f4, $c3, $8e, $c3, $fd, $30, $54, $56, $f0, $80, $95, $c0, $f9, $3c, $66
16394     49 02 EA 0F 
16398     14 28 20 E5 
1639c     B4 C6 D0 00 
163a0     1A 3D 31 20 | 	byte	$49, $02, $ea, $0f, $14, $28, $20, $e5, $b4, $c6, $d0, $00, $1a, $3d, $31, $20
163a4     FB AD 97 BF 
163a8     DE 2C 59 64 
163ac     12 80 86 98 
163b0     DB 28 56 58 | 	byte	$fb, $ad, $97, $bf, $de, $2c, $59, $64, $12, $80, $86, $98, $db, $28, $56, $58
163b4     25 07 0E 09 
163b8     1A 14 F7 D8 
163bc     D9 E5 F1 03 
163c0     13 11 12 04 | 	byte	$25, $07, $0e, $09, $1a, $14, $f7, $d8, $d9, $e5, $f1, $03, $13, $11, $12, $04
163c4     D8 C9 D9 F7 
163c8     11 3A 53 21 
163cc     CB 99 92 BB 
163d0     F5 34 43 30 | 	byte	$d8, $c9, $d9, $f7, $11, $3a, $53, $21, $cb, $99, $92, $bb, $f5, $34, $43, $30
163d4     33 2A 1F 1D 
163d8     0C E1 D2 D8 
163dc     EB 02 12 10 
163e0     00 F4 DC CD | 	byte	$33, $2a, $1f, $1d, $0c, $e1, $d2, $d8, $eb, $02, $12, $10, $00, $f4, $dc, $cd
163e4     E3 05 16 1A 
163e8     28 21 EF D7 
163ec     C5 BE D7 F5 
163f0     1C 21 18 1E | 	byte	$e3, $05, $16, $1a, $28, $21, $ef, $d7, $c5, $be, $d7, $f5, $1c, $21, $18, $1e
163f4     24 28 2F 23 
163f8     F9 C8 D2 E2 
163fc     FC 10 11 09 
16400     DB B7 C9 DA | 	byte	$24, $28, $2f, $23, $f9, $c8, $d2, $e2, $fc, $10, $11, $09, $db, $b7, $c9, $da
16404     16 2A 26 1A 
16408     03 E0 E6 EA 
1640c     ED F2 04 04 
16410     00 05 00 0B | 	byte	$16, $2a, $26, $1a, $03, $e0, $e6, $ea, $ed, $f2, $04, $04, $00, $05, $00, $0b
16414     25 35 3E 18 
16418     E6 D4 DD EF 
1641c     05 1C 00 B9 
16420     B1 CC F7 21 | 	byte	$25, $35, $3e, $18, $e6, $d4, $dd, $ef, $05, $1c, $00, $b9, $b1, $cc, $f7, $21
16424     39 1E EB D5 
16428     E1 FD 18 23 
1642c     16 05 E8 D5 
16430     E7 F5 03 21 | 	byte	$39, $1e, $eb, $d5, $e1, $fd, $18, $23, $16, $05, $e8, $d5, $e7, $f5, $03, $21
16434     42 41 2D 08 
16438     E2 D9 EB F8 
1643c     F6 D3 CB C9 
16440     E2 FE 11 1A | 	byte	$42, $41, $2d, $08, $e2, $d9, $eb, $f8, $f6, $d3, $cb, $c9, $e2, $fe, $11, $1a
16444     03 E9 EF 03 
16448     1C 37 35 14 
1644c     E2 C9 C3 CE 
16450     F8 18 2D 3A | 	byte	$03, $e9, $ef, $03, $1c, $37, $35, $14, $e2, $c9, $c3, $ce, $f8, $18, $2d, $3a
16454     44 34 18 F6 
16458     E1 E2 D7 C9 
1645c     C8 D0 D6 E8 
16460     0B 19 0F 0B | 	byte	$44, $34, $18, $f6, $e1, $e2, $d7, $c9, $c8, $d0, $d6, $e8, $0b, $19, $0f, $0b
16464     05 05 18 33 
16468     36 1C FE C7 
1646c     B6 C4 E6 02 
16470     24 35 34 37 | 	byte	$05, $05, $18, $33, $36, $1c, $fe, $c7, $b6, $c4, $e6, $02, $24, $35, $34, $37
16474     36 21 0F E2 
16478     B4 AF B5 C0 
1647c     CC F2 02 12 
16480     20 20 18 14 | 	byte	$36, $21, $0f, $e2, $b4, $af, $b5, $c0, $cc, $f2, $02, $12, $20, $20, $18, $14
16484     1D 19 14 0E 
16488     FB D9 D3 DA 
1648c     EB 05 15 1F 
16490     20 18 19 25 | 	byte	$1d, $19, $14, $0e, $fb, $d9, $d3, $da, $eb, $05, $15, $1f, $20, $18, $19, $25
16494     24 01 DD AD 
16498     9F B1 D0 EC 
1649c     0D 21 28 27 
164a0     1E 14 06 FE | 	byte	$24, $01, $dd, $ad, $9f, $b1, $d0, $ec, $0d, $21, $28, $27, $1e, $14, $06, $fe
164a4     FA 02 08 01 
164a8     F8 F5 F2 F9 
164ac     07 12 0E 09 
164b0     06 0D 10 01 | 	byte	$fa, $02, $08, $01, $f8, $f5, $f2, $f9, $07, $12, $0e, $09, $06, $0d, $10, $01
164b4     EA D6 C4 C5 
164b8     D8 FB 10 20 
164bc     1E 11 0A 03 
164c0     00 00 FE 02 | 	byte	$ea, $d6, $c4, $c5, $d8, $fb, $10, $20, $1e, $11, $0a, $03, $00, $00, $fe, $02
164c4     07 0D 0E 08 
164c8     02 00 02 09 
164cc     0B 06 FB E5 
164d0     D4 DF EE FD | 	byte	$07, $0d, $0e, $08, $02, $00, $02, $09, $0b, $06, $fb, $e5, $d4, $df, $ee, $fd
164d4     02 01 04 02 
164d8     08 0D 06 FF 
164dc     EE EB FA 02 
164e0     0D 06 05 05 | 	byte	$02, $01, $04, $02, $08, $0d, $06, $ff, $ee, $eb, $fa, $02, $0d, $06, $05, $05
164e4     0A 17 12 0A 
164e8     03 FE 06 09 
164ec     F7 D6 BA BC 
164f0     D0 FF 21 2F | 	byte	$0a, $17, $12, $0a, $03, $fe, $06, $09, $f7, $d6, $ba, $bc, $d0, $ff, $21, $2f
164f4     2F 20 09 F9 
164f8     F2 E9 E7 E4 
164fc     E4 FC 16 1D 
16500     1F 08 00 FB | 	byte	$2f, $20, $09, $f9, $f2, $e9, $e7, $e4, $e4, $fc, $16, $1d, $1f, $08, $00, $fb
16504     06 0E 0F 07 
16508     04 F7 F1 E3 
1650c     D5 D0 CD EB 
16510     08 30 3C 31 | 	byte	$06, $0e, $0f, $07, $04, $f7, $f1, $e3, $d5, $d0, $cd, $eb, $08, $30, $3c, $31
16514     21 FC EA E1 
16518     E1 EB F3 F9 
1651c     01 19 1F 10 
16520     09 FB F8 05 | 	byte	$21, $fc, $ea, $e1, $e1, $eb, $f3, $f9, $01, $19, $1f, $10, $09, $fb, $f8, $05
16524     0F 0D 00 F2 
16528     E8 E6 EC F8 
1652c     F0 EA E6 FC 
16530     16 23 21 14 | 	byte	$0f, $0d, $00, $f2, $e8, $e6, $ec, $f8, $f0, $ea, $e6, $fc, $16, $23, $21, $14
16534     FE F1 F5 F6 
16538     F8 FD FB F5 
1653c     00 0F 0D 04 
16540     02 F5 FF 0F | 	byte	$fe, $f1, $f5, $f6, $f8, $fd, $fb, $f5, $00, $0f, $0d, $04, $02, $f5, $ff, $0f
16544     0E 05 F3 EB 
16548     ED F3 FF FB 
1654c     F6 E4 E1 F5 
16550     07 17 1C 19 | 	byte	$0e, $05, $f3, $eb, $ed, $f3, $ff, $fb, $f6, $e4, $e1, $f5, $07, $17, $1c, $19
16554     0F 07 05 F5 
16558     F6 EE E4 EE 
1655c     FF 0F 0E 08 
16560     F6 F8 07 0C | 	byte	$0f, $07, $05, $f5, $f6, $ee, $e4, $ee, $ff, $0f, $0e, $08, $f6, $f8, $07, $0c
16564     04 01 F5 F1 
16568     F5 00 02 F6 
1656c     EB D9 E3 FB 
16570     14 22 24 1E | 	byte	$04, $01, $f5, $f1, $f5, $00, $02, $f6, $eb, $d9, $e3, $fb, $14, $22, $24, $1e
16574     14 0D FB E9 
16578     E5 DD E1 FD 
1657c     10 13 0D 04 
16580     F6 FA 0C 0A | 	byte	$14, $0d, $fb, $e9, $e5, $dd, $e1, $fd, $10, $13, $0d, $04, $f6, $fa, $0c, $0a
16584     01 F7 EB EC 
16588     FF 09 01 F5 
1658c     E5 DC EC 04 
16590     18 23 27 1D | 	byte	$01, $f7, $eb, $ec, $ff, $09, $01, $f5, $e5, $dc, $ec, $04, $18, $23, $27, $1d
16594     10 03 E9 DD 
16598     E1 DD F3 11 
1659c     19 19 0A F9 
165a0     F3 FD 09 01 | 	byte	$10, $03, $e9, $dd, $e1, $dd, $f3, $11, $19, $19, $0a, $f9, $f3, $fd, $09, $01
165a4     FE F0 F2 FE 
165a8     0B 0E 02 E9 
165ac     DC E4 FA 0F 
165b0     1E 24 1D 0F | 	byte	$fe, $f0, $f2, $fe, $0b, $0e, $02, $e9, $dc, $e4, $fa, $0f, $1e, $24, $1d, $0f
165b4     03 F1 ED E6 
165b8     E8 F1 03 12 
165bc     10 0B FA F0 
165c0     F7 FF 03 02 | 	byte	$03, $f1, $ed, $e6, $e8, $f1, $03, $12, $10, $0b, $fa, $f0, $f7, $ff, $03, $02
165c4     FE FE FF 0A 
165c8     0E 05 F2 DF 
165cc     E0 EC FE 0E 
165d0     17 1A 14 0F | 	byte	$fe, $fe, $ff, $0a, $0e, $05, $f2, $df, $e0, $ec, $fe, $0e, $17, $1a, $14, $0f
165d4     04 F7 F1 EC 
165d8     EC F8 03 04 
165dc     01 01 F6 FC 
165e0     09 0B 0A 04 | 	byte	$04, $f7, $f1, $ec, $ec, $f8, $03, $04, $01, $01, $f6, $fc, $09, $0b, $0a, $04
165e4     00 FA FB 0C 
165e8     04 FC E9 DF 
165ec     E5 F0 FE 0C 
165f0     19 1D 1A 19 | 	byte	$00, $fa, $fb, $0c, $04, $fc, $e9, $df, $e5, $f0, $fe, $0c, $19, $1d, $1a, $19
165f4     07 F7 EB E2 
165f8     E7 F5 02 06 
165fc     0C 07 00 06 
16600     0A 07 05 FF | 	byte	$07, $f7, $eb, $e2, $e7, $f5, $02, $06, $0c, $07, $00, $06, $0a, $07, $05, $ff
16604     FB F1 FC 02 
16608     FD F5 ED ED 
1660c     F4 FC 08 0B 
16610     0F 13 16 15 | 	byte	$fb, $f1, $fc, $02, $fd, $f5, $ed, $ed, $f4, $fc, $08, $0b, $0f, $13, $16, $15
16614     09 FF EF E3 
16618     F2 FA 01 0A 
1661c     0A FE F8 FE 
16620     F9 FE 00 FA | 	byte	$09, $ff, $ef, $e3, $f2, $fa, $01, $0a, $0a, $fe, $f8, $fe, $f9, $fe, $00, $fa
16624     FC FC 05 07 
16628     04 FA EC EC 
1662c     F1 F8 03 0F 
16630     1A 24 25 19 | 	byte	$fc, $fc, $05, $07, $04, $fa, $ec, $ec, $f1, $f8, $03, $0f, $1a, $24, $25, $19
16634     07 F3 DD DC 
16638     E7 EC F7 FF 
1663c     FD FC 06 07 
16640     04 05 03 00 | 	byte	$07, $f3, $dd, $dc, $e7, $ec, $f7, $ff, $fd, $fc, $06, $07, $04, $05, $03, $00
16644     FE FE FC FD 
16648     02 FE FF 02 
1664c     03 FE 05 0B 
16650     11 17 13 00 | 	byte	$fe, $fe, $fc, $fd, $02, $fe, $ff, $02, $03, $fe, $05, $0b, $11, $17, $13, $00
16654     EB D9 D4 E5 
16658     F4 00 0D 08 
1665c     06 06 00 FF 
16660     04 FD FA 02 | 	byte	$eb, $d9, $d4, $e5, $f4, $00, $0d, $08, $06, $06, $00, $ff, $04, $fd, $fa, $02
16664     0B 0C 0A 0B 
16668     02 F8 F9 F2 
1666c     E9 E9 F4 FD 
16670     11 1F 1D 0D | 	byte	$0b, $0c, $0a, $0b, $02, $f8, $f9, $f2, $e9, $e9, $f4, $fd, $11, $1f, $1d, $0d
16674     F6 E3 E1 EE 
16678     F6 05 0E 08 
1667c     07 04 00 00 
16680     00 00 CF CB | 	byte	$f6, $e3, $e1, $ee, $f6, $05, $0e, $08, $07, $04, $00, $00, $00, $00, $cf, $cb
16684     D5 96 80 8B 
16688     CB 11 72 73 
1668c     7F 7F 64 08 
16690     8D 90 B2 E3 | 	byte	$d5, $96, $80, $8b, $cb, $11, $72, $73, $7f, $7f, $64, $08, $8d, $90, $b2, $e3
16694     2A 53 71 4D 
16698     12 B9 81 80 
1669c     94 0A 7F 7F 
166a0     67 FD C4 CF | 	byte	$2a, $53, $71, $4d, $12, $b9, $81, $80, $94, $0a, $7f, $7f, $67, $fd, $c4, $cf
166a4     D1 A4 85 8C 
166a8     BC 10 4A 75 
166ac     7F 7A 5E 0A 
166b0     BC 90 B0 D9 | 	byte	$d1, $a4, $85, $8c, $bc, $10, $4a, $75, $7f, $7a, $5e, $0a, $bc, $90, $b0, $d9
166b4     1C 44 63 4B 
166b8     13 CC 9F 81 
166bc     B2 02 6A 7F 
166c0     51 1C D1 D6 | 	byte	$1c, $44, $63, $4b, $13, $cc, $9f, $81, $b2, $02, $6a, $7f, $51, $1c, $d1, $d6
166c4     B1 BA 94 A1 
166c8     B8 01 22 5D 
166cc     73 68 60 03 
166d0     ED BD B7 D8 | 	byte	$b1, $ba, $94, $a1, $b8, $01, $22, $5d, $73, $68, $60, $03, $ed, $bd, $b7, $d8
166d4     17 2E 50 33 
166d8     17 CF B3 9A 
166dc     C9 1A 3E 64 
166e0     4B 1C F0 DA | 	byte	$17, $2e, $50, $33, $17, $cf, $b3, $9a, $c9, $1a, $3e, $64, $4b, $1c, $f0, $da
166e4     AD A9 B6 BD 
166e8     CA FE 11 37 
166ec     67 5C 4B 06 
166f0     00 ED CA E9 | 	byte	$ad, $a9, $b6, $bd, $ca, $fe, $11, $37, $67, $5c, $4b, $06, $00, $ed, $ca, $e9
166f4     0C 2B 29 20 
166f8     00 D9 C6 BA 
166fc     DE 23 2A 2A 
16700     23 25 1B EA | 	byte	$0c, $2b, $29, $20, $00, $d9, $c6, $ba, $de, $23, $2a, $2a, $23, $25, $1b, $ea
16704     B2 9D BF D1 
16708     E1 FF 10 2C 
1670c     4B 57 24 00 
16710     FD 0F F5 F0 | 	byte	$b2, $9d, $bf, $d1, $e1, $ff, $10, $2c, $4b, $57, $24, $00, $fd, $0f, $f5, $f0
16714     01 25 10 0C 
16718     EC DD CF D8 
1671c     0A 27 21 ED 
16720     F8 19 2C 0D | 	byte	$01, $25, $10, $0c, $ec, $dd, $cf, $d8, $0a, $27, $21, $ed, $f8, $19, $2c, $0d
16724     C1 A4 B6 EB 
16728     03 0E 09 23 
1672c     1B 33 09 F5 
16730     16 18 2B 31 | 	byte	$c1, $a4, $b6, $eb, $03, $0e, $09, $23, $1b, $33, $09, $f5, $16, $18, $2b, $31
16734     26 2F 0A D9 
16738     C3 B5 C0 D5 
1673c     19 43 3E ED 
16740     D1 EF 1F 01 | 	byte	$26, $2f, $0a, $d9, $c3, $b5, $c0, $d5, $19, $43, $3e, $ed, $d1, $ef, $1f, $01
16744     C4 AA CA F8 
16748     3E 2B 10 00 
1674c     EF 01 EF F9 
16750     15 26 37 47 | 	byte	$c4, $aa, $ca, $f8, $3e, $2b, $10, $00, $ef, $01, $ef, $f9, $15, $26, $37, $47
16754     2D 23 06 DE 
16758     B0 BB C3 F9 
1675c     34 4B 2F E5 
16760     C4 D4 14 FA | 	byte	$2d, $23, $06, $de, $b0, $bb, $c3, $f9, $34, $4b, $2f, $e5, $c4, $d4, $14, $fa
16764     E2 AF CE FB 
16768     4D 39 1F 01 
1676c     F5 DF D3 EB 
16770     0D 33 48 5F | 	byte	$e2, $af, $ce, $fb, $4d, $39, $1f, $01, $f5, $df, $d3, $eb, $0d, $33, $48, $5f
16774     3F 14 F1 C8 
16778     A0 B0 CA 1D 
1677c     5A 59 28 D8 
16780     BC BD F6 F8 | 	byte	$3f, $14, $f1, $c8, $a0, $b0, $ca, $1d, $5a, $59, $28, $d8, $bc, $bd, $f6, $f8
16784     EA DB DF 04 
16788     31 44 28 03 
1678c     F6 DE B7 E4 
16790     04 27 5A 5C | 	byte	$ea, $db, $df, $04, $31, $44, $28, $03, $f6, $de, $b7, $e4, $04, $27, $5a, $5c
16794     59 11 E8 BB 
16798     A0 A2 CE 22 
1679c     74 66 1B D4 
167a0     BE BD D5 DD | 	byte	$59, $11, $e8, $bb, $a0, $a2, $ce, $22, $74, $66, $1b, $d4, $be, $bd, $d5, $dd
167a4     ED FC F2 13 
167a8     2C 34 2A 05 
167ac     FD D1 B0 DA 
167b0     FC 26 62 61 | 	byte	$ed, $fc, $f2, $13, $2c, $34, $2a, $05, $fd, $d1, $b0, $da, $fc, $26, $62, $61
167b4     5E 16 DB AB 
167b8     A7 A5 E0 30 
167bc     7D 67 0F CE 
167c0     B4 CC B9 CA | 	byte	$5e, $16, $db, $ab, $a7, $a5, $e0, $30, $7d, $67, $0f, $ce, $b4, $cc, $b9, $ca
167c4     F0 04 1F 27 
167c8     23 1A 30 09 
167cc     FC C3 BB D1 
167d0     FF 2B 60 6E | 	byte	$f0, $04, $1f, $27, $23, $1a, $30, $09, $fc, $c3, $bb, $d1, $ff, $2b, $60, $6e
167d4     54 1D C4 8F 
167d8     9E C8 1B 6D 
167dc     7C 53 DB B6 
167e0     88 8C 83 93 | 	byte	$54, $1d, $c4, $8f, $9e, $c8, $1b, $6d, $7c, $53, $db, $b6, $88, $8c, $83, $93
167e4     CF 41 6E 7D 
167e8     76 57 52 03 
167ec     B8 86 9A C8 
167f0     0C 5B 7F 7F | 	byte	$cf, $41, $6e, $7d, $76, $57, $52, $03, $b8, $86, $9a, $c8, $0c, $5b, $7f, $7f
167f4     52 E7 89 80 
167f8     80 CD 4C 7F 
167fc     7F 4B D3 AD 
16800     98 88 82 82 | 	byte	$52, $e7, $89, $80, $80, $cd, $4c, $7f, $7f, $4b, $d3, $ad, $98, $88, $82, $82
16804     BA 2F 6C 7F 
16808     6A 5C 36 1C 
1680c     D4 87 96 B8 
16810     EB 46 76 7F | 	byte	$ba, $2f, $6c, $7f, $6a, $5c, $36, $1c, $d4, $87, $96, $b8, $eb, $46, $76, $7f
16814     59 F9 A9 80 
16818     80 AD 39 7F 
1681c     7F 55 F1 B9 
16820     9C 8D 81 81 | 	byte	$59, $f9, $a9, $80, $80, $ad, $39, $7f, $7f, $55, $f1, $b9, $9c, $8d, $81, $81
16824     A1 18 63 7F 
16828     6B 51 32 14 
1682c     E9 9F A2 B9 
16830     F0 2F 65 70 | 	byte	$a1, $18, $63, $7f, $6b, $51, $32, $14, $e9, $9f, $a2, $b9, $f0, $2f, $65, $70
16834     50 FC BB 82 
16838     81 BD 31 7F 
1683c     7F 38 08 D2 
16840     B3 8D 80 82 | 	byte	$50, $fc, $bb, $82, $81, $bd, $31, $7f, $7f, $38, $08, $d2, $b3, $8d, $80, $82
16844     A2 01 55 72 
16848     7F 53 32 0B 
1684c     E8 C4 B5 C2 
16850     F5 31 54 5C | 	byte	$a2, $01, $55, $72, $7f, $53, $32, $0b, $e8, $c4, $b5, $c2, $f5, $31, $54, $5c
16854     34 08 BB 9D 
16858     8E DC 3F 77 
1685c     64 28 FE E8 
16860     C6 92 80 91 | 	byte	$34, $08, $bb, $9d, $8e, $dc, $3f, $77, $64, $28, $fe, $e8, $c6, $92, $80, $91
16864     B9 F4 43 66 
16868     6E 56 34 02 
1686c     DD DC D9 D1 
16870     FB 2D 42 41 | 	byte	$b9, $f4, $43, $66, $6e, $56, $34, $02, $dd, $dc, $d9, $d1, $fb, $2d, $42, $41
16874     23 ED BE A9 
16878     B0 F8 52 66 
1687c     38 FD F4 FA 
16880     DB 9A 85 9A | 	byte	$23, $ed, $be, $a9, $b0, $f8, $52, $66, $38, $fd, $f4, $fa, $db, $9a, $85, $9a
16884     D5 03 43 52 
16888     5E 4D 38 F6 
1688c     CD EE F5 FE 
16890     07 21 29 24 | 	byte	$d5, $03, $43, $52, $5e, $4d, $38, $f6, $cd, $ee, $f5, $fe, $07, $21, $29, $24
16894     FB D1 BE B1 
16898     D1 20 68 61 
1689c     19 D9 DF 03 
168a0     F9 AC 94 A4 | 	byte	$fb, $d1, $be, $b1, $d1, $20, $68, $61, $19, $d9, $df, $03, $f9, $ac, $94, $a4
168a4     E0 1E 37 48 
168a8     56 40 2C E9 
168ac     C1 EB FE 0E 
168b0     2B 22 28 05 | 	byte	$e0, $1e, $37, $48, $56, $40, $2c, $e9, $c1, $eb, $fe, $0e, $2b, $22, $28, $05
168b4     E4 B9 BB BC 
168b8     F0 45 7D 5D 
168bc     F4 BF C7 FA 
168c0     F9 CC A4 B4 | 	byte	$e4, $b9, $bb, $bc, $f0, $45, $7d, $5d, $f4, $bf, $c7, $fa, $f9, $cc, $a4, $b4
168c4     DC 29 30 39 
168c8     4D 3A 2F DB 
168cc     C1 DC 03 16 
168d0     43 36 28 F6 | 	byte	$dc, $29, $30, $39, $4d, $3a, $2f, $db, $c1, $dc, $03, $16, $43, $36, $28, $f6
168d4     D5 9D AD C1 
168d8     16 69 7F 6B 
168dc     E5 AA A3 EA 
168e0     E3 D1 BF D0 | 	byte	$d5, $9d, $ad, $c1, $16, $69, $7f, $6b, $e5, $aa, $a3, $ea, $e3, $d1, $bf, $d0
168e4     EB 2D 3A 33 
168e8     44 2F 25 C7 
168ec     CC DF 05 27 
168f0     4B 4E 2C EC | 	byte	$eb, $2d, $3a, $33, $44, $2f, $25, $c7, $cc, $df, $05, $27, $4b, $4e, $2c, $ec
168f4     BD 8D 95 BD 
168f8     23 7F 7F 61 
168fc     E7 AC A0 CF 
16900     C4 D0 CD ED | 	byte	$bd, $8d, $95, $bd, $23, $7f, $7f, $61, $e7, $ac, $a0, $cf, $c4, $d0, $cd, $ed
16904     01 37 31 37 
16908     3A 37 0A B9 
1690c     BB E7 00 34 
16910     53 59 30 F2 | 	byte	$01, $37, $31, $37, $3a, $37, $0a, $b9, $bb, $e7, $00, $34, $53, $59, $30, $f2
16914     AC 82 83 B5 
16918     2A 7F 7F 5F 
1691c     EB B6 A9 C5 
16920     A2 B7 D3 00 | 	byte	$ac, $82, $83, $b5, $2a, $7f, $7f, $5f, $eb, $b6, $a9, $c5, $a2, $b7, $d3, $00
16924     1A 3F 39 3D 
16928     3D 3D 03 B2 
1692c     B2 CE FE 3F 
16930     53 5B 2C F9 | 	byte	$1a, $3f, $39, $3d, $3d, $3d, $03, $b2, $b2, $ce, $fe, $3f, $53, $5b, $2c, $f9
16934     A8 80 83 B1 
16938     3A 7F 7F 4C 
1693c     E0 B4 A7 B2 
16940     9D AB DC 15 | 	byte	$a8, $80, $83, $b1, $3a, $7f, $7f, $4c, $e0, $b4, $a7, $b2, $9d, $ab, $dc, $15
16944     41 54 3D 3C 
16948     38 36 FF B8 
1694c     B6 CA FD 40 
16950     50 56 23 F6 | 	byte	$41, $54, $3d, $3c, $38, $36, $ff, $b8, $b6, $ca, $fd, $40, $50, $56, $23, $f6
16954     AA 81 81 BB 
16958     38 7F 7F 30 
1695c     DB B3 C3 AF 
16960     9D 98 D0 14 | 	byte	$aa, $81, $81, $bb, $38, $7f, $7f, $30, $db, $b3, $c3, $af, $9d, $98, $d0, $14
16964     48 5C 38 39 
16968     30 3D 03 C3 
1696c     B8 C5 F4 35 
16970     4E 52 2A EC | 	byte	$48, $5c, $38, $39, $30, $3d, $03, $c3, $b8, $c5, $f4, $35, $4e, $52, $2a, $ec
16974     B3 8B 85 CA 
16978     3B 7F 7F 32 
1697c     DA BA CC B2 
16980     9C 95 BF 08 | 	byte	$b3, $8b, $85, $ca, $3b, $7f, $7f, $32, $da, $ba, $cc, $b2, $9c, $95, $bf, $08
16984     4D 5D 41 3D 
16988     39 33 03 CF 
1698c     C1 C7 F0 23 
16990     51 46 26 EC | 	byte	$4d, $5d, $41, $3d, $39, $33, $03, $cf, $c1, $c7, $f0, $23, $51, $46, $26, $ec
16994     B4 90 8B CD 
16998     55 7F 7F 30 
1699c     E0 C6 CD BB 
169a0     A2 9E BB 01 | 	byte	$b4, $90, $8b, $cd, $55, $7f, $7f, $30, $e0, $c6, $cd, $bb, $a2, $9e, $bb, $01
169a4     43 5E 4F 3E 
169a8     3E 1F F4 D2 
169ac     D2 D1 F9 1C 
169b0     4A 3F 17 E0 | 	byte	$43, $5e, $4f, $3e, $3e, $1f, $f4, $d2, $d2, $d1, $f9, $1c, $4a, $3f, $17, $e0
169b4     AE 92 9E DC 
169b8     59 7F 69 27 
169bc     E3 D6 D6 BF 
169c0     A6 A6 C6 FE | 	byte	$ae, $92, $9e, $dc, $59, $7f, $69, $27, $e3, $d6, $d6, $bf, $a6, $a6, $c6, $fe
169c4     2E 4A 55 4D 
169c8     45 17 ED DC 
169cc     DB D8 FA 19 
169d0     43 33 12 DC | 	byte	$2e, $4a, $55, $4d, $45, $17, $ed, $dc, $db, $d8, $fa, $19, $43, $33, $12, $dc
169d4     B5 94 B5 F3 
169d8     59 7F 45 11 
169dc     DD DB CE C7 
169e0     A9 BB D4 11 | 	byte	$b5, $94, $b5, $f3, $59, $7f, $45, $11, $dd, $db, $ce, $c7, $a9, $bb, $d4, $11
169e4     23 39 4D 44 
169e8     49 13 F3 E1 
169ec     E6 EA FF 17 
169f0     34 26 01 D2 | 	byte	$23, $39, $4d, $44, $49, $13, $f3, $e1, $e6, $ea, $ff, $17, $34, $26, $01, $d2
169f4     B2 9B C2 12 
169f8     63 7B 34 06 
169fc     D0 D8 C1 C7 
16a00     AF C9 E1 19 | 	byte	$b2, $9b, $c2, $12, $63, $7b, $34, $06, $d0, $d8, $c1, $c7, $af, $c9, $e1, $19
16a04     28 37 41 41 
16a08     3A 01 F1 DA 
16a0c     EA 02 13 23 
16a10     29 1B EB C5 | 	byte	$28, $37, $41, $41, $3a, $01, $f1, $da, $ea, $02, $13, $23, $29, $1b, $eb, $c5
16a14     A1 95 DA 39 
16a18     7A 7A 2E FD 
16a1c     CD C9 B7 C2 
16a20     BB D1 F5 1C | 	byte	$a1, $95, $da, $39, $7a, $7a, $2e, $fd, $cd, $c9, $b7, $c2, $bb, $d1, $f5, $1c
16a24     2D 3B 38 3F 
16a28     31 03 ED DD 
16a2c     E1 0A 16 2F 
16a30     25 14 EA B7 | 	byte	$2d, $3b, $38, $3f, $31, $03, $ed, $dd, $e1, $0a, $16, $2f, $25, $14, $ea, $b7
16a34     98 92 EA 46 
16a38     7E 6D 28 FB 
16a3c     D0 C0 AE C5 
16a40     C7 DF 00 25 | 	byte	$98, $92, $ea, $46, $7e, $6d, $28, $fb, $d0, $c0, $ae, $c5, $c7, $df, $00, $25
16a44     2E 3D 29 35 
16a48     24 02 F1 DE 
16a4c     E4 10 16 2E 
16a50     25 1A E9 B9 | 	byte	$2e, $3d, $29, $35, $24, $02, $f1, $de, $e4, $10, $16, $2e, $25, $1a, $e9, $b9
16a54     97 98 EA 49 
16a58     74 59 2B F4 
16a5c     DC BA A7 BB 
16a60     CF EA 16 2C | 	byte	$97, $98, $ea, $49, $74, $59, $2b, $f4, $dc, $ba, $a7, $bb, $cf, $ea, $16, $2c
16a64     31 3E 27 2B 
16a68     0B FD F2 DF 
16a6c     F2 13 22 30 
16a70     1B 0C E3 C1 | 	byte	$31, $3e, $27, $2b, $0b, $fd, $f2, $df, $f2, $13, $22, $30, $1b, $0c, $e3, $c1
16a74     9E B2 EA 36 
16a78     61 52 2E 00 
16a7c     E0 BC BA C9 
16a80     DB F1 14 21 | 	byte	$9e, $b2, $ea, $36, $61, $52, $2e, $00, $e0, $bc, $ba, $c9, $db, $f1, $14, $21
16a84     22 24 10 13 
16a88     0B 12 06 EC 
16a8c     F3 01 10 1B 
16a90     18 0D F9 DF | 	byte	$22, $24, $10, $13, $0b, $12, $06, $ec, $f3, $01, $10, $1b, $18, $0d, $f9, $df
16a94     C1 C2 E4 10 
16a98     40 45 2B FD 
16a9c     DF C8 D2 E3 
16aa0     EB FA 0B 14 | 	byte	$c1, $c2, $e4, $10, $40, $45, $2b, $fd, $df, $c8, $d2, $e3, $eb, $fa, $0b, $14
16aa4     0C 0D 07 0C 
16aa8     14 1E 11 F3 
16aac     F4 FF 06 0E 
16ab0     10 0C 00 EB | 	byte	$0c, $0d, $07, $0c, $14, $1e, $11, $f3, $f4, $ff, $06, $0e, $10, $0c, $00, $eb
16ab4     CE C6 E2 0A 
16ab8     2F 41 30 05 
16abc     DD CC DD F0 
16ac0     F0 FD 02 0F | 	byte	$ce, $c6, $e2, $0a, $2f, $41, $30, $05, $dd, $cc, $dd, $f0, $f0, $fd, $02, $0f
16ac4     05 0C 01 10 
16ac8     18 1F 11 F5 
16acc     FD FD 07 09 
16ad0     0A 07 FB E8 | 	byte	$05, $0c, $01, $10, $18, $1f, $11, $f5, $fd, $fd, $07, $09, $0a, $07, $fb, $e8
16ad4     D3 C8 E4 0A 
16ad8     28 3F 31 13 
16adc     E8 D3 DC EF 
16ae0     F1 F4 FB 06 | 	byte	$d3, $c8, $e4, $0a, $28, $3f, $31, $13, $e8, $d3, $dc, $ef, $f1, $f4, $fb, $06
16ae4     06 0A 07 10 
16ae8     15 1A 0C FB 
16aec     01 08 05 0B 
16af0     07 0C F7 DF | 	byte	$06, $0a, $07, $10, $15, $1a, $0c, $fb, $01, $08, $05, $0b, $07, $0c, $f7, $df
16af4     CF CE ED 07 
16af8     28 3D 30 10 
16afc     E6 D3 DA EF 
16b00     F0 F9 02 09 | 	byte	$cf, $ce, $ed, $07, $28, $3d, $30, $10, $e6, $d3, $da, $ef, $f0, $f9, $02, $09
16b04     03 0B 02 0D 
16b08     16 16 09 FA 
16b0c     03 0C 01 0A 
16b10     03 14 F3 DE | 	byte	$03, $0b, $02, $0d, $16, $16, $09, $fa, $03, $0c, $01, $0a, $03, $14, $f3, $de
16b14     CB D3 F4 05 
16b18     21 3A 32 12 
16b1c     E8 DB DD EB 
16b20     EB F1 FF 09 | 	byte	$cb, $d3, $f4, $05, $21, $3a, $32, $12, $e8, $db, $dd, $eb, $eb, $f1, $ff, $09
16b24     06 14 0D 16 
16b28     15 10 FD EA 
16b2c     FC 06 03 09 
16b30     0F 16 FC E4 | 	byte	$06, $14, $0d, $16, $15, $10, $fd, $ea, $fc, $06, $03, $09, $0f, $16, $fc, $e4
16b34     D5 DD F4 03 
16b38     1E 31 25 12 
16b3c     F3 E8 DF E6 
16b40     E6 E6 F6 04 | 	byte	$d5, $dd, $f4, $03, $1e, $31, $25, $12, $f3, $e8, $df, $e6, $e6, $e6, $f6, $04
16b44     15 1F 1B 14 
16b48     0D 08 F2 E4 
16b4c     F7 04 05 0F 
16b50     13 16 FD E3 | 	byte	$15, $1f, $1b, $14, $0d, $08, $f2, $e4, $f7, $04, $05, $0f, $13, $16, $fd, $e3
16b54     D9 DA F7 FD 
16b58     1B 2B 27 10 
16b5c     F8 E8 DE E2 
16b60     E6 EA F4 02 | 	byte	$d9, $da, $f7, $fd, $1b, $2b, $27, $10, $f8, $e8, $de, $e2, $e6, $ea, $f4, $02
16b64     17 28 1D 14 
16b68     09 0D FC EB 
16b6c     F2 FC FB 09 
16b70     0D 0F FE EF | 	byte	$17, $28, $1d, $14, $09, $0d, $fc, $eb, $f2, $fc, $fb, $09, $0d, $0f, $fe, $ef
16b74     E3 E7 F7 FF 
16b78     13 23 20 13 
16b7c     FF EA E1 E1 
16b80     E5 E8 ED FF | 	byte	$e3, $e7, $f7, $ff, $13, $23, $20, $13, $ff, $ea, $e1, $e1, $e5, $e8, $ed, $ff
16b84     14 28 1C 18 
16b88     07 0A F7 E4 
16b8c     EF FB 05 14 
16b90     15 0C F9 EB | 	byte	$14, $28, $1c, $18, $07, $0a, $f7, $e4, $ef, $fb, $05, $14, $15, $0c, $f9, $eb
16b94     E2 E6 F5 FF 
16b98     14 2A 27 17 
16b9c     FE EE E5 E6 
16ba0     E3 E2 E9 F3 | 	byte	$e2, $e6, $f5, $ff, $14, $2a, $27, $17, $fe, $ee, $e5, $e6, $e3, $e2, $e9, $f3
16ba4     10 20 21 1E 
16ba8     17 13 F7 E0 
16bac     E7 F6 03 16 
16bb0     1B 13 00 EF | 	byte	$10, $20, $21, $1e, $17, $13, $f7, $e0, $e7, $f6, $03, $16, $1b, $13, $00, $ef
16bb4     E0 E3 EA F0 
16bb8     10 2C 2B 12 
16bbc     FE EB F0 F1 
16bc0     E6 E4 E8 F8 | 	byte	$e0, $e3, $ea, $f0, $10, $2c, $2b, $12, $fe, $eb, $f0, $f1, $e6, $e4, $e8, $f8
16bc4     0B 19 18 1F 
16bc8     22 17 FB E0 
16bcc     E0 EA FC 17 
16bd0     1F 1B 02 F5 | 	byte	$0b, $19, $18, $1f, $22, $17, $fb, $e0, $e0, $ea, $fc, $17, $1f, $1b, $02, $f5
16bd4     E5 E9 E9 F2 
16bd8     0E 25 1E 0A 
16bdc     F7 EA F8 00 
16be0     F9 F5 F6 00 | 	byte	$e5, $e9, $e9, $f2, $0e, $25, $1e, $0a, $f7, $ea, $f8, $00, $f9, $f5, $f6, $00
16be4     05 08 FE 07 
16be8     0A 11 04 F8 
16bec     EC EC FA 11 
16bf0     17 0D FA F8 | 	byte	$05, $08, $fe, $07, $0a, $11, $04, $f8, $ec, $ec, $fa, $11, $17, $0d, $fa, $f8
16bf4     F6 FB F4 F6 
16bf8     03 10 07 FB 
16bfc     F2 F0 FE 11 
16c00     0D 08 05 06 | 	byte	$f6, $fb, $f4, $f6, $03, $10, $07, $fb, $f2, $f0, $fe, $11, $0d, $08, $05, $06
16c04     08 01 F2 F4 
16c08     FC 0B 09 FF 
16c0c     F0 EA FB 0F 
16c10     11 09 FA FC | 	byte	$08, $01, $f2, $f4, $fc, $0b, $09, $ff, $f0, $ea, $fb, $0f, $11, $09, $fa, $fc
16c14     01 04 FB F5 
16c18     FF 05 02 FD 
16c1c     F2 F5 00 15 
16c20     17 0F 09 07 | 	byte	$01, $04, $fb, $f5, $ff, $05, $02, $fd, $f2, $f5, $00, $15, $17, $0f, $09, $07
16c24     01 FA EB ED 
16c28     F9 0B 12 07 
16c2c     F4 E4 F8 08 
16c30     07 03 FE 06 | 	byte	$01, $fa, $eb, $ed, $f9, $0b, $12, $07, $f4, $e4, $f8, $08, $07, $03, $fe, $06
16c34     0C 09 FA F1 
16c38     F8 FB FE 00 
16c3c     F5 FA 06 12 
16c40     19 13 0A 03 | 	byte	$0c, $09, $fa, $f1, $f8, $fb, $fe, $00, $f5, $fa, $06, $12, $19, $13, $0a, $03
16c44     FD F4 EC EF 
16c48     FB 08 10 06 
16c4c     F5 E6 F4 02 
16c50     05 05 08 0C | 	byte	$fd, $f4, $ec, $ef, $fb, $08, $10, $06, $f5, $e6, $f4, $02, $05, $05, $08, $0c
16c54     12 0C F8 EE 
16c58     EE F6 FA 03 
16c5c     FC 02 09 0D 
16c60     0F 0D 09 01 | 	byte	$12, $0c, $f8, $ee, $ee, $f6, $fa, $03, $fc, $02, $09, $0d, $0f, $0d, $09, $01
16c64     FF F4 F2 F6 
16c68     FF 03 09 00 
16c6c     F8 EC F7 01 
16c70     03 03 05 0E | 	byte	$ff, $f4, $f2, $f6, $ff, $03, $09, $00, $f8, $ec, $f7, $01, $03, $03, $05, $0e
16c74     0F 06 F8 F0 
16c78     EF F4 FB 00 
16c7c     01 FE 09 09 
16c80     13 13 0E 05 | 	byte	$0f, $06, $f8, $f0, $ef, $f4, $fb, $00, $01, $fe, $09, $09, $13, $13, $0e, $05
16c84     FB F2 EF F7 
16c88     04 0B 0C FF 
16c8c     F1 EF F6 F9 
16c90     FE 04 0D 15 | 	byte	$fb, $f2, $ef, $f7, $04, $0b, $0c, $ff, $f1, $ef, $f6, $f9, $fe, $04, $0d, $15
16c94     13 06 FB F1 
16c98     EE E8 F6 FC 
16c9c     02 00 06 0C 
16ca0     18 19 13 07 | 	byte	$13, $06, $fb, $f1, $ee, $e8, $f6, $fc, $02, $00, $06, $0c, $18, $19, $13, $07
16ca4     F6 ED ED FB 
16ca8     09 15 10 00 
16cac     EE EA EF EC 
16cb0     F3 00 10 18 | 	byte	$f6, $ed, $ed, $fb, $09, $15, $10, $00, $ee, $ea, $ef, $ec, $f3, $00, $10, $18
16cb4     1B 0C 01 F9 
16cb8     F0 E6 F0 F5 
16cbc     FB 05 06 10 
16cc0     14 18 10 07 | 	byte	$1b, $0c, $01, $f9, $f0, $e6, $f0, $f5, $fb, $05, $06, $10, $14, $18, $10, $07
16cc4     F1 E5 ED FE 
16cc8     11 19 12 00 
16ccc     F0 E7 EA E9 
16cd0     EF 03 15 25 | 	byte	$f1, $e5, $ed, $fe, $11, $19, $12, $00, $f0, $e7, $ea, $e9, $ef, $03, $15, $25
16cd4     20 12 01 F3 
16cd8     E3 DA E2 F1 
16cdc     FD 11 17 1E 
16ce0     1E 19 0C FB | 	byte	$20, $12, $01, $f3, $e3, $da, $e2, $f1, $fd, $11, $17, $1e, $1e, $19, $0c, $fb
16ce4     E6 DC E7 FE 
16ce8     15 20 16 05 
16cec     EF E8 E6 E6 
16cf0     EC FC 10 29 | 	byte	$e6, $dc, $e7, $fe, $15, $20, $16, $05, $ef, $e8, $e6, $e6, $ec, $fc, $10, $29
16cf4     26 1B 07 F7 
16cf8     E3 DA D8 E7 
16cfc     FA 0F 1E 20 
16d00     1D 15 0A FC | 	byte	$26, $1b, $07, $f7, $e3, $da, $d8, $e7, $fa, $0f, $1e, $20, $1d, $15, $0a, $fc
16d04     ED E5 ED 04 
16d08     15 1D 0E F7 
16d0c     E9 EF EF EE 
16d10     EC F3 06 24 | 	byte	$ed, $e5, $ed, $04, $15, $1d, $0e, $f7, $e9, $ef, $ef, $ee, $ec, $f3, $06, $24
16d14     26 1E 0E FD 
16d18     E5 DD D9 E1 
16d1c     F7 16 1F 24 
16d20     1A 0E 07 F8 | 	byte	$26, $1e, $0e, $fd, $e5, $dd, $d9, $e1, $f7, $16, $1f, $24, $1a, $0e, $07, $f8
16d24     EE EB F3 06 
16d28     1B 18 07 EF 
16d2c     E6 EC ED EB 
16d30     ED F5 0A 26 | 	byte	$ee, $eb, $f3, $06, $1b, $18, $07, $ef, $e6, $ec, $ed, $eb, $ed, $f5, $0a, $26
16d34     2C 22 0E F8 
16d38     E5 DD D9 E0 
16d3c     FB 16 1D 1F 
16d40     16 0D 05 F7 | 	byte	$2c, $22, $0e, $f8, $e5, $dd, $d9, $e0, $fb, $16, $1d, $1f, $16, $0d, $05, $f7
16d44     EB EE F7 06 
16d48     17 0F 02 F1 
16d4c     F5 FC F8 EC 
16d50     E8 EF 04 18 | 	byte	$eb, $ee, $f7, $06, $17, $0f, $02, $f1, $f5, $fc, $f8, $ec, $e8, $ef, $04, $18
16d54     24 21 13 01 
16d58     EC E3 DD E4 
16d5c     F7 12 1A 1A 
16d60     1A 0E 03 F2 | 	byte	$24, $21, $13, $01, $ec, $e3, $dd, $e4, $f7, $12, $1a, $1a, $1a, $0e, $03, $f2
16d64     EA F2 FE 0D 
16d68     16 0E 01 F0 
16d6c     F8 F9 F7 EB 
16d70     E8 EF 09 11 | 	byte	$ea, $f2, $fe, $0d, $16, $0e, $01, $f0, $f8, $f9, $f7, $eb, $e8, $ef, $09, $11
16d74     1C 1B 10 00 
16d78     F1 E7 E4 ED 
16d7c     00 0F 17 14 
16d80     11 0D 01 F7 | 	byte	$1c, $1b, $10, $00, $f1, $e7, $e4, $ed, $00, $0f, $17, $14, $11, $0d, $01, $f7
16d84     ED F3 04 11 
16d88     10 05 F8 F4 
16d8c     FE FD F7 EA 
16d90     E9 F3 0B 0F | 	byte	$ed, $f3, $04, $11, $10, $05, $f8, $f4, $fe, $fd, $f7, $ea, $e9, $f3, $0b, $0f
16d94     12 14 10 FE 
16d98     F1 E5 E5 F2 
16d9c     06 14 18 11 
16da0     09 0B 01 FB | 	byte	$12, $14, $10, $fe, $f1, $e5, $e5, $f2, $06, $14, $18, $11, $09, $0b, $01, $fb
16da4     F0 F4 05 16 
16da8     0E 03 F2 F4 
16dac     FF FE F7 EB 
16db0     F0 FC 11 10 | 	byte	$f0, $f4, $05, $16, $0e, $03, $f2, $f4, $ff, $fe, $f7, $eb, $f0, $fc, $11, $10
16db4     06 04 05 F7 
16db8     F4 EA ED FA 
16dbc     0E 17 12 0A 
16dc0     02 0A 03 FD | 	byte	$06, $04, $05, $f7, $f4, $ea, $ed, $fa, $0e, $17, $12, $0a, $02, $0a, $03, $fd
16dc4     F2 F7 08 16 
16dc8     0D FD EF F3 
16dcc     05 FD F4 EF 
16dd0     F8 0D 17 10 | 	byte	$f2, $f7, $08, $16, $0d, $fd, $ef, $f3, $05, $fd, $f4, $ef, $f8, $0d, $17, $10
16dd4     FF F6 F6 F0 
16dd8     EC EA F4 0B 
16ddc     19 18 0F 04 
16de0     04 08 05 FA | 	byte	$ff, $f6, $f6, $f0, $ec, $ea, $f4, $0b, $19, $18, $0f, $04, $04, $08, $05, $fa
16de4     F2 F9 09 14 
16de8     0C FC F2 F4 
16dec     00 FE ED EE 
16df0     F7 12 16 0F | 	byte	$f2, $f9, $09, $14, $0c, $fc, $f2, $f4, $00, $fe, $ed, $ee, $f7, $12, $16, $0f
16df4     01 F6 F1 EF 
16df8     E8 E8 F9 12 
16dfc     21 17 0A 00 
16e00     02 07 04 FC | 	byte	$01, $f6, $f1, $ef, $e8, $e8, $f9, $12, $21, $17, $0a, $00, $02, $07, $04, $fc
16e04     F6 02 0C 0D 
16e08     03 F8 F0 FD 
16e0c     FF FD F2 F4 
16e10     FB 0E 0E 05 | 	byte	$f6, $02, $0c, $0d, $03, $f8, $f0, $fd, $ff, $fd, $f2, $f4, $fb, $0e, $0e, $05
16e14     FF FB F5 F4 
16e18     EF EC 00 17 
16e1c     19 0A FE FC 
16e20     06 0A 0A 05 | 	byte	$ff, $fb, $f5, $f4, $ef, $ec, $00, $17, $19, $0a, $fe, $fc, $06, $0a, $0a, $05
16e24     00 05 0B 03 
16e28     F8 EF F3 04 
16e2c     03 FD F6 F8 
16e30     01 0D 08 FD | 	byte	$00, $05, $0b, $03, $f8, $ef, $f3, $04, $03, $fd, $f6, $f8, $01, $0d, $08, $fd
16e34     FB FB F2 EF 
16e38     EF F1 05 1C 
16e3c     1B 0E FF FA 
16e40     04 05 08 FE | 	byte	$fb, $fb, $f2, $ef, $ef, $f1, $05, $1c, $1b, $0e, $ff, $fa, $04, $05, $08, $fe
16e44     00 08 12 06 
16e48     F8 EA EE FF 
16e4c     01 F5 F2 FB 
16e50     11 19 0D 02 | 	byte	$00, $08, $12, $06, $f8, $ea, $ee, $ff, $01, $f5, $f2, $fb, $11, $19, $0d, $02
16e54     FB F9 ED E8 
16e58     E5 F4 08 1D 
16e5c     18 0F 01 FC 
16e60     04 04 02 FB | 	byte	$fb, $f9, $ed, $e8, $e5, $f4, $08, $1d, $18, $0f, $01, $fc, $04, $04, $02, $fb
16e64     03 0A 13 06 
16e68     FA EB F4 FD 
16e6c     FD F0 EE F8 
16e70     11 18 0F 06 | 	byte	$03, $0a, $13, $06, $fa, $eb, $f4, $fd, $fd, $f0, $ee, $f8, $11, $18, $0f, $06
16e74     03 FB EB E7 
16e78     E3 F5 08 14 
16e7c     0E 08 05 08 
16e80     10 0B 03 F9 | 	byte	$03, $fb, $eb, $e7, $e3, $f5, $08, $14, $0e, $08, $05, $08, $10, $0b, $03, $f9
16e84     FF 09 0B FD 
16e88     F9 EF 00 01 
16e8c     FF F3 F0 F5 
16e90     06 0A 06 07 | 	byte	$ff, $09, $0b, $fd, $f9, $ef, $00, $01, $ff, $f3, $f0, $f5, $06, $0a, $06, $07
16e94     0D 04 F4 E8 
16e98     E7 F6 08 0A 
16e9c     01 01 07 13 
16ea0     17 11 02 FC | 	byte	$0d, $04, $f4, $e8, $e7, $f6, $08, $0a, $01, $01, $07, $13, $17, $11, $02, $fc
16ea4     FE 05 FE F5 
16ea8     EF F1 03 07 
16eac     03 FB F9 FA 
16eb0     FE FA FE 05 | 	byte	$fe, $05, $fe, $f5, $ef, $f1, $03, $07, $03, $fb, $f9, $fa, $fe, $fa, $fe, $05
16eb4     13 0A FA E9 
16eb8     E9 FD 0C 0D 
16ebc     FD FA 06 14 
16ec0     14 0B FC FC | 	byte	$13, $0a, $fa, $e9, $e9, $fd, $0c, $0d, $fd, $fa, $06, $14, $14, $0b, $fc, $fc
16ec4     FF 0A 01 FA 
16ec8     ED F5 05 02 
16ecc     FB F7 FA 03 
16ed0     FF F5 F9 03 | 	byte	$ff, $0a, $01, $fa, $ed, $f5, $05, $02, $fb, $f7, $fa, $03, $ff, $f5, $f9, $03
16ed4     11 0A FE EF 
16ed8     F0 FF 09 06 
16edc     F9 F8 0A 19 
16ee0     1A 0F FA F6 | 	byte	$11, $0a, $fe, $ef, $f0, $ff, $09, $06, $f9, $f8, $0a, $19, $1a, $0f, $fa, $f6
16ee4     FA 03 FB FB 
16ee8     F3 FC 0A 06 
16eec     FD F8 F6 04 
16ef0     FE F3 F5 02 | 	byte	$fa, $03, $fb, $fb, $f3, $fc, $0a, $06, $fd, $f8, $f6, $04, $fe, $f3, $f5, $02
16ef4     0A 03 FB F2 
16ef8     FA 05 0E 04 
16efc     FC F9 09 15 
16f00     15 0B F8 F8 | 	byte	$0a, $03, $fb, $f2, $fa, $05, $0e, $04, $fc, $f9, $09, $15, $15, $0b, $f8, $f8
16f04     FB 02 FC FE 
16f08     F5 00 05 06 
16f0c     FA F6 F7 06 
16f10     03 F9 F9 03 | 	byte	$fb, $02, $fc, $fe, $f5, $00, $05, $06, $fa, $f6, $f7, $06, $03, $f9, $f9, $03
16f14     04 FD F6 F0 
16f18     FF 05 0F 04 
16f1c     FF FE 0F 14 
16f20     11 01 F3 F4 | 	byte	$04, $fd, $f6, $f0, $ff, $05, $0f, $04, $ff, $fe, $0f, $14, $11, $01, $f3, $f4
16f24     FC FF FE 01 
16f28     01 0C 0B 04 
16f2c     F8 F1 F1 FD 
16f30     FD FE FE 09 | 	byte	$fc, $ff, $fe, $01, $01, $0c, $0b, $04, $f8, $f1, $f1, $fd, $fd, $fe, $fe, $09
16f34     04 FC F7 F5 
16f38     00 03 02 F9 
16f3c     FE 08 16 15 
16f40     15 F9 F4 EF | 	byte	$04, $fc, $f7, $f5, $00, $03, $02, $f9, $fe, $08, $16, $15, $15, $f9, $f4, $ef
16f44     FB FA 01 02 
16f48     09 0F 0B 01 
16f4c     F8 EF F1 F7 
16f50     F7 02 04 0B | 	byte	$fb, $fa, $01, $02, $09, $0f, $0b, $01, $f8, $ef, $f1, $f7, $f7, $02, $04, $0b
16f54     00 FE F9 02 
16f58     01 FF F8 F4 
16f5c     FF 11 1F 1C 
16f60     11 F7 EF E9 | 	byte	$00, $fe, $f9, $02, $01, $ff, $f8, $f4, $ff, $11, $1f, $1c, $11, $f7, $ef, $e9
16f64     F3 F4 03 03 
16f68     11 14 0E 00 
16f6c     FA F1 F2 F0 
16f70     F3 00 0B 0D | 	byte	$f3, $f4, $03, $03, $11, $14, $0e, $00, $fa, $f1, $f2, $f0, $f3, $00, $0b, $0d
16f74     02 03 FA 03 
16f78     FC FA EB EE 
16f7c     FC 17 25 26 
16f80     14 F9 EE EA | 	byte	$02, $03, $fa, $03, $fc, $fa, $eb, $ee, $fc, $17, $25, $26, $14, $f9, $ee, $ea
16f84     EE EC FA 00 
16f88     15 1B 17 02 
16f8c     F6 F1 F1 ED 
16f90     EE 01 0F 0E | 	byte	$ee, $ec, $fa, $00, $15, $1b, $17, $02, $f6, $f1, $f1, $ed, $ee, $01, $0f, $0e
16f94     04 FD F5 FF 
16f98     FA F9 E9 EC 
16f9c     00 1E 2B 2A 
16fa0     11 F7 ED EB | 	byte	$04, $fd, $f5, $ff, $fa, $f9, $e9, $ec, $00, $1e, $2b, $2a, $11, $f7, $ed, $eb
16fa4     EB E6 F3 03 
16fa8     18 21 15 02 
16fac     F8 F8 FB EE 
16fb0     EF F8 0B 06 | 	byte	$eb, $e6, $f3, $03, $18, $21, $15, $02, $f8, $f8, $fb, $ee, $ef, $f8, $0b, $06
16fb4     01 F9 F6 FF 
16fb8     01 FD EF F0 
16fbc     01 1B 29 24 
16fc0     0E F9 EF F0 | 	byte	$01, $f9, $f6, $ff, $01, $fd, $ef, $f0, $01, $1b, $29, $24, $0e, $f9, $ef, $f0
16fc4     E8 EC F0 07 
16fc8     1C 20 16 00 
16fcc     F7 F8 FB F2 
16fd0     F2 F6 05 06 | 	byte	$e8, $ec, $f0, $07, $1c, $20, $16, $00, $f7, $f8, $fb, $f2, $f2, $f6, $05, $06
16fd4     04 FA F9 FA 
16fd8     FB F5 EB F2 
16fdc     05 20 2C 25 
16fe0     0D FB EC EC | 	byte	$04, $fa, $f9, $fa, $fb, $f5, $eb, $f2, $05, $20, $2c, $25, $0d, $fb, $ec, $ec
16fe4     E0 EA F1 08 
16fe8     1E 28 16 03 
16fec     F0 EF F0 EE 
16ff0     F3 FD 0C 0C | 	byte	$e0, $ea, $f1, $08, $1e, $28, $16, $03, $f0, $ef, $f0, $ee, $f3, $fd, $0c, $0c
16ff4     0B FD FD F5 
16ff8     F6 F0 EB F5 
16ffc     0C 1F 2B 1C 
17000     06 FB F0 F0 | 	byte	$0b, $fd, $fd, $f5, $f6, $f0, $eb, $f5, $0c, $1f, $2b, $1c, $06, $fb, $f0, $f0
17004     E3 EB F5 08 
17008     1A 21 15 08 
1700c     F7 F0 EC EE 
17010     F3 FE 06 0A | 	byte	$e3, $eb, $f5, $08, $1a, $21, $15, $08, $f7, $f0, $ec, $ee, $f3, $fe, $06, $0a
17014     09 01 00 F4 
17018     F5 ED F1 F6 
1701c     10 20 28 1A 
17020     06 F9 F5 EC | 	byte	$09, $01, $00, $f4, $f5, $ed, $f1, $f6, $10, $20, $28, $1a, $06, $f9, $f5, $ec
17024     E2 E6 F1 08 
17028     1A 1C 17 0E 
1702c     01 F1 E3 E7 
17030     F0 01 08 0D | 	byte	$e2, $e6, $f1, $08, $1a, $1c, $17, $0e, $01, $f1, $e3, $e7, $f0, $01, $08, $0d
17034     0B 06 FE F5 
17038     F0 E8 F0 FC 
1703c     16 1E 24 14 
17040     06 FA F8 EA | 	byte	$0b, $06, $fe, $f5, $f0, $e8, $f0, $fc, $16, $1e, $24, $14, $06, $fa, $f8, $ea
17044     E7 E8 F3 0B 
17048     14 13 0F 0F 
1704c     09 FF EA EA 
17050     F0 01 06 09 | 	byte	$e7, $e8, $f3, $0b, $14, $13, $0f, $0f, $09, $ff, $ea, $ea, $f0, $01, $06, $09
17054     04 02 02 FC 
17058     F5 E9 EC FA 
1705c     0F 14 1B 0E 
17060     0D 03 FE EE | 	byte	$04, $02, $02, $fc, $f5, $e9, $ec, $fa, $0f, $14, $1b, $0e, $0d, $03, $fe, $ee
17064     E9 EC F7 0D 
17068     12 09 09 07 
1706c     08 01 ED E8 
17070     F0 02 08 09 | 	byte	$e9, $ec, $f7, $0d, $12, $09, $09, $07, $08, $01, $ed, $e8, $f0, $02, $08, $09
17074     FE 02 FE 00 
17078     F9 EF EE 02 
1707c     14 1A 1A 0C 
17080     08 FE F5 E2 | 	byte	$fe, $02, $fe, $00, $f9, $ef, $ee, $02, $14, $1a, $1a, $0c, $08, $fe, $f5, $e2
17084     E5 F0 06 14 
17088     1A 06 09 01 
1708c     04 FA EC E6 
17090     F1 03 0D 0C | 	byte	$e5, $f0, $06, $14, $1a, $06, $09, $01, $04, $fa, $ec, $e6, $f1, $03, $0d, $0c
17094     02 04 F9 FE 
17098     F1 F1 F3 09 
1709c     14 1B 16 0A 
170a0     06 FD EE E0 | 	byte	$02, $04, $f9, $fe, $f1, $f1, $f3, $09, $14, $1b, $16, $0a, $06, $fd, $ee, $e0
170a4     EA F4 0E 18 
170a8     19 0B 08 00 
170ac     FB F0 E9 E7 
170b0     F3 05 0F 10 | 	byte	$ea, $f4, $0e, $18, $19, $0b, $08, $00, $fb, $f0, $e9, $e7, $f3, $05, $0f, $10
170b4     08 07 F9 F2 
170b8     EA ED F5 0B 
170bc     14 1F 18 0F 
170c0     02 F6 E4 E0 | 	byte	$08, $07, $f9, $f2, $ea, $ed, $f5, $0b, $14, $1f, $18, $0f, $02, $f6, $e4, $e0
170c4     E8 F9 10 1F 
170c8     1C 15 0B 02 
170cc     F6 E6 E2 E8 
170d0     FB 08 14 0E | 	byte	$e8, $f9, $10, $1f, $1c, $15, $0b, $02, $f6, $e6, $e2, $e8, $fb, $08, $14, $0e
170d4     0E 03 F8 ED 
170d8     E5 EA FC 0E 
170dc     18 23 1E 13 
170e0     00 F2 DE DF | 	byte	$0e, $03, $f8, $ed, $e5, $ea, $fc, $0e, $18, $23, $1e, $13, $00, $f2, $de, $df
170e4     E8 00 14 1E 
170e8     14 10 09 FE 
170ec     F1 E1 E2 EC 
170f0     04 0A 16 0F | 	byte	$e8, $00, $14, $1e, $14, $10, $09, $fe, $f1, $e1, $e2, $ec, $04, $0a, $16, $0f
170f4     0E FE F6 EE 
170f8     E6 EE 00 12 
170fc     18 1B 15 10 
17100     FC F2 DF E6 | 	byte	$0e, $fe, $f6, $ee, $e6, $ee, $00, $12, $18, $1b, $15, $10, $fc, $f2, $df, $e6
17104     ED 08 16 1A 
17108     12 10 0A FD 
1710c     ED DC E0 F0 
17110     0A 0F 1B 12 | 	byte	$ed, $08, $16, $1a, $12, $10, $0a, $fd, $ed, $dc, $e0, $f0, $0a, $0f, $1b, $12
17114     13 FA EC E3 
17118     E0 ED 03 17 
1711c     25 20 15 0B 
17120     F4 E8 DA E9 | 	byte	$13, $fa, $ec, $e3, $e0, $ed, $03, $17, $25, $20, $15, $0b, $f4, $e8, $da, $e9
17124     F5 0E 19 1A 
17128     14 0F 06 F8 
1712c     E4 DE E1 F5 
17130     0B 14 1A 12 | 	byte	$f5, $0e, $19, $1a, $14, $0f, $06, $f8, $e4, $de, $e1, $f5, $0b, $14, $1a, $12
17134     0C F4 E8 E0 
17138     E6 F3 0D 19 
1713c     28 1E 13 01 
17140     EF E0 DF F0 | 	byte	$0c, $f4, $e8, $e0, $e6, $f3, $0d, $19, $28, $1e, $13, $01, $ef, $e0, $df, $f0
17144     01 14 19 18 
17148     0E 08 FC F5 
1714c     E5 E4 E9 FF 
17150     09 15 16 12 | 	byte	$01, $14, $19, $18, $0e, $08, $fc, $f5, $e5, $e4, $e9, $ff, $09, $15, $16, $12
17154     06 F2 E6 DF 
17158     EA F9 14 1B 
1715c     24 1B 0F F5 
17160     EB DD E5 F7 | 	byte	$06, $f2, $e6, $df, $ea, $f9, $14, $1b, $24, $1b, $0f, $f5, $eb, $dd, $e5, $f7
17164     09 16 1A 16 
17168     0F 06 FD F3 
1716c     E8 E7 ED 00 
17170     04 11 11 0E | 	byte	$09, $16, $1a, $16, $0f, $06, $fd, $f3, $e8, $e7, $ed, $00, $04, $11, $11, $0e
17174     01 F5 EB E5 
17178     EE 02 11 1E 
1717c     1D 16 0D F2 
17180     EB DF E9 F8 | 	byte	$01, $f5, $eb, $e5, $ee, $02, $11, $1e, $1d, $16, $0d, $f2, $eb, $df, $e9, $f8
17184     06 11 16 14 
17188     15 09 FF F3 
1718c     EA E6 EE FE 
17190     03 10 0D 0F | 	byte	$06, $11, $16, $14, $15, $09, $ff, $f3, $ea, $e6, $ee, $fe, $03, $10, $0d, $0f
17194     FD F0 E8 E9 
17198     F0 08 10 1C 
1719c     18 12 0B F4 
171a0     EE E2 ED F6 | 	byte	$fd, $f0, $e8, $e9, $f0, $08, $10, $1c, $18, $12, $0b, $f4, $ee, $e2, $ed, $f6
171a4     07 0C 12 11 
171a8     15 0A FE F0 
171ac     EC EA F6 01 
171b0     06 0F 0C 0D | 	byte	$07, $0c, $12, $11, $15, $0a, $fe, $f0, $ec, $ea, $f6, $01, $06, $0f, $0c, $0d
171b4     FB EF E7 EE 
171b8     FB 11 16 17 
171bc     12 07 FC F0 
171c0     E7 E8 F6 02 | 	byte	$fb, $ef, $e7, $ee, $fb, $11, $16, $17, $12, $07, $fc, $f0, $e7, $e8, $f6, $02
171c4     11 15 11 0D 
171c8     0A 03 F7 EA 
171cc     EC EF 01 05 
171d0     0B 0D 09 06 | 	byte	$11, $15, $11, $0d, $0a, $03, $f7, $ea, $ec, $ef, $01, $05, $0b, $0d, $09, $06
171d4     F7 E9 E6 F3 
171d8     06 1C 1D 16 
171dc     09 FF EF EA 
171e0     E5 F1 01 0E | 	byte	$f7, $e9, $e6, $f3, $06, $1c, $1d, $16, $09, $ff, $ef, $ea, $e5, $f1, $01, $0e
171e4     13 14 0D 0B 
171e8     01 FB F3 E8 
171ec     EE F4 02 06 
171f0     11 11 10 FF | 	byte	$13, $14, $0d, $0b, $01, $fb, $f3, $e8, $ee, $f4, $02, $06, $11, $11, $10, $ff
171f4     EF E4 E5 F0 
171f8     0A 1F 25 1C 
171fc     09 F7 E1 E1 
17200     E2 F4 07 1B | 	byte	$ef, $e4, $e5, $f0, $0a, $1f, $25, $1c, $09, $f7, $e1, $e1, $e2, $f4, $07, $1b
17204     19 18 0A 07 
17208     F9 F6 F3 ED 
1720c     F4 FA 02 04 
17210     0F 0E 13 FC | 	byte	$19, $18, $0a, $07, $f9, $f6, $f3, $ed, $f4, $fa, $02, $04, $0f, $0e, $13, $fc
17214     F3 EA E9 F0 
17218     08 1B 24 1C 
1721c     08 F6 E2 E0 
17220     DE F7 09 1F | 	byte	$f3, $ea, $e9, $f0, $08, $1b, $24, $1c, $08, $f6, $e2, $e0, $de, $f7, $09, $1f
17224     1F 15 03 FC 
17228     F3 F0 F2 F5 
1722c     FA 01 04 03 
17230     11 0E 12 FD | 	byte	$1f, $15, $03, $fc, $f3, $f0, $f2, $f5, $fa, $01, $04, $03, $11, $0e, $12, $fd
17234     F1 E9 EA F2 
17238     07 18 21 19 
1723c     05 F3 E6 DF 
17240     E2 F8 0E 20 | 	byte	$f1, $e9, $ea, $f2, $07, $18, $21, $19, $05, $f3, $e6, $df, $e2, $f8, $0e, $20
17244     24 16 04 F7 
17248     EE ED ED FA 
1724c     FD 04 02 07 
17250     0D 0F 0E FB | 	byte	$24, $16, $04, $f7, $ee, $ed, $ed, $fa, $fd, $04, $02, $07, $0d, $0f, $0e, $fb
17254     EE EC F1 FD 
17258     10 19 19 0D 
1725c     01 EB E5 E0 
17260     EA F9 0F 1F | 	byte	$ee, $ec, $f1, $fd, $10, $19, $19, $0d, $01, $eb, $e5, $e0, $ea, $f9, $0f, $1f
17264     28 1C 07 F7 
17268     EC E8 EB F8 
1726c     FC 01 02 0A 
17270     0E 12 07 F7 | 	byte	$28, $1c, $07, $f7, $ec, $e8, $eb, $f8, $fc, $01, $02, $0a, $0e, $12, $07, $f7
17274     EC E5 F0 03 
17278     15 1B 16 08 
1727c     FD EB E6 E3 
17280     EC FD 10 1F | 	byte	$ec, $e5, $f0, $03, $15, $1b, $16, $08, $fd, $eb, $e6, $e3, $ec, $fd, $10, $1f
17284     22 1A 0B F8 
17288     F0 EE EF F6 
1728c     FD FE FD 06 
17290     0D 13 05 F6 | 	byte	$22, $1a, $0b, $f8, $f0, $ee, $ef, $f6, $fd, $fe, $fd, $06, $0d, $13, $05, $f6
17294     ED E7 F2 09 
17298     19 20 15 06 
1729c     F9 E9 E3 E1 
172a0     EF 01 15 20 | 	byte	$ed, $e7, $f2, $09, $19, $20, $15, $06, $f9, $e9, $e3, $e1, $ef, $01, $15, $20
172a4     20 11 06 F4 
172a8     EC EA F0 F7 
172ac     02 05 03 0C 
172b0     0D 15 FD EF | 	byte	$20, $11, $06, $f4, $ec, $ea, $f0, $f7, $02, $05, $03, $0c, $0d, $15, $fd, $ef
172b4     E5 E8 F5 10 
172b8     1A 22 15 06 
172bc     F4 E7 E3 E2 
172c0     F3 05 18 1F | 	byte	$e5, $e8, $f5, $10, $1a, $22, $15, $06, $f4, $e7, $e3, $e2, $f3, $05, $18, $1f
172c4     1E 0F 09 F9 
172c8     ED E8 EF F4 
172cc     FF 03 04 0E 
172d0     11 14 01 EF | 	byte	$1e, $0f, $09, $f9, $ed, $e8, $ef, $f4, $ff, $03, $04, $0e, $11, $14, $01, $ef
172d4     E4 E9 F8 0F 
172d8     17 1C 12 08 
172dc     F5 EA E3 E4 
172e0     F5 08 17 1C | 	byte	$e4, $e9, $f8, $0f, $17, $1c, $12, $08, $f5, $ea, $e3, $e4, $f5, $08, $17, $1c
172e4     14 0D 06 FB 
172e8     F1 E9 F2 F7 
172ec     FE FF 07 0F 
172f0     14 0B FF EE | 	byte	$14, $0d, $06, $fb, $f1, $e9, $f2, $f7, $fe, $ff, $07, $0f, $14, $0b, $ff, $ee
172f4     E9 EE FD 0E 
172f8     15 16 0F 08 
172fc     F9 EC E2 EA 
17300     F8 09 12 18 | 	byte	$e9, $ee, $fd, $0e, $15, $16, $0f, $08, $f9, $ec, $e2, $ea, $f8, $09, $12, $18
17304     0E 0B 03 FF 
17308     F6 F0 F2 F7 
1730c     F9 FA 07 0F 
17310     18 07 FA E9 | 	byte	$0e, $0b, $03, $ff, $f6, $f0, $f2, $f7, $f9, $fa, $07, $0f, $18, $07, $fa, $e9
17314     E9 F4 04 0E 
17318     14 12 11 0A 
1731c     FB ED E2 EE 
17320     FB 09 0D 11 | 	byte	$e9, $f4, $04, $0e, $14, $12, $11, $0a, $fb, $ed, $e2, $ee, $fb, $09, $0d, $11
17324     0B 0A 06 FE 
17328     F8 F3 F1 F7 
1732c     F7 F6 0A 11 
17330     19 06 F5 EC | 	byte	$0b, $0a, $06, $fe, $f8, $f3, $f1, $f7, $f7, $f6, $0a, $11, $19, $06, $f5, $ec
17334     F0 FC 08 0E 
17338     0F 0E 0D 03 
1733c     F7 EF E8 F3 
17340     FB 05 05 0D | 	byte	$f0, $fc, $08, $0e, $0f, $0e, $0d, $03, $f7, $ef, $e8, $f3, $fb, $05, $05, $0d
17344     0C 0E 0B 04 
17348     FD F7 EE EE 
1734c     F1 F7 0A 14 
17350     19 08 F6 EA | 	byte	$0c, $0e, $0b, $04, $fd, $f7, $ee, $ee, $f1, $f7, $0a, $14, $19, $08, $f6, $ea
17354     F1 F8 09 0F 
17358     12 0F 0C FF 
1735c     F5 E9 E8 F3 
17360     F9 04 09 0F | 	byte	$f1, $f8, $09, $0f, $12, $0f, $0c, $ff, $f5, $e9, $e8, $f3, $f9, $04, $09, $0f
17364     0F 10 09 02 
17368     F8 F6 EF F1 
1736c     F1 FD 0A 18 
17370     13 01 F4 EB | 	byte	$0f, $10, $09, $02, $f8, $f6, $ef, $f1, $f1, $fd, $0a, $18, $13, $01, $f4, $eb
17374     F5 FA 0D 14 
17378     14 0E 08 F8 
1737c     F0 E8 F1 FA 
17380     00 01 06 0A | 	byte	$f5, $fa, $0d, $14, $14, $0e, $08, $f8, $f0, $e8, $f1, $fa, $00, $01, $06, $0a
17384     0E 0E 0B 05 
17388     FB F9 F1 EE 
1738c     EA FA 05 15 
17390     0F 03 F9 F7 | 	byte	$0e, $0e, $0b, $05, $fb, $f9, $f1, $ee, $ea, $fa, $05, $15, $0f, $03, $f9, $f7
17394     FA 02 09 0F 
17398     0E 09 01 F6 
1739c     F4 EB F7 FE 
173a0     02 FD 01 04 | 	byte	$fa, $02, $09, $0f, $0e, $09, $01, $f6, $f4, $eb, $f7, $fe, $02, $fd, $01, $04
173a4     0B 0A 0A 06 
173a8     FF FA F5 F0 
173ac     EB FB 06 10 
173b0     0A FF FB FD | 	byte	$0b, $0a, $0a, $06, $ff, $fa, $f5, $f0, $eb, $fb, $06, $10, $0a, $ff, $fb, $fd
173b4     FE 02 04 06 
173b8     09 0A 05 FD 
173bc     F7 F2 F7 FC 
173c0     FE FA FE 05 | 	byte	$fe, $02, $04, $06, $09, $0a, $05, $fd, $f7, $f2, $f7, $fc, $fe, $fa, $fe, $05
173c4     0B 0D 0A 08 
173c8     05 FE F6 EC 
173cc     EA F8 02 0B 
173d0     05 01 00 08 | 	byte	$0b, $0d, $0a, $08, $05, $fe, $f6, $ec, $ea, $f8, $02, $0b, $05, $01, $00, $08
173d4     08 06 FE FD 
173d8     FC 07 03 02 
173dc     FB FA FC FC 
173e0     F8 F4 F8 03 | 	byte	$08, $06, $fe, $fd, $fc, $07, $03, $02, $fb, $fa, $fc, $fc, $f8, $f4, $f8, $03
173e4     10 12 0F 06 
173e8     07 FC F4 EB 
173ec     ED F8 05 09 
173f0     FF FB FD 07 | 	byte	$10, $12, $0f, $06, $07, $fc, $f4, $eb, $ed, $f8, $05, $09, $ff, $fb, $fd, $07
173f4     0B 0B 00 FE 
173f8     FD 07 05 04 
173fc     FF 00 02 F8 
17400     F4 F0 F5 FF | 	byte	$0b, $0b, $00, $fe, $fd, $07, $05, $04, $ff, $00, $02, $f8, $f4, $f0, $f5, $ff
17404     0B 0E 0C 05 
17408     09 02 FA EF 
1740c     F3 F8 01 02 
17410     FB FC 04 0C | 	byte	$0b, $0e, $0c, $05, $09, $02, $fa, $ef, $f3, $f8, $01, $02, $fb, $fc, $04, $0c
17414     0F 07 FF F9 
17418     FA 02 02 05 
1741c     05 06 07 F8 
17420     ED EE F4 02 | 	byte	$0f, $07, $ff, $f9, $fa, $02, $02, $05, $05, $06, $07, $f8, $ed, $ee, $f4, $02
17424     08 0D 0C 08 
17428     09 07 FD F2 
1742c     F5 F9 FE FA 
17430     F9 FA 07 0C | 	byte	$08, $0d, $0c, $08, $09, $07, $fd, $f2, $f5, $f9, $fe, $fa, $f9, $fa, $07, $0c
17434     12 07 00 F6 
17438     F6 F8 FA 03 
1743c     08 0F 0B FF 
17440     EF F0 F3 FD | 	byte	$12, $07, $00, $f6, $f6, $f8, $fa, $03, $08, $0f, $0b, $ff, $ef, $f0, $f3, $fd
17444     02 08 0A 0B 
17448     09 07 01 F7 
1744c     FA FC FF F5 
17450     F4 F6 04 0E | 	byte	$02, $08, $0a, $0b, $09, $07, $01, $f7, $fa, $fc, $ff, $f5, $f4, $f6, $04, $0e
17454     12 0E 05 FB 
17458     F8 F6 F8 FD 
1745c     05 0C 05 00 
17460     F6 F3 FA 01 | 	byte	$12, $0e, $05, $fb, $f8, $f6, $f8, $fd, $05, $0c, $05, $00, $f6, $f3, $fa, $01
17464     05 07 05 08 
17468     04 01 FC FB 
1746c     00 02 FF F3 
17470     ED F5 02 0E | 	byte	$05, $07, $05, $08, $04, $01, $fc, $fb, $00, $02, $ff, $f3, $ed, $f5, $02, $0e
17474     15 13 0B 00 
17478     F9 F1 F6 FB 
1747c     06 0C 05 00 
17480     FA F5 FA FC | 	byte	$15, $13, $0b, $00, $f9, $f1, $f6, $fb, $06, $0c, $05, $00, $fa, $f5, $fa, $fc
17484     00 01 03 0C 
17488     06 01 F8 FC 
1748c     02 02 FC F3 
17490     F2 FB 03 09 | 	byte	$00, $01, $03, $0c, $06, $01, $f8, $fc, $02, $02, $fc, $f3, $f2, $fb, $03, $09
17494     12 0F 0D 03 
17498     F9 F0 F5 FB 
1749c     05 0A 02 FE 
174a0     FD FC FD FE | 	byte	$12, $0f, $0d, $03, $f9, $f0, $f5, $fb, $05, $0a, $02, $fe, $fd, $fc, $fd, $fe
174a4     FD 00 00 07 
174a8     06 02 F9 00 
174ac     03 03 FB F4 
174b0     F3 FB 06 0C | 	byte	$fd, $00, $00, $07, $06, $02, $f9, $00, $03, $03, $fb, $f4, $f3, $fb, $06, $0c
174b4     11 0F 09 00 
174b8     F7 F1 F3 FB 
174bc     04 0A 07 02 
174c0     01 00 FE FB | 	byte	$11, $0f, $09, $00, $f7, $f1, $f3, $fb, $04, $0a, $07, $02, $01, $00, $fe, $fb
174c4     F9 FC 03 04 
174c8     04 FE F8 00 
174cc     02 03 FB F5 
174d0     F4 FB 05 0F | 	byte	$f9, $fc, $03, $04, $04, $fe, $f8, $00, $02, $03, $fb, $f5, $f4, $fb, $05, $0f
174d4     10 0E 07 05 
174d8     FB F7 F3 F8 
174dc     FF 04 03 00 
174e0     03 06 06 FE | 	byte	$10, $0e, $07, $05, $fb, $f7, $f3, $f8, $ff, $04, $03, $00, $03, $06, $06, $fe
174e4     FB F9 06 05 
174e8     02 FA F6 FD 
174ec     02 03 FB F7 
174f0     F5 FE 07 0F | 	byte	$fb, $f9, $06, $05, $02, $fa, $f6, $fd, $02, $03, $fb, $f7, $f5, $fe, $07, $0f
174f4     0B 0B 09 08 
174f8     01 FA F5 F6 
174fc     FC FB FC FC 
17500     03 07 08 02 | 	byte	$0b, $0b, $09, $08, $01, $fa, $f5, $f6, $fc, $fb, $fc, $fc, $03, $07, $08, $02
17504     FE FC 05 05 
17508     FB F2 F4 FC 
1750c     02 06 FF FC 
17510     FD 03 07 06 | 	byte	$fe, $fc, $05, $05, $fb, $f2, $f4, $fc, $02, $06, $ff, $fc, $fd, $03, $07, $06
17514     02 04 09 0D 
17518     07 FF FB F6 
1751c     F6 EF F1 FA 
17520     06 0D 0D 0A | 	byte	$02, $04, $09, $0d, $07, $ff, $fb, $f6, $f6, $ef, $f1, $fa, $06, $0d, $0d, $0a
17524     05 02 03 01 
17528     F6 EB F1 FA 
1752c     03 03 00 FE 
17530     05 07 0B 04 | 	byte	$05, $02, $03, $01, $f6, $eb, $f1, $fa, $03, $03, $00, $fe, $05, $07, $0b, $04
17534     FF 01 08 0A 
17538     06 00 FE FC 
1753c     F6 EF EB F7 
17540     06 10 11 0B | 	byte	$ff, $01, $08, $0a, $06, $00, $fe, $fc, $f6, $ef, $eb, $f7, $06, $10, $11, $0b
17544     05 04 03 FC 
17548     F1 E8 F1 FB 
1754c     04 02 FE FF 
17550     06 0A 09 00 | 	byte	$05, $04, $03, $fc, $f1, $e8, $f1, $fb, $04, $02, $fe, $ff, $06, $0a, $09, $00
17554     FA FF 0A 10 
17558     0C 06 03 FF 
1755c     F3 E8 E1 EF 
17560     05 15 19 11 | 	byte	$fa, $ff, $0a, $10, $0c, $06, $03, $ff, $f3, $e8, $e1, $ef, $05, $15, $19, $11
17564     09 05 02 F6 
17568     EA E5 F0 FD 
1756c     09 07 03 02 
17570     06 07 04 FA | 	byte	$09, $05, $02, $f6, $ea, $e5, $f0, $fd, $09, $07, $03, $02, $06, $07, $04, $fa
17574     F7 FE 0A 12 
17578     13 0B 04 FE 
1757c     F1 E6 E2 EE 
17580     03 15 18 14 | 	byte	$f7, $fe, $0a, $12, $13, $0b, $04, $fe, $f1, $e6, $e2, $ee, $03, $15, $18, $14
17584     0B 08 01 F7 
17588     E8 E8 F0 FE 
1758c     0A 08 06 02 
17590     05 02 FD F6 | 	byte	$0b, $08, $01, $f7, $e8, $e8, $f0, $fe, $0a, $08, $06, $02, $05, $02, $fd, $f6
17594     F9 00 0E 11 
17598     13 0C 05 FF 
1759c     EE E4 E3 F2 
175a0     01 13 16 15 | 	byte	$f9, $00, $0e, $11, $13, $0c, $05, $ff, $ee, $e4, $e3, $f2, $01, $13, $16, $15
175a4     0E 08 00 F3 
175a8     E5 E8 F1 00 
175ac     09 0B 0A 09 
175b0     05 FD F5 F1 | 	byte	$0e, $08, $00, $f3, $e5, $e8, $f1, $00, $09, $0b, $0a, $09, $05, $fd, $f5, $f1
175b4     F6 01 10 12 
175b8     11 0D 08 FD 
175bc     EF E2 E6 F5 
175c0     05 10 16 15 | 	byte	$f6, $01, $10, $12, $11, $0d, $08, $fd, $ef, $e2, $e6, $f5, $05, $10, $16, $15
175c4     11 09 FC EC 
175c8     E6 EC F5 04 
175cc     05 08 09 08 
175d0     02 F8 F1 F3 | 	byte	$11, $09, $fc, $ec, $e6, $ec, $f5, $04, $05, $08, $09, $08, $02, $f8, $f1, $f3
175d4     FC 0A 0F 13 
175d8     0E 0C 0A FB 
175dc     F2 E7 E9 F6 
175e0     05 09 10 15 | 	byte	$fc, $0a, $0f, $13, $0e, $0c, $0a, $fb, $f2, $e7, $e9, $f6, $05, $09, $10, $15
175e4     14 09 F8 E5 
175e8     E1 EA FA 08 
175ec     0B 0C 0C 0A 
175f0     01 F4 EB F0 | 	byte	$14, $09, $f8, $e5, $e1, $ea, $fa, $08, $0b, $0c, $0c, $0a, $01, $f4, $eb, $f0
175f4     FF 0B 10 0F 
175f8     0C 0C 0C FE 
175fc     F2 E7 EA F5 
17600     03 08 0E 15 | 	byte	$ff, $0b, $10, $0f, $0c, $0c, $0c, $fe, $f2, $e7, $ea, $f5, $03, $08, $0e, $15
17604     19 0E F8 E2 
17608     DE E8 FA 09 
1760c     0B 0E 11 12 
17610     05 F5 E9 EE | 	byte	$19, $0e, $f8, $e2, $de, $e8, $fa, $09, $0b, $0e, $11, $12, $05, $f5, $e9, $ee
17614     FC 0B 0E 0B 
17618     0A 0B 0A FD 
1761c     F0 E7 EC F8 
17620     05 0B 0F 14 | 	byte	$fc, $0b, $0e, $0b, $0a, $0b, $0a, $fd, $f0, $e7, $ec, $f8, $05, $0b, $0f, $14
17624     17 0B F7 E1 
17628     DE E8 FC 05 
1762c     09 0C 10 10 
17630     08 F8 F0 F4 | 	byte	$17, $0b, $f7, $e1, $de, $e8, $fc, $05, $09, $0c, $10, $10, $08, $f8, $f0, $f4
17634     00 0C 0C 06 
17638     03 07 06 FF 
1763c     F4 EF F3 FD 
17640     05 09 0F 13 | 	byte	$00, $0c, $0c, $06, $03, $07, $06, $ff, $f4, $ef, $f3, $fd, $05, $09, $0f, $13
17644     13 07 F3 DF 
17648     DD E9 FA 05 
1764c     0A 12 16 0E 
17650     05 F5 EE F2 | 	byte	$13, $07, $f3, $df, $dd, $e9, $fa, $05, $0a, $12, $16, $0e, $05, $f5, $ee, $f2
17654     FD 0B 0F 0B 
17658     06 07 01 FB 
1765c     F0 ED F5 00 
17660     07 0C 11 15 | 	byte	$fd, $0b, $0f, $0b, $06, $07, $01, $fb, $f0, $ed, $f5, $00, $07, $0c, $11, $15
17664     12 06 F1 E1 
17668     E2 EA F7 FF 
1766c     08 13 18 11 
17670     07 F9 F4 F7 | 	byte	$12, $06, $f1, $e1, $e2, $ea, $f7, $ff, $08, $13, $18, $11, $07, $f9, $f4, $f7
17674     FC 06 0C 09 
17678     06 06 FF F8 
1767c     EF EF F8 03 
17680     06 0A 0C 12 | 	byte	$fc, $06, $0c, $09, $06, $06, $ff, $f8, $ef, $ef, $f8, $03, $06, $0a, $0c, $12
17684     0F 03 F1 E8 
17688     EA F1 F8 FC 
1768c     07 11 14 0D 
17690     03 F9 F8 F9 | 	byte	$0f, $03, $f1, $e8, $ea, $f1, $f8, $fc, $07, $11, $14, $0d, $03, $f9, $f8, $f9
17694     FD 02 07 0B 
17698     0A 0A 00 F6 
1769c     ED F2 F9 02 
176a0     06 0B 0D 11 | 	byte	$fd, $02, $07, $0b, $0a, $0a, $00, $f6, $ed, $f2, $f9, $02, $06, $0b, $0d, $11
176a4     0B FE EF EA 
176a8     EB F3 F9 FE 
176ac     07 11 12 0D 
176b0     04 FC FD FC | 	byte	$0b, $fe, $ef, $ea, $eb, $f3, $f9, $fe, $07, $11, $12, $0d, $04, $fc, $fd, $fc
176b4     FF FE 00 07 
176b8     0C 0B FE F6 
176bc     ED F3 FA 02 
176c0     08 0A 0F 11 | 	byte	$ff, $fe, $00, $07, $0c, $0b, $fe, $f6, $ed, $f3, $fa, $02, $08, $0a, $0f, $11
176c4     06 F9 EB ED 
176c8     F1 F7 FA FD 
176cc     07 0D 0E 0B 
176d0     03 FE 01 00 | 	byte	$06, $f9, $eb, $ed, $f1, $f7, $fa, $fd, $07, $0d, $0e, $0b, $03, $fe, $01, $00
176d4     01 FD FD 00 
176d8     09 07 01 F7 
176dc     F1 F7 FF 05 
176e0     08 0B 0D 0E | 	byte	$01, $fd, $fd, $00, $09, $07, $01, $f7, $f1, $f7, $ff, $05, $08, $0b, $0d, $0e
176e4     02 F3 E9 EF 
176e8     F8 FF FD FC 
176ec     01 05 08 07 
176f0     02 01 05 07 | 	byte	$02, $f3, $e9, $ef, $f8, $ff, $fd, $fc, $01, $05, $08, $07, $02, $01, $05, $07
176f4     07 00 FD FE 
176f8     03 00 FC F5 
176fc     F3 FA 05 09 
17700     0D 0C 0E 09 | 	byte	$07, $00, $fd, $fe, $03, $00, $fc, $f5, $f3, $fa, $05, $09, $0d, $0c, $0e, $09
17704     F9 E9 E6 EE 
17708     FD 07 02 00 
1770c     FF 04 02 02 
17710     00 03 07 0B | 	byte	$f9, $e9, $e6, $ee, $fd, $07, $02, $00, $ff, $04, $02, $02, $00, $03, $07, $0b
17714     07 04 FE FB 
17718     FD FA F9 F5 
1771c     F8 FF 08 0C 
17720     0F 10 0F 05 | 	byte	$07, $04, $fe, $fb, $fd, $fa, $f9, $f5, $f8, $ff, $08, $0c, $0f, $10, $0f, $05
17724     F5 E5 E5 F0 
17728     00 0B 09 05 
1772c     FE FC FA FB 
17730     00 05 0C 11 | 	byte	$f5, $e5, $e5, $f0, $00, $0b, $09, $05, $fe, $fc, $fa, $fb, $00, $05, $0c, $11
17734     0C 03 FD F6 
17738     F7 F6 F9 F9 
1773c     FE 04 09 0B 
17740     0D 10 0C 01 | 	byte	$0c, $03, $fd, $f6, $f7, $f6, $f9, $f9, $fe, $04, $09, $0b, $0d, $10, $0c, $01
17744     F1 E6 E9 F3 
17748     01 09 0A 08 
1774c     01 F8 F5 F5 
17750     FE 08 0F 14 | 	byte	$f1, $e6, $e9, $f3, $01, $09, $0a, $08, $01, $f8, $f5, $f5, $fe, $08, $0f, $14
17754     0F 05 FD F8 
17758     F3 F3 F5 FB 
1775c     02 07 08 0C 
17760     0F 10 0A FD | 	byte	$0f, $05, $fd, $f8, $f3, $f3, $f5, $fb, $02, $07, $08, $0c, $0f, $10, $0a, $fd
17764     EE E6 EA F6 
17768     01 09 0C 0A 
1776c     06 FA F1 EE 
17770     F4 08 12 18 | 	byte	$ee, $e6, $ea, $f6, $01, $09, $0c, $0a, $06, $fa, $f1, $ee, $f4, $08, $12, $18
17774     11 07 01 F9 
17778     F0 ED EF F9 
1777c     04 0C 0B 0E 
17780     11 10 07 F9 | 	byte	$11, $07, $01, $f9, $f0, $ed, $ef, $f9, $04, $0c, $0b, $0e, $11, $10, $07, $f9
17784     ED E8 ED FA 
17788     03 04 08 07 
1778c     08 FE F4 EF 
17790     F5 07 12 14 | 	byte	$ed, $e8, $ed, $fa, $03, $04, $08, $07, $08, $fe, $f4, $ef, $f5, $07, $12, $14
17794     0E 06 00 FC 
17798     F3 F0 EE F7 
1779c     03 0A 0A 0E 
177a0     11 11 07 F7 | 	byte	$0e, $06, $00, $fc, $f3, $f0, $ee, $f7, $03, $0a, $0a, $0e, $11, $11, $07, $f7
177a4     EC EA F0 FC 
177a8     06 03 06 07 
177ac     07 FF F4 EC 
177b0     F4 01 11 16 | 	byte	$ec, $ea, $f0, $fc, $06, $03, $06, $07, $07, $ff, $f4, $ec, $f4, $01, $11, $16
177b4     0F 09 03 FD 
177b8     F4 F0 EC F8 
177bc     03 0B 0C 0F 
177c0     11 0F 04 F5 | 	byte	$0f, $09, $03, $fd, $f4, $f0, $ec, $f8, $03, $0b, $0c, $0f, $11, $0f, $04, $f5
177c4     E8 EA F3 01 
177c8     08 04 04 07 
177cc     04 FD F3 EE 
177d0     F8 01 11 17 | 	byte	$e8, $ea, $f3, $01, $08, $04, $04, $07, $04, $fd, $f3, $ee, $f8, $01, $11, $17
177d4     10 0B 01 F9 
177d8     F1 ED EF FC 
177dc     06 0B 0D 11 
177e0     11 0D 01 F2 | 	byte	$10, $0b, $01, $f9, $f1, $ed, $ef, $fc, $06, $0b, $0d, $11, $11, $0d, $01, $f2
177e4     E6 EB F5 03 
177e8     07 04 06 08 
177ec     03 FA F1 EF 
177f0     F9 01 0F 14 | 	byte	$e6, $eb, $f5, $03, $07, $04, $06, $08, $03, $fa, $f1, $ef, $f9, $01, $0f, $14
177f4     13 0D 06 F9 
177f8     F2 EA F1 FC 
177fc     06 0A 0D 11 
17800     11 0C FD EE | 	byte	$13, $0d, $06, $f9, $f2, $ea, $f1, $fc, $06, $0a, $0d, $11, $11, $0c, $fd, $ee
17804     E7 EE FC 06 
17808     04 03 04 04 
1780c     00 F9 F5 F6 
17810     FE 02 0B 0D | 	byte	$e7, $ee, $fc, $06, $04, $03, $04, $04, $00, $f9, $f5, $f6, $fe, $02, $0b, $0d
17814     0E 0B 07 FB 
17818     F4 EC F2 FD 
1781c     06 08 0D 10 
17820     11 0A FC EE | 	byte	$0e, $0b, $07, $fb, $f4, $ec, $f2, $fd, $06, $08, $0d, $10, $11, $0a, $fc, $ee
17824     ED F3 FE 06 
17828     01 02 02 01 
1782c     FC F9 F6 FC 
17830     02 06 07 06 | 	byte	$ed, $f3, $fe, $06, $01, $02, $02, $01, $fc, $f9, $f6, $fc, $02, $06, $07, $06
17834     08 09 09 01 
17838     F7 EF F5 FD 
1783c     03 04 09 0E 
17840     11 0A F9 ED | 	byte	$08, $09, $09, $01, $f7, $ef, $f5, $fd, $03, $04, $09, $0e, $11, $0a, $f9, $ed
17844     EE F6 FE 05 
17848     00 05 07 03 
1784c     FD F5 F3 FB 
17850     01 06 06 04 | 	byte	$ee, $f6, $fe, $05, $00, $05, $07, $03, $fd, $f5, $f3, $fb, $01, $06, $06, $04
17854     07 0B 0B 03 
17858     F8 F1 F7 FC 
1785c     01 05 0A 0F 
17860     0C 05 F4 ED | 	byte	$07, $0b, $0b, $03, $f8, $f1, $f7, $fc, $01, $05, $0a, $0f, $0c, $05, $f4, $ed
17864     F2 FC 04 05 
17868     04 06 04 FD 
1786c     F6 F2 F4 FE 
17870     05 09 08 03 | 	byte	$f2, $fc, $04, $05, $04, $06, $04, $fd, $f6, $f2, $f4, $fe, $05, $09, $08, $03
17874     05 0A 09 02 
17878     F9 F5 F9 FC 
1787c     FE 05 0B 0F 
17880     0C 02 F4 ED | 	byte	$05, $0a, $09, $02, $f9, $f5, $f9, $fc, $fe, $05, $0b, $0f, $0c, $02, $f4, $ed
17884     F2 FD 06 05 
17888     06 07 06 FE 
1788c     F5 F0 F3 FF 
17890     06 0C 07 02 | 	byte	$f2, $fd, $06, $05, $06, $07, $06, $fe, $f5, $f0, $f3, $ff, $06, $0c, $07, $02
17894     01 05 05 01 
17898     FA FB FE FF 
1789c     FE 02 07 0A 
178a0     08 01 F6 F2 | 	byte	$01, $05, $05, $01, $fa, $fb, $fe, $ff, $fe, $02, $07, $0a, $08, $01, $f6, $f2
178a4     F5 FD 05 02 
178a8     05 05 04 FD 
178ac     F5 F1 F6 02 
178b0     0A 0F 07 01 | 	byte	$f5, $fd, $05, $02, $05, $05, $04, $fd, $f5, $f1, $f6, $02, $0a, $0f, $07, $01
178b4     FE 01 00 FC 
178b8     FA FE 02 03 
178bc     02 02 04 06 
178c0     06 FF F9 F7 | 	byte	$fe, $01, $00, $fc, $fa, $fe, $02, $03, $02, $02, $04, $06, $06, $ff, $f9, $f7
178c4     F9 00 02 00 
178c8     00 02 01 FC 
178cc     F6 F3 FA 03 
178d0     0C 0D 08 01 | 	byte	$f9, $00, $02, $00, $00, $02, $01, $fc, $f6, $f3, $fa, $03, $0c, $0d, $08, $01
178d4     FF FE FE F8 
178d8     F8 FD 05 07 
178dc     06 05 03 06 
178e0     03 FC F7 F9 | 	byte	$ff, $fe, $fe, $f8, $f8, $fd, $05, $07, $06, $05, $03, $06, $03, $fc, $f7, $f9
178e4     FB FE FF 00 
178e8     01 02 00 FE 
178ec     FB F8 FD FF 
178f0     09 08 06 02 | 	byte	$fb, $fe, $ff, $00, $01, $02, $00, $fe, $fb, $f8, $fd, $ff, $09, $08, $06, $02
178f4     02 00 FC F9 
178f8     FA FF 03 05 
178fc     05 04 01 02 
17900     00 00 FD 00 | 	byte	$02, $00, $fc, $f9, $fa, $ff, $03, $05, $05, $04, $01, $02, $00, $00, $fd, $00
17904     02 FF FC FB 
17908     FB FC FD FF 
1790c     00 FF 03 02 
17910     05 02 FF 01 | 	byte	$02, $ff, $fc, $fb, $fb, $fc, $fd, $ff, $00, $ff, $03, $02, $05, $02, $ff, $01
17914     04 02 FE FD 
17918     FE 03 04 03 
1791c     02 02 01 00 
17920     FD FE 00 04 | 	byte	$04, $02, $fe, $fd, $fe, $03, $04, $03, $02, $02, $01, $00, $fd, $fe, $00, $04
17924     04 01 FB F9 
17928     F8 F9 FA FE 
1792c     00 04 06 06 
17930     06 FF FD 00 | 	byte	$04, $01, $fb, $f9, $f8, $f9, $fa, $fe, $00, $04, $06, $06, $06, $ff, $fd, $00
17934     05 02 00 FE 
17938     00 02 03 FF 
1793c     01 01 02 00 
17940     FD FE 03 07 | 	byte	$05, $02, $00, $fe, $00, $02, $03, $ff, $01, $01, $02, $00, $fd, $fe, $03, $07
17944     04 03 F9 F8 
17948     F6 F6 F8 FE 
1794c     01 08 0A 09 
17950     04 FD FB FD | 	byte	$04, $03, $f9, $f8, $f6, $f6, $f8, $fe, $01, $08, $0a, $09, $04, $fd, $fb, $fd
17954     01 00 01 01 
17958     04 03 00 FE 
1795c     01 01 02 01 
17960     FE FE 02 07 | 	byte	$01, $00, $01, $01, $04, $03, $00, $fe, $01, $01, $02, $01, $fe, $fe, $02, $07
17964     04 00 F8 F5 
17968     F5 F7 FA FF 
1796c     05 0C 0B 08 
17970     01 FA FA FD | 	byte	$04, $00, $f8, $f5, $f5, $f7, $fa, $ff, $05, $0c, $0b, $08, $01, $fa, $fa, $fd
17974     00 02 02 03 
17978     03 FF F9 FA 
1797c     FF 03 05 04 
17980     FF FF 02 04 | 	byte	$00, $02, $02, $03, $03, $ff, $f9, $fa, $ff, $03, $05, $04, $ff, $ff, $02, $04
17984     04 00 FA F8 
17988     F7 F8 FB FE 
1798c     03 0A 08 08 
17990     FF F9 FC 01 | 	byte	$04, $00, $fa, $f8, $f7, $f8, $fb, $fe, $03, $0a, $08, $08, $ff, $f9, $fc, $01
17994     04 04 04 01 
17998     00 FD F7 FA 
1799c     03 08 09 02 
179a0     FD FC FF 02 | 	byte	$04, $04, $04, $01, $00, $fd, $f7, $fa, $03, $08, $09, $02, $fd, $fc, $ff, $02
179a4     05 01 FE F9 
179a8     F5 F6 F9 FF 
179ac     04 0A 0A 08 
179b0     FF F9 F9 00 | 	byte	$05, $01, $fe, $f9, $f5, $f6, $f9, $ff, $04, $0a, $0a, $08, $ff, $f9, $f9, $00
179b4     04 06 06 02 
179b8     00 FC F8 FB 
179bc     00 08 09 03 
179c0     FE FD FF 03 | 	byte	$04, $06, $06, $02, $00, $fc, $f8, $fb, $00, $08, $09, $03, $fe, $fd, $ff, $03
179c4     05 03 FF F7 
179c8     F4 F5 FA FF 
179cc     05 08 0B 08 
179d0     FF F9 F8 FF | 	byte	$05, $03, $ff, $f7, $f4, $f5, $fa, $ff, $05, $08, $0b, $08, $ff, $f9, $f8, $ff
179d4     05 06 04 02 
179d8     FE FA F8 FC 
179dc     01 0A 0A 05 
179e0     FF FD FD 01 | 	byte	$05, $06, $04, $02, $fe, $fa, $f8, $fc, $01, $0a, $0a, $05, $ff, $fd, $fd, $01
179e4     03 03 00 FA 
179e8     F7 F5 FA FC 
179ec     05 05 0A 08 
179f0     01 FB FA FC | 	byte	$03, $03, $00, $fa, $f7, $f5, $fa, $fc, $05, $05, $0a, $08, $01, $fb, $fa, $fc
179f4     03 05 04 02 
179f8     FD F8 F9 FF 
179fc     03 0A 08 05 
17a00     FF FC FD 00 | 	byte	$03, $05, $04, $02, $fd, $f8, $f9, $ff, $03, $0a, $08, $05, $ff, $fc, $fd, $00
17a04     02 03 02 FD 
17a08     F8 F5 FA FD 
17a0c     04 05 09 05 
17a10     01 FB FC FD | 	byte	$02, $03, $02, $fd, $f8, $f5, $fa, $fd, $04, $05, $09, $05, $01, $fb, $fc, $fd
17a14     01 05 05 04 
17a18     FD F8 FA 02 
17a1c     04 08 04 02 
17a20     FF FE FF 00 | 	byte	$01, $05, $05, $04, $fd, $f8, $fa, $02, $04, $08, $04, $02, $ff, $fe, $ff, $00
17a24     01 02 00 FF 
17a28     F9 F7 FA FD 
17a2c     02 04 07 03 
17a30     01 FD FD FD | 	byte	$01, $02, $00, $ff, $f9, $f7, $fa, $fd, $02, $04, $07, $03, $01, $fd, $fd, $fd
17a34     FE 02 05 04 
17a38     FF FA FD 03 
17a3c     06 04 FF 00 
17a40     FF 01 00 00 | 	byte	$fe, $02, $05, $04, $ff, $fa, $fd, $03, $06, $04, $ff, $00, $ff, $01, $00, $00
17a44     FE FF FE 00 
17a48     FC FC FA FE 
17a4c     01 02 03 FF 
17a50     FE FE FF FE | 	byte	$fe, $ff, $fe, $00, $fc, $fc, $fa, $fe, $01, $02, $03, $ff, $fe, $fe, $ff, $fe
17a54     00 03 08 05 
17a58     FF FB FE 01 
17a5c     06 02 FD FD 
17a60     01 07 04 FF | 	byte	$00, $03, $08, $05, $ff, $fb, $fe, $01, $06, $02, $fd, $fd, $01, $07, $04, $ff
17a64     FA FA F9 FC 
17a68     FC 00 01 05 
17a6c     05 03 00 FD 
17a70     F9 FD 00 00 | 	byte	$fa, $fa, $f9, $fc, $fc, $00, $01, $05, $05, $03, $00, $fd, $f9, $fd, $00, $00
17a74     03 03 06 01 
17a78     FA FB 00 04 
17a7c     09 02 FF FC 
17a80     02 07 03 FE | 	byte	$03, $03, $06, $01, $fa, $fb, $00, $04, $09, $02, $ff, $fc, $02, $07, $03, $fe
17a84     F9 F7 FA FC 
17a88     FE 04 05 07 
17a8c     05 02 FD F9 
17a90     F9 FE 01 01 | 	byte	$f9, $f7, $fa, $fc, $fe, $04, $05, $07, $05, $02, $fd, $f9, $f9, $fe, $01, $01
17a94     02 03 02 FF 
17a98     FB FD 04 08 
17a9c     0A 02 FD FB 
17aa0     FF 05 02 FC | 	byte	$02, $03, $02, $ff, $fb, $fd, $04, $08, $0a, $02, $fd, $fb, $ff, $05, $02, $fc
17aa4     F9 F8 F9 FA 
17aa8     FF 05 09 0B 
17aac     08 05 FC F5 
17ab0     F5 FA FF 02 | 	byte	$f9, $f8, $f9, $fa, $ff, $05, $09, $0b, $08, $05, $fc, $f5, $f5, $fa, $ff, $02
17ab4     03 04 01 FE 
17ab8     FD FF 05 09 
17abc     08 02 FD FD 
17ac0     FF 02 01 FD | 	byte	$03, $04, $01, $fe, $fd, $ff, $05, $09, $08, $02, $fd, $fd, $ff, $02, $01, $fd
17ac4     FC F8 F8 F9 
17ac8     FE 05 0A 0E 
17acc     0C 06 FD F2 
17ad0     F3 F9 FF 06 | 	byte	$fc, $f8, $f8, $f9, $fe, $05, $0a, $0e, $0c, $06, $fd, $f2, $f3, $f9, $ff, $06
17ad4     06 05 FD F9 
17ad8     F8 FD 07 0C 
17adc     0B 05 FF FD 
17ae0     FC FA FB FA | 	byte	$06, $05, $fd, $f9, $f8, $fd, $07, $0c, $0b, $05, $ff, $fd, $fc, $fa, $fb, $fa
17ae4     FE FD FD FD 
17ae8     02 04 08 0A 
17aec     08 02 FB F5 
17af0     F7 FB 02 08 | 	byte	$fe, $fd, $fd, $fd, $02, $04, $08, $0a, $08, $02, $fb, $f5, $f7, $fb, $02, $08
17af4     07 03 FA F5 
17af8     F7 00 08 0D 
17afc     0A 06 01 FE 
17b00     FB F7 F8 FA | 	byte	$07, $03, $fa, $f5, $f7, $00, $08, $0d, $0a, $06, $01, $fe, $fb, $f7, $f8, $fa
17b04     FD FE FF 00 
17b08     03 05 09 08 
17b0c     05 00 F9 F7 
17b10     F8 FC 02 08 | 	byte	$fd, $fe, $ff, $00, $03, $05, $09, $08, $05, $00, $f9, $f7, $f8, $fc, $02, $08
17b14     09 03 F8 F4 
17b18     F5 FF 05 0C 
17b1c     0B 09 04 01 
17b20     FB F6 F4 F8 | 	byte	$09, $03, $f8, $f4, $f5, $ff, $05, $0c, $0b, $09, $04, $01, $fb, $f6, $f4, $f8
17b24     FB FD FF 02 
17b28     07 08 0B 08 
17b2c     04 FB F8 F8 
17b30     FB FD 02 06 | 	byte	$fb, $fd, $ff, $02, $07, $08, $0b, $08, $04, $fb, $f8, $f8, $fb, $fd, $02, $06
17b34     07 02 F9 F6 
17b38     F7 00 06 0B 
17b3c     08 07 03 01 
17b40     FD F7 F4 F9 | 	byte	$07, $02, $f9, $f6, $f7, $00, $06, $0b, $08, $07, $03, $01, $fd, $f7, $f4, $f9
17b44     FB FD FE 01 
17b48     05 05 09 06 
17b4c     04 FB FA FC 
17b50     01 03 04 04 | 	byte	$fb, $fd, $fe, $01, $05, $05, $09, $06, $04, $fb, $fa, $fc, $01, $03, $04, $04
17b54     02 FE F9 F8 
17b58     FB 01 06 08 
17b5c     05 03 00 00 
17b60     FD FA F8 FA | 	byte	$02, $fe, $f9, $f8, $fb, $01, $06, $08, $05, $03, $00, $00, $fd, $fa, $f8, $fa
17b64     FD 00 02 03 
17b68     03 05 05 03 
17b6c     00 FB F9 FF 
17b70     03 06 06 02 | 	byte	$fd, $00, $02, $03, $03, $05, $05, $03, $00, $fb, $f9, $ff, $03, $06, $06, $02
17b74     FE FA F7 F9 
17b78     FE 02 07 07 
17b7c     08 06 03 00 
17b80     FA F7 F5 F6 | 	byte	$fe, $fa, $f7, $f9, $fe, $02, $07, $07, $08, $06, $03, $00, $fa, $f7, $f5, $f6
17b84     FB 02 07 0B 
17b88     07 07 01 FF 
17b8c     FB F8 F7 FD 
17b90     04 09 0A 05 | 	byte	$fb, $02, $07, $0b, $07, $07, $01, $ff, $fb, $f8, $f7, $fd, $04, $09, $0a, $05
17b94     FF FA F8 F9 
17b98     FE FF 03 03 
17b9c     08 09 08 03 
17ba0     FB F8 F6 F4 | 	byte	$ff, $fa, $f8, $f9, $fe, $ff, $03, $03, $08, $09, $08, $03, $fb, $f8, $f6, $f4
17ba4     F8 00 08 0E 
17ba8     0B 07 00 FA 
17bac     F7 F5 F7 FD 
17bb0     05 0A 0C 08 | 	byte	$f8, $00, $08, $0e, $0b, $07, $00, $fa, $f7, $f5, $f7, $fd, $05, $0a, $0c, $08
17bb4     01 FA F8 FB 
17bb8     FF 00 00 00 
17bbc     06 09 08 03 
17bc0     FB F8 F7 F4 | 	byte	$01, $fa, $f8, $fb, $ff, $00, $00, $00, $06, $09, $08, $03, $fb, $f8, $f7, $f4
17bc4     F6 FD 09 10 
17bc8     12 0B 01 F8 
17bcc     F1 F2 F6 FD 
17bd0     04 0B 0C 0A | 	byte	$f6, $fd, $09, $10, $12, $0b, $01, $f8, $f1, $f2, $f6, $fd, $04, $0b, $0c, $0a
17bd4     01 FA F6 FA 
17bd8     FE FF FE FF 
17bdc     08 0B 0A 04 
17be0     FC F7 F5 F2 | 	byte	$01, $fa, $f6, $fa, $fe, $ff, $fe, $ff, $08, $0b, $0a, $04, $fc, $f7, $f5, $f2
17be4     F5 FB 09 10 
17be8     14 0E 03 F8 
17bec     EF F1 F5 FC 
17bf0     01 08 0B 0A | 	byte	$f5, $fb, $09, $10, $14, $0e, $03, $f8, $ef, $f1, $f5, $fc, $01, $08, $0b, $0a
17bf4     02 FB F8 FB 
17bf8     FD FE FD FF 
17bfc     06 09 0B 04 
17c00     00 F9 F3 F2 | 	byte	$02, $fb, $f8, $fb, $fd, $fe, $fd, $ff, $06, $09, $0b, $04, $00, $f9, $f3, $f2
17c04     F5 FB 08 10 
17c08     14 0E 03 F7 
17c0c     EF EF F6 FF 
17c10     03 09 0B 09 | 	byte	$f5, $fb, $08, $10, $14, $0e, $03, $f7, $ef, $ef, $f6, $ff, $03, $09, $0b, $09
17c14     00 FA F7 FC 
17c18     FD 00 FF 05 
17c1c     07 08 07 02 
17c20     FC F8 F2 F5 | 	byte	$00, $fa, $f7, $fc, $fd, $00, $ff, $05, $07, $08, $07, $02, $fc, $f8, $f2, $f5
17c24     FA 02 0A 0E 
17c28     10 07 FF F2 
17c2c     F0 F1 FB 04 
17c30     09 0A 09 03 | 	byte	$fa, $02, $0a, $0e, $10, $07, $ff, $f2, $f0, $f1, $fb, $04, $09, $0a, $09, $03
17c34     FD F8 F9 FF 
17c38     00 02 01 08 
17c3c     06 05 03 00 
17c40     FC F9 F5 F7 | 	byte	$fd, $f8, $f9, $ff, $00, $02, $01, $08, $06, $05, $03, $00, $fc, $f9, $f5, $f7
17c44     FC 04 09 0B 
17c48     0A 02 FE F6 
17c4c     F4 F5 FC 05 
17c50     0A 0B 07 00 | 	byte	$fc, $04, $09, $0b, $0a, $02, $fe, $f6, $f4, $f5, $fc, $05, $0a, $0b, $07, $00
17c54     FB F7 FA FE 
17c58     FF 02 04 07 
17c5c     05 02 FE FD 
17c60     FC FA F9 FB | 	byte	$fb, $f7, $fa, $fe, $ff, $02, $04, $07, $05, $02, $fe, $fd, $fc, $fa, $f9, $fb
17c64     00 07 09 08 
17c68     03 FE FD FA 
17c6c     FA F9 FF 04 
17c70     09 09 04 FE | 	byte	$00, $07, $09, $08, $03, $fe, $fd, $fa, $fa, $f9, $ff, $04, $09, $09, $04, $fe
17c74     FB F9 FC FF 
17c78     01 02 05 07 
17c7c     05 01 FC FC 
17c80     FC FA F9 FC | 	byte	$fb, $f9, $fc, $ff, $01, $02, $05, $07, $05, $01, $fc, $fc, $fc, $fa, $f9, $fc
17c84     00 08 08 06 
17c88     FF FE FD FE 
17c8c     FC FB FC 00 
17c90     07 08 05 00 | 	byte	$00, $08, $08, $06, $ff, $fe, $fd, $fe, $fc, $fb, $fc, $00, $07, $08, $05, $00
17c94     FB FB FF FF 
17c98     01 00 03 06 
17c9c     04 01 FB FA 
17ca0     F9 FB FB FF | 	byte	$fb, $fb, $ff, $ff, $01, $00, $03, $06, $04, $01, $fb, $fa, $f9, $fb, $fb, $ff
17ca4     02 0A 09 04 
17ca8     FB F9 FA FF 
17cac     02 01 00 00 
17cb0     04 06 02 FE | 	byte	$02, $0a, $09, $04, $fb, $f9, $fa, $ff, $02, $01, $00, $00, $04, $06, $02, $fe
17cb4     FA FE 04 04 
17cb8     03 FE FF 01 
17cbc     FF FD FA FA 
17cc0     FD FF 01 03 | 	byte	$fa, $fe, $04, $04, $03, $fe, $ff, $01, $ff, $fd, $fa, $fa, $fd, $ff, $01, $03
17cc4     05 07 05 00 
17cc8     F8 F7 F9 02 
17ccc     07 07 03 02 
17cd0     02 02 FE FB | 	byte	$05, $07, $05, $00, $f8, $f7, $f9, $02, $07, $07, $03, $02, $02, $02, $fe, $fb
17cd4     FA FF 06 07 
17cd8     04 FF 00 00 
17cdc     FE FC FA F8 
17ce0     FB FF 05 06 | 	byte	$fa, $ff, $06, $07, $04, $ff, $00, $00, $fe, $fc, $fa, $f8, $fb, $ff, $05, $06
17ce4     0A 07 04 FD 
17ce8     F7 F3 F7 00 
17cec     06 09 05 04 
17cf0     02 00 FB F9 | 	byte	$0a, $07, $04, $fd, $f7, $f3, $f7, $00, $06, $09, $05, $04, $02, $00, $fb, $f9
17cf4     F9 01 07 09 
17cf8     05 01 00 FE 
17cfc     FC FA F9 FA 
17d00     FB FF 06 08 | 	byte	$f9, $01, $07, $09, $05, $01, $00, $fe, $fc, $fa, $f9, $fa, $fb, $ff, $06, $08
17d04     0B 07 03 FB 
17d08     F7 F3 F8 00 
17d0c     06 09 07 05 
17d10     01 FE F9 F7 | 	byte	$0b, $07, $03, $fb, $f7, $f3, $f8, $00, $06, $09, $07, $05, $01, $fe, $f9, $f7
17d14     FB 04 08 0B 
17d18     05 02 00 FC 
17d1c     FA F9 FA FB 
17d20     FC FE 04 07 | 	byte	$fb, $04, $08, $0b, $05, $02, $00, $fc, $fa, $f9, $fa, $fb, $fc, $fe, $04, $07
17d24     0A 06 01 FA 
17d28     F7 F6 FB 01 
17d2c     05 07 08 08 
17d30     04 FF F8 F7 | 	byte	$0a, $06, $01, $fa, $f7, $f6, $fb, $01, $05, $07, $08, $08, $04, $ff, $f8, $f7
17d34     FB 04 07 09 
17d38     03 01 FE FA 
17d3c     F8 F8 FC 00 
17d40     00 00 02 06 | 	byte	$fb, $04, $07, $09, $03, $01, $fe, $fa, $f8, $f8, $fc, $00, $00, $00, $02, $06
17d44     07 03 00 FA 
17d48     FA FB FF 01 
17d4c     03 03 06 07 
17d50     04 FD F7 F8 | 	byte	$07, $03, $00, $fa, $fa, $fb, $ff, $01, $03, $03, $06, $07, $04, $fd, $f7, $f8
17d54     FE 07 08 07 
17d58     04 01 FD F7 
17d5c     F4 F8 FC 02 
17d60     02 03 02 06 | 	byte	$fe, $07, $08, $07, $04, $01, $fd, $f7, $f4, $f8, $fc, $02, $02, $03, $02, $06
17d64     06 02 FE FB 
17d68     FB FD 01 00 
17d6c     02 02 05 07 
17d70     05 FC F6 F7 | 	byte	$06, $02, $fe, $fb, $fb, $fd, $01, $00, $02, $02, $05, $07, $05, $fc, $f6, $f7
17d74     FE 05 08 07 
17d78     07 05 FE F9 
17d7c     F4 F6 FB 00 
17d80     02 04 04 06 | 	byte	$fe, $05, $08, $07, $07, $05, $fe, $f9, $f4, $f6, $fb, $00, $02, $04, $04, $06
17d84     05 02 FD FA 
17d88     FA FC 01 02 
17d8c     03 03 06 07 
17d90     05 FA F6 F7 | 	byte	$05, $02, $fd, $fa, $fa, $fc, $01, $02, $03, $03, $06, $07, $05, $fa, $f6, $f7
17d94     00 05 08 06 
17d98     08 06 FF F7 
17d9c     F3 F4 FA FE 
17da0     02 06 06 07 | 	byte	$00, $05, $08, $06, $08, $06, $ff, $f7, $f3, $f4, $fa, $fe, $02, $06, $06, $07
17da4     04 01 FC F9 
17da8     F9 FC 00 02 
17dac     03 05 09 08 
17db0     04 FA F4 F5 | 	byte	$04, $01, $fc, $f9, $f9, $fc, $00, $02, $03, $05, $09, $08, $04, $fa, $f4, $f5
17db4     FE 03 06 06 
17db8     0A 08 FF F7 
17dbc     F4 F4 F9 FE 
17dc0     01 05 06 06 | 	byte	$fe, $03, $06, $06, $0a, $08, $ff, $f7, $f4, $f4, $f9, $fe, $01, $05, $06, $06
17dc4     03 01 FD FB 
17dc8     FB FF 00 00 
17dcc     01 04 08 08 
17dd0     03 FC F8 F9 | 	byte	$03, $01, $fd, $fb, $fb, $ff, $00, $00, $01, $04, $08, $08, $03, $fc, $f8, $f9
17dd4     FE 00 02 04 
17dd8     09 08 01 F9 
17ddc     F6 F6 F9 FE 
17de0     01 04 06 05 | 	byte	$fe, $00, $02, $04, $09, $08, $01, $f9, $f6, $f6, $f9, $fe, $01, $04, $06, $05
17de4     03 01 FD FC 
17de8     FA FF FF 01 
17dec     01 04 09 07 
17df0     01 FC FA FD | 	byte	$03, $01, $fd, $fc, $fa, $ff, $ff, $01, $01, $04, $09, $07, $01, $fc, $fa, $fd
17df4     00 FF 01 03 
17df8     07 06 00 F9 
17dfc     F6 F7 FB FF 
17e00     03 04 06 05 | 	byte	$00, $ff, $01, $03, $07, $06, $00, $f9, $f6, $f7, $fb, $ff, $03, $04, $06, $05
17e04     03 00 FD FC 
17e08     FB FD FE 01 
17e0c     02 05 07 06 
17e10     FF FB FC 00 | 	byte	$03, $00, $fd, $fc, $fb, $fd, $fe, $01, $02, $05, $07, $06, $ff, $fb, $fc, $00
17e14     00 FF FF 02 
17e18     05 04 00 FC 
17e1c     F9 FA FD FF 
17e20     01 01 03 03 | 	byte	$00, $ff, $ff, $02, $05, $04, $00, $fc, $f9, $fa, $fd, $ff, $01, $01, $03, $03
17e24     04 01 00 FE 
17e28     FF FD FD FF 
17e2c     00 04 05 05 
17e30     00 FD FF 03 | 	byte	$04, $01, $00, $fe, $ff, $fd, $fd, $ff, $00, $04, $05, $05, $00, $fd, $ff, $03
17e34     00 FE FD 01 
17e38     04 01 FD FC 
17e3c     FB FC FE FF 
17e40     00 00 03 04 | 	byte	$00, $fe, $fd, $01, $04, $01, $fd, $fc, $fb, $fc, $fe, $ff, $00, $00, $03, $04
17e44     06 02 02 FF 
17e48     FF FB F9 FB 
17e4c     FF 04 05 03 
17e50     01 FE 01 04 | 	byte	$06, $02, $02, $ff, $ff, $fb, $f9, $fb, $ff, $04, $05, $03, $01, $fe, $01, $04
17e54     00 FF 00 04 
17e58     05 00 FB FB 
17e5c     FA FD FD FE 
17e60     FE 01 03 06 | 	byte	$00, $ff, $00, $04, $05, $00, $fb, $fb, $fa, $fd, $fd, $fe, $fe, $01, $03, $06
17e64     06 03 03 01 
17e68     00 FC F9 F8 
17e6c     FE 02 05 01 
17e70     01 02 04 05 | 	byte	$06, $03, $03, $01, $00, $fc, $f9, $f8, $fe, $02, $05, $01, $01, $02, $04, $05
17e74     00 FF 01 04 
17e78     03 FD F9 FA 
17e7c     FD 01 00 FE 
17e80     FB FD FE 03 | 	byte	$00, $ff, $01, $04, $03, $fd, $f9, $fa, $fd, $01, $00, $fe, $fb, $fd, $fe, $03
17e84     04 04 06 05 
17e88     04 FE F8 F6 
17e8c     FB 00 03 01 
17e90     01 04 08 05 | 	byte	$04, $04, $06, $05, $04, $fe, $f8, $f6, $fb, $00, $03, $01, $01, $04, $08, $05
17e94     00 FE 00 03 
17e98     FF FB F9 FC 
17e9c     01 04 02 FE 
17ea0     F9 F8 FB 01 | 	byte	$00, $fe, $00, $03, $ff, $fb, $f9, $fc, $01, $04, $02, $fe, $f9, $f8, $fb, $01
17ea4     04 06 09 07 
17ea8     05 FD F8 F6 
17eac     FA FE 00 FF 
17eb0     00 05 0A 07 | 	byte	$04, $06, $09, $07, $05, $fd, $f8, $f6, $fa, $fe, $00, $ff, $00, $05, $0a, $07
17eb4     04 00 00 00 
17eb8     FD F8 F8 FB 
17ebc     02 06 05 01 
17ec0     FA F8 FA FF | 	byte	$04, $00, $00, $00, $fd, $f8, $f8, $fb, $02, $06, $05, $01, $fa, $f8, $fa, $ff
17ec4     01 05 08 09 
17ec8     06 00 FA F9 
17ecc     FA FD FD FC 
17ed0     FE 04 0A 09 | 	byte	$01, $05, $08, $09, $06, $00, $fa, $f9, $fa, $fd, $fd, $fc, $fe, $04, $0a, $09
17ed4     06 03 02 FE 
17ed8     FC F7 F9 FB 
17edc     03 07 07 01 
17ee0     FB F8 FA FE | 	byte	$06, $03, $02, $fe, $fc, $f7, $f9, $fb, $03, $07, $07, $01, $fb, $f8, $fa, $fe
17ee4     00 05 06 08 
17ee8     05 00 FC FB 
17eec     FC FD FC FB 
17ef0     FE 04 08 08 | 	byte	$00, $05, $06, $08, $05, $00, $fc, $fb, $fc, $fd, $fc, $fb, $fe, $04, $08, $08
17ef4     09 06 05 FF 
17ef8     FA F7 F8 FD 
17efc     02 05 05 00 
17f00     FC F9 FA FD | 	byte	$09, $06, $05, $ff, $fa, $f7, $f8, $fd, $02, $05, $05, $00, $fc, $f9, $fa, $fd
17f04     FE 03 05 07 
17f08     03 01 FE FE 
17f0c     FE FE FC FB 
17f10     FF 04 06 05 | 	byte	$fe, $03, $05, $07, $03, $01, $fe, $fe, $fe, $fe, $fc, $fb, $ff, $04, $06, $05
17f14     06 06 05 FF 
17f18     FA F7 F8 FD 
17f1c     03 05 05 01 
17f20     FE FB FB FB | 	byte	$06, $06, $05, $ff, $fa, $f7, $f8, $fd, $03, $05, $05, $01, $fe, $fb, $fb, $fb
17f24     FD 02 05 07 
17f28     05 02 FF FD 
17f2c     FD FC FC FD 
17f30     01 06 04 04 | 	byte	$fd, $02, $05, $07, $05, $02, $ff, $fd, $fd, $fc, $fc, $fd, $01, $06, $04, $04
17f34     03 06 06 02 
17f38     F9 F5 F7 FC 
17f3c     02 04 05 02 
17f40     01 FD FC F9 | 	byte	$03, $06, $06, $02, $f9, $f5, $f7, $fc, $02, $04, $05, $02, $01, $fd, $fc, $f9
17f44     FB FF 05 07 
17f48     04 03 01 FE 
17f4c     FC F9 F9 FD 
17f50     04 08 06 04 | 	byte	$fb, $ff, $05, $07, $04, $03, $01, $fe, $fc, $f9, $f9, $fd, $04, $08, $06, $04
17f54     03 05 05 00 
17f58     F9 F7 F8 FD 
17f5c     01 03 02 01 
17f60     00 FF FD FA | 	byte	$03, $05, $05, $00, $f9, $f7, $f8, $fd, $01, $03, $02, $01, $00, $ff, $fd, $fa
17f64     FC FE 03 06 
17f68     05 04 02 01 
17f6c     FD F8 F7 FC 
17f70     04 09 07 05 | 	byte	$fc, $fe, $03, $06, $05, $04, $02, $01, $fd, $f8, $f7, $fc, $04, $09, $07, $05
17f74     04 04 02 FD 
17f78     F9 F8 F9 FE 
17f7c     01 02 00 00 
17f80     FF FF FD FA | 	byte	$04, $04, $02, $fd, $f9, $f8, $f9, $fe, $01, $02, $00, $00, $ff, $ff, $fd, $fa
17f84     FC FE 05 06 
17f88     06 03 03 01 
17f8c     FE F6 F5 FB 
17f90     05 09 08 07 | 	byte	$fc, $fe, $05, $06, $06, $03, $03, $01, $fe, $f6, $f5, $fb, $05, $09, $08, $07
17f94     05 04 FF FB 
17f98     F8 FA FA FF 
17f9c     02 02 01 00 
17fa0     00 00 FC FB | 	byte	$05, $04, $ff, $fb, $f8, $fa, $fa, $ff, $02, $02, $01, $00, $00, $00, $fc, $fb
17fa4     FC FF 03 04 
17fa8     05 03 04 03 
17fac     FE F8 F6 FB 
17fb0     05 07 08 08 | 	byte	$fc, $ff, $03, $04, $05, $03, $04, $03, $fe, $f8, $f6, $fb, $05, $07, $08, $08
17fb4     06 04 FF FA 
17fb8     F9 FA FB FE 
17fbc     00 01 00 00 
17fc0     00 02 FD FC | 	byte	$06, $04, $ff, $fa, $f9, $fa, $fb, $fe, $00, $01, $00, $00, $00, $02, $fd, $fc
17fc4     FD 01 03 03 
17fc8     02 03 04 03 
17fcc     FD F9 F8 FE 
17fd0     05 06 07 07 | 	byte	$fd, $01, $03, $03, $02, $03, $04, $03, $fd, $f9, $f8, $fe, $05, $06, $07, $07
17fd4     06 02 FE F9 
17fd8     FA FB FF 00 
17fdc     00 00 FF FF 
17fe0     FF 00 FD FF | 	byte	$06, $02, $fe, $f9, $fa, $fb, $ff, $00, $00, $00, $ff, $ff, $ff, $00, $fd, $ff
17fe4     01 05 04 01 
17fe8     FF 00 01 00 
17fec     FB F9 FC 01 
17ff0     06 06 07 05 | 	byte	$01, $05, $04, $01, $ff, $00, $01, $00, $fb, $f9, $fc, $01, $06, $06, $07, $05
17ff4     04 00 FC FA 
17ff8     FB FD 02 02 
17ffc     00 FD FD FD 
18000     FE FE FE 03 | 	byte	$04, $00, $fc, $fa, $fb, $fd, $02, $02, $00, $fd, $fd, $fd, $fe, $fe, $fe, $03
18004     04 07 03 FF 
18008     FC FE 00 FF 
1800c     FC FC FF 06 
18010     07 05 03 03 | 	byte	$04, $07, $03, $ff, $fc, $fe, $00, $ff, $fc, $fc, $ff, $06, $07, $05, $03, $03
18014     03 00 FD FB 
18018     FD FF 02 01 
1801c     FD FB FB FE 
18020     FF FF 01 05 | 	byte	$03, $00, $fd, $fb, $fd, $ff, $02, $01, $fd, $fb, $fb, $fe, $ff, $ff, $01, $05
18024     06 06 02 FD 
18028     FB FF FF FD 
1802c     FA FB 01 08 
18030     07 06 03 02 | 	byte	$06, $06, $02, $fd, $fb, $ff, $ff, $fd, $fa, $fb, $01, $08, $07, $06, $03, $02
18034     02 FF FD FC 
18038     FE FF 03 01 
1803c     FD FA FA FC 
18040     FF FF 03 06 | 	byte	$02, $ff, $fd, $fc, $fe, $ff, $03, $01, $fd, $fa, $fa, $fc, $ff, $ff, $03, $06
18044     08 06 FF FB 
18048     F9 FE FE FC 
1804c     F9 FC 03 0A 
18050     08 05 00 00 | 	byte	$08, $06, $ff, $fb, $f9, $fe, $fe, $fc, $f9, $fc, $03, $0a, $08, $05, $00, $00
18054     FF FF FE FF 
18058     00 02 03 00 
1805c     FC F7 F7 FC 
18060     01 02 06 07 | 	byte	$ff, $ff, $fe, $ff, $00, $02, $03, $00, $fc, $f7, $f7, $fc, $01, $02, $06, $07
18064     08 04 FD F8 
18068     FA FD 00 FD 
1806c     FC FE 04 08 
18070     06 03 FF FF | 	byte	$08, $04, $fd, $f8, $fa, $fd, $00, $fd, $fc, $fe, $04, $08, $06, $03, $ff, $ff
18074     FD 00 01 04 
18078     03 04 01 FD 
1807c     F9 F6 F7 FD 
18080     03 05 09 08 | 	byte	$fd, $00, $01, $04, $03, $04, $01, $fd, $f9, $f6, $f7, $fd, $03, $05, $09, $08
18084     07 01 FB F7 
18088     FA FC FF FF 
1808c     FE 01 05 06 
18090     06 03 FF FF | 	byte	$07, $01, $fb, $f7, $fa, $fc, $ff, $ff, $fe, $01, $05, $06, $06, $03, $ff, $ff
18094     FD FF 00 03 
18098     04 05 02 FE 
1809c     F8 F5 F7 FD 
180a0     02 06 09 09 | 	byte	$fd, $ff, $00, $03, $04, $05, $02, $fe, $f8, $f5, $f7, $fd, $02, $06, $09, $09
180a4     06 FF FA F7 
180a8     FA FD FE FF 
180ac     01 04 07 05 
180b0     04 00 FE FE | 	byte	$06, $ff, $fa, $f7, $fa, $fd, $fe, $ff, $01, $04, $07, $05, $04, $00, $fe, $fe
180b4     FD FF 02 04 
180b8     05 04 01 FC 
180bc     F7 F6 F9 FF 
180c0     02 08 0A 08 | 	byte	$fd, $ff, $02, $04, $05, $04, $01, $fc, $f7, $f6, $f9, $ff, $02, $08, $0a, $08
180c4     04 FD F9 F9 
180c8     FB FC FC FD 
180cc     02 05 08 05 
180d0     03 00 FE FE | 	byte	$04, $fd, $f9, $f9, $fb, $fc, $fc, $fd, $02, $05, $08, $05, $03, $00, $fe, $fe
180d4     FE FF 02 04 
180d8     06 06 00 FC 
180dc     F7 F7 F9 FF 
180e0     00 06 09 08 | 	byte	$fe, $ff, $02, $04, $06, $06, $00, $fc, $f7, $f7, $f9, $ff, $00, $06, $09, $08
180e4     03 FC F9 FC 
180e8     FE FE FB FB 
180ec     00 06 08 05 
180f0     03 00 FF FE | 	byte	$03, $fc, $f9, $fc, $fe, $fe, $fb, $fb, $00, $06, $08, $05, $03, $00, $ff, $fe
180f4     FD FE 00 02 
180f8     06 07 01 FB 
180fc     F6 F6 F9 FE 
18100     02 07 0A 09 | 	byte	$fd, $fe, $00, $02, $06, $07, $01, $fb, $f6, $f6, $f9, $fe, $02, $07, $0a, $09
18104     01 FA F6 FB 
18108     FE FE FB FC 
1810c     01 08 0A 07 
18110     03 00 FF FE | 	byte	$01, $fa, $f6, $fb, $fe, $fe, $fb, $fc, $01, $08, $0a, $07, $03, $00, $ff, $fe
18114     FC FC FF 02 
18118     07 07 02 FB 
1811c     F7 F6 F9 FD 
18120     01 07 09 07 | 	byte	$fc, $fc, $ff, $02, $07, $07, $02, $fb, $f7, $f6, $f9, $fd, $01, $07, $09, $07
18124     00 F9 F8 FC 
18128     FF FF FC FC 
1812c     01 08 09 07 
18130     03 00 00 FD | 	byte	$00, $f9, $f8, $fc, $ff, $ff, $fc, $fc, $01, $08, $09, $07, $03, $00, $00, $fd
18134     FC FC FE 01 
18138     05 06 03 FC 
1813c     F7 F7 FB FF 
18140     03 08 08 05 | 	byte	$fc, $fc, $fe, $01, $05, $06, $03, $fc, $f7, $f7, $fb, $ff, $03, $08, $08, $05
18144     FE F7 F8 FC 
18148     FF FF FE FE 
1814c     01 07 07 06 
18150     03 01 01 FF | 	byte	$fe, $f7, $f8, $fc, $ff, $ff, $fe, $fe, $01, $07, $07, $06, $03, $01, $01, $ff
18154     FD FE FD 00 
18158     03 04 02 FB 
1815c     F7 F8 FD 01 
18160     05 08 08 03 | 	byte	$fd, $fe, $fd, $00, $03, $04, $02, $fb, $f7, $f8, $fd, $01, $05, $08, $08, $03
18164     FB F7 F9 FE 
18168     01 01 FF FF 
1816c     01 04 05 05 
18170     03 02 02 01 | 	byte	$fb, $f7, $f9, $fe, $01, $01, $ff, $ff, $01, $04, $05, $05, $03, $02, $02, $01
18174     FE FE FC FE 
18178     02 03 02 FD 
1817c     FA FA FF 01 
18180     06 07 06 00 | 	byte	$fe, $fe, $fc, $fe, $02, $03, $02, $fd, $fa, $fa, $ff, $01, $06, $07, $06, $00
18184     FB F7 FA FE 
18188     00 00 00 01 
1818c     02 03 03 04 
18190     04 03 01 00 | 	byte	$fb, $f7, $fa, $fe, $00, $00, $00, $01, $02, $03, $03, $04, $04, $03, $01, $00
18194     FF FD FC FD 
18198     01 02 00 FE 
1819c     FC FD FF 02 
181a0     06 06 04 FF | 	byte	$ff, $fd, $fc, $fd, $01, $02, $00, $fe, $fc, $fd, $ff, $02, $06, $06, $04, $ff
181a4     FB F9 FB FE 
181a8     FF 00 01 02 
181ac     04 02 02 03 
181b0     04 05 02 FF | 	byte	$fb, $f9, $fb, $fe, $ff, $00, $01, $02, $04, $02, $02, $03, $04, $05, $02, $ff
181b4     FE FC FA FC 
181b8     FF 00 FE FE 
181bc     FE 00 01 04 
181c0     06 04 02 FD | 	byte	$fe, $fc, $fa, $fc, $ff, $00, $fe, $fe, $fe, $00, $01, $04, $06, $04, $02, $fd
181c4     FA FA FD 00 
181c8     01 00 00 02 
181cc     02 00 00 01 
181d0     05 06 05 02 | 	byte	$fa, $fa, $fd, $00, $01, $00, $00, $02, $02, $00, $00, $01, $05, $06, $05, $02
181d4     00 FD FB FC 
181d8     FD FE FD FD 
181dc     FF 02 03 05 
181e0     06 04 00 FB | 	byte	$00, $fd, $fb, $fc, $fd, $fe, $fd, $fd, $ff, $02, $03, $05, $06, $04, $00, $fb
181e4     F8 F9 FE 01 
181e8     02 01 01 01 
181ec     01 00 00 01 
181f0     05 07 06 02 | 	byte	$f8, $f9, $fe, $01, $02, $01, $01, $01, $01, $00, $00, $01, $05, $07, $06, $02
181f4     FF FC FC FC 
181f8     FD FC FD FD 
181fc     00 03 04 06 
18200     06 03 FF F9 | 	byte	$ff, $fc, $fc, $fc, $fd, $fc, $fd, $fd, $00, $03, $04, $06, $06, $03, $ff, $f9
18204     F6 F9 FD 02 
18208     02 01 01 02 
1820c     01 00 FF 00 
18210     03 05 06 03 | 	byte	$f6, $f9, $fd, $02, $02, $01, $01, $02, $01, $00, $ff, $00, $03, $05, $06, $03
18214     00 FD FD FD 
18218     FC FB FC FE 
1821c     01 04 04 06 
18220     05 04 FF F9 | 	byte	$00, $fd, $fd, $fd, $fc, $fb, $fc, $fe, $01, $04, $04, $06, $05, $04, $ff, $f9
18224     F7 FB FF 02 
18228     01 02 01 01 
1822c     FF FF 00 02 
18230     03 04 04 04 | 	byte	$f7, $fb, $ff, $02, $01, $02, $01, $01, $ff, $ff, $00, $02, $03, $04, $04, $04
18234     00 FD FB FC 
18238     FC FC FD FF 
1823c     02 03 03 05 
18240     04 02 FE FA | 	byte	$00, $fd, $fb, $fc, $fc, $fc, $fd, $ff, $02, $03, $03, $05, $04, $02, $fe, $fa
18244     FA FD 01 02 
18248     01 01 01 FF 
1824c     FE FE 00 03 
18250     04 03 03 03 | 	byte	$fa, $fd, $01, $02, $01, $01, $01, $ff, $fe, $fe, $00, $03, $04, $03, $03, $03
18254     01 FF FD FB 
18258     FB FB FE 00 
1825c     02 03 04 05 
18260     04 FF FC FA | 	byte	$01, $ff, $fd, $fb, $fb, $fb, $fe, $00, $02, $03, $04, $05, $04, $ff, $fc, $fa
18264     FB FF 01 02 
18268     00 01 00 FF 
1826c     FE FE 01 04 
18270     04 03 01 01 | 	byte	$fb, $ff, $01, $02, $00, $01, $00, $ff, $fe, $fe, $01, $04, $04, $03, $01, $01
18274     00 FF FE FB 
18278     FB FC FF 01 
1827c     02 02 03 04 
18280     04 FF FC FB | 	byte	$00, $ff, $fe, $fb, $fb, $fc, $ff, $01, $02, $02, $03, $04, $04, $ff, $fc, $fb
18284     FE 00 00 00 
18288     FF 00 FE FF 
1828c     00 01 02 04 
18290     02 02 FF 00 | 	byte	$fe, $00, $00, $00, $ff, $00, $fe, $ff, $00, $01, $02, $04, $02, $02, $ff, $00
18294     00 00 FF FE 
18298     FC FD FE 01 
1829c     02 02 04 04 
182a0     04 FF FC FB | 	byte	$00, $00, $ff, $fe, $fc, $fd, $fe, $01, $02, $02, $04, $04, $04, $ff, $fc, $fb
182a4     FE FF 00 00 
182a8     FF 00 00 FF 
182ac     01 01 01 01 
182b0     00 00 00 01 | 	byte	$fe, $ff, $00, $00, $ff, $00, $00, $ff, $01, $01, $01, $01, $00, $00, $00, $01
182b4     01 02 00 FD 
182b8     FB FB FE 02 
182bc     03 03 03 03 
182c0     01 FE FD FD | 	byte	$01, $02, $00, $fd, $fb, $fb, $fe, $02, $03, $03, $03, $03, $01, $fe, $fd, $fd
182c4     00 01 01 FF 
182c8     FF FE FF FF 
182cc     01 02 01 02 
182d0     00 01 02 02 | 	byte	$00, $01, $01, $ff, $ff, $fe, $ff, $ff, $01, $02, $01, $02, $00, $01, $02, $02
182d4     02 01 FE FC 
182d8     FB FC FF 03 
182dc     03 04 03 03 
182e0     00 FC FB FD | 	byte	$02, $01, $fe, $fc, $fb, $fc, $ff, $03, $03, $04, $03, $03, $00, $fc, $fb, $fd
182e4     00 01 01 00 
182e8     FF FF FF 00 
182ec     00 01 01 00 
182f0     00 01 03 03 | 	byte	$00, $01, $01, $00, $ff, $ff, $ff, $00, $00, $01, $01, $00, $00, $01, $03, $03
182f4     02 00 FD FC 
182f8     FB FD 00 02 
182fc     02 03 02 02 
18300     00 FD FC FE | 	byte	$02, $00, $fd, $fc, $fb, $fd, $00, $02, $02, $03, $02, $02, $00, $fd, $fc, $fe
18304     00 01 00 FE 
18308     FF FE FE 00 
1830c     01 02 02 01 
18310     01 02 03 02 | 	byte	$00, $01, $00, $fe, $ff, $fe, $fe, $00, $01, $02, $02, $01, $01, $02, $03, $02
18314     01 FE FB FA 
18318     FC FF 02 04 
1831c     03 02 02 01 
18320     FE FC FD 01 | 	byte	$01, $fe, $fb, $fa, $fc, $ff, $02, $04, $03, $02, $02, $01, $fe, $fc, $fd, $01
18324     03 03 01 FE 
18328     FD FC FD FE 
1832c     00 01 02 02 
18330     02 03 04 03 | 	byte	$03, $03, $01, $fe, $fd, $fc, $fd, $fe, $00, $01, $02, $02, $02, $03, $04, $03
18334     02 FE FB F9 
18338     FB 00 04 05 
1833c     03 02 02 00 
18340     FC FB FD 01 | 	byte	$02, $fe, $fb, $f9, $fb, $00, $04, $05, $03, $02, $02, $00, $fc, $fb, $fd, $01
18344     03 03 01 FF 
18348     FE FE FE FF 
1834c     FF 00 01 01 
18350     02 04 05 05 | 	byte	$03, $03, $01, $ff, $fe, $fe, $fe, $ff, $ff, $00, $01, $01, $02, $04, $05, $05
18354     02 FE FA F8 
18358     FA FF 03 04 
1835c     03 03 02 FF 
18360     FC FB FE 01 | 	byte	$02, $fe, $fa, $f8, $fa, $ff, $03, $04, $03, $03, $02, $ff, $fc, $fb, $fe, $01
18364     02 02 01 00 
18368     FE FE FF FF 
1836c     FF FF FF 01 
18370     03 05 06 06 | 	byte	$02, $02, $01, $00, $fe, $fe, $ff, $ff, $ff, $ff, $ff, $01, $03, $05, $06, $06
18374     02 FE FB F8 
18378     FB FF 03 04 
1837c     04 03 00 FC 
18380     FA FB 00 02 | 	byte	$02, $fe, $fb, $f8, $fb, $ff, $03, $04, $04, $03, $00, $fc, $fa, $fb, $00, $02
18384     04 03 01 00 
18388     FD FD FF 00 
1838c     00 FF 00 00 
18390     02 04 05 05 | 	byte	$04, $03, $01, $00, $fd, $fd, $ff, $00, $00, $ff, $00, $00, $02, $04, $05, $05
18394     02 FE FA F9 
18398     FC FF 03 03 
1839c     04 03 00 FC 
183a0     FB FD 01 03 | 	byte	$02, $fe, $fa, $f9, $fc, $ff, $03, $03, $04, $03, $00, $fc, $fb, $fd, $01, $03
183a4     03 02 00 FE 
183a8     FC FC FF 01 
183ac     02 01 00 00 
183b0     02 03 03 03 | 	byte	$03, $02, $00, $fe, $fc, $fc, $ff, $01, $02, $01, $00, $00, $02, $03, $03, $03
183b4     01 FF FC FC 
183b8     FD 01 02 03 
183bc     03 01 FE FC 
183c0     FC FE 02 03 | 	byte	$01, $ff, $fc, $fc, $fd, $01, $02, $03, $03, $01, $fe, $fc, $fc, $fe, $02, $03
183c4     03 01 FF FD 
183c8     FC FD FF 02 
183cc     03 03 00 01 
183d0     01 02 01 01 | 	byte	$03, $01, $ff, $fd, $fc, $fd, $ff, $02, $03, $03, $00, $01, $01, $02, $01, $01
183d4     00 FE FB FC 
183d8     FE 01 03 05 
183dc     04 00 FC FA 
183e0     FC FF 02 04 | 	byte	$00, $fe, $fb, $fc, $fe, $01, $03, $05, $04, $00, $fc, $fa, $fc, $ff, $02, $04
183e4     04 02 00 FC 
183e8     FC FC FE 00 
183ec     02 03 03 03 
183f0     03 02 01 00 | 	byte	$04, $02, $00, $fc, $fc, $fc, $fe, $00, $02, $03, $03, $03, $03, $02, $01, $00
183f4     FE FC FA FC 
183f8     FF 04 06 06 
183fc     03 FE FA F9 
18400     FC 01 04 06 | 	byte	$fe, $fc, $fa, $fc, $ff, $04, $06, $06, $03, $fe, $fa, $f9, $fc, $01, $04, $06
18404     05 02 FE FB 
18408     FA FC 00 02 
1840c     03 04 04 03 
18410     02 FF 00 00 | 	byte	$05, $02, $fe, $fb, $fa, $fc, $00, $02, $03, $04, $04, $03, $02, $ff, $00, $00
18414     FF FB F9 FC 
18418     FF 03 05 05 
1841c     02 FF FB FA 
18420     FD 03 05 06 | 	byte	$ff, $fb, $f9, $fc, $ff, $03, $05, $05, $02, $ff, $fb, $fa, $fd, $03, $05, $06
18424     04 01 FD FA 
18428     F9 FC 00 02 
1842c     04 05 05 04 
18430     01 FE FF FF | 	byte	$04, $01, $fd, $fa, $f9, $fc, $00, $02, $04, $05, $05, $04, $01, $fe, $ff, $ff
18434     FE FB FB FC 
18438     00 03 04 04 
1843c     01 FE FB FC 
18440     FF 03 05 05 | 	byte	$fe, $fb, $fb, $fc, $00, $03, $04, $04, $01, $fe, $fb, $fc, $ff, $03, $05, $05
18444     04 00 FC F9 
18448     F8 FB FF 03 
1844c     05 07 07 05 
18450     01 FD FC FC | 	byte	$04, $00, $fc, $f9, $f8, $fb, $ff, $03, $05, $07, $07, $05, $01, $fd, $fc, $fc
18454     FC FC FD FE 
18458     01 02 04 02 
1845c     00 FD FC FE 
18460     01 03 04 04 | 	byte	$fc, $fc, $fd, $fe, $01, $02, $04, $02, $00, $fd, $fc, $fe, $01, $03, $04, $04
18464     03 00 FD FA 
18468     FA FC 00 04 
1846c     06 07 07 04 
18470     00 FD FB FB | 	byte	$03, $00, $fd, $fa, $fa, $fc, $00, $04, $06, $07, $07, $04, $00, $fd, $fb, $fb
18474     FC FD FE 00 
18478     01 01 01 01 
1847c     FE FD FD 00 
18480     04 04 03 03 | 	byte	$fc, $fd, $fe, $00, $01, $01, $01, $01, $fe, $fd, $fd, $00, $04, $04, $03, $03
18484     01 00 FD FA 
18488     FA FC FF 03 
1848c     06 06 05 03 
18490     FF FD FC FD | 	byte	$01, $00, $fd, $fa, $fa, $fc, $ff, $03, $06, $06, $05, $03, $ff, $fd, $fc, $fd
18494     FD FE FF 01 
18498     02 01 00 00 
1849c     FD FC FE 01 
184a0     05 04 03 02 | 	byte	$fd, $fe, $ff, $01, $02, $01, $00, $00, $fd, $fc, $fe, $01, $05, $04, $03, $02
184a4     01 00 FC F9 
184a8     FA FB FF 03 
184ac     07 08 04 01 
184b0     FD FC FC FD | 	byte	$01, $00, $fc, $f9, $fa, $fb, $ff, $03, $07, $08, $04, $01, $fd, $fc, $fc, $fd
184b4     FD FF 01 02 
184b8     03 02 FF FE 
184bc     FD FC FF 02 
184c0     06 04 03 02 | 	byte	$fd, $ff, $01, $02, $03, $02, $ff, $fe, $fd, $fc, $ff, $02, $06, $04, $03, $02
184c4     00 FF FB FA 
184c8     FA FC 00 03 
184cc     06 07 04 00 
184d0     FC FC FD FF | 	byte	$00, $ff, $fb, $fa, $fa, $fc, $00, $03, $06, $07, $04, $00, $fc, $fc, $fd, $ff
184d4     FF 00 01 02 
184d8     02 01 FE FD 
184dc     FD FD 00 04 
184e0     05 03 02 01 | 	byte	$ff, $00, $01, $02, $02, $01, $fe, $fd, $fd, $fd, $00, $04, $05, $03, $02, $01
184e4     01 FF FC FB 
184e8     FC FE 00 03 
184ec     05 06 04 00 
184f0     FC FB FC FE | 	byte	$01, $ff, $fc, $fb, $fc, $fe, $00, $03, $05, $06, $04, $00, $fc, $fb, $fc, $fe
184f4     00 02 02 03 
184f8     02 01 FE FC 
184fc     FC FD 01 05 
18500     04 03 02 02 | 	byte	$00, $02, $02, $03, $02, $01, $fe, $fc, $fc, $fd, $01, $05, $04, $03, $02, $02
18504     01 FD FA FA 
18508     FC 00 02 04 
1850c     06 05 03 FE 
18510     FB FA FC FF | 	byte	$01, $fd, $fa, $fa, $fc, $00, $02, $04, $06, $05, $03, $fe, $fb, $fa, $fc, $ff
18514     01 03 04 03 
18518     02 00 FE FC 
1851c     FB FD 01 04 
18520     03 02 03 02 | 	byte	$01, $03, $04, $03, $02, $00, $fe, $fc, $fb, $fd, $01, $04, $03, $02, $03, $02
18524     01 FD FA FB 
18528     FD 01 03 05 
1852c     06 04 01 FD 
18530     FA FA FC FE | 	byte	$01, $fd, $fa, $fb, $fd, $01, $03, $05, $06, $04, $01, $fd, $fa, $fa, $fc, $fe
18534     02 04 05 03 
18538     02 00 FE FC 
1853c     FA FC 01 03 
18540     02 02 03 03 | 	byte	$02, $04, $05, $03, $02, $00, $fe, $fc, $fa, $fc, $01, $03, $02, $02, $03, $03
18544     01 FD F9 FA 
18548     FD 01 05 07 
1854c     06 04 00 FD 
18550     FB FA FC FE | 	byte	$01, $fd, $f9, $fa, $fd, $01, $05, $07, $06, $04, $00, $fd, $fb, $fa, $fc, $fe
18554     02 05 06 04 
18558     02 00 FD FC 
1855c     FA FD 01 02 
18560     02 02 02 03 | 	byte	$02, $05, $06, $04, $02, $00, $fd, $fc, $fa, $fd, $01, $02, $02, $02, $02, $03
18564     00 FD FA FB 
18568     FE 02 06 07 
1856c     05 02 00 FD 
18570     FB FB FC FE | 	byte	$00, $fd, $fa, $fb, $fe, $02, $06, $07, $05, $02, $00, $fd, $fb, $fb, $fc, $fe
18574     01 03 03 02 
18578     02 01 FF FD 
1857c     FC FF 01 01 
18580     FF 01 02 02 | 	byte	$01, $03, $03, $02, $02, $01, $ff, $fd, $fc, $ff, $01, $01, $ff, $01, $02, $02
18584     01 FD FC FC 
18588     FF 03 05 06 
1858c     04 01 FE FC 
18590     FA FB FD FF | 	byte	$01, $fd, $fc, $fc, $ff, $03, $05, $06, $04, $01, $fe, $fc, $fa, $fb, $fd, $ff
18594     01 02 02 02 
18598     01 01 00 FF 
1859c     FF 00 01 FF 
185a0     FF FF 00 01 | 	byte	$01, $02, $02, $02, $01, $01, $00, $ff, $ff, $00, $01, $ff, $ff, $ff, $00, $01
185a4     00 FD FD FD 
185a8     00 03 05 06 
185ac     05 02 FE FC 
185b0     FA FC FD FE | 	byte	$00, $fd, $fd, $fd, $00, $03, $05, $06, $05, $02, $fe, $fc, $fa, $fc, $fd, $fe
185b4     01 02 02 02 
185b8     01 00 FF FE 
185bc     00 01 02 FF 
185c0     FF FF 00 01 | 	byte	$01, $02, $02, $02, $01, $00, $ff, $fe, $00, $01, $02, $ff, $ff, $ff, $00, $01
185c4     FF FE FE FF 
185c8     00 02 05 06 
185cc     04 02 FE FD 
185d0     FB FC FE FF | 	byte	$ff, $fe, $fe, $ff, $00, $02, $05, $06, $04, $02, $fe, $fd, $fb, $fc, $fe, $ff
185d4     00 00 00 01 
185d8     01 00 FF 00 
185dc     02 02 02 FE 
185e0     FD FD FE 00 | 	byte	$00, $00, $00, $01, $01, $00, $ff, $00, $02, $02, $02, $fe, $fd, $fd, $fe, $00
185e4     00 01 01 01 
185e8     01 02 03 03 
185ec     03 01 FE FD 
185f0     FD FE FE FF | 	byte	$00, $01, $01, $01, $01, $02, $03, $03, $03, $01, $fe, $fd, $fd, $fe, $fe, $ff
185f4     FF FE FE 00 
185f8     00 00 00 01 
185fc     03 04 01 FE 
18600     FD FD FD FE | 	byte	$ff, $fe, $fe, $00, $00, $00, $00, $01, $03, $04, $01, $fe, $fd, $fd, $fd, $fe
18604     FF 00 02 03 
18608     02 01 01 01 
1860c     01 00 FE FE 
18610     FE FF FF 00 | 	byte	$ff, $00, $02, $03, $02, $01, $01, $01, $01, $00, $fe, $fe, $fe, $ff, $ff, $00
18614     FF FE FF 00 
18618     00 FF 00 01 
1861c     03 03 01 FE 
18620     FE FD FD FD | 	byte	$ff, $fe, $ff, $00, $00, $ff, $00, $01, $03, $03, $01, $fe, $fe, $fd, $fd, $fd
18624     FE 00 02 04 
18628     04 03 01 00 
1862c     00 FF FF FE 
18630     FF 00 00 00 | 	byte	$fe, $00, $02, $04, $04, $03, $01, $00, $00, $ff, $ff, $fe, $ff, $00, $00, $00
18634     FF FE FF FF 
18638     00 FF 00 02 
1863c     03 03 01 FF 
18640     FE FD FD FD | 	byte	$ff, $fe, $ff, $ff, $00, $ff, $00, $02, $03, $03, $01, $ff, $fe, $fd, $fd, $fd
18644     FF 02 03 05 
18648     04 03 01 00 
1864c     FE FE FF FF 
18650     00 01 00 FF | 	byte	$ff, $02, $03, $05, $04, $03, $01, $00, $fe, $fe, $ff, $ff, $00, $01, $00, $ff
18654     FE FD 00 00 
18658     FF FF FF 02 
1865c     03 02 01 00 
18660     FE FD FD FD | 	byte	$fe, $fd, $00, $00, $ff, $ff, $ff, $02, $03, $02, $01, $00, $fe, $fd, $fd, $fd
18664     FE 02 04 04 
18668     03 02 01 FF 
1866c     FE FD FE 00 
18670     02 01 00 FE | 	byte	$fe, $02, $04, $04, $03, $02, $01, $ff, $fe, $fd, $fe, $00, $02, $01, $00, $fe
18674     FD FE 00 01 
18678     FF FE FF 01 
1867c     03 02 01 00 
18680     FF FE FD FE | 	byte	$fd, $fe, $00, $01, $ff, $fe, $ff, $01, $03, $02, $01, $00, $ff, $fe, $fd, $fe
18684     FF 02 04 03 
18688     02 02 01 FF 
1868c     FD FD FE 00 
18690     02 01 FF FE | 	byte	$ff, $02, $04, $03, $02, $02, $01, $ff, $fd, $fd, $fe, $00, $02, $01, $ff, $fe
18694     FE 00 01 01 
18698     FF FD FD FF 
1869c     02 03 02 02 
186a0     01 FE FD FD | 	byte	$fe, $00, $01, $01, $ff, $fd, $fd, $ff, $02, $03, $02, $02, $01, $fe, $fd, $fd
186a4     FF 01 03 03 
186a8     03 02 01 00 
186ac     FD FD FD 01 
186b0     02 02 00 FE | 	byte	$ff, $01, $03, $03, $03, $02, $01, $00, $fd, $fd, $fd, $01, $02, $02, $00, $fe
186b4     FE 00 02 02 
186b8     FF FD FC FF 
186bc     02 02 02 02 
186c0     01 FE FD FD | 	byte	$fe, $00, $02, $02, $ff, $fd, $fc, $ff, $02, $02, $02, $02, $01, $fe, $fd, $fd
186c4     FF 01 03 04 
186c8     04 03 01 FF 
186cc     FD FD FD 00 
186d0     02 01 00 FE | 	byte	$ff, $01, $03, $04, $04, $03, $01, $ff, $fd, $fd, $fd, $00, $02, $01, $00, $fe
186d4     FE 00 02 01 
186d8     FF FD FD FF 
186dc     02 02 03 03 
186e0     02 FF FD FD | 	byte	$fe, $00, $02, $01, $ff, $fd, $fd, $ff, $02, $02, $03, $03, $02, $ff, $fd, $fd
186e4     FE 00 01 03 
186e8     05 04 02 FE 
186ec     FD FD FD 00 
186f0     01 01 00 FF | 	byte	$fe, $00, $01, $03, $05, $04, $02, $fe, $fd, $fd, $fd, $00, $01, $01, $00, $ff
186f4     FF 01 02 01 
186f8     FF FE FE FF 
186fc     01 01 02 03 
18700     01 FF FD FD | 	byte	$ff, $01, $02, $01, $ff, $fe, $fe, $ff, $01, $01, $02, $03, $01, $ff, $fd, $fd
18704     FE 01 02 03 
18708     06 04 01 FE 
1870c     FC FC FE 02 
18710     02 02 01 FF | 	byte	$fe, $01, $02, $03, $06, $04, $01, $fe, $fc, $fc, $fe, $02, $02, $02, $01, $ff
18714     FF 00 00 FF 
18718     FE FE FF 00 
1871c     01 01 02 03 
18720     01 FF FD FD | 	byte	$ff, $00, $00, $ff, $fe, $fe, $ff, $00, $01, $01, $02, $03, $01, $ff, $fd, $fd
18724     FE 00 02 03 
18728     05 04 01 FE 
1872c     FC FD FF 02 
18730     02 01 FF FF | 	byte	$fe, $00, $02, $03, $05, $04, $01, $fe, $fc, $fd, $ff, $02, $02, $01, $ff, $ff
18734     00 01 01 FF 
18738     FE FF 00 01 
1873c     00 FF 01 01 
18740     01 FF FE FF | 	byte	$00, $01, $01, $ff, $fe, $ff, $00, $01, $00, $ff, $01, $01, $01, $ff, $fe, $ff
18744     FF 01 01 02 
18748     02 02 00 FF 
1874c     FE FE 00 02 
18750     01 FF FD FE | 	byte	$ff, $01, $01, $02, $02, $02, $00, $ff, $fe, $fe, $00, $02, $01, $ff, $fd, $fe
18754     00 02 01 FE 
18758     FD FE 00 01 
1875c     00 00 01 01 
18760     00 FF FF FF | 	byte	$00, $02, $01, $fe, $fd, $fe, $00, $01, $00, $00, $01, $01, $00, $ff, $ff, $ff
18764     00 01 01 02 
18768     01 01 01 00 
1876c     FF FF 01 01 
18770     FF FD FC FE | 	byte	$00, $01, $01, $02, $01, $01, $01, $00, $ff, $ff, $01, $01, $ff, $fd, $fc, $fe
18774     03 04 03 FF 
18778     FE FE FF 00 
1877c     FE FF 01 01 
18780     00 FF FF 00 | 	byte	$03, $04, $03, $ff, $fe, $fe, $ff, $00, $fe, $ff, $01, $01, $00, $ff, $ff, $00
18784     01 02 01 01 
18788     00 01 01 00 
1878c     FF FF 01 02 
18790     00 FD FC FE | 	byte	$01, $02, $01, $01, $00, $01, $01, $00, $ff, $ff, $01, $02, $00, $fd, $fc, $fe
18794     03 05 03 FF 
18798     FD FE FE FE 
1879c     FE FF 01 01 
187a0     00 FE FF 01 | 	byte	$03, $05, $03, $ff, $fd, $fe, $fe, $fe, $fe, $ff, $01, $01, $00, $fe, $ff, $01
187a4     02 02 01 00 
187a8     FF 00 01 00 
187ac     00 01 02 02 
187b0     FF FC FB FE | 	byte	$02, $02, $01, $00, $ff, $00, $01, $00, $00, $01, $02, $02, $ff, $fc, $fb, $fe
187b4     03 05 04 00 
187b8     FE FD FD FC 
187bc     FD 00 02 02 
187c0     00 FF 00 00 | 	byte	$03, $05, $04, $00, $fe, $fd, $fd, $fc, $fd, $00, $02, $02, $00, $ff, $00, $00
187c4     01 02 01 00 
187c8     FF FF 00 01 
187cc     01 02 02 01 
187d0     FE FB FB FE | 	byte	$01, $02, $01, $00, $ff, $ff, $00, $01, $01, $02, $02, $01, $fe, $fb, $fb, $fe
187d4     02 05 04 02 
187d8     FF FE FC FB 
187dc     FC FF 01 02 
187e0     02 01 01 00 | 	byte	$02, $05, $04, $02, $ff, $fe, $fc, $fb, $fc, $ff, $01, $02, $02, $01, $01, $00
187e4     01 01 01 FF 
187e8     FF FF 00 01 
187ec     02 03 03 01 
187f0     FD FB FB FE | 	byte	$01, $01, $01, $ff, $ff, $ff, $00, $01, $02, $03, $03, $01, $fd, $fb, $fb, $fe
187f4     02 04 04 04 
187f8     01 FF FD FB 
187fc     FC FE 00 01 
18800     02 02 02 01 | 	byte	$02, $04, $04, $04, $01, $ff, $fd, $fb, $fc, $fe, $00, $01, $02, $02, $02, $01
18804     01 00 00 FF 
18808     FF FF 00 01 
1880c     02 03 04 01 
18810     FD FB FB FF | 	byte	$01, $00, $00, $ff, $ff, $ff, $00, $01, $02, $03, $04, $01, $fd, $fb, $fb, $ff
18814     02 03 03 03 
18818     02 FF FC FA 
1881c     FC FF 00 01 
18820     02 02 02 01 | 	byte	$02, $03, $03, $03, $02, $ff, $fc, $fa, $fc, $ff, $00, $01, $02, $02, $02, $01
18824     00 FF FF FF 
18828     00 00 00 00 
1882c     02 03 03 00 
18830     FD FB FC 00 | 	byte	$00, $ff, $ff, $ff, $00, $00, $00, $00, $02, $03, $03, $00, $fd, $fb, $fc, $00
18834     01 02 02 02 
18838     02 FF FB FA 
1883c     FD 00 01 02 
18840     02 03 02 01 | 	byte	$01, $02, $02, $02, $02, $ff, $fb, $fa, $fd, $00, $01, $02, $02, $03, $02, $01
18844     00 FE FD FF 
18848     00 01 02 01 
1884c     02 03 02 FF 
18850     FC FB FD 00 | 	byte	$00, $fe, $fd, $ff, $00, $01, $02, $01, $02, $03, $02, $ff, $fc, $fb, $fd, $00
18854     03 02 02 02 
18858     00 FE FA F9 
1885c     FD FF 02 02 
18860     03 03 03 02 | 	byte	$03, $02, $02, $02, $00, $fe, $fa, $f9, $fd, $ff, $02, $02, $03, $03, $03, $02
18864     00 FE FD FE 
18868     00 01 02 02 
1886c     03 04 02 00 
18870     FC FB FC FF | 	byte	$00, $fe, $fd, $fe, $00, $01, $02, $02, $03, $04, $02, $00, $fc, $fb, $fc, $ff
18874     01 02 03 03 
18878     01 FF FB FA 
1887c     FD FF 01 02 
18880     03 03 03 02 | 	byte	$01, $02, $03, $03, $01, $ff, $fb, $fa, $fd, $ff, $01, $02, $03, $03, $03, $02
18884     FF FE FD FE 
18888     FF 01 01 02 
1888c     03 03 02 00 
18890     FD FB FD FE | 	byte	$ff, $fe, $fd, $fe, $ff, $01, $01, $02, $03, $03, $02, $00, $fd, $fb, $fd, $fe
18894     00 01 03 03 
18898     01 FE FC FB 
1889c     FD FE 00 02 
188a0     03 04 04 02 | 	byte	$00, $01, $03, $03, $01, $fe, $fc, $fb, $fd, $fe, $00, $02, $03, $04, $04, $02
188a4     00 FE FD FE 
188a8     00 01 02 02 
188ac     03 02 00 FE 
188b0     FC FC FE 00 | 	byte	$00, $fe, $fd, $fe, $00, $01, $02, $02, $03, $02, $00, $fe, $fc, $fc, $fe, $00
188b4     01 02 03 02 
188b8     00 FE FC FD 
188bc     FE FF 00 01 
188c0     02 03 04 02 | 	byte	$01, $02, $03, $02, $00, $fe, $fc, $fd, $fe, $ff, $00, $01, $02, $03, $04, $02
188c4     00 FF FE FF 
188c8     00 01 01 01 
188cc     02 02 FF FE 
188d0     FE FF FF 00 | 	byte	$00, $ff, $fe, $ff, $00, $01, $01, $01, $02, $02, $ff, $fe, $fe, $ff, $ff, $00
188d4     00 01 01 01 
188d8     FF FE FD FF 
188dc     00 FF 00 FF 
188e0     02 03 03 01 | 	byte	$00, $01, $01, $01, $ff, $fe, $fd, $ff, $00, $ff, $00, $ff, $02, $03, $03, $01
188e4     00 FF 00 00 
188e8     01 01 01 02 
188ec     02 01 FF FD 
188f0     FE FF 00 01 | 	byte	$00, $ff, $00, $00, $01, $01, $01, $02, $02, $01, $ff, $fd, $fe, $ff, $00, $01
188f4     00 00 00 FF 
188f8     FE FC FE 00 
188fc     01 01 00 00 
18900     01 02 02 01 | 	byte	$00, $00, $00, $ff, $fe, $fc, $fe, $00, $01, $01, $00, $00, $01, $02, $02, $01
18904     FF FF FF 00 
18908     01 01 01 01 
1890c     01 FF FD FC 
18910     FE 00 02 03 | 	byte	$ff, $ff, $ff, $00, $01, $01, $01, $01, $01, $ff, $fd, $fc, $fe, $00, $02, $03
18914     02 01 FF FE 
18918     FD FC FD 00 
1891c     01 02 01 01 
18920     01 01 01 00 | 	byte	$02, $01, $ff, $fe, $fd, $fc, $fd, $00, $01, $02, $01, $01, $01, $01, $01, $00
18924     FF FE FF 01 
18928     02 02 02 01 
1892c     00 FE FC FC 
18930     FE 01 04 04 | 	byte	$ff, $fe, $ff, $01, $02, $02, $02, $01, $00, $fe, $fc, $fc, $fe, $01, $04, $04
18934     02 00 FD FC 
18938     FC FC FE 00 
1893c     02 03 01 00 
18940     00 00 00 01 | 	byte	$02, $00, $fd, $fc, $fc, $fc, $fe, $00, $02, $03, $01, $00, $00, $00, $00, $01
18944     00 FF 00 00 
18948     01 01 01 01 
1894c     00 FD FC FC 
18950     FF 02 05 05 | 	byte	$00, $ff, $00, $00, $01, $01, $01, $01, $00, $fd, $fc, $fc, $ff, $02, $05, $05
18954     03 01 FE FC 
18958     FB FB FD 00 
1895c     02 03 02 01 
18960     00 00 00 00 | 	byte	$03, $01, $fe, $fc, $fb, $fb, $fd, $00, $02, $03, $02, $01, $00, $00, $00, $00
18964     FF FF 00 01 
18968     02 01 01 01 
1896c     FE FD FC FD 
18970     00 03 05 04 | 	byte	$ff, $ff, $00, $01, $02, $01, $01, $01, $fe, $fd, $fc, $fd, $00, $03, $05, $04
18974     03 01 FE FC 
18978     F9 FA FD 00 
1897c     03 04 03 01 
18980     FF FE FE FF | 	byte	$03, $01, $fe, $fc, $f9, $fa, $fd, $00, $03, $04, $03, $01, $ff, $fe, $fe, $ff
18984     FF 00 01 03 
18988     03 01 00 FF 
1898c     FD FC FC FE 
18990     02 04 05 04 | 	byte	$ff, $00, $01, $03, $03, $01, $00, $ff, $fd, $fc, $fc, $fe, $02, $04, $05, $04
18994     03 01 FF FB 
18998     F9 FA FE 01 
1899c     03 04 04 02 
189a0     FF FE FC FD | 	byte	$03, $01, $ff, $fb, $f9, $fa, $fe, $01, $03, $04, $04, $02, $ff, $fe, $fc, $fd
189a4     FF 01 03 04 
189a8     04 02 00 FE 
189ac     FC FB FC FF 
189b0     03 05 05 04 | 	byte	$ff, $01, $03, $04, $04, $02, $00, $fe, $fc, $fb, $fc, $ff, $03, $05, $05, $04
189b4     03 00 FE FB 
189b8     F9 FB FE 01 
189bc     03 03 03 01 
189c0     00 FE FD FC | 	byte	$03, $00, $fe, $fb, $f9, $fb, $fe, $01, $03, $03, $03, $01, $00, $fe, $fd, $fc
189c4     FE 02 04 05 
189c8     04 02 01 FE 
189cc     FB FA FB FF 
189d0     03 05 05 05 | 	byte	$fe, $02, $04, $05, $04, $02, $01, $fe, $fb, $fa, $fb, $ff, $03, $05, $05, $05
189d4     03 01 FE FB 
189d8     FA FB FD 00 
189dc     02 03 02 01 
189e0     01 FF FE FC | 	byte	$03, $01, $fe, $fb, $fa, $fb, $fd, $00, $02, $03, $02, $01, $01, $ff, $fe, $fc
189e4     FE 01 04 05 
189e8     04 02 01 FE 
189ec     FB FA FB 00 
189f0     03 05 05 04 | 	byte	$fe, $01, $04, $05, $04, $02, $01, $fe, $fb, $fa, $fb, $00, $03, $05, $05, $04
189f4     02 00 FE FC 
189f8     FC FD FF 00 
189fc     01 01 00 01 
18a00     01 00 FE FD | 	byte	$02, $00, $fe, $fc, $fc, $fd, $ff, $00, $01, $01, $00, $01, $01, $00, $fe, $fd
18a04     FE 00 03 04 
18a08     04 03 02 FE 
18a0c     FB FA FC 00 
18a10     03 05 04 03 | 	byte	$fe, $00, $03, $04, $04, $03, $02, $fe, $fb, $fa, $fc, $00, $03, $05, $04, $03
18a14     02 FF FE FC 
18a18     FD FE 00 00 
18a1c     00 00 00 01 
18a20     01 01 FF FE | 	byte	$02, $ff, $fe, $fc, $fd, $fe, $00, $00, $00, $00, $00, $01, $01, $01, $ff, $fe
18a24     FE 00 03 03 
18a28     04 03 01 FD 
18a2c     FA FA FD 01 
18a30     04 04 04 03 | 	byte	$fe, $00, $03, $03, $04, $03, $01, $fd, $fa, $fa, $fd, $01, $04, $04, $04, $03
18a34     01 FF FD FB 
18a38     FD 00 01 01 
18a3c     00 FF FF 00 
18a40     00 00 FF FF | 	byte	$01, $ff, $fd, $fb, $fd, $00, $01, $01, $00, $ff, $ff, $00, $00, $00, $ff, $ff
18a44     FF 01 03 04 
18a48     04 03 00 FC 
18a4c     FA FA FE 01 
18a50     04 05 04 03 | 	byte	$ff, $01, $03, $04, $04, $03, $00, $fc, $fa, $fa, $fe, $01, $04, $05, $04, $03
18a54     00 FE FC FC 
18a58     FE 00 02 01 
18a5c     00 FF FF 00 
18a60     00 00 FF FF | 	byte	$00, $fe, $fc, $fc, $fe, $00, $02, $01, $00, $ff, $ff, $00, $00, $00, $ff, $ff
18a64     00 01 03 03 
18a68     04 03 00 FC 
18a6c     FA FB FD 01 
18a70     03 04 04 03 | 	byte	$00, $01, $03, $03, $04, $03, $00, $fc, $fa, $fb, $fd, $01, $03, $04, $04, $03
18a74     01 FE FC FC 
18a78     FE 00 01 01 
18a7c     00 FF 00 00 
18a80     00 00 FE FF | 	byte	$01, $fe, $fc, $fc, $fe, $00, $01, $01, $00, $ff, $00, $00, $00, $00, $fe, $ff
18a84     00 02 03 05 
18a88     04 03 FF FC 
18a8c     FA FB FE 01 
18a90     04 04 04 02 | 	byte	$00, $02, $03, $05, $04, $03, $ff, $fc, $fa, $fb, $fe, $01, $04, $04, $04, $02
18a94     00 FE FC FC 
18a98     FE 00 01 01 
18a9c     00 FF FF 01 
18aa0     01 01 FF FF | 	byte	$00, $fe, $fc, $fc, $fe, $00, $01, $01, $00, $ff, $ff, $01, $01, $01, $ff, $ff
18aa4     FF 01 02 03 
18aa8     04 02 FF FC 
18aac     FB FC FF 01 
18ab0     03 03 04 02 | 	byte	$ff, $01, $02, $03, $04, $02, $ff, $fc, $fb, $fc, $ff, $01, $03, $03, $04, $02
18ab4     00 FD FC FD 
18ab8     FF 00 01 01 
18abc     00 FF 00 00 
18ac0     00 00 FF 00 | 	byte	$00, $fd, $fc, $fd, $ff, $00, $01, $01, $00, $ff, $00, $00, $00, $00, $ff, $00
18ac4     00 01 02 03 
18ac8     03 01 FE FC 
18acc     FC FD 00 01 
18ad0     03 03 03 01 | 	byte	$00, $01, $02, $03, $03, $01, $fe, $fc, $fc, $fd, $00, $01, $03, $03, $03, $01
18ad4     FF FD FC FD 
18ad8     FF 00 01 00 
18adc     00 00 01 01 
18ae0     00 FF FF 00 | 	byte	$ff, $fd, $fc, $fd, $ff, $00, $01, $00, $00, $00, $01, $01, $00, $ff, $ff, $00
18ae4     01 02 02 02 
18ae8     01 FF FC FB 
18aec     FC FF 01 03 
18af0     03 03 02 01 | 	byte	$01, $02, $02, $02, $01, $ff, $fc, $fb, $fc, $ff, $01, $03, $03, $03, $02, $01
18af4     FE FC FC FD 
18af8     FF 01 01 00 
18afc     00 00 00 00 
18b00     FF FF FF 00 | 	byte	$fe, $fc, $fc, $fd, $ff, $01, $01, $00, $00, $00, $00, $00, $ff, $ff, $ff, $00
18b04     01 02 02 02 
18b08     00 FE FC FC 
18b0c     FD 01 02 03 
18b10     03 02 01 00 | 	byte	$01, $02, $02, $02, $00, $fe, $fc, $fc, $fd, $01, $02, $03, $03, $02, $01, $00
18b14     FE FD FD FE 
18b18     FF 00 00 00 
18b1c     00 00 01 01 
18b20     00 FF 00 01 | 	byte	$fe, $fd, $fd, $fe, $ff, $00, $00, $00, $00, $00, $01, $01, $00, $ff, $00, $01
18b24     02 02 02 01 
18b28     00 FD FB FB 
18b2c     FD 01 03 04 
18b30     04 02 01 00 | 	byte	$02, $02, $02, $01, $00, $fd, $fb, $fb, $fd, $01, $03, $04, $04, $02, $01, $00
18b34     FE FD FD FD 
18b38     FF 00 00 00 
18b3c     00 00 01 01 
18b40     00 FF 00 01 | 	byte	$fe, $fd, $fd, $fd, $ff, $00, $00, $00, $00, $00, $01, $01, $00, $ff, $00, $01
18b44     03 03 02 00 
18b48     FF FC FA FB 
18b4c     FE 02 04 05 
18b50     04 01 00 FF | 	byte	$03, $03, $02, $00, $ff, $fc, $fa, $fb, $fe, $02, $04, $05, $04, $01, $00, $ff
18b54     FF FE FF FF 
18b58     00 00 FF FF 
18b5c     FE FE 00 01 
18b60     01 01 01 01 | 	byte	$ff, $fe, $ff, $ff, $00, $00, $ff, $ff, $fe, $fe, $00, $01, $01, $01, $01, $01
18b64     03 02 01 00 
18b68     FE FC FC FD 
18b6c     00 03 04 05 
18b70     03 00 FF FE | 	byte	$03, $02, $01, $00, $fe, $fc, $fc, $fd, $00, $03, $04, $05, $03, $00, $ff, $fe
18b74     FF 00 01 01 
18b78     01 00 FF FE 
18b7c     FE FE FF 01 
18b80     01 01 01 02 | 	byte	$ff, $00, $01, $01, $01, $00, $ff, $fe, $fe, $fe, $ff, $01, $01, $01, $01, $02
18b84     02 02 01 00 
18b88     FD FC FC FE 
18b8c     01 03 04 04 
18b90     02 00 FE FD | 	byte	$02, $02, $01, $00, $fd, $fc, $fc, $fe, $01, $03, $04, $04, $02, $00, $fe, $fd
18b94     FE FF 00 01 
18b98     01 00 FF FE 
18b9c     FD FE FF 01 
18ba0     01 02 02 02 | 	byte	$fe, $ff, $00, $01, $01, $00, $ff, $fe, $fd, $fe, $ff, $01, $01, $02, $02, $02
18ba4     02 01 01 FF 
18ba8     FD FC FD FF 
18bac     01 02 03 03 
18bb0     02 00 FF FE | 	byte	$02, $01, $01, $ff, $fd, $fc, $fd, $ff, $01, $02, $03, $03, $02, $00, $ff, $fe
18bb4     FE FE FF 01 
18bb8     02 00 FF FF 
18bbc     FF FF 00 00 
18bc0     00 01 01 01 | 	byte	$fe, $fe, $ff, $01, $02, $00, $ff, $ff, $ff, $ff, $00, $00, $00, $01, $01, $01
18bc4     02 02 02 01 
18bc8     FD FC FC FE 
18bcc     00 02 02 03 
18bd0     02 02 01 FF | 	byte	$02, $02, $02, $01, $fd, $fc, $fc, $fe, $00, $02, $02, $03, $02, $02, $01, $ff
18bd4     FE FD FE 00 
18bd8     01 01 01 FF 
18bdc     00 00 00 FF 
18be0     FF 00 00 01 | 	byte	$fe, $fd, $fe, $00, $01, $01, $01, $ff, $00, $00, $00, $ff, $ff, $00, $00, $01
18be4     01 01 01 01 
18be8     FE FD FD FF 
18bec     01 02 02 02 
18bf0     02 02 01 00 | 	byte	$01, $01, $01, $01, $fe, $fd, $fd, $ff, $01, $02, $02, $02, $02, $02, $01, $00
18bf4     FD FC FD 00 
18bf8     01 01 00 00 
18bfc     00 01 01 00 
18c00     00 00 00 01 | 	byte	$fd, $fc, $fd, $00, $01, $01, $00, $00, $00, $01, $01, $00, $00, $00, $00, $01
18c04     FF 00 01 00 
18c08     FF FE FE 00 
18c0c     01 02 02 01 
18c10     01 02 01 00 | 	byte	$ff, $00, $01, $00, $ff, $fe, $fe, $00, $01, $02, $02, $01, $01, $02, $01, $00
18c14     FD FC FD 00 
18c18     01 02 01 00 
18c1c     00 00 01 00 
18c20     00 01 01 00 | 	byte	$fd, $fc, $fd, $00, $01, $02, $01, $00, $00, $00, $01, $00, $00, $01, $01, $00
18c24     FF FF 00 00 
18c28     FF FF FF 01 
18c2c     01 01 01 00 
18c30     01 02 02 00 | 	byte	$ff, $ff, $00, $00, $ff, $ff, $ff, $01, $01, $01, $01, $00, $01, $02, $02, $00
18c34     FD FC FC FF 
18c38     00 01 01 00 
18c3c     00 01 01 00 
18c40     00 01 01 01 | 	byte	$fd, $fc, $fc, $ff, $00, $01, $01, $00, $00, $01, $01, $00, $00, $01, $01, $01
18c44     00 FF FF FE 
18c48     FE FF 00 01 
18c4c     02 01 01 00 
18c50     01 02 01 00 | 	byte	$00, $ff, $ff, $fe, $fe, $ff, $00, $01, $02, $01, $01, $00, $01, $02, $01, $00
18c54     FE FD FD FF 
18c58     00 01 00 00 
18c5c     00 01 01 01 
18c60     00 00 01 00 | 	byte	$fe, $fd, $fd, $ff, $00, $01, $00, $00, $00, $01, $01, $01, $00, $00, $01, $00
18c64     00 FF FF FD 
18c68     FE 00 01 02 
18c6c     02 00 01 00 
18c70     01 01 01 00 | 	byte	$00, $ff, $ff, $fd, $fe, $00, $01, $02, $02, $00, $01, $00, $01, $01, $01, $00
18c74     FE FD FD FE 
18c78     FF 00 00 01 
18c7c     01 01 00 00 
18c80     00 00 00 00 | 	byte	$fe, $fd, $fd, $fe, $ff, $00, $00, $01, $01, $01, $00, $00, $00, $00, $00, $00
18c84     00 00 FE FE 
18c88     FE FF 01 02 
18c8c     02 01 00 00 
18c90     00 01 00 00 | 	byte	$00, $00, $fe, $fe, $fe, $ff, $01, $02, $02, $01, $00, $00, $00, $01, $00, $00
18c94     FE FE FF FE 
18c98     FF FF 00 01 
18c9c     01 01 01 00 
18ca0     00 FF FF 00 | 	byte	$fe, $fe, $ff, $fe, $ff, $ff, $00, $01, $01, $01, $01, $00, $00, $ff, $ff, $00
18ca4     00 00 FF FE 
18ca8     FF 00 01 01 
18cac     01 00 00 00 
18cb0     01 01 00 00 | 	byte	$00, $00, $ff, $fe, $ff, $00, $01, $01, $01, $00, $00, $00, $01, $01, $00, $00
18cb4     FF FE FE FE 
18cb8     FF FF 00 01 
18cbc     02 02 01 01 
18cc0     00 FF FF 00 | 	byte	$ff, $fe, $fe, $fe, $ff, $ff, $00, $01, $02, $02, $01, $01, $00, $ff, $ff, $00
18cc4     00 00 FF FF 
18cc8     FF 00 01 01 
18ccc     01 00 FF 00 
18cd0     00 00 00 00 | 	byte	$00, $00, $ff, $ff, $ff, $00, $01, $01, $01, $00, $ff, $00, $00, $00, $00, $00
18cd4     FF FF FF FF 
18cd8     FF FF FF    | 	byte	$ff[7]
18cdb     00 01 02 01 
18cdf     01 00 00 FF 
18ce3     FF 00 FF FF 
18ce7     FF 00 00 00 | 	byte	$00, $01, $02, $01, $01, $00, $00, $ff, $ff, $00, $ff, $ff, $ff, $00, $00, $00
18ceb     01 01 01 00 
18cef     00 00 00 00 
18cf3     FF FF 00 FF 
18cf7     FF FF FF FF | 	byte	$01, $01, $01, $00, $00, $00, $00, $00, $ff, $ff, $00, $ff, $ff, $ff, $ff, $ff
18cfb     00 01 02 02 
18cff     01 00 00 FF 
18d03     FF FF FF 00 
18d07     00 00 00 00 | 	byte	$00, $01, $02, $02, $01, $00, $00, $ff, $ff, $ff, $ff, $00, $00, $00, $00, $00
18d0b     00 00 01 00 
18d0f     00 00 00 00 
18d13     FF FF FF FF 
18d17     FF 00 FF 00 | 	byte	$00, $00, $01, $00, $00, $00, $00, $00, $ff, $ff, $ff, $ff, $ff, $00, $ff, $00
18d1b     01 02 01 01 
18d1f     01 00 00 00 
18d23     00 00 00 00 
18d27     01 00 FF 00 | 	byte	$01, $02, $01, $01, $01, $00, $00, $00, $00, $00, $00, $00, $01, $00, $ff, $00
18d2b     00 00 00 FD 
18d2f     F8 FB FD FA 
18d33     F6 FB FB F8 
18d37     FD FA F8 FC | 	byte	$00, $00, $00, $fd, $f8, $fb, $fd, $fa, $f6, $fb, $fb, $f8, $fd, $fa, $f8, $fc
18d3b     FF FB FA 03 
18d3f     FC 02 FB FD 
18d43     FF 03 FF F9 
18d47     02 01 06 00 | 	byte	$ff, $fb, $fa, $03, $fc, $02, $fb, $fd, $ff, $03, $ff, $f9, $02, $01, $06, $00
18d4b     01 00 09 00 
18d4f     FA FE 04 FE 
18d53     FA FD FA 04 
18d57     03 FB 04 06 | 	byte	$01, $00, $09, $00, $fa, $fe, $04, $fe, $fa, $fd, $fa, $04, $03, $fb, $04, $06
18d5b     09 FC FE 03 
18d5f     03 03 F6 F8 
18d63     02 FD F6 F8 
18d67     FB FE FE F9 | 	byte	$09, $fc, $fe, $03, $03, $03, $f6, $f8, $02, $fd, $f6, $f8, $fb, $fe, $fe, $f9
18d6b     F9 03 FC F8 
18d6f     F7 F6 FB F8 
18d73     F1 ED FF F7 
18d77     FA F4 FB FD | 	byte	$f9, $03, $fc, $f8, $f7, $f6, $fb, $f8, $f1, $ed, $ff, $f7, $fa, $f4, $fb, $fd
18d7b     02 FA EF F0 
18d7f     FE EF E5 EF 
18d83     EA FB F3 F4 
18d87     F2 05 FA EC | 	byte	$02, $fa, $ef, $f0, $fe, $ef, $e5, $ef, $ea, $fb, $f3, $f4, $f2, $05, $fa, $ec
18d8b     FA F4 0D FE 
18d8f     FE FF FF 0A 
18d93     F6 EB EC FF 
18d97     E8 F5 00 05 | 	byte	$fa, $f4, $0d, $fe, $fe, $ff, $ff, $0a, $f6, $eb, $ec, $ff, $e8, $f5, $00, $05
18d9b     0C 0A FE 09 
18d9f     04 F2 FB FF 
18da3     F3 0C F9 FD 
18da7     05 12 03 04 | 	byte	$0c, $0a, $fe, $09, $04, $f2, $fb, $ff, $f3, $0c, $f9, $fd, $05, $12, $03, $04
18dab     06 04 0D 01 
18daf     03 FD 0F FE 
18db3     FF F9 0A F6 
18db7     FF F6 F8 10 | 	byte	$06, $04, $0d, $01, $03, $fd, $0f, $fe, $ff, $f9, $0a, $f6, $ff, $f6, $f8, $10
18dbb     06 F5 10 09 
18dbf     05 FC FD EB 
18dc3     05 02 E2 0A 
18dc7     F6 0D F9 09 | 	byte	$06, $f5, $10, $09, $05, $fc, $fd, $eb, $05, $02, $e2, $0a, $f6, $0d, $f9, $09
18dcb     FF 0E 08 07 
18dcf     FC 03 EA FA 
18dd3     F9 F7 F6 FF 
18dd7     F9 F4 06 F6 | 	byte	$ff, $0e, $08, $07, $fc, $03, $ea, $fa, $f9, $f7, $f6, $ff, $f9, $f4, $06, $f6
18ddb     05 0A 02 E8 
18ddf     03 FA F1 EF 
18de3     F8 F8 0A F8 
18de7     F1 04 0D 02 | 	byte	$05, $0a, $02, $e8, $03, $fa, $f1, $ef, $f8, $f8, $0a, $f8, $f1, $04, $0d, $02
18deb     FB 0F FB FF 
18def     F8 F3 F2 FB 
18df3     02 DD F5 FF 
18df7     F9 04 0C 01 | 	byte	$fb, $0f, $fb, $ff, $f8, $f3, $f2, $fb, $02, $dd, $f5, $ff, $f9, $04, $0c, $01
18dfb     FF 10 01 FE 
18dff     EC FB F0 FB 
18e03     F2 F1 FB F9 
18e07     FC FD 07 0E | 	byte	$ff, $10, $01, $fe, $ec, $fb, $f0, $fb, $f2, $f1, $fb, $f9, $fc, $fd, $07, $0e
18e0b     06 0C F4 F9 
18e0f     09 EF E9 EB 
18e13     FB EF F6 EC 
18e17     FB 12 0E FB | 	byte	$06, $0c, $f4, $f9, $09, $ef, $e9, $eb, $fb, $ef, $f6, $ec, $fb, $12, $0e, $fb
18e1b     FF 16 16 EF 
18e1f     ED FA FD EB 
18e23     E8 E9 09 0C 
18e27     E5 12 16 0D | 	byte	$ff, $16, $16, $ef, $ed, $fa, $fd, $eb, $e8, $e9, $09, $0c, $e5, $12, $16, $0d
18e2b     12 03 EE 13 
18e2f     04 DF F1 F6 
18e33     FA EE F6 F7 
18e37     FF 2C 12 06 | 	byte	$12, $03, $ee, $13, $04, $df, $f1, $f6, $fa, $ee, $f6, $f7, $ff, $2c, $12, $06
18e3b     1C 1A 0D FD 
18e3f     FC E6 0B 00 
18e43     D8 F0 0A F7 
18e47     13 09 07 2A | 	byte	$1c, $1a, $0d, $fd, $fc, $e6, $0b, $00, $d8, $f0, $0a, $f7, $13, $09, $07, $2a
18e4b     26 0A F5 0E 
18e4f     02 F2 EA D7 
18e53     E9 F5 00 E1 
18e57     13 2A 18 16 | 	byte	$26, $0a, $f5, $0e, $02, $f2, $ea, $d7, $e9, $f5, $00, $e1, $13, $2a, $18, $16
18e5b     16 00 1B 0C 
18e5f     CA E3 F8 E5 
18e63     DD E3 DB 10 
18e67     17 0A FF 31 | 	byte	$16, $00, $1b, $0c, $ca, $e3, $f8, $e5, $dd, $e3, $db, $10, $17, $0a, $ff, $31
18e6b     1D 12 EA F7 
18e6f     E6 F3 E2 C2 
18e73     DF EC F0 F6 
18e77     0F FA 33 32 | 	byte	$1d, $12, $ea, $f7, $e6, $f3, $e2, $c2, $df, $ec, $f0, $f6, $0f, $fa, $33, $32
18e7b     02 00 07 EE 
18e7f     EA D6 C2 D9 
18e83     E0 CC DD FB 
18e87     23 22 1F 26 | 	byte	$02, $00, $07, $ee, $ea, $d6, $c2, $d9, $e0, $cc, $dd, $fb, $23, $22, $1f, $26
18e8b     18 1D F6 E6 
18e8f     CF DF C0 CA 
18e93     C8 C5 EF 1E 
18e97     1D 06 3D 2C | 	byte	$18, $1d, $f6, $e6, $cf, $df, $c0, $ca, $c8, $c5, $ef, $1e, $1d, $06, $3d, $2c
18e9b     26 08 DA EE 
18e9f     E5 D9 AC C9 
18ea3     C9 DB E5 05 
18ea7     23 29 52 20 | 	byte	$26, $08, $da, $ee, $e5, $d9, $ac, $c9, $c9, $db, $e5, $05, $23, $29, $52, $20
18eab     24 20 F6 DE 
18eaf     D2 C4 BB D1 
18eb3     C4 CA 0B 0A 
18eb7     31 33 36 2C | 	byte	$24, $20, $f6, $de, $d2, $c4, $bb, $d1, $c4, $ca, $0b, $0a, $31, $33, $36, $2c
18ebb     31 10 E8 E5 
18ebf     D7 D0 C8 BD 
18ec3     CC DF 02 16 
18ec7     1B 3D 39 36 | 	byte	$31, $10, $e8, $e5, $d7, $d0, $c8, $bd, $cc, $df, $02, $16, $1b, $3d, $39, $36
18ecb     23 0A E2 FD 
18ecf     D0 C3 C5 CF 
18ed3     CB D9 03 FB 
18ed7     4B 28 35 29 | 	byte	$23, $0a, $e2, $fd, $d0, $c3, $c5, $cf, $cb, $d9, $03, $fb, $4b, $28, $35, $29
18edb     32 00 DB D6 
18edf     C9 C0 C4 BA 
18ee3     BD ED 13 FB 
18ee7     36 3E 25 40 | 	byte	$32, $00, $db, $d6, $c9, $c0, $c4, $ba, $bd, $ed, $13, $fb, $36, $3e, $25, $40
18eeb     12 F0 F2 EB 
18eef     B0 CB C0 BF 
18ef3     C9 EF ED 13 
18ef7     41 22 1E 1A | 	byte	$12, $f0, $f2, $eb, $b0, $cb, $c0, $bf, $c9, $ef, $ed, $13, $41, $22, $1e, $1a
18efb     2C F0 E9 D1 
18eff     B2 E2 C2 A0 
18f03     C7 F9 06 1A 
18f07     36 2B 5A 44 | 	byte	$2c, $f0, $e9, $d1, $b2, $e2, $c2, $a0, $c7, $f9, $06, $1a, $36, $2b, $5a, $44
18f0b     0C F8 E2 E0 
18f0f     B8 C2 B0 BE 
18f13     E6 F3 F3 23 
18f17     52 31 37 22 | 	byte	$0c, $f8, $e2, $e0, $b8, $c2, $b0, $be, $e6, $f3, $f3, $23, $52, $31, $37, $22
18f1b     0E 06 E4 C0 
18f1f     CB DC C8 C3 
18f23     D5 EF 25 3D 
18f27     32 35 59 34 | 	byte	$0e, $06, $e4, $c0, $cb, $dc, $c8, $c3, $d5, $ef, $25, $3d, $32, $35, $59, $34
18f2b     12 F2 E0 D1 
18f2f     D2 C0 A7 DA 
18f33     E4 EE 17 30 
18f37     49 4A 48 18 | 	byte	$12, $f2, $e0, $d1, $d2, $c0, $a7, $da, $e4, $ee, $17, $30, $49, $4a, $48, $18
18f3b     13 06 D4 D2 
18f3f     C0 CB A8 D3 
18f43     D4 FB 27 36 
18f47     3E 4F 4C 1E | 	byte	$13, $06, $d4, $d2, $c0, $cb, $a8, $d3, $d4, $fb, $27, $36, $3e, $4f, $4c, $1e
18f4b     15 FC D0 CB 
18f4f     D4 B2 B6 C5 
18f53     E7 07 2B 2E 
18f57     3F 5A 3C 1E | 	byte	$15, $fc, $d0, $cb, $d4, $b2, $b6, $c5, $e7, $07, $2b, $2e, $3f, $5a, $3c, $1e
18f5b     12 F6 DA D2 
18f5f     BC B0 C5 D4 
18f63     DF 07 35 3F 
18f67     50 54 31 2A | 	byte	$12, $f6, $da, $d2, $bc, $b0, $c5, $d4, $df, $07, $35, $3f, $50, $54, $31, $2a
18f6b     1C E0 D3 D8 
18f6f     C5 B0 B7 CD 
18f73     DF 1B 25 35 
18f77     5C 51 40 1D | 	byte	$1c, $e0, $d3, $d8, $c5, $b0, $b7, $cd, $df, $1b, $25, $35, $5c, $51, $40, $1d
18f7b     18 E2 DE CA 
18f7f     B0 C0 BB CE 
18f83     E7 23 1D 3D 
18f87     5D 4D 3C 1E | 	byte	$18, $e2, $de, $ca, $b0, $c0, $bb, $ce, $e7, $23, $1d, $3d, $5d, $4d, $3c, $1e
18f8b     0C DD E7 B8 
18f8f     BB C0 BF CA 
18f93     EF 26 2F 49 
18f97     4A 50 3C 1A | 	byte	$0c, $dd, $e7, $b8, $bb, $c0, $bf, $ca, $ef, $26, $2f, $49, $4a, $50, $3c, $1a
18f9b     FA E4 E6 C8 
18f9f     B7 BE B9 D7 
18fa3     F8 23 2F 57 
18fa7     55 4B 48 24 | 	byte	$fa, $e4, $e6, $c8, $b7, $be, $b9, $d7, $f8, $23, $2f, $57, $55, $4b, $48, $24
18fab     10 EA E8 BE 
18faf     C2 C0 C7 D3 
18fb3     FF 21 3A 54 
18fb7     57 55 39 34 | 	byte	$10, $ea, $e8, $be, $c2, $c0, $c7, $d3, $ff, $21, $3a, $54, $57, $55, $39, $34
18fbb     FE FC DA C8 
18fbf     C1 BA BB DB 
18fc3     FF 2B 3B 65 
18fc7     5F 57 50 16 | 	byte	$fe, $fc, $da, $c8, $c1, $ba, $bb, $db, $ff, $2b, $3b, $65, $5f, $57, $50, $16
18fcb     0D ED EA B8 
18fcf     C3 B6 BF D9 
18fd3     FF 22 46 60 
18fd7     50 54 44 19 | 	byte	$0d, $ed, $ea, $b8, $c3, $b6, $bf, $d9, $ff, $22, $46, $60, $50, $54, $44, $19
18fdb     08 EA D1 C5 
18fdf     AD AD AF E7 
18fe3     FA 26 3F 57 
18fe7     60 5B 36 1D | 	byte	$08, $ea, $d1, $c5, $ad, $ad, $af, $e7, $fa, $26, $3f, $57, $60, $5b, $36, $1d
18feb     08 F6 D4 B6 
18fef     AF 9D C7 D6 
18ff3     F7 27 46 60 
18ff7     59 58 3C 2A | 	byte	$08, $f6, $d4, $b6, $af, $9d, $c7, $d6, $f7, $27, $46, $60, $59, $58, $3c, $2a
18ffb     02 E2 D0 B8 
18fff     AB 9F BF DB 
19003     FF 2B 4D 5A 
19007     60 50 3C 15 | 	byte	$02, $e2, $d0, $b8, $ab, $9f, $bf, $db, $ff, $2b, $4d, $5a, $60, $50, $3c, $15
1900b     08 E5 D2 BC 
1900f     A8 A3 C3 E2 
19013     FB 2F 3F 67 
19017     60 4C 30 16 | 	byte	$08, $e5, $d2, $bc, $a8, $a3, $c3, $e2, $fb, $2f, $3f, $67, $60, $4c, $30, $16
1901b     04 E0 C4 B2 
1901f     A1 A9 BF D6 
19023     0B 32 46 57 
19027     5A 48 27 15 | 	byte	$04, $e0, $c4, $b2, $a1, $a9, $bf, $d6, $0b, $32, $46, $57, $5a, $48, $27, $15
1902b     F8 E0 D3 A6 
1902f     A7 AA C2 EB 
19033     0E 33 49 66 
19037     55 41 2C 0C | 	byte	$f8, $e0, $d3, $a6, $a7, $aa, $c2, $eb, $0e, $33, $49, $66, $55, $41, $2c, $0c
1903b     F8 DD C6 A7 
1903f     A2 B2 C3 E3 
19043     1B 35 4F 5D 
19047     53 3E 2E 08 | 	byte	$f8, $dd, $c6, $a7, $a2, $b2, $c3, $e3, $1b, $35, $4f, $5d, $53, $3e, $2e, $08
1904b     EE DC C4 A6 
1904f     A5 B2 CD F7 
19053     13 3A 49 5F 
19057     4C 36 1E 0A | 	byte	$ee, $dc, $c4, $a6, $a5, $b2, $cd, $f7, $13, $3a, $49, $5f, $4c, $36, $1e, $0a
1905b     E8 D4 B8 9E 
1905f     AA AE C6 F3 
19063     19 35 54 59 
19067     41 38 21 FA | 	byte	$e8, $d4, $b8, $9e, $aa, $ae, $c6, $f3, $19, $35, $54, $59, $41, $38, $21, $fa
1906b     EB CD B9 A6 
1906f     A3 B6 C5 F7 
19073     1F 38 4F 57 
19077     40 36 12 F6 | 	byte	$eb, $cd, $b9, $a6, $a3, $b6, $c5, $f7, $1f, $38, $4f, $57, $40, $36, $12, $f6
1907b     E4 D0 AE 9E 
1907f     A4 B3 D7 FF 
19083     1B 3F 59 50 
19087     40 28 1A F6 | 	byte	$e4, $d0, $ae, $9e, $a4, $b3, $d7, $ff, $1b, $3f, $59, $50, $40, $28, $1a, $f6
1908b     E4 C2 AE A2 
1908f     AB B4 DA 05 
19093     1F 3F 53 5A 
19097     3B 2C 10 00 | 	byte	$e4, $c2, $ae, $a2, $ab, $b4, $da, $05, $1f, $3f, $53, $5a, $3b, $2c, $10, $00
1909b     E4 C2 A9 AD 
1909f     A8 BF DF 0F 
190a3     27 45 56 4D 
190a7     46 20 09 FA | 	byte	$e4, $c2, $a9, $ad, $a8, $bf, $df, $0f, $27, $45, $56, $4d, $46, $20, $09, $fa
190ab     E0 BC AB A3 
190af     B3 C2 E5 0B 
190b3     37 4D 54 4F 
190b7     42 26 00 F4 | 	byte	$e0, $bc, $ab, $a3, $b3, $c2, $e5, $0b, $37, $4d, $54, $4f, $42, $26, $00, $f4
190bb     DA C0 AB A0 
190bf     AD CD EB 0F 
190c3     33 4F 55 52 
190c7     3A 1C 08 F0 | 	byte	$da, $c0, $ab, $a0, $ad, $cd, $eb, $0f, $33, $4f, $55, $52, $3a, $1c, $08, $f0
190cb     D8 BB A4 A1 
190cf     B9 CD EC 17 
190d3     3F 56 52 4A 
190d7     35 1C 08 EA | 	byte	$d8, $bb, $a4, $a1, $b9, $cd, $ec, $17, $3f, $56, $52, $4a, $35, $1c, $08, $ea
190db     D2 C0 AE A2 
190df     B7 D3 F4 1B 
190e3     3E 53 4E 55 
190e7     30 1B FC E6 | 	byte	$d2, $c0, $ae, $a2, $b7, $d3, $f4, $1b, $3e, $53, $4e, $55, $30, $1b, $fc, $e6
190eb     D0 B8 A4 9A 
190ef     C4 D9 F2 1F 
190f3     44 55 58 45 
190f7     26 1C FA E0 | 	byte	$d0, $b8, $a4, $9a, $c4, $d9, $f2, $1f, $44, $55, $58, $45, $26, $1c, $fa, $e0
190fb     CA B6 A4 A3 
190ff     BF D7 FF 27 
19103     3F 54 59 3C 
19107     2A 18 FC E0 | 	byte	$ca, $b6, $a4, $a3, $bf, $d7, $ff, $27, $3f, $54, $59, $3c, $2a, $18, $fc, $e0
1910b     CE B5 A0 B1 
1910f     BB DF 0B 2A 
19113     3E 5B 56 41 
19117     22 17 F0 E0 | 	byte	$ce, $b5, $a0, $b1, $bb, $df, $0b, $2a, $3e, $5b, $56, $41, $22, $17, $f0, $e0
1911b     C8 AE A8 AF 
1911f     C9 DF 12 37 
19123     46 59 52 3A 
19127     2C 0A F4 E0 | 	byte	$c8, $ae, $a8, $af, $c9, $df, $12, $37, $46, $59, $52, $3a, $2c, $0a, $f4, $e0
1912b     CE A8 AA B3 
1912f     CD E9 17 2F 
19133     4D 66 44 3A 
19137     22 10 EA D9 | 	byte	$ce, $a8, $aa, $b3, $cd, $e9, $17, $2f, $4d, $66, $44, $3a, $22, $10, $ea, $d9
1913b     C2 AC AB B9 
1913f     C7 F7 17 33 
19143     4F 5A 48 32 
19147     20 02 EA D8 | 	byte	$c2, $ac, $ab, $b9, $c7, $f7, $17, $33, $4f, $5a, $48, $32, $20, $02, $ea, $d8
1914b     BC A6 B2 B3 
1914f     CF F7 1E 37 
19153     51 54 44 38 
19157     16 FC EA D8 | 	byte	$bc, $a6, $b2, $b3, $cf, $f7, $1e, $37, $51, $54, $44, $38, $16, $fc, $ea, $d8
1915b     B0 AA AB BE 
1915f     D5 F9 1B 3F 
19163     55 4B 3F 38 
19167     14 F4 EA D0 | 	byte	$b0, $aa, $ab, $be, $d5, $f9, $1b, $3f, $55, $4b, $3f, $38, $14, $f4, $ea, $d0
1916b     B9 A8 AA B5 
1916f     E7 FF 1A 3F 
19173     55 4E 3E 2C 
19177     10 FC E8 C4 | 	byte	$b9, $a8, $aa, $b5, $e7, $ff, $1a, $3f, $55, $4e, $3e, $2c, $10, $fc, $e8, $c4
1917b     B8 B1 AB B9 
1917f     E3 06 1F 43 
19183     4E 4D 40 29 
19187     04 FF EC C0 | 	byte	$b8, $b1, $ab, $b9, $e3, $06, $1f, $43, $4e, $4d, $40, $29, $04, $ff, $ec, $c0
1918b     B5 B0 AB BF 
1918f     E3 FF 2B 45 
19193     49 4B 48 22 
19197     02 FC E4 C0 | 	byte	$b5, $b0, $ab, $bf, $e3, $ff, $2b, $45, $49, $4b, $48, $22, $02, $fc, $e4, $c0
1919b     B7 A3 AD CA 
1919f     E6 FF 2F 47 
191a3     4A 4A 3D 20 
191a7     09 F8 D6 CA | 	byte	$b7, $a3, $ad, $ca, $e6, $ff, $2f, $47, $4a, $4a, $3d, $20, $09, $f8, $d6, $ca
191ab     B5 A3 B2 D3 
191af     EA 07 33 43 
191b3     4D 51 31 16 
191b7     10 F5 D3 C2 | 	byte	$b5, $a3, $b2, $d3, $ea, $07, $33, $43, $4d, $51, $31, $16, $10, $f5, $d3, $c2
191bb     B4 A5 B3 CA 
191bf     EA 17 39 3A 
191c3     4D 4E 34 15 
191c7     08 EC D6 C5 | 	byte	$b4, $a5, $b3, $ca, $ea, $17, $39, $3a, $4d, $4e, $34, $15, $08, $ec, $d6, $c5
191cb     A2 A4 BF D1 
191cf     E3 17 37 44 
191d3     4E 48 26 1E 
191d7     04 E1 D2 C2 | 	byte	$a2, $a4, $bf, $d1, $e3, $17, $37, $44, $4e, $48, $26, $1e, $04, $e1, $d2, $c2
191db     A2 A5 BF CF 
191df     EE 1E 35 46 
191e3     55 3F 25 20 
191e7     FE E0 D7 B9 | 	byte	$a2, $a5, $bf, $cf, $ee, $1e, $35, $46, $55, $3f, $25, $20, $fe, $e0, $d7, $b9
191eb     AA A8 BC D7 
191ef     FA 25 2C 4A 
191f3     5A 3A 25 16 
191f7     FC E9 D0 B4 | 	byte	$aa, $a8, $bc, $d7, $fa, $25, $2c, $4a, $5a, $3a, $25, $16, $fc, $e9, $d0, $b4
191fb     A6 B5 BD D2 
191ff     07 23 34 52 
19203     4E 3C 2A 15 
19207     F6 E4 D6 B0 | 	byte	$a6, $b5, $bd, $d2, $07, $23, $34, $52, $4e, $3c, $2a, $15, $f6, $e4, $d6, $b0
1920b     A7 AF BD DF 
1920f     0B 1F 3F 52 
19213     4E 38 2A 15 
19217     F0 E8 C6 B2 | 	byte	$a7, $af, $bd, $df, $0b, $1f, $3f, $52, $4e, $38, $2a, $15, $f0, $e8, $c6, $b2
1921b     AD AE BF E7 
1921f     0B 21 3F 58 
19223     4C 34 24 09 
19227     F6 DE C2 AE | 	byte	$ad, $ae, $bf, $e7, $0b, $21, $3f, $58, $4c, $34, $24, $09, $f6, $de, $c2, $ae
1922b     B4 AE BE EE 
1922f     1A 28 3F 50 
19233     49 40 14 04 
19237     F0 E8 B8 AA | 	byte	$b4, $ae, $be, $ee, $1a, $28, $3f, $50, $49, $40, $14, $04, $f0, $e8, $b8, $aa
1923b     AA B7 C4 EF 
1923f     0F 35 46 4E 
19243     4A 35 1A FC 
19247     FA D2 C0 A8 | 	byte	$aa, $b7, $c4, $ef, $0f, $35, $46, $4e, $4a, $35, $1a, $fc, $fa, $d2, $c0, $a8
1924b     AD B1 D5 EB 
1924f     13 37 49 50 
19253     42 38 14 04 
19257     EB D4 BE AF | 	byte	$ad, $b1, $d5, $eb, $13, $37, $49, $50, $42, $38, $14, $04, $eb, $d4, $be, $af
1925b     A2 BD D3 FD 
1925f     15 3A 4A 51 
19263     4C 26 13 FF 
19267     F2 D0 BD A8 | 	byte	$a2, $bd, $d3, $fd, $15, $3a, $4a, $51, $4c, $26, $13, $ff, $f2, $d0, $bd, $a8
1926b     B2 BE D7 F5 
1926f     1D 43 45 52 
19273     45 30 12 FC 
19277     E9 CE C1 A5 | 	byte	$b2, $be, $d7, $f5, $1d, $43, $45, $52, $45, $30, $12, $fc, $e9, $ce, $c1, $a5
1927b     AA CD D3 FF 
1927f     23 41 4B 4B 
19283     46 22 10 F5 
19287     E2 D6 BA 9C | 	byte	$aa, $cd, $d3, $ff, $23, $41, $4b, $4b, $46, $22, $10, $f5, $e2, $d6, $ba, $9c
1928b     B6 C5 E2 FF 
1928f     2B 3F 53 50 
19293     36 22 12 F8 
19297     DC D0 B5 AC | 	byte	$b6, $c5, $e2, $ff, $2b, $3f, $53, $50, $36, $22, $12, $f8, $dc, $d0, $b5, $ac
1929b     B3 C7 DB 15 
1929f     2C 3D 4E 50 
192a3     34 20 0A EE 
192a7     E8 C8 B2 A2 | 	byte	$b3, $c7, $db, $15, $2c, $3d, $4e, $50, $34, $20, $0a, $ee, $e8, $c8, $b2, $a2
192ab     C1 C2 EB 13 
192af     2E 43 52 4A 
192b3     34 20 02 EA 
192b7     E3 C8 AA AB | 	byte	$c1, $c2, $eb, $13, $2e, $43, $52, $4a, $34, $20, $02, $ea, $e3, $c8, $aa, $ab
192bb     B9 D6 EF 17 
192bf     27 53 50 40 
192c3     2C 21 FC EA 
192c7     DE BC B8 A9 | 	byte	$b9, $d6, $ef, $17, $27, $53, $50, $40, $2c, $21, $fc, $ea, $de, $bc, $b8, $a9
192cb     B7 C9 FF 15 
192cf     29 4E 54 40 
192d3     2E 18 F9 F0 
192d7     DC BA AA B6 | 	byte	$b7, $c9, $ff, $15, $29, $4e, $54, $40, $2e, $18, $f9, $f0, $dc, $ba, $aa, $b6
192db     B6 CF FB 1E 
192df     36 4B 4A 3B 
192e3     38 08 F2 EE 
192e7     D8 B8 AD AF | 	byte	$b6, $cf, $fb, $1e, $36, $4b, $4a, $3b, $38, $08, $f2, $ee, $d8, $b8, $ad, $af
192eb     BB DE F9 1F 
192ef     3B 56 40 46 
192f3     2C 10 F4 ED 
192f7     D5 BA AD A6 | 	byte	$bb, $de, $f9, $1f, $3b, $56, $40, $46, $2c, $10, $f4, $ed, $d5, $ba, $ad, $a6
192fb     C5 E5 06 13 
192ff     47 52 4E 3B 
19303     28 0E 00 E8 
19307     C8 BE B5 A9 | 	byte	$c5, $e5, $06, $13, $47, $52, $4e, $3b, $28, $0e, $00, $e8, $c8, $be, $b5, $a9
1930b     BF E9 07 27 
1930f     43 51 4B 44 
19313     20 0C FC E6 
19317     C2 BE AC A7 | 	byte	$bf, $e9, $07, $27, $43, $51, $4b, $44, $20, $0c, $fc, $e6, $c2, $be, $ac, $a7
1931b     CF E7 05 2F 
1931f     48 4A 51 40 
19323     20 00 FC E0 
19327     CB B6 9E B6 | 	byte	$cf, $e7, $05, $2f, $48, $4a, $51, $40, $20, $00, $fc, $e0, $cb, $b6, $9e, $b6
1932b     D2 EB FF 33 
1932f     4C 4F 48 36 
19333     18 10 EC D1 
19337     C6 BA A6 A6 | 	byte	$d2, $eb, $ff, $33, $4c, $4f, $48, $36, $18, $10, $ec, $d1, $c6, $ba, $a6, $a6
1933b     D4 EA 13 2E 
1933f     43 4C 56 2A 
19343     12 0E F1 D5 
19347     C1 B8 9D BB | 	byte	$d4, $ea, $13, $2e, $43, $4c, $56, $2a, $12, $0e, $f1, $d5, $c1, $b8, $9d, $bb
1934b     CF ED 1A 35 
1934f     3E 59 50 2E 
19353     0A 0B EC D3 
19357     C4 A8 A7 BF | 	byte	$cf, $ed, $1a, $35, $3e, $59, $50, $2e, $0a, $0b, $ec, $d3, $c4, $a8, $a7, $bf
1935b     D0 F3 27 36 
1935f     47 4D 55 22 
19363     23 FC E8 DA 
19367     C4 A6 9F CA | 	byte	$d0, $f3, $27, $36, $47, $4d, $55, $22, $23, $fc, $e8, $da, $c4, $a6, $9f, $ca
1936b     CF FD 22 3B 
1936f     46 64 3C 29 
19373     19 04 E4 D6 
19377     BA A3 B2 BF | 	byte	$cf, $fd, $22, $3b, $46, $64, $3c, $29, $19, $04, $e4, $d6, $ba, $a3, $b2, $bf
1937b     D4 FD 2D 2F 
1937f     5A 50 48 25 
19383     20 F2 E4 D8 
19387     B8 A0 B2 BF | 	byte	$d4, $fd, $2d, $2f, $5a, $50, $48, $25, $20, $f2, $e4, $d8, $b8, $a0, $b2, $bf
1938b     D7 13 23 3A 
1938f     57 5E 36 2D 
19393     0C F4 E2 DA 
19397     A4 A3 BB BF | 	byte	$d7, $13, $23, $3a, $57, $5e, $36, $2d, $0c, $f4, $e2, $da, $a4, $a3, $bb, $bf
1939b     DF 07 2E 3B 
1939f     66 44 38 31 
193a3     14 E6 E3 D0 
193a7     AA AB B0 BC | 	byte	$df, $07, $2e, $3b, $66, $44, $38, $31, $14, $e6, $e3, $d0, $aa, $ab, $b0, $bc
193ab     EB 1F 1A 49 
193af     57 4E 3A 28 
193b3     04 E9 E8 C6 
193b7     A6 A9 B3 C3 | 	byte	$eb, $1f, $1a, $49, $57, $4e, $3a, $28, $04, $e9, $e8, $c6, $a6, $a9, $b3, $c3
193bb     F5 0A 27 4E 
193bf     62 40 3A 2A 
193c3     FE F1 DA BA 
193c7     AC B2 A6 CA | 	byte	$f5, $0a, $27, $4e, $62, $40, $3a, $2a, $fe, $f1, $da, $ba, $ac, $b2, $a6, $ca
193cb     FA 14 23 53 
193cf     56 3D 42 1C 
193d3     F5 F5 DA B8 
193d7     B1 AA AB CF | 	byte	$fa, $14, $23, $53, $56, $3d, $42, $1c, $f5, $f5, $da, $b8, $b1, $aa, $ab, $cf
193db     FF 0A 33 56 
193df     4A 44 3E 10 
193e3     FB FC CC B8 
193e7     AA B0 A7 DE | 	byte	$ff, $0a, $33, $56, $4a, $44, $3e, $10, $fb, $fc, $cc, $b8, $aa, $b0, $a7, $de
193eb     F7 14 3F 4E 
193ef     4D 47 38 0E 
193f3     FE F2 C9 B6 
193f7     B6 9A BB E3 | 	byte	$f7, $14, $3f, $4e, $4d, $47, $38, $0e, $fe, $f2, $c9, $b6, $b6, $9a, $bb, $e3
193fb     FB 1A 3F 4C 
193ff     4D 4D 2C 0A 
19403     03 EA C5 C0 
19407     AA A5 BD E6 | 	byte	$fb, $1a, $3f, $4c, $4d, $4d, $2c, $0a, $03, $ea, $c5, $c0, $aa, $a5, $bd, $e6
1940b     F7 1D 47 46 
1940f     54 46 28 0A 
19413     04 E6 C2 C0 
19417     AC A1 C7 E1 | 	byte	$f7, $1d, $47, $46, $54, $46, $28, $0a, $04, $e6, $c2, $c0, $ac, $a1, $c7, $e1
1941b     FD 2F 43 46 
1941f     56 4A 21 06 
19423     00 E0 C4 C0 
19427     9C AB CD E5 | 	byte	$fd, $2f, $43, $46, $56, $4a, $21, $06, $00, $e0, $c4, $c0, $9c, $ab, $cd, $e5
1942b     FF 2F 41 49 
1942f     55 40 19 0D 
19433     04 D6 D1 B6 
19437     9B AF CF DB | 	byte	$ff, $2f, $41, $49, $55, $40, $19, $0d, $04, $d6, $d1, $b6, $9b, $af, $cf, $db
1943b     0B 32 3F 4F 
1943f     52 3A 16 1B 
19443     EE D3 CB B4 
19447     97 AF CA E7 | 	byte	$0b, $32, $3f, $4f, $52, $3a, $16, $1b, $ee, $d3, $cb, $b4, $97, $af, $ca, $e7
1944b     13 33 33 5A 
1944f     5C 28 19 12 
19453     F0 D9 C4 A9 
19457     9D B9 C9 E3 | 	byte	$13, $33, $33, $5a, $5c, $28, $19, $12, $f0, $d9, $c4, $a9, $9d, $b9, $c9, $e3
1945b     1F 2B 3B 55 
1945f     52 24 1F 04 
19463     EC DC C8 9D 
19467     A5 BE BF F3 | 	byte	$1f, $2b, $3b, $55, $52, $24, $1f, $04, $ec, $dc, $c8, $9d, $a5, $be, $bf, $f3
1946b     1F 30 42 5B 
1946f     47 2C 22 FA 
19473     E6 E2 C0 97 
19477     AA BE C6 FA | 	byte	$1f, $30, $42, $5b, $47, $2c, $22, $fa, $e6, $e2, $c0, $97, $aa, $be, $c6, $fa
1947b     1F 2F 4F 58 
1947f     3C 32 24 FA 
19483     E5 E2 BA 9F 
19487     B2 B6 D5 FF | 	byte	$1f, $2f, $4f, $58, $3c, $32, $24, $fa, $e5, $e2, $ba, $9f, $b2, $b6, $d5, $ff
1948b     22 2D 57 58 
1948f     3C 34 1C F2 
19493     ED E0 AC A6 
19497     B0 B6 D7 0E | 	byte	$22, $2d, $57, $58, $3c, $34, $1c, $f2, $ed, $e0, $ac, $a6, $b0, $b6, $d7, $0e
1949b     1B 33 5B 4C 
1949f     3C 34 10 EB 
194a3     F2 D4 A8 AB 
194a7     B1 B9 DF 0A | 	byte	$1b, $33, $5b, $4c, $3c, $34, $10, $eb, $f2, $d4, $a8, $ab, $b1, $b9, $df, $0a
194ab     1E 3F 5D 42 
194af     3E 32 10 EB 
194b3     EE D0 B0 AA 
194b7     AA BD E7 0E | 	byte	$1e, $3f, $5d, $42, $3e, $32, $10, $eb, $ee, $d0, $b0, $aa, $aa, $bd, $e7, $0e
194bb     15 4F 52 46 
194bf     3A 30 01 F9 
194c3     EA C0 B0 AD 
194c7     A6 BF F3 07 | 	byte	$15, $4f, $52, $46, $3a, $30, $01, $f9, $ea, $c0, $b0, $ad, $a6, $bf, $f3, $07
194cb     23 4A 52 44 
194cf     41 20 02 F6 
194d3     E8 B6 B2 B0 
194d7     A2 C9 F7 05 | 	byte	$23, $4a, $52, $44, $41, $20, $02, $f6, $e8, $b6, $b2, $b0, $a2, $c9, $f7, $05
194db     2F 4E 4D 43 
194df     44 1C FA FC 
194e3     DB BA B2 A8 
194e7     A6 DB ED 0D | 	byte	$2f, $4e, $4d, $43, $44, $1c, $fa, $fc, $db, $ba, $b2, $a8, $a6, $db, $ed, $0d
194eb     2B 59 3E 4D 
194ef     3A 14 04 F3 
194f3     D0 BF B4 9B 
194f7     A5 DD F6 06 | 	byte	$2b, $59, $3e, $4d, $3a, $14, $04, $f3, $d0, $bf, $b4, $9b, $a5, $dd, $f6, $06
194fb     43 47 52 47 
194ff     34 0B 11 F0 
19503     CA BE B7 9C 
19507     AB E3 F5 19 | 	byte	$43, $47, $52, $47, $34, $0b, $11, $f0, $ca, $be, $b7, $9c, $ab, $e3, $f5, $19
1950b     3D 46 4B 5A 
1950f     24 0C 06 F4 
19513     C2 C0 AA 9F 
19517     BF DB F7 1F | 	byte	$3d, $46, $4b, $5a, $24, $0c, $06, $f4, $c2, $c0, $aa, $9f, $bf, $db, $f7, $1f
1951b     48 3F 4F 52 
1951f     28 12 04 E2 
19523     D6 C0 A0 9F 
19527     CC DD F5 2F | 	byte	$48, $3f, $4f, $52, $28, $12, $04, $e2, $d6, $c0, $a0, $9f, $cc, $dd, $f5, $2f
1952b     3F 44 5A 48 
1952f     20 14 00 D8 
19533     CF BC 9D A7 
19537     CA DD FF 33 | 	byte	$3f, $44, $5a, $48, $20, $14, $00, $d8, $cf, $bc, $9d, $a7, $ca, $dd, $ff, $33
1953b     37 4E 58 3C 
1953f     1A 13 FC D4 
19543     D2 B0 9D B7 
19547     BF DF 0F 2E | 	byte	$37, $4e, $58, $3c, $1a, $13, $fc, $d4, $d2, $b0, $9d, $b7, $bf, $df, $0f, $2e
1954b     36 4B 54 38 
1954f     1E 08 F0 DE 
19553     CC A0 9F BC 
19557     C5 DF 16 32 | 	byte	$36, $4b, $54, $38, $1e, $08, $f0, $de, $cc, $a0, $9f, $bc, $c5, $df, $16, $32
1955b     3D 52 4A 32 
1955f     28 08 DE E2 
19563     CC 9E A1 B9 
19567     C4 F3 17 25 | 	byte	$3d, $52, $4a, $32, $28, $08, $de, $e2, $cc, $9e, $a1, $b9, $c4, $f3, $17, $25
1956b     42 56 42 2A 
1956f     24 FA E9 DD 
19573     C4 A1 AB BA 
19577     C3 FB 19 24 | 	byte	$42, $56, $42, $2a, $24, $fa, $e9, $dd, $c4, $a1, $ab, $ba, $c3, $fb, $19, $24
1957b     49 55 3D 31 
1957f     1B FD E7 DD 
19583     B3 AE B2 B1 
19587     CE 00 1B 2E | 	byte	$49, $55, $3d, $31, $1b, $fd, $e7, $dd, $b3, $ae, $b2, $b1, $ce, $00, $1b, $2e
1958b     4A 4D 3D 3A 
1958f     0F EF F2 DB 
19593     B5 A6 B4 B0 
19597     E0 00 14 32 | 	byte	$4a, $4d, $3d, $3a, $0f, $ef, $f2, $db, $b5, $a6, $b4, $b0, $e0, $00, $14, $32
1959b     54 44 37 37 
1959f     11 F2 F3 D1 
195a3     B5 B4 A9 BB 
195a7     E0 07 15 3D | 	byte	$54, $44, $37, $37, $11, $f2, $f3, $d1, $b5, $b4, $a9, $bb, $e0, $07, $15, $3d
195ab     58 41 3D 37 
195af     07 FB EC C9 
195b3     B7 B3 A5 C0 
195b7     EC 0A 1A 3E | 	byte	$58, $41, $3d, $37, $07, $fb, $ec, $c9, $b7, $b3, $a5, $c0, $ec, $0a, $1a, $3e
195bb     4C 48 42 23 
195bf     00 FC E6 C3 
195c3     B4 B1 AD C0 
195c7     F0 03 22 48 | 	byte	$4c, $48, $42, $23, $00, $fc, $e6, $c3, $b4, $b1, $ad, $c0, $f0, $03, $22, $48
195cb     41 46 41 23 
195cf     FE F9 E1 BF 
195d3     BB A7 A7 D0 
195d7     EE 03 2A 3E | 	byte	$41, $46, $41, $23, $fe, $f9, $e1, $bf, $bb, $a7, $a7, $d0, $ee, $03, $2a, $3e
195db     48 48 3D 11 
195df     05 F9 D1 C2 
195e3     B8 A8 A8 D7 
195e7     F0 0A 2E 41 | 	byte	$48, $48, $3d, $11, $05, $f9, $d1, $c2, $b8, $a8, $a8, $d7, $f0, $0a, $2e, $41
195eb     40 56 29 15 
195ef     09 F2 CD BF 
195f3     BA A3 B8 CC 
195f7     F0 18 3B 2E | 	byte	$40, $56, $29, $15, $09, $f2, $cd, $bf, $ba, $a3, $b8, $cc, $f0, $18, $3b, $2e
195fb     4E 4C 37 0B 
195ff     04 ED D5 C2 
19603     B0 A6 C1 DA 
19607     F0 24 2E 40 | 	byte	$4e, $4c, $37, $0b, $04, $ed, $d5, $c2, $b0, $a6, $c1, $da, $f0, $24, $2e, $40
1960b     4D 50 1F 17 
1960f     01 E8 CF C2 
19613     A6 B1 C5 D4 
19617     FC 1E 3B 38 | 	byte	$4d, $50, $1f, $17, $01, $e8, $cf, $c2, $a6, $b1, $c5, $d4, $fc, $1e, $3b, $38
1961b     57 3E 2A 15 
1961f     FD D7 D8 BE 
19623     A5 B1 C1 D8 
19627     00 29 2D 45 | 	byte	$57, $3e, $2a, $15, $fd, $d7, $d8, $be, $a5, $b1, $c1, $d8, $00, $29, $2d, $45
1962b     54 3E 27 11 
1962f     F3 E7 D6 B7 
19633     A3 BD C1 DC 
19637     0A 26 35 4B | 	byte	$54, $3e, $27, $11, $f3, $e7, $d6, $b7, $a3, $bd, $c1, $dc, $0a, $26, $35, $4b
1963b     4F 33 2E 11 
1963f     ED E2 D4 AC 
19643     AC BC BD E0 
19647     15 28 35 4F | 	byte	$4f, $33, $2e, $11, $ed, $e2, $d4, $ac, $ac, $bc, $bd, $e0, $15, $28, $35, $4f
1964b     46 3E 26 0D 
1964f     E5 E9 C6 AD 
19653     AE B8 C7 F0 
19657     1A 1E 46 4F | 	byte	$46, $3e, $26, $0d, $e5, $e9, $c6, $ad, $ae, $b8, $c7, $f0, $1a, $1e, $46, $4f
1965b     45 33 2E FF 
1965f     F1 DF C2 AE 
19663     B3 B7 C1 FE 
19667     10 27 44 4D | 	byte	$45, $33, $2e, $ff, $f1, $df, $c2, $ae, $b3, $b7, $c1, $fe, $10, $27, $44, $4d
1966b     3F 43 1F F9 
1966f     E9 E5 BB B1 
19673     A8 B5 D4 FB 
19677     0B 2D 52 45 | 	byte	$3f, $43, $1f, $f9, $e9, $e5, $bb, $b1, $a8, $b5, $d4, $fb, $0b, $2d, $52, $45
1967b     42 39 1B F7 
1967f     F1 CE C1 AE 
19683     AB B1 D7 FD 
19687     11 38 4C 45 | 	byte	$42, $39, $1b, $f7, $f1, $ce, $c1, $ae, $ab, $b1, $d7, $fd, $11, $38, $4c, $45
1968b     44 39 15 00 
1968f     E9 CB BE B6 
19693     A6 B2 E0 00 
19697     19 3C 44 4A | 	byte	$44, $39, $15, $00, $e9, $cb, $be, $b6, $a6, $b2, $e0, $00, $19, $3c, $44, $4a
1969b     4F 33 09 FF 
1969f     EB CD B5 B2 
196a3     A2 C2 E7 FA 
196a7     1D 48 45 45 | 	byte	$4f, $33, $09, $ff, $eb, $cd, $b5, $b2, $a2, $c2, $e7, $fa, $1d, $48, $45, $45
196ab     4D 26 17 FD 
196af     E4 C1 C5 A8 
196b3     A7 C8 E8 00 
196b7     25 45 44 4F | 	byte	$4d, $26, $17, $fd, $e4, $c1, $c5, $a8, $a7, $c8, $e8, $00, $25, $45, $44, $4f
196bb     46 2A 13 F9 
196bf     D7 CD C3 A4 
196c3     A0 CE EC 0A 
196c7     23 3C 45 5A | 	byte	$46, $2a, $13, $f9, $d7, $cd, $c3, $a4, $a0, $ce, $ec, $0a, $23, $3c, $45, $5a
196cb     37 1C 16 F7 
196cf     D6 BF C0 A8 
196d3     B9 CA E9 14 
196d7     2F 3A 41 50 | 	byte	$37, $1c, $16, $f7, $d6, $bf, $c0, $a8, $b9, $ca, $e9, $14, $2f, $3a, $41, $50
196db     3A 1E 0D ED 
196df     D5 D3 AE A8 
196e3     B9 D2 E9 12 
196e7     2C 3B 4E 48 | 	byte	$3a, $1e, $0d, $ed, $d5, $d3, $ae, $a8, $b9, $d2, $e9, $12, $2c, $3b, $4e, $48
196eb     31 1E 11 E2 
196ef     D8 C9 AE AA 
196f3     BE CE F6 20 
196f7     27 3E 52 48 | 	byte	$31, $1e, $11, $e2, $d8, $c9, $ae, $aa, $be, $ce, $f6, $20, $27, $3e, $52, $48
196fb     26 27 01 E4 
196ff     D1 C6 AC B4 
19703     BC D0 FF 24 
19707     22 41 53 40 | 	byte	$26, $27, $01, $e4, $d1, $c6, $ac, $b4, $bc, $d0, $ff, $24, $22, $41, $53, $40
1970b     2B 1B 02 E2 
1970f     E2 B1 B4 B6 
19713     C5 CE 09 1F 
19717     28 46 49 3C | 	byte	$2b, $1b, $02, $e2, $e2, $b1, $b4, $b6, $c5, $ce, $09, $1f, $28, $46, $49, $3c
1971b     33 20 EC EA 
1971f     D4 B7 AF BF 
19723     B8 E5 09 1D 
19727     2F 52 44 3A | 	byte	$33, $20, $ec, $ea, $d4, $b7, $af, $bf, $b8, $e5, $09, $1d, $2f, $52, $44, $3a
1972b     34 0B F5 EA 
1972f     D3 AD BC B6 
19733     C3 E7 11 15 
19737     41 47 41 3E | 	byte	$34, $0b, $f5, $ea, $d3, $ad, $bc, $b6, $c3, $e7, $11, $15, $41, $47, $41, $3e
1973b     30 07 F0 EC 
1973f     C4 BB B6 B7 
19743     C2 F6 09 22 
19747     44 43 3E 3F | 	byte	$30, $07, $f0, $ec, $c4, $bb, $b6, $b7, $c2, $f6, $09, $22, $44, $43, $3e, $3f
1974b     29 00 F9 DF 
1974f     C6 B7 C1 A9 
19753     DA F4 09 22 
19757     4A 41 3E 3D | 	byte	$29, $00, $f9, $df, $c6, $b7, $c1, $a9, $da, $f4, $09, $22, $4a, $41, $3e, $3d
1975b     1C 07 F5 DF 
1975f     BB C7 AE B7 
19763     D6 FD 06 2F 
19767     43 37 48 3C | 	byte	$1c, $07, $f5, $df, $bb, $c7, $ae, $b7, $d6, $fd, $06, $2f, $43, $37, $48, $3c
1976b     16 01 F2 D0 
1976f     C7 BE B2 B4 
19773     E5 F5 0B 38 
19777     40 3A 41 38 | 	byte	$16, $01, $f2, $d0, $c7, $be, $b2, $b4, $e5, $f5, $0b, $38, $40, $3a, $41, $38
1977b     12 02 EC CD 
1977f     C9 BB A9 C3 
19783     E6 F5 0D 37 
19787     3B 3D 45 25 | 	byte	$12, $02, $ec, $cd, $c9, $bb, $a9, $c3, $e6, $f5, $0d, $37, $3b, $3d, $45, $25
1978b     10 07 E5 C7 
1978f     CE B8 AE C4 
19793     E2 00 17 39 
19797     2D 49 41 25 | 	byte	$10, $07, $e5, $c7, $ce, $b8, $ae, $c4, $e2, $00, $17, $39, $2d, $49, $41, $25
1979b     0D 09 DD D2 
1979f     C6 B0 B0 D1 
197a3     E3 F6 29 31 
197a7     35 4C 3B 21 | 	byte	$0d, $09, $dd, $d2, $c6, $b0, $b0, $d1, $e3, $f6, $29, $31, $35, $4c, $3b, $21
197ab     16 FB DE CF 
197af     CB A8 BD D6 
197b3     DD 0A 26 32 
197b7     39 4F 37 23 | 	byte	$16, $fb, $de, $cf, $cb, $a8, $bd, $d6, $dd, $0a, $26, $32, $39, $4f, $37, $23
197bb     16 F5 D6 DC 
197bf     C0 AD C3 D1 
197c3     E7 0C 25 2E 
197c7     49 48 2E 26 | 	byte	$16, $f5, $d6, $dc, $c0, $ad, $c3, $d1, $e7, $0c, $25, $2e, $49, $48, $2e, $26
197cb     13 F2 DC D4 
197cf     B7 B4 C7 CC 
197d3     ED 17 21 32 
197d7     48 47 2A 2C | 	byte	$13, $f2, $dc, $d4, $b7, $b4, $c7, $cc, $ed, $17, $21, $32, $48, $47, $2a, $2c
197db     07 E9 DF D2 
197df     B2 B6 CC C5 
197e3     F8 14 21 35 
197e7     4B 3B 31 1F | 	byte	$07, $e9, $df, $d2, $b2, $b6, $cc, $c5, $f8, $14, $21, $35, $4b, $3b, $31, $1f
197eb     07 E5 E7 BE 
197ef     B0 C0 C5 D2 
197f3     F8 14 1E 44 
197f7     43 37 2D 26 | 	byte	$07, $e5, $e7, $be, $b0, $c0, $c5, $d2, $f8, $14, $1e, $44, $43, $37, $2d, $26
197fb     F9 EA E0 BD 
197ff     BC C1 BD DB 
19803     09 15 20 44 
19807     46 31 36 14 | 	byte	$f9, $ea, $e0, $bd, $bc, $c1, $bd, $db, $09, $15, $20, $44, $46, $31, $36, $14
1980b     FD EC D8 B2 
1980f     C5 BC C0 DE 
19813     12 0D 27 48 
19817     39 3A 2D 0E | 	byte	$fd, $ec, $d8, $b2, $c5, $bc, $c0, $de, $12, $0d, $27, $48, $39, $3a, $2d, $0e
1981b     FB F9 CA BA 
1981f     C0 C8 BE EA 
19823     08 16 35 3D 
19827     36 3D 30 07 | 	byte	$fb, $f9, $ca, $ba, $c0, $c8, $be, $ea, $08, $16, $35, $3d, $36, $3d, $30, $07
1982b     F8 F0 C6 BF 
1982f     BF B9 CD F8 
19833     00 18 40 39 
19837     37 3D 26 01 | 	byte	$f8, $f0, $c6, $bf, $bf, $b9, $cd, $f8, $00, $18, $40, $39, $37, $3d, $26, $01
1983b     FD E8 C6 C2 
1983f     C1 B6 DA FA 
19843     00 1C 42 36 
19847     35 3C 18 05 | 	byte	$fd, $e8, $c6, $c2, $c1, $b6, $da, $fa, $00, $1c, $42, $36, $35, $3c, $18, $05
1984b     01 D9 C2 CB 
1984f     BA BA E1 F7 
19853     00 30 38 32 
19857     3F 3A 12 07 | 	byte	$01, $d9, $c2, $cb, $ba, $ba, $e1, $f7, $00, $30, $38, $32, $3f, $3a, $12, $07
1985b     F7 D9 C8 C3 
1985f     B5 C6 ED EE 
19863     09 30 3A 31 
19867     3D 2D 0F 0E | 	byte	$f7, $d9, $c8, $c3, $b5, $c6, $ed, $ee, $09, $30, $3a, $31, $3d, $2d, $0f, $0e
1986b     ED D1 CA C7 
1986f     AF CD EC F8 
19873     14 2F 32 38 
19877     41 21 16 07 | 	byte	$ed, $d1, $ca, $c7, $af, $cd, $ec, $f8, $14, $2f, $32, $38, $41, $21, $16, $07
1987b     ED CD D1 BB 
1987f     B7 D7 E9 F8 
19883     1B 2F 2F 41 
19887     3D 19 16 05 | 	byte	$ed, $cd, $d1, $bb, $b7, $d7, $e9, $f8, $1b, $2f, $2f, $41, $3d, $19, $16, $05
1988b     E0 D4 C8 B8 
1988f     BF DF DF FF 
19893     26 2D 2D 43 
19897     34 1F 13 FD | 	byte	$e0, $d4, $c8, $b8, $bf, $df, $df, $ff, $26, $2d, $2d, $43, $34, $1f, $13, $fd
1989b     DA DB C7 B3 
1989f     C4 E1 E4 0B 
198a3     21 2B 3D 40 
198a7     2C 18 19 EF | 	byte	$da, $db, $c7, $b3, $c4, $e1, $e4, $0b, $21, $2b, $3d, $40, $2c, $18, $19, $ef
198ab     DE D6 BD B5 
198af     CD D6 F0 0A 
198b3     29 26 44 3E 
198b7     1E 1E 11 F2 | 	byte	$de, $d6, $bd, $b5, $cd, $d6, $f0, $0a, $29, $26, $44, $3e, $1e, $1e, $11, $f2
198bb     DA D3 B6 C4 
198bf     CC DA F1 1F 
198c3     1D 2B 41 3E 
198c7     21 1F 03 EF | 	byte	$da, $d3, $b6, $c4, $cc, $da, $f1, $1f, $1d, $2b, $41, $3e, $21, $1f, $03, $ef
198cb     E2 CD B0 C5 
198cf     D9 D5 FB 12 
198d3     28 36 41 2E 
198d7     29 23 00 E5 | 	byte	$e2, $cd, $b0, $c5, $d9, $d5, $fb, $12, $28, $36, $41, $2e, $29, $23, $00, $e5
198db     E6 C4 BA C7 
198df     CE E0 05 12 
198e3     22 3F 3E 28 
198e7     28 1E F6 EB | 	byte	$e6, $c4, $ba, $c7, $ce, $e0, $05, $12, $22, $3f, $3e, $28, $28, $1e, $f6, $eb
198eb     DB BE BE C9 
198ef     C7 E9 0B 12 
198f3     20 46 38 2D 
198f7     27 0A FF F1 | 	byte	$db, $be, $be, $c9, $c7, $e9, $0b, $12, $20, $46, $38, $2d, $27, $0a, $ff, $f1
198fb     D6 B8 BE CF 
198ff     CB E9 0C 13 
19903     33 37 36 2C 
19907     2A 07 F6 F1 | 	byte	$d6, $b8, $be, $cf, $cb, $e9, $0c, $13, $33, $37, $36, $2c, $2a, $07, $f6, $f1
1990b     D3 B6 C3 C6 
1990f     D3 F5 02 14 
19913     35 3D 2C 31 
19917     2A 00 F9 E8 | 	byte	$d3, $b6, $c3, $c6, $d3, $f5, $02, $14, $35, $3d, $2c, $31, $2a, $00, $f9, $e8
1991b     CC C1 C3 C3 
1991f     D9 FB 08 12 
19923     3C 38 32 2F 
19927     19 01 00 DF | 	byte	$cc, $c1, $c3, $c3, $d9, $fb, $08, $12, $3c, $38, $32, $2f, $19, $01, $00, $df
1992b     C2 C7 C4 C6 
1992f     DB 04 04 20 
19933     3A 33 35 34 
19937     0F 01 FE E1 | 	byte	$c2, $c7, $c4, $c6, $db, $04, $04, $20, $3a, $33, $35, $34, $0f, $01, $fe, $e1
1993b     C3 C4 C7 C7 
1993f     EA F5 07 2B 
19943     37 2A 37 2A 
19947     0F 01 F8 D6 | 	byte	$c3, $c4, $c7, $c7, $ea, $f5, $07, $2b, $37, $2a, $37, $2a, $0f, $01, $f8, $d6
1994b     CE C5 B9 D4 
1994f     F0 F8 09 31 
19953     31 36 31 26 
19957     09 0D EF D4 | 	byte	$ce, $c5, $b9, $d4, $f0, $f8, $09, $31, $31, $36, $31, $26, $09, $0d, $ef, $d4
1995b     CD C2 BB D6 
1995f     F2 F5 14 29 
19963     2F 37 34 18 
19967     0B 0A EC D0 | 	byte	$cd, $c2, $bb, $d6, $f2, $f5, $14, $29, $2f, $37, $34, $18, $0b, $0a, $ec, $d0
1996b     CC BD C4 DE 
1996f     E7 FC 1B 2A 
19973     2D 36 34 19 
19977     0D 01 E5 DA | 	byte	$cc, $bd, $c4, $de, $e7, $fc, $1b, $2a, $2d, $36, $34, $19, $0d, $01, $e5, $da
1997b     CA B7 C8 E2 
1997f     EC FF 1A 2A 
19983     2E 3B 24 16 
19987     13 FA E1 D8 | 	byte	$ca, $b7, $c8, $e2, $ec, $ff, $1a, $2a, $2e, $3b, $24, $16, $13, $fa, $e1, $d8
1998b     C9 BD CF E2 
1998f     ED 09 20 26 
19993     36 39 1F 14 
19997     13 F7 E1 D7 | 	byte	$c9, $bd, $cf, $e2, $ed, $09, $20, $26, $36, $39, $1f, $14, $13, $f7, $e1, $d7
1999b     C0 C1 D4 E0 
1999f     EE 17 1D 20 
199a3     39 3A 1B 13 
199a7     0B F4 E9 CD | 	byte	$c0, $c1, $d4, $e0, $ee, $17, $1d, $20, $39, $3a, $1b, $13, $0b, $f4, $e9, $cd
199ab     BB C8 E0 DE 
199af     F2 13 26 25 
199b3     39 2C 20 1B 
199b7     FE F0 E5 D4 | 	byte	$bb, $c8, $e0, $de, $f2, $13, $26, $25, $39, $2c, $20, $1b, $fe, $f0, $e5, $d4
199bb     B7 C8 D9 E7 
199bf     FA 17 19 34 
199c3     38 29 22 14 
199c7     FA EE EC C6 | 	byte	$b7, $c8, $d9, $e7, $fa, $17, $19, $34, $38, $29, $22, $14, $fa, $ee, $ec, $c6
199cb     BB CB E0 E4 
199cf     06 0B 21 36 
199d3     35 24 1E 14 
199d7     FA F4 DE C3 | 	byte	$bb, $cb, $e0, $e4, $06, $0b, $21, $36, $35, $24, $1e, $14, $fa, $f4, $de, $c3
199db     C4 D9 CF EB 
199df     09 14 24 34 
199e3     30 2A 23 08 
199e7     F5 F8 E0 BD | 	byte	$c4, $d9, $cf, $eb, $09, $14, $24, $34, $30, $2a, $23, $08, $f5, $f8, $e0, $bd
199eb     C5 CD E1 F2 
199ef     09 0B 2D 36 
199f3     2A 23 1E 05 
199f7     F9 F3 D7 C2 | 	byte	$c5, $cd, $e1, $f2, $09, $0b, $2d, $36, $2a, $23, $1e, $05, $f9, $f3, $d7, $c2
199fb     C8 D0 DD FE 
199ff     02 10 30 36 
19a03     24 24 1D 03 
19a07     F8 EA D2 C6 | 	byte	$c8, $d0, $dd, $fe, $02, $10, $30, $36, $24, $24, $1d, $03, $f8, $ea, $d2, $c6
19a0b     CC C8 E3 FF 
19a0f     08 11 2E 30 
19a13     2D 25 11 FE 
19a17     FD EE C7 C6 | 	byte	$cc, $c8, $e3, $ff, $08, $11, $2e, $30, $2d, $25, $11, $fe, $fd, $ee, $c7, $c6
19a1b     CB D2 EA FE 
19a1f     02 1D 2F 2E 
19a23     27 27 0A FE 
19a27     FB E0 CC CA | 	byte	$cb, $d2, $ea, $fe, $02, $1d, $2f, $2e, $27, $27, $0a, $fe, $fb, $e0, $cc, $ca
19a2b     C6 D3 EF FD 
19a2f     0B 1D 37 27 
19a33     2A 20 0B 00 
19a37     FA DA D2 CA | 	byte	$c6, $d3, $ef, $fd, $0b, $1d, $37, $27, $2a, $20, $0b, $00, $fa, $da, $d2, $ca
19a3b     C1 D5 F6 05 
19a3f     04 26 2C 33 
19a43     2A 15 05 0B 
19a47     F5 D8 CE CA | 	byte	$c1, $d5, $f6, $05, $04, $26, $2c, $33, $2a, $15, $05, $0b, $f5, $d8, $ce, $ca
19a4b     CA DC F4 FE 
19a4f     16 2A 26 2C 
19a53     31 18 02 01 
19a57     F3 DA D0 BF | 	byte	$ca, $dc, $f4, $fe, $16, $2a, $26, $2c, $31, $18, $02, $01, $f3, $da, $d0, $bf
19a5b     CC EA F5 FC 
19a5f     1A 2D 28 2F 
19a63     2A 12 0B FF 
19a67     E7 E2 CC C1 | 	byte	$cc, $ea, $f5, $fc, $1a, $2d, $28, $2f, $2a, $12, $0b, $ff, $e7, $e2, $cc, $c1
19a6b     CA EC F9 00 
19a6f     19 29 2D 32 
19a73     1F 0F 0E FA 
19a77     E6 DC CE C6 | 	byte	$ca, $ec, $f9, $00, $19, $29, $2d, $32, $1f, $0f, $0e, $fa, $e6, $dc, $ce, $c6
19a7b     CD EB F4 0C 
19a7f     1C 1E 31 33 
19a83     1C 05 0D F9 
19a87     EA D4 C8 C5 | 	byte	$cd, $eb, $f4, $0c, $1c, $1e, $31, $33, $1c, $05, $0d, $f9, $ea, $d4, $c8, $c5
19a8b     DD E8 F1 14 
19a8f     1C 21 30 2E 
19a93     18 0D 03 F4 
19a97     E8 DC C0 C9 | 	byte	$dd, $e8, $f1, $14, $1c, $21, $30, $2e, $18, $0d, $03, $f4, $e8, $dc, $c0, $c9
19a9b     E2 E7 FB 0F 
19a9f     1B 25 32 22 
19aa3     14 10 06 EB 
19aa7     EA D9 C4 CF | 	byte	$e2, $e7, $fb, $0f, $1b, $25, $32, $22, $14, $10, $06, $eb, $ea, $d9, $c4, $cf
19aab     DB EB 04 12 
19aaf     18 2A 38 21 
19ab3     10 0E FE F5 
19ab7     E6 D0 C6 DB | 	byte	$db, $eb, $04, $12, $18, $2a, $38, $21, $10, $0e, $fe, $f5, $e6, $d0, $c6, $db
19abb     DE EB 09 17 
19abf     18 2B 35 1A 
19ac3     1B 06 FC F2 
19ac7     EE CA C9 D9 | 	byte	$de, $eb, $09, $17, $18, $2b, $35, $1a, $1b, $06, $fc, $f2, $ee, $ca, $c9, $d9
19acb     DE EF 0F 11 
19acf     1C 32 27 21 
19ad3     16 07 F6 F5 
19ad7     E6 C3 CF DA | 	byte	$de, $ef, $0f, $11, $1c, $32, $27, $21, $16, $07, $f6, $f5, $e6, $c3, $cf, $da
19adb     DB F9 0D 0F 
19adf     25 33 25 18 
19ae3     1A FC FA F3 
19ae7     DE C7 D3 D2 | 	byte	$db, $f9, $0d, $0f, $25, $33, $25, $18, $1a, $fc, $fa, $f3, $de, $c7, $d3, $d2
19aeb     E2 00 0A 12 
19aef     23 36 1C 24 
19af3     0D 00 F7 F5 
19af7     D6 CE D3 D3 | 	byte	$e2, $00, $0a, $12, $23, $36, $1c, $24, $0d, $00, $f7, $f5, $d6, $ce, $d3, $d3
19afb     E5 04 09 15 
19aff     33 29 23 1E 
19b03     0E F8 FF ED 
19b07     D4 CE D3 D3 | 	byte	$e5, $04, $09, $15, $33, $29, $23, $1e, $0e, $f8, $ff, $ed, $d4, $ce, $d3, $d3
19b0b     F1 0A 02 21 
19b0f     2D 2A 21 22 
19b13     01 FC FA EA 
19b17     CF D7 CB D8 | 	byte	$f1, $0a, $02, $21, $2d, $2a, $21, $22, $01, $fc, $fa, $ea, $cf, $d7, $cb, $d8
19b1b     F6 03 0A 1E 
19b1f     2F 25 25 1A 
19b23     01 FD FC DD 
19b27     DD D1 CE D9 | 	byte	$f6, $03, $0a, $1e, $2f, $25, $25, $1a, $01, $fd, $fc, $dd, $dd, $d1, $ce, $d9
19b2b     FC 03 0D 28 
19b2f     29 27 25 11 
19b33     FA 04 F3 D7 
19b37     DA D1 C8 E1 | 	byte	$fc, $03, $0d, $28, $29, $27, $25, $11, $fa, $04, $f3, $d7, $da, $d1, $c8, $e1
19b3b     FC 02 17 23 
19b3f     27 2B 2A 08 
19b43     FC 04 EF DC 
19b47     DA CD CC EF | 	byte	$fc, $02, $17, $23, $27, $2b, $2a, $08, $fc, $04, $ef, $dc, $da, $cd, $cc, $ef
19b4b     F6 05 1A 2A 
19b4f     22 2C 26 01 
19b53     08 FD E8 DB 
19b57     DA C6 D9 E9 | 	byte	$f6, $05, $1a, $2a, $22, $2c, $26, $01, $08, $fd, $e8, $db, $da, $c6, $d9, $e9
19b5b     F9 0B 24 1F 
19b5f     26 30 1D 03 
19b63     05 F7 E6 E4 
19b67     D3 C6 D9 F2 | 	byte	$f9, $0b, $24, $1f, $26, $30, $1d, $03, $05, $f7, $e6, $e4, $d3, $c6, $d9, $f2
19b6b     F7 12 1F 21 
19b6f     2E 30 11 04 
19b73     04 F2 E5 E2 
19b77     CF CB E4 EA | 	byte	$f7, $12, $1f, $21, $2e, $30, $11, $04, $04, $f2, $e5, $e2, $cf, $cb, $e4, $ea
19b7b     F9 18 20 1D 
19b7f     32 29 0D 0A 
19b83     00 EC E7 E4 
19b87     C5 D3 E1 EB | 	byte	$f9, $18, $20, $1d, $32, $29, $0d, $0a, $00, $ec, $e7, $e4, $c5, $d3, $e1, $eb
19b8b     00 1C 1A 21 
19b8f     36 20 0E 06 
19b93     F8 EB EE D4 
19b97     C6 D5 E6 E3 | 	byte	$00, $1c, $1a, $21, $36, $20, $0e, $06, $f8, $eb, $ee, $d4, $c6, $d5, $e6, $e3
19b9b     08 1C 17 2C 
19b9f     2E 19 11 08 
19ba3     F0 EA EC D4 
19ba7     C6 DD DD F1 | 	byte	$08, $1c, $17, $2c, $2e, $19, $11, $08, $f0, $ea, $ec, $d4, $c6, $dd, $dd, $f1
19bab     0B 18 13 37 
19baf     29 19 11 03 
19bb3     F1 EF ED C5 
19bb7     D1 DC DB F3 | 	byte	$0b, $18, $13, $37, $29, $19, $11, $03, $f1, $ef, $ed, $c5, $d1, $dc, $db, $f3
19bbb     17 0E 21 30 
19bbf     2B 14 16 FC 
19bc3     EF F9 DD C6 
19bc7     D5 DF D9 00 | 	byte	$17, $0e, $21, $30, $2b, $14, $16, $fc, $ef, $f9, $dd, $c6, $d5, $df, $d9, $00
19bcb     0F 19 21 32 
19bcf     1D 1F 16 EF 
19bd3     F1 FB DA CA 
19bd7     D2 D8 E5 03 | 	byte	$0f, $19, $21, $32, $1d, $1f, $16, $ef, $f1, $fb, $da, $ca, $d2, $d8, $e5, $03
19bdb     0C 15 34 2A 
19bdf     1A 1E 13 F1 
19be3     F3 EF D7 D2 
19be7     D3 D0 F0 05 | 	byte	$0c, $15, $34, $2a, $1a, $1e, $13, $f1, $f3, $ef, $d7, $d2, $d3, $d0, $f0, $05
19beb     06 18 31 2A 
19bef     1D 1D 03 F5 
19bf3     FC E4 D4 D7 
19bf7     D3 D0 F3 06 | 	byte	$06, $18, $31, $2a, $1d, $1d, $03, $f5, $fc, $e4, $d4, $d7, $d3, $d0, $f3, $06
19bfb     0A 21 2D 25 
19bff     24 1D FA F9 
19c03     FC E1 D4 D8 
19c07     CC DA F6 04 | 	byte	$0a, $21, $2d, $25, $24, $1d, $fa, $f9, $fc, $e1, $d4, $d8, $cc, $da, $f6, $04
19c0b     0B 29 2A 21 
19c0f     28 14 FC FA 
19c13     F4 DF DA D4 
19c17     C9 DF FE 00 | 	byte	$0b, $29, $2a, $21, $28, $14, $fc, $fa, $f4, $df, $da, $d4, $c9, $df, $fe, $00
19c1b     10 2C 25 29 
19c1f     24 0C FC FF 
19c23     EF D9 E0 D2 
19c27     C7 E7 FD 00 | 	byte	$10, $2c, $25, $29, $24, $0c, $fc, $ff, $ef, $d9, $e0, $d2, $c7, $e7, $fd, $00
19c2b     1B 24 24 2B 
19c2f     22 03 FE 00 
19c33     E9 DB E0 CC 
19c37     D1 EB F6 05 | 	byte	$1b, $24, $24, $2b, $22, $03, $fe, $00, $e9, $db, $e0, $cc, $d1, $eb, $f6, $05
19c3b     20 25 20 31 
19c3f     1C 06 FD FB 
19c43     E2 E8 D5 CA 
19c47     D9 EF F7 08 | 	byte	$20, $25, $20, $31, $1c, $06, $fd, $fb, $e2, $e8, $d5, $ca, $d9, $ef, $f7, $08
19c4b     20 23 2A 2D 
19c4f     14 03 07 EF 
19c53     E8 E2 D8 C7 
19c57     DD F0 F5 11 | 	byte	$20, $23, $2a, $2d, $14, $03, $07, $ef, $e8, $e2, $d8, $c7, $dd, $f0, $f5, $11
19c5b     1F 1F 30 28 
19c5f     0F 07 00 EC 
19c63     E4 E6 CF CD 
19c67     E3 E5 03 1B | 	byte	$1f, $1f, $30, $28, $0f, $07, $00, $ec, $e4, $e6, $cf, $cd, $e3, $e5, $03, $1b
19c6b     19 24 33 2B 
19c6f     0A 07 FC EE 
19c73     EC DC C7 DD 
19c77     E2 E9 00 1D | 	byte	$19, $24, $33, $2b, $0a, $07, $fc, $ee, $ec, $dc, $c7, $dd, $e2, $e9, $00, $1d
19c7b     1A 28 31 1E 
19c7f     0F 0C EE EC 
19c83     F4 D7 CC D6 
19c87     E9 EA 0E 14 | 	byte	$1a, $28, $31, $1e, $0f, $0c, $ee, $ec, $f4, $d7, $cc, $d6, $e9, $ea, $0e, $14
19c8b     21 2D 2F 16 
19c8f     14 06 F0 EA 
19c93     EC D5 CE DE 
19c97     DB F6 0D 12 | 	byte	$21, $2d, $2f, $16, $14, $06, $f0, $ea, $ec, $d5, $ce, $de, $db, $f6, $0d, $12
19c9b     1E 38 26 18 
19c9f     13 01 EE F1 
19ca3     E5 CF DA D9 
19ca7     DA FA 15 13 | 	byte	$1e, $38, $26, $18, $13, $01, $ee, $f1, $e5, $cf, $da, $d9, $da, $fa, $15, $13
19cab     20 31 26 1A 
19caf     10 F4 F3 F7 
19cb3     DF CC D7 DC 
19cb7     E1 FE 10 11 | 	byte	$20, $31, $26, $1a, $10, $f4, $f3, $f7, $df, $cc, $d7, $dc, $e1, $fe, $10, $11
19cbb     30 2D 1A 1E 
19cbf     12 F1 F2 F0 
19cc3     DC D2 D6 D5 
19cc7     EA 06 07 19 | 	byte	$30, $2d, $1a, $1e, $12, $f1, $f2, $f0, $dc, $d2, $d6, $d5, $ea, $06, $07, $19
19ccb     36 2C 19 20 
19ccf     09 F4 F3 EA 
19cd3     D7 DD D1 D1 
19cd7     F1 0A 09 1D | 	byte	$36, $2c, $19, $20, $09, $f4, $f3, $ea, $d7, $dd, $d1, $d1, $f1, $0a, $09, $1d
19cdb     32 2B 20 1B 
19cdf     FF F8 F8 E2 
19ce3     D5 DF D1 D8 
19ce7     F4 01 12 26 | 	byte	$32, $2b, $20, $1b, $ff, $f8, $f8, $e2, $d5, $df, $d1, $d8, $f4, $01, $12, $26
19ceb     2D 20 2C 18 
19cef     FA F6 F6 DE 
19cf3     DC D5 D0 DE 
19cf7     FA FD 11 2F | 	byte	$2d, $20, $2c, $18, $fa, $f6, $f6, $de, $dc, $d5, $d0, $de, $fa, $fd, $11, $2f
19cfb     2A 23 26 0F 
19cff     FC FA EA E0 
19d03     DE D6 C8 E8 
19d07     FA 01 17 2B | 	byte	$2a, $23, $26, $0f, $fc, $fa, $ea, $e0, $de, $d6, $c8, $e8, $fa, $01, $17, $2b
19d0b     25 2D 1F 03 
19d0f     00 FC E4 DB 
19d13     E4 D0 CF EB 
19d17     F7 09 21 22 | 	byte	$25, $2d, $1f, $03, $00, $fc, $e4, $db, $e4, $d0, $cf, $eb, $f7, $09, $21, $22
19d1b     27 33 1F 00 
19d1f     01 F5 E6 E0 
19d23     DB CA D9 EE 
19d27     EF 0D 26 21 | 	byte	$27, $33, $1f, $00, $01, $f5, $e6, $e0, $db, $ca, $d9, $ee, $ef, $0d, $26, $21
19d2b     2B 2E 13 06 
19d2f     FD EF DF EA 
19d33     D2 CD E0 EB 
19d37     F3 17 22 23 | 	byte	$2b, $2e, $13, $06, $fd, $ef, $df, $ea, $d2, $cd, $e0, $eb, $f3, $17, $22, $23
19d3b     2E 27 11 07 
19d3f     00 E3 E8 E9 
19d43     D1 D0 E4 E8 
19d47     FA 16 1D 25 | 	byte	$2e, $27, $11, $07, $00, $e3, $e8, $e9, $d1, $d0, $e4, $e8, $fa, $16, $1d, $25
19d4b     33 22 08 0B 
19d4f     F5 E6 ED DD 
19d53     CC D6 E4 E6 
19d57     00 1C 1B 2A | 	byte	$33, $22, $08, $0b, $f5, $e6, $ed, $dd, $cc, $d6, $e4, $e6, $00, $1c, $1b, $2a
19d5b     31 19 0F 08 
19d5f     EF E3 F5 D7 
19d63     CC E0 E2 E9 
19d67     0B 17 1C 2E | 	byte	$31, $19, $0f, $08, $ef, $e3, $f5, $d7, $cc, $e0, $e2, $e9, $0b, $17, $1c, $2e
19d6b     28 15 0E 08 
19d6f     E3 EE ED D7 
19d73     D0 E2 DE F1 
19d77     0D 11 22 30 | 	byte	$28, $15, $0e, $08, $e3, $ee, $ed, $d7, $d0, $e2, $de, $f1, $0d, $11, $22, $30
19d7b     26 0C 17 FB 
19d7f     EA ED EA D3 
19d83     D9 DB DC FC 
19d87     12 11 22 36 | 	byte	$26, $0c, $17, $fb, $ea, $ed, $ea, $d3, $d9, $db, $dc, $fc, $12, $11, $22, $36
19d8b     1A 16 0E F5 
19d8f     EA F3 DD D8 
19d93     DD E0 DE 07 
19d97     0D 12 2E 2A | 	byte	$1a, $16, $0e, $f5, $ea, $f3, $dd, $d8, $dd, $e0, $de, $07, $0d, $12, $2e, $2a
19d9b     19 14 08 EF 
19d9f     F3 ED DD D9 
19da3     E3 D6 E8 08 
19da7     0B 1A 2C 26 | 	byte	$19, $14, $08, $ef, $f3, $ed, $dd, $d9, $e3, $d6, $e8, $08, $0b, $1a, $2c, $26
19dab     16 1A 02 EA 
19daf     F4 EA DA E2 
19db3     D9 D9 F3 0B 
19db7     09 1E 30 20 | 	byte	$16, $1a, $02, $ea, $f4, $ea, $da, $e2, $d9, $d9, $f3, $0b, $09, $1e, $30, $20
19dbb     19 13 FC F0 
19dbf     F4 E2 E1 E2 
19dc3     DC E0 F7 05 
19dc7     0A 28 2D 1B | 	byte	$19, $13, $fc, $f0, $f4, $e2, $e1, $e2, $dc, $e0, $f7, $05, $0a, $28, $2d, $1b
19dcb     1C 11 F3 F6 
19dcf     EE E1 E3 E5 
19dd3     D6 E0 FE 05 
19dd7     15 28 20 21 | 	byte	$1c, $11, $f3, $f6, $ee, $e1, $e3, $e5, $d6, $e0, $fe, $05, $15, $28, $20, $21
19ddb     1F 02 F6 F0 
19ddf     F2 DC E7 DE 
19de3     DB E8 FB 03 
19de7     1C 2D 1E 21 | 	byte	$1f, $02, $f6, $f0, $f2, $dc, $e7, $de, $db, $e8, $fb, $03, $1c, $2d, $1e, $21
19deb     1A 02 F2 F8 
19def     E6 E2 E6 DE 
19df3     D9 F3 F7 0A 
19df7     22 25 1D 22 | 	byte	$1a, $02, $f2, $f8, $e6, $e2, $e6, $de, $d9, $f3, $f7, $0a, $22, $25, $1d, $22
19dfb     17 FE F9 F0 
19dff     E6 E3 E9 D7 
19e03     E1 F3 FA 0D 
19e07     26 1F 21 27 | 	byte	$17, $fe, $f9, $f0, $e6, $e3, $e9, $d7, $e1, $f3, $fa, $0d, $26, $1f, $21, $27
19e0b     0D FB FC EF 
19e0f     E1 E8 E7 DA 
19e13     E5 F1 FE 18 
19e17     24 1C 26 22 | 	byte	$0d, $fb, $fc, $ef, $e1, $e8, $e7, $da, $e5, $f1, $fe, $18, $24, $1c, $26, $22
19e1b     05 FD F8 E9 
19e1f     E5 EC DE DF 
19e23     E9 F1 FE 20 
19e27     21 1E 23 1F | 	byte	$05, $fd, $f8, $e9, $e5, $ec, $de, $df, $e9, $f1, $fe, $20, $21, $1e, $23, $1f
19e2b     04 FF F6 E4 
19e2f     EC EA DB DD 
19e33     EF EB 06 1B 
19e37     25 20 26 14 | 	byte	$04, $ff, $f6, $e4, $ec, $ea, $db, $dd, $ef, $eb, $06, $1b, $25, $20, $26, $14
19e3b     03 00 F1 E3 
19e3f     EC EA DA E6 
19e43     E8 F1 0D 21 
19e47     1C 21 26 12 | 	byte	$03, $00, $f1, $e3, $ec, $ea, $da, $e6, $e8, $f1, $0d, $21, $1c, $21, $26, $12
19e4b     02 FE EA E9 
19e4f     ED E4 DC E7 
19e53     EC F1 13 1E 
19e57     1D 24 20 0B | 	byte	$02, $fe, $ea, $e9, $ed, $e4, $dc, $e7, $ec, $f1, $13, $1e, $1d, $24, $20, $0b
19e5b     07 F9 EA EB 
19e5f     EE E1 DD EE 
19e63     E5 FA 16 1D 
19e67     22 25 1C 0A | 	byte	$07, $f9, $ea, $eb, $ee, $e1, $dd, $ee, $e5, $fa, $16, $1d, $22, $25, $1c, $0a
19e6b     07 F7 E3 ED 
19e6f     F0 DC E5 E8 
19e73     E9 FD 1A 1A 
19e77     21 26 17 09 | 	byte	$07, $f7, $e3, $ed, $f0, $dc, $e5, $e8, $e9, $fd, $1a, $1a, $21, $26, $17, $09
19e7b     07 F2 E3 F3 
19e7f     E6 E2 E3 E8 
19e83     E6 04 17 1B 
19e87     23 24 0F 0D | 	byte	$07, $f2, $e3, $f3, $e6, $e2, $e3, $e8, $e6, $04, $17, $1b, $23, $24, $0f, $0d
19e8b     02 EB E9 F1 
19e8f     E7 E1 EA E4 
19e93     EF 0A 17 17 
19e97     2C 1C 11 0C | 	byte	$02, $eb, $e9, $f1, $e7, $e1, $ea, $e4, $ef, $0a, $17, $17, $2c, $1c, $11, $0c
19e9b     02 E7 EC F5 
19e9f     E0 E7 E3 E6 
19ea3     F2 12 0F 1D 
19ea7     2C 1A 09 0E | 	byte	$02, $e7, $ec, $f5, $e0, $e7, $e3, $e6, $f2, $12, $0f, $1d, $2c, $1a, $09, $0e
19eab     FC E8 F2 E9 
19eaf     E7 E9 EA E1 
19eb3     FA 10 14 1F 
19eb7     2C 0F 12 0B | 	byte	$fc, $e8, $f2, $e9, $e7, $e9, $ea, $e1, $fa, $10, $14, $1f, $2c, $0f, $12, $0b
19ebb     F5 EC F2 EB 
19ebf     E4 ED DF E7 
19ec3     00 0F 11 29 
19ec7     1F 12 14 04 | 	byte	$f5, $ec, $f2, $eb, $e4, $ed, $df, $e7, $00, $0f, $11, $29, $1f, $12, $14, $04
19ecb     ED EF F0 E6 
19ecf     E9 EA E0 E9 
19ed3     09 04 19 27 
19ed7     1D 0D 14 FC | 	byte	$ed, $ef, $f0, $e6, $e9, $ea, $e0, $e9, $09, $04, $19, $27, $1d, $0d, $14, $fc
19edb     F1 F0 EA E4 
19edf     F4 EA DB F7 
19ee3     02 0F 18 28 
19ee7     14 17 0D F5 | 	byte	$f1, $f0, $ea, $e4, $f4, $ea, $db, $f7, $02, $0f, $18, $28, $14, $17, $0d, $f5
19eeb     F3 F6 E5 E7 
19eef     F5 E3 DE F9 
19ef3     04 0F 20 1F 
19ef7     14 1B 0B F1 | 	byte	$f3, $f6, $e5, $e7, $f5, $e3, $de, $f9, $04, $0f, $20, $1f, $14, $1b, $0b, $f1
19efb     F4 F4 E3 EA 
19eff     F3 DF E8 FC 
19f03     FD 15 28 18 
19f07     17 14 08 F1 | 	byte	$f4, $f4, $e3, $ea, $f3, $df, $e8, $fc, $fd, $15, $28, $18, $17, $14, $08, $f1
19f0b     F8 EC E4 F4 
19f0f     EB DF F1 FC 
19f13     00 1A 21 18 
19f17     15 16 FC F7 | 	byte	$f8, $ec, $e4, $f4, $eb, $df, $f1, $fc, $00, $1a, $21, $18, $15, $16, $fc, $f7
19f1b     F5 E4 E6 FA 
19f1f     E4 E2 F2 FB 
19f23     04 21 1C 15 
19f27     1E 0C F8 F8 | 	byte	$f5, $e4, $e6, $fa, $e4, $e2, $f2, $fb, $04, $21, $1c, $15, $1e, $0c, $f8, $f8
19f2b     F4 E2 EF F0 
19f2f     E4 EB F3 F4 
19f33     0F 23 16 19 
19f37     1C 08 F8 F9 | 	byte	$f4, $e2, $ef, $f0, $e4, $eb, $f3, $f4, $0f, $23, $16, $19, $1c, $08, $f8, $f9
19f3b     EB E6 F4 EB 
19f3f     E2 F1 F2 F5 
19f43     17 1E 17 1D 
19f47     19 00 FD FA | 	byte	$eb, $e6, $f4, $eb, $e2, $f1, $f2, $f5, $17, $1e, $17, $1d, $19, $00, $fd, $fa
19f4b     E2 ED F6 E5 
19f4f     E9 EF F0 FE 
19f53     17 1B 17 22 
19f57     0E 00 FF F4 | 	byte	$e2, $ed, $f6, $e5, $e9, $ef, $f0, $fe, $17, $1b, $17, $22, $0e, $00, $ff, $f4
19f5b     DE F5 EF E7 
19f5f     EA F2 EE 04 
19f63     1B 16 1A 1F 
19f67     0C 01 02 E4 | 	byte	$de, $f5, $ef, $e7, $ea, $f2, $ee, $04, $1b, $16, $1a, $1f, $0c, $01, $02, $e4
19f6b     EC F3 EE E3 
19f6f     F4 EC F1 08 
19f73     17 17 1F 1B 
19f77     02 0B F8 E8 | 	byte	$ec, $f3, $ee, $e3, $f4, $ec, $f1, $08, $17, $17, $1f, $1b, $02, $0b, $f8, $e8
19f7b     EA F8 E7 EA 
19f7f     EF EC F5 10 
19f83     11 18 24 11 
19f87     06 06 F7 E5 | 	byte	$ea, $f8, $e7, $ea, $ef, $ec, $f5, $10, $11, $18, $24, $11, $06, $06, $f7, $e5
19f8b     F0 F2 EA EF 
19f8f     EE E6 00 0D 
19f93     10 19 23 10 
19f97     06 02 F0 EB | 	byte	$f0, $f2, $ea, $ef, $ee, $e6, $00, $0d, $10, $19, $23, $10, $06, $02, $f0, $eb
19f9b     F4 EB EA F4 
19f9f     E8 EA 02 0E 
19fa3     11 1E 1C 0C 
19fa7     0C FE EE EE | 	byte	$f4, $eb, $ea, $f4, $e8, $ea, $02, $0e, $11, $1e, $1c, $0c, $0c, $fe, $ee, $ee
19fab     F2 E6 F2 F0 
19faf     E8 EF 04 0A 
19fb3     17 21 11 0E 
19fb7     09 FB EA F2 | 	byte	$f2, $e6, $f2, $f0, $e8, $ef, $04, $0a, $17, $21, $11, $0e, $09, $fb, $ea, $f2
19fbb     EE EC F4 EC 
19fbf     EB F6 07 0A 
19fc3     1A 1D 13 0F 
19fc7     06 F4 EF F2 | 	byte	$ee, $ec, $f4, $ec, $eb, $f6, $07, $0a, $1a, $1d, $13, $0f, $06, $f4, $ef, $f2
19fcb     EF ED F6 EA 
19fcf     EF FC 03 0F 
19fd3     1C 1A 0F 11 
19fd7     01 F2 F3 EF | 	byte	$ef, $ed, $f6, $ea, $ef, $fc, $03, $0f, $1c, $1a, $0f, $11, $01, $f2, $f3, $ef
19fdb     ED F5 EF EB 
19fdf     F1 FD 03 13 
19fe3     1E 13 11 10 
19fe7     00 F1 F2 EE | 	byte	$ed, $f5, $ef, $eb, $f1, $fd, $03, $13, $1e, $13, $11, $10, $00, $f1, $f2, $ee
19feb     F0 F3 F1 EB 
19fef     F7 00 00 18 
19ff3     17 18 0E 0D 
19ff7     F8 F7 EF EB | 	byte	$f0, $f3, $f1, $eb, $f7, $00, $00, $18, $17, $18, $0e, $0d, $f8, $f7, $ef, $eb
19ffb     F1 F8 EF EC 
19fff     F8 FB 0C 13 
1a003     19 13 15 05 
1a007     FA F3 F2 E9 | 	byte	$f1, $f8, $ef, $ec, $f8, $fb, $0c, $13, $19, $13, $15, $05, $fa, $f3, $f2, $e9
1a00b     F5 F5 EB F3 
1a00f     F5 00 09 18 
1a013     12 15 16 02 
1a017     F2 F7 ED F2 | 	byte	$f5, $f5, $eb, $f3, $f5, $00, $09, $18, $12, $15, $16, $02, $f2, $f7, $ed, $f2
1a01b     F5 F1 F1 F7 
1a01f     F7 FB 0F 18 
1a023     13 14 0E FF 
1a027     FF EF EB F3 | 	byte	$f5, $f1, $f1, $f7, $f7, $fb, $0f, $18, $13, $14, $0e, $ff, $ff, $ef, $eb, $f3
1a02b     F7 F1 EC F7 
1a02f     F8 01 11 11 
1a033     16 15 07 FE 
1a037     FC EE EC F1 | 	byte	$f7, $f1, $ec, $f7, $f8, $01, $11, $11, $16, $15, $07, $fe, $fc, $ee, $ec, $f1
1a03b     FA EE F3 F4 
1a03f     FA 05 10 10 
1a043     16 17 06 FB 
1a047     F6 F2 EB F3 | 	byte	$fa, $ee, $f3, $f4, $fa, $05, $10, $10, $16, $17, $06, $fb, $f6, $f2, $eb, $f3
1a04b     F2 F4 F5 F4 
1a04f     F7 07 15 12 
1a053     11 15 06 00 
1a057     F2 EC F4 F7 | 	byte	$f2, $f4, $f5, $f4, $f7, $07, $15, $12, $11, $15, $06, $00, $f2, $ec, $f4, $f7
1a05b     F0 F0 F8 F7 
1a05f     FB 09 11 15 
1a063     17 0E 02 00 
1a067     F4 EB EE F9 | 	byte	$f0, $f0, $f8, $f7, $fb, $09, $11, $15, $17, $0e, $02, $00, $f4, $eb, $ee, $f9
1a06b     F4 F2 F3 F6 
1a06f     00 0C 0C 14 
1a073     18 0C 01 F9 
1a077     F5 EB F2 F0 | 	byte	$f4, $f2, $f3, $f6, $00, $0c, $0c, $14, $18, $0c, $01, $f9, $f5, $eb, $f2, $f0
1a07b     F5 F7 F0 F6 
1a07f     03 0E 0E 13 
1a083     14 10 01 F8 
1a087     EE F4 F2 EF | 	byte	$f5, $f7, $f0, $f6, $03, $0e, $0e, $13, $14, $10, $01, $f8, $ee, $f4, $f2, $ef
1a08b     F2 F9 F3 F8 
1a08f     00 0E 11 15 
1a093     10 0A 03 F9 
1a097     ED ED F6 F2 | 	byte	$f2, $f9, $f3, $f8, $00, $0e, $11, $15, $10, $0a, $03, $f9, $ed, $ed, $f6, $f2
1a09b     F4 F3 F5 FB 
1a09f     06 08 13 17 
1a0a3     11 0A 00 F6 
1a0a7     EF F0 F1 F5 | 	byte	$f4, $f3, $f5, $fb, $06, $08, $13, $17, $11, $0a, $00, $f6, $ef, $f0, $f1, $f5
1a0ab     F5 F4 F1 FF 
1a0af     06 08 10 16 
1a0b3     12 0A FD F2 
1a0b7     F0 F4 F0 F2 | 	byte	$f5, $f4, $f1, $ff, $06, $08, $10, $16, $12, $0a, $fd, $f2, $f0, $f4, $f0, $f2
1a0bb     F8 F6 F4 FC 
1a0bf     05 0E 15 11 
1a0c3     0E 0B FD EF 
1a0c7     EF F3 F3 F4 | 	byte	$f8, $f6, $f4, $fc, $05, $0e, $15, $11, $0e, $0b, $fd, $ef, $ef, $f3, $f3, $f4
1a0cb     F5 F0 FB FD 
1a0cf     04 0D 18 10 
1a0d3     0C 08 FE EE 
1a0d7     F4 ED F5 F8 | 	byte	$f5, $f0, $fb, $fd, $04, $0d, $18, $10, $0c, $08, $fe, $ee, $f4, $ed, $f5, $f8
1a0db     F2 F3 FA 02 
1a0df     01 10 16 10 
1a0e3     10 07 F4 F6 
1a0e7     F1 EE F3 F8 | 	byte	$f2, $f3, $fa, $02, $01, $10, $16, $10, $10, $07, $f4, $f6, $f1, $ee, $f3, $f8
1a0eb     F3 F3 FB FF 
1a0ef     06 12 10 0F 
1a0f3     13 00 F5 F3 
1a0f7     F2 EE F5 F6 | 	byte	$f3, $f3, $fb, $ff, $06, $12, $10, $0f, $13, $00, $f5, $f3, $f2, $ee, $f5, $f6
1a0fb     F1 F8 FD FA 
1a0ff     0A 15 0E 11 
1a103     0C 02 F3 F5 
1a107     EC F0 FD F3 | 	byte	$f1, $f8, $fd, $fa, $0a, $15, $0e, $11, $0c, $02, $f3, $f5, $ec, $f0, $fd, $f3
1a10b     EE FA FD FD 
1a10f     0A 10 0F 14 
1a113     0B F8 FA F7 
1a117     E9 F2 FB F5 | 	byte	$ee, $fa, $fd, $fd, $0a, $10, $0f, $14, $0b, $f8, $fa, $f7, $e9, $f2, $fb, $f5
1a11b     EE FB F8 03 
1a11f     0D 0B 0D 1C 
1a123     02 F8 F7 F8 
1a127     EC F0 F9 F3 | 	byte	$ee, $fb, $f8, $03, $0d, $0b, $0d, $1c, $02, $f8, $f7, $f8, $ec, $f0, $f9, $f3
1a12b     FB F7 F5 04 
1a12f     15 04 10 14 
1a133     09 F7 FA EF 
1a137     F1 FA F3 F4 | 	byte	$fb, $f7, $f5, $04, $15, $04, $10, $14, $09, $f7, $fa, $ef, $f1, $fa, $f3, $f4
1a13b     FB FC F3 0B 
1a13f     0C 0B 11 13 
1a143     FE FF F8 EB 
1a147     F4 FA F2 F5 | 	byte	$fb, $fc, $f3, $0b, $0c, $0b, $11, $13, $fe, $ff, $f8, $eb, $f4, $fa, $f2, $f5
1a14b     FD F5 FD 06 
1a14f     0B 06 1C 0B 
1a153     FF FF F7 ED 
1a157     F5 F8 F0 FC | 	byte	$fd, $f5, $fd, $06, $0b, $06, $1c, $0b, $ff, $ff, $f7, $ed, $f5, $f8, $f0, $fc
1a15b     F8 F1 00 0E 
1a15f     04 0F 16 07 
1a163     03 FD EF F1 
1a167     FC F1 F1 00 | 	byte	$f8, $f1, $00, $0e, $04, $0f, $16, $07, $03, $fd, $ef, $f1, $fc, $f1, $f1, $00
1a16b     F7 F4 04 06 
1a16f     0A 10 11 03 
1a173     07 FD E7 F6 
1a177     FC EF F7 FE | 	byte	$f7, $f4, $04, $06, $0a, $10, $11, $03, $07, $fd, $e7, $f6, $fc, $ef, $f7, $fe
1a17b     F4 FB 01 03 
1a17f     09 17 0C 04 
1a183     07 F8 ED F8 
1a187     F3 F4 FD F8 | 	byte	$f4, $fb, $01, $03, $09, $17, $0c, $04, $07, $f8, $ed, $f8, $f3, $f4, $fd, $f8
1a18b     F1 FD 07 FD 
1a18f     12 12 0C 07 
1a193     04 F2 F4 F8 
1a197     EF F3 00 F8 | 	byte	$f1, $fd, $07, $fd, $12, $12, $0c, $07, $04, $f2, $f4, $f8, $ef, $f3, $00, $f8
1a19b     F1 03 FD 06 
1a19f     12 10 07 0F 
1a1a3     00 EE F6 F8 
1a1a7     EE FA F9 F3 | 	byte	$f1, $03, $fd, $06, $12, $10, $07, $0f, $00, $ee, $f6, $f8, $ee, $fa, $f9, $f3
1a1ab     FA 01 FC 06 
1a1af     15 0A 09 0D 
1a1b3     FF EF FA EF 
1a1b7     F5 FD F8 F2 | 	byte	$fa, $01, $fc, $06, $15, $0a, $09, $0d, $ff, $ef, $fa, $ef, $f5, $fd, $f8, $f2
1a1bb     FF 00 FA 0B 
1a1bf     12 0B 0D 07 
1a1c3     F7 FA F7 EB 
1a1c7     F6 01 F6 F1 | 	byte	$ff, $00, $fa, $0b, $12, $0b, $0d, $07, $f7, $fa, $f7, $eb, $f6, $01, $f6, $f1
1a1cb     FF FD 00 0F 
1a1cf     09 0C 14 04 
1a1d3     F4 FA F8 EE 
1a1d7     F8 FD F3 FC | 	byte	$ff, $fd, $00, $0f, $09, $0c, $14, $04, $f4, $fa, $f8, $ee, $f8, $fd, $f3, $fc
1a1db     FC F5 06 12 
1a1df     07 0A 15 00 
1a1e3     F9 F9 F3 EF 
1a1e7     FF F7 F3 00 | 	byte	$fc, $f5, $06, $12, $07, $0a, $15, $00, $f9, $f9, $f3, $ef, $ff, $f7, $f3, $00
1a1eb     FB F6 06 10 
1a1ef     07 12 0B FE 
1a1f3     FE F9 EC F6 
1a1f7     01 F5 F3 FF | 	byte	$fb, $f6, $06, $10, $07, $12, $0b, $fe, $fe, $f9, $ec, $f6, $01, $f5, $f3, $ff
1a1fb     F9 FB 08 07 
1a1ff     08 17 07 FB 
1a203     01 F8 EB F6 
1a207     00 F2 FD F8 | 	byte	$f9, $fb, $08, $07, $08, $17, $07, $fb, $01, $f8, $eb, $f6, $00, $f2, $fd, $f8
1a20b     F4 02 09 07 
1a20f     0B 17 05 FF 
1a213     FE F2 F0 FF 
1a217     F5 F6 FD F9 | 	byte	$f4, $02, $09, $07, $0b, $17, $05, $ff, $fe, $f2, $f0, $ff, $f5, $f6, $fd, $f9
1a21b     F4 00 0A 04 
1a21f     12 10 02 05 
1a223     FE EE F5 FE 
1a227     F7 F4 FE F4 | 	byte	$f4, $00, $0a, $04, $12, $10, $02, $05, $fe, $ee, $f5, $fe, $f7, $f4, $fe, $f4
1a22b     F9 05 01 08 
1a22f     15 0C 00 07 
1a233     F9 F0 F4 FB 
1a237     F6 FB F9 EF | 	byte	$f9, $05, $01, $08, $15, $0c, $00, $07, $f9, $f0, $f4, $fb, $f6, $fb, $f9, $ef
1a23b     FE 05 00 0B 
1a23f     14 0B 02 04 
1a243     F6 F1 FA F4 
1a247     F9 FE F6 F1 | 	byte	$fe, $05, $00, $0b, $14, $0b, $02, $04, $f6, $f1, $fa, $f4, $f9, $fe, $f6, $f1
1a24b     00 02 01 0E 
1a24f     12 07 09 03 
1a253     EF F8 F9 F7 
1a257     F7 FD F4 F4 | 	byte	$00, $02, $01, $0e, $12, $07, $09, $03, $ef, $f8, $f9, $f7, $f7, $fd, $f4, $f4
1a25b     02 FE 06 12 
1a25f     0D 07 0B 00 
1a263     F3 F7 FA F4 
1a267     FE FA F1 F8 | 	byte	$02, $fe, $06, $12, $0d, $07, $0b, $00, $f3, $f7, $fa, $f4, $fe, $fa, $f1, $f8
1a26b     01 FC 08 10 
1a26f     0C 09 08 FE 
1a273     F0 FD F3 F8 
1a277     FF F8 F0 FA | 	byte	$01, $fc, $08, $10, $0c, $09, $08, $fe, $f0, $fd, $f3, $f8, $ff, $f8, $f0, $fa
1a27b     FD 00 0B 0C 
1a27f     09 0D 0A F4 
1a283     F7 F7 F6 F7 
1a287     02 F0 F7 FA | 	byte	$fd, $00, $0b, $0c, $09, $0d, $0a, $f4, $f7, $f7, $f6, $f7, $02, $f0, $f7, $fa
1a28b     FD FF 10 0A 
1a28f     0A 10 02 F8 
1a293     F4 FA F2 FE 
1a297     FA F4 F7 FB | 	byte	$fd, $ff, $10, $0a, $0a, $10, $02, $f8, $f4, $fa, $f2, $fe, $fa, $f4, $f7, $fb
1a29b     F6 05 10 09 
1a29f     0C 0E 02 F8 
1a2a3     F8 F4 F4 01 
1a2a7     F8 EF FA FA | 	byte	$f6, $05, $10, $09, $0c, $0e, $02, $f8, $f8, $f4, $f4, $01, $f8, $ef, $fa, $fa
1a2ab     FB 08 0F 06 
1a2af     0E 10 FE F8 
1a2b3     F8 F2 FA 00 
1a2b7     F5 F1 FD F8 | 	byte	$fb, $08, $0f, $06, $0e, $10, $fe, $f8, $f8, $f2, $fa, $00, $f5, $f1, $fd, $f8
1a2bb     FA 0B 0E 08 
1a2bf     12 09 FC FE 
1a2c3     F5 F2 FB FF 
1a2c7     F2 F4 FA F6 | 	byte	$fa, $0b, $0e, $08, $12, $09, $fc, $fe, $f5, $f2, $fb, $ff, $f2, $f4, $fa, $f6
1a2cb     FE 0E 05 0D 
1a2cf     12 06 FD FE 
1a2d3     F2 F4 FD FD 
1a2d7     EF F7 FA F2 | 	byte	$fe, $0e, $05, $0d, $12, $06, $fd, $fe, $f2, $f4, $fd, $fd, $ef, $f7, $fa, $f2
1a2db     05 0A 07 0F 
1a2df     14 02 FE FD 
1a2e3     F1 F4 00 F5 
1a2e7     F1 FB F3 F7 | 	byte	$05, $0a, $07, $0f, $14, $02, $fe, $fd, $f1, $f4, $00, $f5, $f1, $fb, $f3, $f7
1a2eb     05 0B 07 13 
1a2ef     10 00 01 FB 
1a2f3     EC F9 00 F4 
1a2f7     F2 FA F2 FA | 	byte	$05, $0b, $07, $13, $10, $00, $01, $fb, $ec, $f9, $00, $f4, $f2, $fa, $f2, $fa
1a2fb     0A 06 0A 17 
1a2ff     0C 00 03 F5 
1a303     ED FF FD F2 
1a307     F7 F6 F1 00 | 	byte	$0a, $06, $0a, $17, $0c, $00, $03, $f5, $ed, $ff, $fd, $f2, $f7, $f6, $f1, $00
1a30b     08 05 0F 18 
1a30f     06 03 03 F3 
1a313     EF FF F8 F2 
1a317     FD EF F4 02 | 	byte	$08, $05, $0f, $18, $06, $03, $03, $f3, $ef, $ff, $f8, $f2, $fd, $ef, $f4, $02
1a31b     08 02 13 14 
1a31f     06 04 01 EB 
1a323     F9 FC F4 F5 
1a327     F8 ED F5 06 | 	byte	$08, $02, $13, $14, $06, $04, $01, $eb, $f9, $fc, $f4, $f5, $f8, $ed, $f5, $06
1a32b     01 0A 16 12 
1a32f     01 0B FB EE 
1a333     F9 FA F4 F9 
1a337     F5 EB FC 06 | 	byte	$01, $0a, $16, $12, $01, $0b, $fb, $ee, $f9, $fa, $f4, $f9, $f5, $eb, $fc, $06
1a33b     00 0C 1B 06 
1a33f     0B 06 F8 F0 
1a343     FB F4 F7 F9 
1a347     F0 E9 03 03 | 	byte	$00, $0c, $1b, $06, $0b, $06, $f8, $f0, $fb, $f4, $f7, $f9, $f0, $e9, $03, $03
1a34b     FE 14 12 0E 
1a34f     0C 04 F1 F9 
1a353     FB F0 F6 FD 
1a357     E9 F1 01 00 | 	byte	$fe, $14, $12, $0e, $0c, $04, $f1, $f9, $fb, $f0, $f6, $fd, $e9, $f1, $01, $00
1a35b     08 12 11 0C 
1a35f     13 00 F0 FC 
1a363     F8 F2 F9 F6 
1a367     EA F7 FD FF | 	byte	$08, $12, $11, $0c, $13, $00, $f0, $fc, $f8, $f2, $f9, $f6, $ea, $f7, $fd, $ff
1a36b     0E 16 0C 11 
1a36f     10 FC F3 FC 
1a373     F2 F7 FC ED 
1a377     EC FC FC FE | 	byte	$0e, $16, $0c, $11, $10, $fc, $f3, $fc, $f2, $f7, $fc, $ed, $ec, $fc, $fc, $fe
1a37b     14 12 0C 14 
1a37f     0D F6 FC F6 
1a383     F0 FA FB E8 
1a387     EE FD F8 05 | 	byte	$14, $12, $0c, $14, $0d, $f6, $fc, $f6, $f0, $fa, $fb, $e8, $ee, $fd, $f8, $05
1a38b     11 0D 11 1A 
1a38f     02 F7 FC F7 
1a393     F0 FB F3 E9 
1a397     F7 F3 F9 0A | 	byte	$11, $0d, $11, $1a, $02, $f7, $fc, $f7, $f0, $fb, $f3, $e9, $f7, $f3, $f9, $0a
1a39b     15 09 14 15 
1a39f     01 FD FA EE 
1a3a3     F5 FF EB EC 
1a3a7     F7 F7 F7 10 | 	byte	$15, $09, $14, $15, $01, $fd, $fa, $ee, $f5, $ff, $eb, $ec, $f7, $f7, $f7, $10
1a3ab     0F 0C 1B 0E 
1a3af     00 FE F8 EB 
1a3b3     FB F9 EB ED 
1a3b7     F7 F1 00 0F | 	byte	$0f, $0c, $1b, $0e, $00, $fe, $f8, $eb, $fb, $f9, $eb, $ed, $f7, $f1, $00, $0f
1a3bb     0A 13 1C 0A 
1a3bf     00 FF F3 F1 
1a3c3     F8 F6 E8 F6 
1a3c7     EE F4 0A 10 | 	byte	$0a, $13, $1c, $0a, $00, $ff, $f3, $f1, $f8, $f6, $e8, $f6, $ee, $f4, $0a, $10
1a3cb     07 19 19 0A 
1a3cf     00 FD EE F6 
1a3d3     FB EB EE F5 
1a3d7     F0 F3 0A 0B | 	byte	$07, $19, $19, $0a, $00, $fd, $ee, $f6, $fb, $eb, $ee, $f5, $f0, $f3, $0a, $0b
1a3db     10 17 15 04 
1a3df     0A F6 EC FA 
1a3e3     F8 ED EC F0 
1a3e7     EF FD 0A 07 | 	byte	$10, $17, $15, $04, $0a, $f6, $ec, $fa, $f8, $ed, $ec, $f0, $ef, $fd, $0a, $07
1a3eb     12 1E 0B 0A 
1a3ef     07 F6 ED F7 
1a3f3     F4 F1 EF EC 
1a3f7     EE 03 09 05 | 	byte	$12, $1e, $0b, $0a, $07, $f6, $ed, $f7, $f4, $f1, $ef, $ec, $ee, $03, $09, $05
1a3fb     18 1C 0C 09 
1a3ff     00 F3 F5 F8 
1a403     ED EF F5 EA 
1a407     EF 03 09 0E | 	byte	$18, $1c, $0c, $09, $00, $f3, $f5, $f8, $ed, $ef, $f5, $ea, $ef, $03, $09, $0e
1a40b     18 17 0F 0C 
1a40f     FE EE F9 F6 
1a413     EF F0 EF ED 
1a417     F6 01 07 14 | 	byte	$18, $17, $0f, $0c, $fe, $ee, $f9, $f6, $ef, $f0, $ef, $ed, $f6, $01, $07, $14
1a41b     1A 10 10 0E 
1a41f     F8 F1 F5 F4 
1a423     EF F1 E8 ED 
1a427     FD 02 05 17 | 	byte	$1a, $10, $10, $0e, $f8, $f1, $f5, $f4, $ef, $f1, $e8, $ed, $fd, $02, $05, $17
1a42b     19 13 11 04 
1a42f     F9 F5 F5 EF 
1a433     EF F3 E9 ED 
1a437     FC 02 0D 14 | 	byte	$19, $13, $11, $04, $f9, $f5, $f5, $ef, $ef, $f3, $e9, $ed, $fc, $02, $0d, $14
1a43b     17 15 12 01 
1a43f     F4 F8 F4 EE 
1a443     F0 EF EA F2 
1a447     FA 01 13 16 | 	byte	$17, $15, $12, $01, $f4, $f8, $f4, $ee, $f0, $ef, $ea, $f2, $fa, $01, $13, $16
1a44b     13 15 15 FF 
1a44f     F6 F6 F2 F1 
1a453     F1 EA EA F6 
1a457     FC 00 15 18 | 	byte	$13, $15, $15, $ff, $f6, $f6, $f2, $f1, $f1, $ea, $ea, $f6, $fc, $00, $15, $18
1a45b     15 16 0E FF 
1a45f     F9 F4 EE F5 
1a463     EF E8 EA F6 
1a467     FC 06 15 15 | 	byte	$15, $16, $0e, $ff, $f9, $f4, $ee, $f5, $ef, $e8, $ea, $f6, $fc, $06, $15, $15
1a46b     19 18 09 FE 
1a46f     F9 F4 EF F1 
1a473     EF E8 EF F3 
1a477     FD 0E 15 14 | 	byte	$19, $18, $09, $fe, $f9, $f4, $ef, $f1, $ef, $e8, $ef, $f3, $fd, $0e, $15, $14
1a47b     19 16 08 FE 
1a47f     F8 F1 F1 F2 
1a483     EA E9 F0 F5 
1a487     FE 0F 15 17 | 	byte	$19, $16, $08, $fe, $f8, $f1, $f1, $f2, $ea, $e9, $f0, $f5, $fe, $0f, $15, $17
1a48b     18 17 05 FF 
1a48f     F5 EF F3 F3 
1a493     E5 EB F1 F6 
1a497     01 0E 15 19 | 	byte	$18, $17, $05, $ff, $f5, $ef, $f3, $f3, $e5, $eb, $f1, $f6, $01, $0e, $15, $19
1a49b     1A 0F 04 01 
1a49f     F4 ED F3 EE 
1a4a3     EA EB EF F6 
1a4a7     06 11 13 19 | 	byte	$1a, $0f, $04, $01, $f4, $ed, $f3, $ee, $ea, $eb, $ef, $f6, $06, $11, $13, $19
1a4ab     1C 0D 04 FE 
1a4af     F2 F0 F0 EE 
1a4b3     E7 ED EF FA 
1a4b7     07 12 11 1E | 	byte	$1c, $0d, $04, $fe, $f2, $f0, $f0, $ee, $e7, $ed, $ef, $fa, $07, $12, $11, $1e
1a4bb     18 0C 03 FB 
1a4bf     F3 EF F2 E9 
1a4c3     EA EB EE FB 
1a4c7     0D 0F 16 1D | 	byte	$18, $0c, $03, $fb, $f3, $ef, $f2, $e9, $ea, $eb, $ee, $fb, $0d, $0f, $16, $1d
1a4cb     17 0A 04 FA 
1a4cf     F0 F2 ED EA 
1a4d3     EB EC EC 00 
1a4d7     0C 10 18 1E | 	byte	$17, $0a, $04, $fa, $f0, $f2, $ed, $ea, $eb, $ec, $ec, $00, $0c, $10, $18, $1e
1a4db     15 0B 02 F6 
1a4df     F4 EE ED E7 
1a4e3     EE EA EF 00 
1a4e7     11 12 1A 1B | 	byte	$15, $0b, $02, $f6, $f4, $ee, $ed, $e7, $ee, $ea, $ef, $00, $11, $12, $1a, $1b
1a4eb     14 0D 00 F5 
1a4ef     EF F3 E9 EB 
1a4f3     EB EC F0 04 
1a4f7     0D 15 1C 1A | 	byte	$14, $0d, $00, $f5, $ef, $f3, $e9, $eb, $eb, $ec, $f0, $04, $0d, $15, $1c, $1a
1a4fb     13 09 00 F3 
1a4ff     F5 ED E9 E9 
1a503     EE E8 F7 02 
1a507     10 17 1C 19 | 	byte	$13, $09, $00, $f3, $f5, $ed, $e9, $e9, $ee, $e8, $f7, $02, $10, $17, $1c, $19
1a50b     10 0E F9 F5 
1a50f     F1 ED E8 EC 
1a513     E8 EA FB 05 
1a517     10 19 1B 16 | 	byte	$10, $0e, $f9, $f5, $f1, $ed, $e8, $ec, $e8, $ea, $fb, $05, $10, $19, $1b, $16
1a51b     14 09 F9 F3 
1a51f     F2 EA EB E8 
1a523     E8 ED FF 04 
1a527     12 1C 1B 17 | 	byte	$14, $09, $f9, $f3, $f2, $ea, $eb, $e8, $e8, $ed, $ff, $04, $12, $1c, $1b, $17
1a52b     13 07 F8 F6 
1a52f     EE E9 EB EA 
1a533     E6 F2 FD 07 
1a537     16 1C 18 18 | 	byte	$13, $07, $f8, $f6, $ee, $e9, $eb, $ea, $e6, $f2, $fd, $07, $16, $1c, $18, $18
1a53b     12 01 F9 F4 
1a53f     EC E7 EF E5 
1a543     E9 F0 00 09 
1a547     1A 1A 17 1A | 	byte	$12, $01, $f9, $f4, $ec, $e7, $ef, $e5, $e9, $f0, $00, $09, $1a, $1a, $17, $1a
1a54b     0F 00 F7 F4 
1a54f     E8 EC E9 E5 
1a553     ED F7 FD 0A 
1a557     1C 1C 18 18 | 	byte	$0f, $00, $f7, $f4, $e8, $ec, $e9, $e5, $ed, $f7, $fd, $0a, $1c, $1c, $18, $18
1a55b     0A 00 F9 ED 
1a55f     E8 EE E8 E1 
1a563     EE F7 00 0D 
1a567     1C 18 1C 17 | 	byte	$0a, $00, $f9, $ed, $e8, $ee, $e8, $e1, $ee, $f7, $00, $0d, $1c, $18, $1c, $17
1a56b     07 00 F9 E9 
1a56f     E8 F0 E4 E5 
1a573     F0 F7 00 16 
1a577     1A 19 1D 15 | 	byte	$07, $00, $f9, $e9, $e8, $f0, $e4, $e5, $f0, $f7, $00, $16, $1a, $19, $1d, $15
1a57b     05 00 F6 E9 
1a57f     EB EB E4 E9 
1a583     F2 F4 06 19 
1a587     19 19 1D 12 | 	byte	$05, $00, $f6, $e9, $eb, $eb, $e4, $e9, $f2, $f4, $06, $19, $19, $19, $1d, $12
1a58b     06 00 F0 E8 
1a58f     F0 E8 E1 EC 
1a593     F3 F6 0B 18 
1a597     18 1F 1B 0C | 	byte	$06, $00, $f0, $e8, $f0, $e8, $e1, $ec, $f3, $f6, $0b, $18, $18, $1f, $1b, $0c
1a59b     0A 00 EA EB 
1a59f     ED E8 E4 EF 
1a5a3     EF FB 10 15 
1a5a7     19 22 18 09 | 	byte	$0a, $00, $ea, $eb, $ed, $e8, $e4, $ef, $ef, $fb, $10, $15, $19, $22, $18, $09
1a5ab     0A FD EC EB 
1a5af     EB E5 E8 EE 
1a5b3     EC 00 14 12 
1a5b7     1B 23 16 0B | 	byte	$0a, $fd, $ec, $eb, $eb, $e5, $e8, $ee, $ec, $00, $14, $12, $1b, $23, $16, $0b
1a5bb     08 F5 EE EE 
1a5bf     E5 E5 EC EE 
1a5c3     ED 05 11 17 
1a5c7     1F 1E 11 0E | 	byte	$08, $f5, $ee, $ee, $e5, $e5, $ec, $ee, $ed, $05, $11, $17, $1f, $1e, $11, $0e
1a5cb     07 F0 EB EE 
1a5cf     E3 E7 EB E8 
1a5d3     F5 08 10 17 
1a5d7     24 1A 10 0F | 	byte	$07, $f0, $eb, $ee, $e3, $e7, $eb, $e8, $f5, $08, $10, $17, $24, $1a, $10, $0f
1a5db     01 F0 ED E9 
1a5df     E3 EC E8 E7 
1a5e3     FB 0B 0F 1A 
1a5e7     22 17 14 0D | 	byte	$01, $f0, $ed, $e9, $e3, $ec, $e8, $e7, $fb, $0b, $0f, $1a, $22, $17, $14, $0d
1a5eb     FB F2 F0 E5 
1a5ef     E2 EC E9 EB 
1a5f3     FC 0A 11 20 
1a5f7     1F 16 16 09 | 	byte	$fb, $f2, $f0, $e5, $e2, $ec, $e9, $eb, $fc, $0a, $11, $20, $1f, $16, $16, $09
1a5fb     FA F2 EF E2 
1a5ff     E6 EA E5 F2 
1a603     FF 09 15 23 
1a607     1B 17 17 06 | 	byte	$fa, $f2, $ef, $e2, $e6, $ea, $e5, $f2, $ff, $09, $15, $23, $1b, $17, $17, $06
1a60b     F8 F3 EA E2 
1a60f     EC E8 E4 F3 
1a613     01 0A 19 20 
1a617     1A 1A 15 00 | 	byte	$f8, $f3, $ea, $e2, $ec, $e8, $e4, $f3, $01, $0a, $19, $20, $1a, $1a, $15, $00
1a61b     FB F4 E7 E3 
1a61f     EB E7 E8 F8 
1a623     FF 0F 1E 1E 
1a627     17 1D 10 00 | 	byte	$fb, $f4, $e7, $e3, $eb, $e7, $e8, $f8, $ff, $0f, $1e, $1e, $17, $1d, $10, $00
1a62b     F8 F0 E4 E6 
1a62f     EA E1 ED F7 
1a633     00 0E 20 1B 
1a637     1B 1A 0E FF | 	byte	$f8, $f0, $e4, $e6, $ea, $e1, $ed, $f7, $00, $0e, $20, $1b, $1b, $1a, $0e, $ff
1a63b     FA EA E4 EB 
1a63f     E6 E4 F0 FB 
1a643     FF 17 1C 1B 
1a647     1D 19 06 00 | 	byte	$fa, $ea, $e4, $eb, $e6, $e4, $f0, $fb, $ff, $17, $1c, $1b, $1d, $19, $06, $00
1a64b     F9 E9 E5 EA 
1a64f     E5 E5 F1 F6 
1a653     04 18 1B 1A 
1a657     1F 19 06 00 | 	byte	$f9, $e9, $e5, $ea, $e5, $e5, $f1, $f6, $04, $18, $1b, $1a, $1f, $19, $06, $00
1a65b     F4 E8 E9 E7 
1a65f     E2 E8 F3 F7 
1a663     07 1A 1A 1C 
1a667     1C 13 07 01 | 	byte	$f4, $e8, $e9, $e7, $e2, $e8, $f3, $f7, $07, $1a, $1a, $1c, $1c, $13, $07, $01
1a66b     EF E4 EC E5 
1a66f     E2 EA F3 FA 
1a673     0B 19 1A 20 
1a677     1E 0D 08 00 | 	byte	$ef, $e4, $ec, $e5, $e2, $ea, $f3, $fa, $0b, $19, $1a, $20, $1e, $0d, $08, $00
1a67b     EB E8 E9 E5 
1a67f     E4 ED F0 FD 
1a683     11 19 19 21 
1a687     1C 0C 08 FB | 	byte	$eb, $e8, $e9, $e5, $e4, $ed, $f0, $fd, $11, $19, $19, $21, $1c, $0c, $08, $fb
1a68b     EC E8 E8 E1 
1a68f     E9 EC F2 FD 
1a693     14 17 1D 21 
1a697     17 0F 07 F8 | 	byte	$ec, $e8, $e8, $e1, $e9, $ec, $f2, $fd, $14, $17, $1d, $21, $17, $0f, $07, $f8
1a69b     E9 EB E6 E2 
1a69f     E8 ED F4 04 
1a6a3     12 18 20 20 
1a6a7     14 0F 06 F2 | 	byte	$e9, $eb, $e6, $e2, $e8, $ed, $f4, $04, $12, $18, $20, $20, $14, $0f, $06, $f2
1a6ab     EA EA E4 E4 
1a6af     EA EB F6 07 
1a6b3     13 17 22 1E 
1a6b7     13 0F 00 F1 | 	byte	$ea, $ea, $e4, $e4, $ea, $eb, $f6, $07, $13, $17, $22, $1e, $13, $0f, $00, $f1
1a6bb     EB E9 E2 E6 
1a6bf     EB EA FA 09 
1a6c3     13 1B 21 1C 
1a6c7     14 0D FC F0 | 	byte	$eb, $e9, $e2, $e6, $eb, $ea, $fa, $09, $13, $1b, $21, $1c, $14, $0d, $fc, $f0
1a6cb     ED E6 E3 E8 
1a6cf     EB EB FD 0A 
1a6d3     12 1F 1F 19 
1a6d7     15 0D F9 EF | 	byte	$ed, $e6, $e3, $e8, $eb, $eb, $fd, $0a, $12, $1f, $1f, $19, $15, $0d, $f9, $ef
1a6db     EC E4 E3 EA 
1a6df     E7 F0 00 0A 
1a6e3     11 20 1F 18 
1a6e7     14 09 F8 F0 | 	byte	$ec, $e4, $e3, $ea, $e7, $f0, $00, $0a, $11, $20, $1f, $18, $14, $09, $f8, $f0
1a6eb     EC E0 E7 E9 
1a6ef     E7 F2 03 0A 
1a6f3     16 20 1E 18 
1a6f7     16 02 F6 F2 | 	byte	$ec, $e0, $e7, $e9, $e7, $f2, $03, $0a, $16, $20, $1e, $18, $16, $02, $f6, $f2
1a6fb     E7 E2 E7 EA 
1a6ff     E7 F8 00 0E 
1a703     19 20 19 1B 
1a707     13 00 F6 F1 | 	byte	$e7, $e2, $e7, $ea, $e7, $f8, $00, $0e, $19, $20, $19, $1b, $13, $00, $f6, $f1
1a70b     E6 E2 E8 E6 
1a70f     EC F9 03 0A 
1a713     20 1C 19 1B 
1a717     10 FE F6 EE | 	byte	$e6, $e2, $e8, $e6, $ec, $f9, $03, $0a, $20, $1c, $19, $1b, $10, $fe, $f6, $ee
1a71b     E3 E6 E7 E5 
1a71f     EF FD 01 10 
1a723     1E 1E 1A 1B 
1a727     0C FE F6 E9 | 	byte	$e3, $e6, $e7, $e5, $ef, $fd, $01, $10, $1e, $1e, $1a, $1b, $0c, $fe, $f6, $e9
1a72b     E3 E9 E8 E3 
1a72f     F2 FC 03 14 
1a733     1E 1A 1E 18 
1a737     05 FE F8 E7 | 	byte	$e3, $e9, $e8, $e3, $f2, $fc, $03, $14, $1e, $1a, $1e, $18, $05, $fe, $f8, $e7
1a73b     E3 EA E4 E7 
1a73f     F5 FB 05 19 
1a743     1C 1A 1F 16 
1a747     05 FF F3 E4 | 	byte	$e3, $ea, $e4, $e7, $f5, $fb, $05, $19, $1c, $1a, $1f, $16, $05, $ff, $f3, $e4
1a74b     E7 E9 E3 EA 
1a74f     F8 FC 06 1A 
1a753     19 1D 1E 13 
1a757     03 00 EF E3 | 	byte	$e7, $e9, $e3, $ea, $f8, $fc, $06, $1a, $19, $1d, $1e, $13, $03, $00, $ef, $e3
1a75b     E9 E6 E2 EE 
1a75f     F7 FB 0F 18 
1a763     19 1E 20 0D 
1a767     04 FF EB E4 | 	byte	$e9, $e6, $e2, $ee, $f7, $fb, $0f, $18, $19, $1e, $20, $0d, $04, $ff, $eb, $e4
1a76b     EA E6 E4 F0 
1a76f     F5 FE 13 19 
1a773     18 21 1C 0B 
1a777     04 FA E7 EA | 	byte	$ea, $e6, $e4, $f0, $f5, $fe, $13, $19, $18, $21, $1c, $0b, $04, $fa, $e7, $ea
1a77b     E8 E2 E8 F3 
1a77f     F5 02 14 18 
1a783     1B 22 16 0B 
1a787     07 F3 E9 EA | 	byte	$e8, $e2, $e8, $f3, $f5, $02, $14, $18, $1b, $22, $16, $0b, $07, $f3, $e9, $ea
1a78b     E9 E0 EB F2 
1a78f     F6 06 14 14 
1a793     20 21 12 0B 
1a797     04 F2 E7 EC | 	byte	$e9, $e0, $eb, $f2, $f6, $06, $14, $14, $20, $21, $12, $0b, $04, $f2, $e7, $ec
1a79b     E4 E4 ED EF 
1a79f     F9 0B 11 17 
1a7a3     1F 21 0F 0C 
1a7a7     00 EF EC E9 | 	byte	$e4, $e4, $ed, $ef, $f9, $0b, $11, $17, $1f, $21, $0f, $0c, $00, $ef, $ec, $e9
1a7ab     E2 E9 F0 EE 
1a7af     FB 0C 12 16 
1a7b3     22 19 11 0D 
1a7b7     FA EC EF E7 | 	byte	$e2, $e9, $f0, $ee, $fb, $0c, $12, $16, $22, $19, $11, $0d, $fa, $ec, $ef, $e7
1a7bb     E1 EB F0 EF 
1a7bf     00 0D 10 1D 
1a7c3     20 15 12 0C 
1a7c7     F7 EC EE E5 | 	byte	$e1, $eb, $f0, $ef, $00, $0d, $10, $1d, $20, $15, $12, $0c, $f7, $ec, $ee, $e5
1a7cb     E4 EE EB F2 
1a7cf     04 0B 11 1F 
1a7d3     1E 14 12 07 
1a7d7     F6 F1 EB E0 | 	byte	$e4, $ee, $eb, $f2, $04, $0b, $11, $1f, $1e, $14, $12, $07, $f6, $f1, $eb, $e0
1a7db     EA EE EA F6 
1a7df     06 0A 15 1E 
1a7e3     1A 15 13 00 
1a7e7     F4 F2 E9 E2 | 	byte	$ea, $ee, $ea, $f6, $06, $0a, $15, $1e, $1a, $15, $13, $00, $f4, $f2, $e9, $e2
1a7eb     EC EC EC FB 
1a7ef     06 09 1B 1E 
1a7f3     15 17 11 FE 
1a7f7     F3 F1 E6 E5 | 	byte	$ec, $ec, $ec, $fb, $06, $09, $1b, $1e, $15, $17, $11, $fe, $f3, $f1, $e6, $e5
1a7fb     ED EA F0 00 
1a7ff     02 0C 1E 1B 
1a803     16 18 0C FC 
1a807     F6 EB E3 EB | 	byte	$ed, $ea, $f0, $00, $02, $0c, $1e, $1b, $16, $18, $0c, $fc, $f6, $eb, $e3, $eb
1a80b     EC E7 F5 00 
1a80f     02 10 1C 18 
1a813     17 18 04 FB 
1a817     F7 EA E5 EC | 	byte	$ec, $e7, $f5, $00, $02, $10, $1c, $18, $17, $18, $04, $fb, $f7, $ea, $e5, $ec
1a81b     EB EA F9 FF 
1a81f     05 15 1A 16 
1a823     1C 14 01 FD 
1a827     F5 E8 E8 EC | 	byte	$eb, $ea, $f9, $ff, $05, $15, $1a, $16, $1c, $14, $01, $fd, $f5, $e8, $e8, $ec
1a82b     E8 ED FB FE 
1a82f     06 19 19 17 
1a833     1B 0F 02 FD 
1a837     EF E6 EA EC | 	byte	$e8, $ed, $fb, $fe, $06, $19, $19, $17, $1b, $0f, $02, $fd, $ef, $e6, $ea, $ec
1a83b     E6 F2 FB FF 
1a83f     0B 17 16 1A 
1a843     19 0A 02 FD 
1a847     EE E5 EE E8 | 	byte	$e6, $f2, $fb, $ff, $0b, $17, $16, $1a, $19, $0a, $02, $fd, $ee, $e5, $ee, $e8
1a84b     EA F5 F9 FF 
1a84f     10 15 15 1C 
1a853     17 08 01 FB 
1a857     EB EA EB E6 | 	byte	$ea, $f5, $f9, $ff, $10, $15, $15, $1c, $17, $08, $01, $fb, $eb, $ea, $eb, $e6
1a85b     ED F7 F7 03 
1a85f     11 14 16 1C 
1a863     13 07 01 F6 
1a867     E9 EE EA E7 | 	byte	$ed, $f7, $f7, $03, $11, $14, $16, $1c, $13, $07, $01, $f6, $e9, $ee, $ea, $e7
1a86b     F0 F6 F8 08 
1a86f     11 11 1A 1B 
1a873     0F 07 02 F1 
1a877     EC ED E8 EA | 	byte	$f0, $f6, $f8, $08, $11, $11, $1a, $1b, $0f, $07, $02, $f1, $ec, $ed, $e8, $ea
1a87b     F5 F4 F9 0A 
1a87f     10 13 1A 18 
1a883     0C 09 FF EF 
1a887     EE EE E6 ED | 	byte	$f5, $f4, $f9, $0a, $10, $13, $1a, $18, $0c, $09, $ff, $ef, $ee, $ee, $e6, $ed
1a88b     F4 F4 FE 0A 
1a88f     0F 15 1B 13 
1a893     0E 09 F9 EF 
1a897     F1 EA E7 EF | 	byte	$f4, $f4, $fe, $0a, $0f, $15, $1b, $13, $0e, $09, $f9, $ef, $f1, $ea, $e7, $ef
1a89b     F3 F5 00 0B 
1a89f     0F 19 19 11 
1a8a3     0E 09 F4 F1 
1a8a7     EF E9 EA F1 | 	byte	$f3, $f5, $00, $0b, $0f, $19, $19, $11, $0e, $09, $f4, $f1, $ef, $e9, $ea, $f1
1a8ab     F1 F7 05 08 
1a8af     0E 19 18 0E 
1a8b3     10 04 F6 F1 
1a8b7     EF E7 ED F1 | 	byte	$f1, $f7, $05, $08, $0e, $19, $18, $0e, $10, $04, $f6, $f1, $ef, $e7, $ed, $f1
1a8bb     F0 FC 05 07 
1a8bf     10 1B 12 11 
1a8c3     0D 01 F4 F4 
1a8c7     EB E9 F0 EF | 	byte	$f0, $fc, $05, $07, $10, $1b, $12, $11, $0d, $01, $f4, $f4, $eb, $e9, $f0, $ef
1a8cb     F0 FE 04 08 
1a8cf     16 17 11 11 
1a8d3     0D FE F6 F2 
1a8d7     EA EB F2 ED | 	byte	$f0, $fe, $04, $08, $16, $17, $11, $11, $0d, $fe, $f6, $f2, $ea, $eb, $f2, $ed
1a8db     F3 01 02 0A 
1a8df     16 15 10 13 
1a8e3     08 FB F8 F0 
1a8e7     E8 EF F0 EE | 	byte	$f3, $01, $02, $0a, $16, $15, $10, $13, $08, $fb, $f8, $f0, $e8, $ef, $f0, $ee
1a8eb     F6 01 01 0D 
1a8ef     17 11 13 11 
1a8f3     04 FC F8 ED 
1a8f7     EA F1 EF EF | 	byte	$f6, $01, $01, $0d, $17, $11, $13, $11, $04, $fc, $f8, $ed, $ea, $f1, $ef, $ef
1a8fb     FA 00 02 11 
1a8ff     14 11 14 10 
1a903     01 FE F6 EC 
1a907     ED F1 EC F1 | 	byte	$fa, $00, $02, $11, $14, $11, $14, $10, $01, $fe, $f6, $ec, $ed, $f1, $ec, $f1
1a90b     FD FE 05 11 
1a90f     12 11 14 0C 
1a913     01 FE F4 EA 
1a917     F0 F0 EE F5 | 	byte	$fd, $fe, $05, $11, $12, $11, $14, $0c, $01, $fe, $f4, $ea, $f0, $f0, $ee, $f5
1a91b     FC FF 09 12 
1a91f     0F 14 14 08 
1a923     00 FE F2 ED 
1a927     F0 EF EF F8 | 	byte	$fc, $ff, $09, $12, $0f, $14, $14, $08, $00, $fe, $f2, $ed, $f0, $ef, $ef, $f8
1a92b     FA 00 0D 0F 
1a92f     0F 15 13 05 
1a933     01 FB F1 EF 
1a937     F1 EC F2 F9 | 	byte	$fa, $00, $0d, $0f, $0f, $15, $13, $05, $01, $fb, $f1, $ef, $f1, $ec, $f2, $f9
1a93b     FA 02 0E 0F 
1a93f     10 15 0D 06 
1a943     02 F9 EE F2 
1a947     F0 ED F4 F8 | 	byte	$fa, $02, $0e, $0f, $10, $15, $0d, $06, $02, $f9, $ee, $f2, $f0, $ed, $f4, $f8
1a94b     FB 05 0C 0D 
1a94f     13 14 0A 06 
1a953     01 F6 F1 F1 
1a957     EF F0 F6 F6 | 	byte	$fb, $05, $0c, $0d, $13, $14, $0a, $06, $01, $f6, $f1, $f1, $ef, $f0, $f6, $f6
1a95b     FD 07 0C 0D 
1a95f     13 12 09 06 
1a963     FF F5 F3 F2 
1a967     ED F2 F7 F6 | 	byte	$fd, $07, $0c, $0d, $13, $12, $09, $06, $ff, $f5, $f3, $f2, $ed, $f2, $f7, $f6
1a96b     FF 08 0C 0E 
1a96f     13 0F 0A 07 
1a973     FC F4 F5 F0 
1a977     ED F4 F6 F8 | 	byte	$ff, $08, $0c, $0e, $13, $0f, $0a, $07, $fc, $f4, $f5, $f0, $ed, $f4, $f6, $f8
1a97b     00 07 0A 10 
1a97f     13 0C 0A 05 
1a983     FA F5 F3 F0 
1a987     F0 F5 F5 F9 | 	byte	$00, $07, $0a, $10, $13, $0c, $0a, $05, $fa, $f5, $f3, $f0, $f0, $f5, $f5, $f9
1a98b     03 07 0A 11 
1a98f     10 0D 0A 02 
1a993     F9 F6 F3 EE 
1a997     F2 F6 F4 FB | 	byte	$03, $07, $0a, $11, $10, $0d, $0a, $02, $f9, $f6, $f3, $ee, $f2, $f6, $f4, $fb
1a99b     03 06 0E 10 
1a99f     0F 0D 0B 00 
1a9a3     F7 F8 F2 EF 
1a9a7     F2 F4 F6 FF | 	byte	$03, $06, $0e, $10, $0f, $0d, $0b, $00, $f7, $f8, $f2, $ef, $f2, $f4, $f6, $ff
1a9ab     02 06 0E 11 
1a9af     0D 0D 09 FF 
1a9b3     F9 F6 F1 F1 
1a9b7     F4 F3 F7 FF | 	byte	$02, $06, $0e, $11, $0d, $0d, $09, $ff, $f9, $f6, $f1, $f1, $f4, $f3, $f7, $ff
1a9bb     02 06 0F 0F 
1a9bf     0D 0D 07 FE 
1a9c3     F9 F4 F1 F3 
1a9c7     F4 F3 F8 00 | 	byte	$02, $06, $0f, $0f, $0d, $0d, $07, $fe, $f9, $f4, $f1, $f3, $f4, $f3, $f8, $00
1a9cb     02 09 0E 0E 
1a9cf     0E 0C 05 FD 
1a9d3     FA F5 F0 F4 
1a9d7     F2 F5 FB 00 | 	byte	$02, $09, $0e, $0e, $0e, $0c, $05, $fd, $fa, $f5, $f0, $f4, $f2, $f5, $fb, $00
1a9db     02 09 0F 0C 
1a9df     0D 0B 03 FC 
1a9e3     FA F3 F3 F3 
1a9e7     F4 F5 FC 00 | 	byte	$02, $09, $0f, $0c, $0d, $0b, $03, $fc, $fa, $f3, $f3, $f3, $f4, $f5, $fc, $00
1a9eb     03 0B 0D 0C 
1a9ef     0E 0A 01 FF 
1a9f3     F7 F4 F2 F4 
1a9f7     F3 F6 FD 00 | 	byte	$03, $0b, $0d, $0c, $0e, $0a, $01, $ff, $f7, $f4, $f2, $f4, $f3, $f6, $fd, $00
1a9fb     04 0C 0C 0D 
1a9ff     0E 07 01 FD 
1aa03     F8 F3 F4 F4 
1aa07     F4 F8 FE FF | 	byte	$04, $0c, $0c, $0d, $0e, $07, $01, $fd, $f8, $f3, $f4, $f4, $f4, $f8, $fe, $ff
1aa0b     07 0B 0C 0D 
1aa0f     0D 07 00 FD 
1aa13     F6 F3 F5 F3 
1aa17     F4 F9 FD 00 | 	byte	$07, $0b, $0c, $0d, $0d, $07, $00, $fd, $f6, $f3, $f5, $f3, $f4, $f9, $fd, $00
1aa1b     07 0B 0B 0E 
1aa1f     0C 04 01 FC 
1aa23     F6 F4 F6 F3 
1aa27     F5 FB FC 01 | 	byte	$07, $0b, $0b, $0e, $0c, $04, $01, $fc, $f6, $f4, $f6, $f3, $f5, $fb, $fc, $01
1aa2b     07 0A 0B 0E 
1aa2f     09 05 00 FD 
1aa33     F5 F6 F5 F3 
1aa37     F7 FB FD 01 | 	byte	$07, $0a, $0b, $0e, $09, $05, $00, $fd, $f5, $f6, $f5, $f3, $f7, $fb, $fd, $01
1aa3b     09 08 0C 0C 
1aa3f     0A 03 00 FA 
1aa43     F5 F7 F4 F4 
1aa47     F8 FB FD 04 | 	byte	$09, $08, $0c, $0c, $0a, $03, $00, $fa, $f5, $f7, $f4, $f4, $f8, $fb, $fd, $04
1aa4b     07 0A 0B 0D 
1aa4f     07 05 00 F9 
1aa53     F6 F8 F4 F6 
1aa57     F9 FB FE 05 | 	byte	$07, $0a, $0b, $0d, $07, $05, $00, $f9, $f6, $f8, $f4, $f6, $f9, $fb, $fe, $05
1aa5b     07 09 0D 0B 
1aa5f     07 04 FF F8 
1aa63     F7 F6 F4 F7 
1aa67     F9 FA 00 05 | 	byte	$07, $09, $0d, $0b, $07, $04, $ff, $f8, $f7, $f6, $f4, $f7, $f9, $fa, $00, $05
1aa6b     06 0A 0D 0A 
1aa6f     06 03 FE F9 
1aa73     F8 F5 F4 F9 
1aa77     F9 FB 00 04 | 	byte	$06, $0a, $0d, $0a, $06, $03, $fe, $f9, $f8, $f5, $f4, $f9, $f9, $fb, $00, $04
1aa7b     07 09 0C 08 
1aa7f     08 02 FB F9 
1aa83     F8 F5 F6 F8 
1aa87     F9 FC 01 03 | 	byte	$07, $09, $0c, $08, $08, $02, $fb, $f9, $f8, $f5, $f6, $f8, $f9, $fc, $01, $03
1aa8b     07 0C 0A 08 
1aa8f     08 01 FB FA 
1aa93     F7 F5 F7 F9 
1aa97     F8 FE 02 02 | 	byte	$07, $0c, $0a, $08, $08, $01, $fb, $fa, $f7, $f5, $f7, $f9, $f8, $fe, $02, $02
1aa9b     08 0C 09 08 
1aa9f     07 00 FD FA 
1aaa3     F7 F4 FA F7 
1aaa7     F9 00 01 03 | 	byte	$08, $0c, $09, $08, $07, $00, $fd, $fa, $f7, $f4, $fa, $f7, $f9, $00, $01, $03
1aaab     09 09 08 0A 
1aaaf     05 FE FC FB 
1aab3     F5 F7 F8 F8 
1aab7     FB 00 00 04 | 	byte	$09, $09, $08, $0a, $05, $fe, $fc, $fb, $f5, $f7, $f8, $f8, $fb, $00, $00, $04
1aabb     0B 08 08 09 
1aabf     05 FE FD F9 
1aac3     F6 F8 F7 F7 
1aac7     FD 00 00 05 | 	byte	$0b, $08, $08, $09, $05, $fe, $fd, $f9, $f6, $f8, $f7, $f7, $fd, $00, $00, $05
1aacb     0A 08 09 09 
1aacf     02 00 FD F7 
1aad3     F7 FB F6 F7 
1aad7     FE 00 00 06 | 	byte	$0a, $08, $09, $09, $02, $00, $fd, $f7, $f7, $fb, $f6, $f7, $fe, $00, $00, $06
1aadb     08 08 0B 07 
1aadf     01 00 FD F5 
1aae3     F8 F9 F7 F9 
1aae7     FD FE 01 08 | 	byte	$08, $08, $0b, $07, $01, $00, $fd, $f5, $f8, $f9, $f7, $f9, $fd, $fe, $01, $08
1aaeb     05 08 0B 07 
1aaef     00 00 FB F7 
1aaf3     F9 F8 F7 FC 
1aaf7     FD FD 03 07 | 	byte	$05, $08, $0b, $07, $00, $00, $fb, $f7, $f9, $f8, $f7, $fc, $fd, $fd, $03, $07
1aafb     06 09 0A 04 
1aaff     02 00 FA F8 
1ab03     FA F7 F8 FC 
1ab07     FD FF 04 05 | 	byte	$06, $09, $0a, $04, $02, $00, $fa, $f8, $fa, $f7, $f8, $fc, $fd, $ff, $04, $05
1ab0b     06 0B 08 03 
1ab0f     03 FF F9 F9 
1ab13     F9 F7 F9 FC 
1ab17     FB 00 05 03 | 	byte	$06, $0b, $08, $03, $03, $ff, $f9, $f9, $f9, $f7, $f9, $fc, $fb, $00, $05, $03
1ab1b     07 0B 07 03 
1ab1f     03 FD F9 FA 
1ab23     F8 F7 FB FC 
1ab27     FA 01 04 04 | 	byte	$07, $0b, $07, $03, $03, $fd, $f9, $fa, $f8, $f7, $fb, $fc, $fa, $01, $04, $04
1ab2b     07 0A 06 05 
1ab2f     01 FB FA FB 
1ab33     F7 F8 FC FA 
1ab37     FE 00 03 05 | 	byte	$07, $0a, $06, $05, $01, $fb, $fa, $fb, $f7, $f8, $fc, $fa, $fe, $00, $03, $05
1ab3b     09 08 05 05 
1ab3f     01 FB FB FA 
1ab43     F7 FB FA FA 
1ab47     FE 02 01 05 | 	byte	$09, $08, $05, $05, $01, $fb, $fb, $fa, $f7, $fb, $fa, $fa, $fe, $02, $01, $05
1ab4b     0A 07 05 06 
1ab4f     00 FC FB F9 
1ab53     F8 FC FA F9 
1ab57     00 02 01 06 | 	byte	$0a, $07, $05, $06, $00, $fc, $fb, $f9, $f8, $fc, $fa, $f9, $00, $02, $01, $06
1ab5b     08 07 08 04 
1ab5f     FF FD FC F7 
1ab63     F8 FC FA FB 
1ab67     00 00 03 07 | 	byte	$08, $07, $08, $04, $ff, $fd, $fc, $f7, $f8, $fc, $fa, $fb, $00, $00, $03, $07
1ab6b     07 06 09 03 
1ab6f     FE FD FC F8 
1ab73     FA FB F9 FD 
1ab77     00 00 03 09 | 	byte	$07, $06, $09, $03, $fe, $fd, $fc, $f8, $fa, $fb, $f9, $fd, $00, $00, $03, $09
1ab7b     06 07 07 02 
1ab7f     FE FD FA F9 
1ab83     FB FA F8 FE 
1ab87     00 00 04 07 | 	byte	$06, $07, $07, $02, $fe, $fd, $fa, $f9, $fb, $fa, $f8, $fe, $00, $00, $04, $07
1ab8b     06 08 06 00 
1ab8f     00 FD F8 F9 
1ab93     FD F9 F9 FE 
1ab97     FF 01 05 05 | 	byte	$06, $08, $06, $00, $00, $fd, $f8, $f9, $fd, $f9, $f9, $fe, $ff, $01, $05, $05
1ab9b     06 09 06 00 
1ab9f     FF FD F9 FA 
1aba3     FB F9 FB FE 
1aba7     FE 01 06 05 | 	byte	$06, $09, $06, $00, $ff, $fd, $f9, $fa, $fb, $f9, $fb, $fe, $fe, $01, $06, $05
1abab     06 09 04 00 
1abaf     00 FB FA FC 
1abb3     FA F9 FC FE 
1abb7     FE 02 05 05 | 	byte	$06, $09, $04, $00, $00, $fb, $fa, $fc, $fa, $f9, $fc, $fe, $fe, $02, $05, $05
1abbb     08 08 03 02 
1abbf     FF FA FB FC 
1abc3     FA F9 FC FD 
1abc7     FF 03 04 05 | 	byte	$08, $08, $03, $02, $ff, $fa, $fb, $fc, $fa, $f9, $fc, $fd, $ff, $03, $04, $05
1abcb     09 07 02 01 
1abcf     FF FA FC FC 
1abd3     FA FA FC FC 
1abd7     00 04 04 06 | 	byte	$09, $07, $02, $01, $ff, $fa, $fc, $fc, $fa, $fa, $fc, $fc, $00, $04, $04, $06
1abdb     09 07 03 01 
1abdf     FD FB FC FB 
1abe3     F9 FC FC FC 
1abe7     00 03 03 07 | 	byte	$09, $07, $03, $01, $fd, $fb, $fc, $fb, $f9, $fc, $fc, $fc, $00, $03, $03, $07
1abeb     08 05 03 01 
1abef     FB FB FD FA 
1abf3     FA FB FB FD 
1abf7     01 02 04 08 | 	byte	$08, $05, $03, $01, $fb, $fb, $fd, $fa, $fa, $fb, $fb, $fd, $01, $02, $04, $08
1abfb     08 04 04 00 
1abff     FC FB FC FA 
1ac03     FB FB FA FF 
1ac07     01 01 04 08 | 	byte	$08, $04, $04, $00, $fc, $fb, $fc, $fa, $fb, $fb, $fa, $ff, $01, $01, $04, $08
1ac0b     07 05 03 FF 
1ac0f     FC FD FB FA 
1ac13     FB FC FA FF 
1ac17     01 02 05 08 | 	byte	$07, $05, $03, $ff, $fc, $fd, $fb, $fa, $fb, $fc, $fa, $ff, $01, $02, $05, $08
1ac1b     06 06 03 FE 
1ac1f     FC FD FB FA 
1ac23     FC FA FC FF 
1ac27     01 02 06 07 | 	byte	$06, $06, $03, $fe, $fc, $fd, $fb, $fa, $fc, $fa, $fc, $ff, $01, $02, $06, $07
1ac2b     06 06 02 FE 
1ac2f     FD FD FB FC 
1ac33     FB FA FC 00 
1ac37     00 03 06 07 | 	byte	$06, $06, $02, $fe, $fd, $fd, $fb, $fc, $fb, $fa, $fc, $00, $00, $03, $06, $07
1ac3b     06 06 01 FE 
1ac3f     FE FB FB FC 
1ac43     FB F9 FD 00 
1ac47     00 04 06 05 | 	byte	$06, $06, $01, $fe, $fe, $fb, $fb, $fc, $fb, $f9, $fd, $00, $00, $04, $06, $05
1ac4b     07 06 FF FE 
1ac4f     FE FC FB FC 
1ac53     F9 FB FE FF 
1ac57     00 05 06 05 | 	byte	$07, $06, $ff, $fe, $fe, $fc, $fb, $fc, $f9, $fb, $fe, $ff, $00, $05, $06, $05
1ac5b     07 05 00 FE 
1ac5f     FE FB FD FB 
1ac63     F9 FB FF FE 
1ac67     01 05 05 06 | 	byte	$07, $05, $00, $fe, $fe, $fb, $fd, $fb, $f9, $fb, $ff, $fe, $01, $05, $05, $06
1ac6b     07 03 00 00 
1ac6f     FC FC FD FC 
1ac73     F8 FD FE FE 
1ac77     02 05 04 07 | 	byte	$07, $03, $00, $00, $fc, $fc, $fd, $fc, $f8, $fd, $fe, $fe, $02, $05, $04, $07
1ac7b     07 01 00 FF 
1ac7f     FB FC FE FA 
1ac83     F9 FD FD FF 
1ac87     04 04 05 08 | 	byte	$07, $01, $00, $ff, $fb, $fc, $fe, $fa, $f9, $fd, $fd, $ff, $04, $04, $05, $08
1ac8b     06 01 00 FF 
1ac8f     FB FD FD F9 
1ac93     FA FD FC 00 
1ac97     04 03 06 08 | 	byte	$06, $01, $00, $ff, $fb, $fd, $fd, $f9, $fa, $fd, $fc, $00, $04, $03, $06, $08
1ac9b     04 01 01 FD 
1ac9f     FC FE FC F9 
1aca3     FB FC FD 01 
1aca7     03 03 08 08 | 	byte	$04, $01, $01, $fd, $fc, $fe, $fc, $f9, $fb, $fc, $fd, $01, $03, $03, $08, $08
1acab     02 03 00 FC 
1acaf     FD FF FB FA 
1acb3     FC FB FD 02 
1acb7     02 03 08 06 | 	byte	$02, $03, $00, $fc, $fd, $ff, $fb, $fa, $fc, $fb, $fd, $02, $02, $03, $08, $06
1acbb     03 02 FF FC 
1acbf     FF FD FA FB 
1acc3     FC FA FF 01 
1acc7     02 05 08 04 | 	byte	$03, $02, $ff, $fc, $ff, $fd, $fa, $fb, $fc, $fa, $ff, $01, $02, $05, $08, $04
1accb     04 02 FE FC 
1accf     FF FD F9 FC 
1acd3     FA FC 00 01 
1acd7     01 06 07 04 | 	byte	$04, $02, $fe, $fc, $ff, $fd, $f9, $fc, $fa, $fc, $00, $01, $01, $06, $07, $04
1acdb     04 01 FD FE 
1acdf     FE FB FB FC 
1ace3     FA FC 00 00 
1ace7     03 07 06 05 | 	byte	$04, $01, $fd, $fe, $fe, $fb, $fb, $fc, $fa, $fc, $00, $00, $03, $07, $06, $05
1aceb     05 00 FD FF 
1acef     FE FA FC FB 
1acf3     F9 FE 00 00 
1acf7     04 07 05 05 | 	byte	$05, $00, $fd, $ff, $fe, $fa, $fc, $fb, $f9, $fe, $00, $00, $04, $07, $05, $05
1acfb     05 FF FE FF 
1acff     FC FB FC FA 
1ad03     FA FF FF 00 
1ad07     05 06 05 06 | 	byte	$05, $ff, $fe, $ff, $fc, $fb, $fc, $fa, $fa, $ff, $ff, $00, $05, $06, $05, $06
1ad0b     03 FF FF FF 
1ad0f     FC FD FC F8 
1ad13     FB FF FF 01 
1ad17     06 05 06 06 | 	byte	$03, $ff, $ff, $ff, $fc, $fd, $fc, $f8, $fb, $ff, $ff, $01, $06, $05, $06, $06
1ad1b     02 FF 00 FD 
1ad1f     FC FD FB F9 
1ad23     FD FF FF 03 
1ad27     05 05 06 06 | 	byte	$02, $ff, $00, $fd, $fc, $fd, $fb, $f9, $fd, $ff, $ff, $03, $05, $05, $06, $06
1ad2b     00 00 00 FD 
1ad2f     FC FD FA FA 
1ad33     FE FD 00 04 
1ad37     04 05 07 05 | 	byte	$00, $00, $00, $fd, $fc, $fd, $fa, $fa, $fe, $fd, $00, $04, $04, $05, $07, $05
1ad3b     00 00 FF FC 
1ad3f     FE FC F9 FB 
1ad43     FD FD 00 04 
1ad47     04 06 07 03 | 	byte	$00, $00, $ff, $fc, $fe, $fc, $f9, $fb, $fd, $fd, $00, $04, $04, $06, $07, $03
1ad4b     00 00 FE FD 
1ad4f     FE FB F9 FC 
1ad53     FD FD 02 04 
1ad57     04 07 07 02 | 	byte	$00, $00, $fe, $fd, $fe, $fb, $f9, $fc, $fd, $fd, $02, $04, $04, $07, $07, $02
1ad5b     00 00 FD FD 
1ad5f     FE FA FA FD 
1ad63     FC FF 02 03 
1ad67     04 08 05 02 | 	byte	$00, $00, $fd, $fd, $fe, $fa, $fa, $fd, $fc, $ff, $02, $03, $04, $08, $05, $02
1ad6b     01 00 FD FE 
1ad6f     FD F9 FB FC 
1ad73     FC 00 03 02 
1ad77     05 07 04 02 | 	byte	$01, $00, $fd, $fe, $fd, $f9, $fb, $fc, $fc, $00, $03, $02, $05, $07, $04, $02
1ad7b     01 FE FD FE 
1ad7f     FC FA FC FC 
1ad83     FC 00 02 02 
1ad87     06 07 03 03 | 	byte	$01, $fe, $fd, $fe, $fc, $fa, $fc, $fc, $fc, $00, $02, $02, $06, $07, $03, $03
1ad8b     00 FE FE FE 
1ad8f     FB FA FD FB 
1ad93     FD 00 02 03 
1ad97     07 05 03 03 | 	byte	$00, $fe, $fe, $fe, $fb, $fa, $fd, $fb, $fd, $00, $02, $03, $07, $05, $03, $03
1ad9b     00 FE FF FE 
1ad9f     FB FB FB FB 
1ada3     FE 00 01 04 
1ada7     06 05 03 03 | 	byte	$00, $fe, $ff, $fe, $fb, $fb, $fb, $fb, $fe, $00, $01, $04, $06, $05, $03, $03
1adab     FF FE FF FD 
1adaf     FB FB FB FC 
1adb3     FF 00 02 05 
1adb7     07 04 04 01 | 	byte	$ff, $fe, $ff, $fd, $fb, $fb, $fb, $fc, $ff, $00, $02, $05, $07, $04, $04, $01
1adbb     FF FF FF FC 
1adbf     FC FB FB FC 
1adc3     00 00 03 06 
1adc7     05 05 04 01 | 	byte	$ff, $ff, $ff, $fc, $fc, $fb, $fb, $fc, $00, $00, $03, $06, $05, $05, $04, $01
1adcb     FF FF FE FC 
1adcf     FC FB FA FE 
1add3     00 00 04 05 
1add7     05 04 04 00 | 	byte	$ff, $ff, $fe, $fc, $fc, $fb, $fa, $fe, $00, $00, $04, $05, $05, $04, $04, $00
1addb     FF FF FD FC 
1addf     FC FA FB FE 
1ade3     00 00 04 05 
1ade7     05 05 03 00 | 	byte	$ff, $ff, $fd, $fc, $fc, $fa, $fb, $fe, $00, $00, $04, $05, $05, $05, $03, $00
1adeb     00 FF FD FC 
1adef     FC FA FB FE 
1adf3     00 01 04 05 
1adf7     05 05 01 00 | 	byte	$00, $ff, $fd, $fc, $fc, $fa, $fb, $fe, $00, $01, $04, $05, $05, $05, $01, $00
1adfb     00 FF FD FD 
1adff     FC FA FC FE 
1ae03     00 02 04 04 
1ae07     05 04 01 00 | 	byte	$00, $ff, $fd, $fd, $fc, $fa, $fc, $fe, $00, $02, $04, $04, $05, $04, $01, $00
1ae0b     00 FE FD FD 
1ae0f     FB FB FD FE 
1ae13     00 02 04 05 
1ae17     05 04 01 00 | 	byte	$00, $fe, $fd, $fd, $fb, $fb, $fd, $fe, $00, $02, $04, $05, $05, $04, $01, $00
1ae1b     00 FD FD FD 
1ae1f     FB FB FD FE 
1ae23     00 03 04 05 
1ae27     05 03 01 00 | 	byte	$00, $fd, $fd, $fd, $fb, $fb, $fd, $fe, $00, $03, $04, $05, $05, $03, $01, $00
1ae2b     FF FD FD FC 
1ae2f     FB FC FD FE 
1ae33     01 03 04 06 
1ae37     05 03 00 00 | 	byte	$ff, $fd, $fd, $fc, $fb, $fc, $fd, $fe, $01, $03, $04, $06, $05, $03, $00, $00
1ae3b     FF FE FD FB 
1ae3f     FC FC FD FF 
1ae43     01 03 04 05 
1ae47     04 02 01 00 | 	byte	$ff, $fe, $fd, $fb, $fc, $fc, $fd, $ff, $01, $03, $04, $05, $04, $02, $01, $00
1ae4b     FE FE FD FB 
1ae4f     FC FC FD FF 
1ae53     01 03 04 05 
1ae57     04 02 01 00 | 	byte	$fe, $fe, $fd, $fb, $fc, $fc, $fd, $ff, $01, $03, $04, $05, $04, $02, $01, $00
1ae5b     FE FE FD FC 
1ae5f     FC FD FD 00 
1ae63     02 03 04 05 
1ae67     04 02 00 FF | 	byte	$fe, $fe, $fd, $fc, $fc, $fd, $fd, $00, $02, $03, $04, $05, $04, $02, $00, $ff
1ae6b     FF FE FD FB 
1ae6f     FC FD FE 00 
1ae73     02 03 05 05 
1ae77     03 02 00 FF | 	byte	$ff, $fe, $fd, $fb, $fc, $fd, $fe, $00, $02, $03, $05, $05, $03, $02, $00, $ff
1ae7b     FE FE FC FB 
1ae7f     FC FC FE 00 
1ae83     02 04 05 04 
1ae87     03 02 00 FF | 	byte	$fe, $fe, $fc, $fb, $fc, $fc, $fe, $00, $02, $04, $05, $04, $03, $02, $00, $ff
1ae8b     FE FE FC FC 
1ae8f     FC FD FF 00 
1ae93     02 04 05 04 
1ae97     03 02 00 FF | 	byte	$fe, $fe, $fc, $fc, $fc, $fd, $ff, $00, $02, $04, $05, $04, $03, $02, $00, $ff
1ae9b     FE FD FC FC 
1ae9f     FC FD FF 00 
1aea3     02 04 05 04 
1aea7     02 02 00 FF | 	byte	$fe, $fd, $fc, $fc, $fc, $fd, $ff, $00, $02, $04, $05, $04, $02, $02, $00, $ff
1aeab     FE FD FC FC 
1aeaf     FC FD 00 00 
1aeb3     02 04 05 03 
1aeb7     03 01 00 FF | 	byte	$fe, $fd, $fc, $fc, $fc, $fd, $00, $00, $02, $04, $05, $03, $03, $01, $00, $ff
1aebb     FE FD FD FC 
1aebf     FC FE 00 00 
1aec3     03 04 04 03 
1aec7     03 00 00 FF | 	byte	$fe, $fd, $fd, $fc, $fc, $fe, $00, $00, $03, $04, $04, $03, $03, $00, $00, $ff
1aecb     FE FD FD FD 
1aecf     FC FE 00 01 
1aed3     03 04 03 03 
1aed7     02 00 00 FF | 	byte	$fe, $fd, $fd, $fd, $fc, $fe, $00, $01, $03, $04, $03, $03, $02, $00, $00, $ff
1aedb     FD FD FD FC 
1aedf     FD FF 00 01 
1aee3     04 04 04 03 
1aee7     02 00 00 FF | 	byte	$fd, $fd, $fd, $fc, $fd, $ff, $00, $01, $04, $04, $04, $03, $02, $00, $00, $ff
1aeeb     FD FD FD FC 
1aeef     FD FF 00 01 
1aef3     04 04 03 03 
1aef7     01 00 00 FE | 	byte	$fd, $fd, $fd, $fc, $fd, $ff, $00, $01, $04, $04, $03, $03, $01, $00, $00, $fe
1aefb     FD FE FC FC 
1aeff     FE FF 00 02 
1af03     04 04 04 03 
1af07     01 00 00 FE | 	byte	$fd, $fe, $fc, $fc, $fe, $ff, $00, $02, $04, $04, $04, $03, $01, $00, $00, $fe
1af0b     FE FE FC FC 
1af0f     FE FF 00 02 
1af13     03 03 04 02 
1af17     00 00 FF FE | 	byte	$fe, $fe, $fc, $fc, $fe, $ff, $00, $02, $03, $03, $04, $02, $00, $00, $ff, $fe
1af1b     FE FD FC FD 
1af1f     FE FF 01 03 
1af23     03 04 04 02 
1af27     00 00 FF FE | 	byte	$fe, $fd, $fc, $fd, $fe, $ff, $01, $03, $03, $04, $04, $02, $00, $00, $ff, $fe
1af2b     FE FD FC FE 
1af2f     FE FF 01 03 
1af33     03 04 03 01 
1af37     01 00 FE FE | 	byte	$fe, $fd, $fc, $fe, $fe, $ff, $01, $03, $03, $04, $03, $01, $01, $00, $fe, $fe
1af3b     FE FD FC FE 
1af3f     FE 00 01 02 
1af43     03 04 03 01 
1af47     01 00 FE FE | 	byte	$fe, $fd, $fc, $fe, $fe, $00, $01, $02, $03, $04, $03, $01, $01, $00, $fe, $fe
1af4b     FE FD FD FE 
1af4f     FE 00 02 02 
1af53     03 04 02 01 
1af57     00 00 FF FF | 	byte	$fe, $fd, $fd, $fe, $fe, $00, $02, $02, $03, $04, $02, $01, $00, $00, $ff, $ff
1af5b     FD FD FE FE 
1af5f     FE 00 01 02 
1af63     04 03 02 01 
1af67     00 FF FF FF | 	byte	$fd, $fd, $fe, $fe, $fe, $00, $01, $02, $04, $03, $02, $01, $00, $ff, $ff, $ff
1af6b     FD FD FE FE 
1af6f     FF 00 01 03 
1af73     04 03 02 01 
1af77     00 FF FF FE | 	byte	$fd, $fd, $fe, $fe, $ff, $00, $01, $03, $04, $03, $02, $01, $00, $ff, $ff, $fe
1af7b     FD FE FD FE 
1af7f     00 00 01 03 
1af83     04 02 02 01 
1af87     00 FF FF FE | 	byte	$fd, $fe, $fd, $fe, $00, $00, $01, $03, $04, $02, $02, $01, $00, $ff, $ff, $fe
1af8b     FD FE FD FE 
1af8f     00 00 01 03 
1af93     03 02 02 01 
1af97     00 00 FF FE | 	byte	$fd, $fe, $fd, $fe, $00, $00, $01, $03, $03, $02, $02, $01, $00, $00, $ff, $fe
1af9b     FE FE FD FE 
1af9f     00 00 02 03 
1afa3     03 02 02 00 
1afa7     00 FF FF FE | 	byte	$fe, $fe, $fd, $fe, $00, $00, $02, $03, $03, $02, $02, $00, $00, $ff, $ff, $fe
1afab     FE FE FD FF 
1afaf     00 00 02 03 
1afb3     03 02 02 00 
1afb7     00 FF FE FE | 	byte	$fe, $fe, $fd, $ff, $00, $00, $02, $03, $03, $02, $02, $00, $00, $ff, $fe, $fe
1afbb     FE FE FE FF 
1afbf     00 01 02 03 
1afc3     02 03 01 00 
1afc7     00 FF FE FE | 	byte	$fe, $fe, $fe, $ff, $00, $01, $02, $03, $02, $03, $01, $00, $00, $ff, $fe, $fe
1afcb     FE FE FE FF 
1afcf     00 01 03 02 
1afd3     02 02 01 00 
1afd7     00 FF FE FE | 	byte	$fe, $fe, $fe, $ff, $00, $01, $03, $02, $02, $02, $01, $00, $00, $ff, $fe, $fe
1afdb     FE FE FF 00 
1afdf     00 01 02 02 
1afe3     02 02 00 00 
1afe7     00 FE FE FE | 	byte	$fe, $fe, $ff, $00, $00, $01, $02, $02, $02, $02, $00, $00, $00, $fe, $fe, $fe
1afeb     FE FE FF 00 
1afef     00 01 02 02 
1aff3     02 02 00 00 
1aff7     00 FE FE FE | 	byte	$fe, $fe, $ff, $00, $00, $01, $02, $02, $02, $02, $00, $00, $00, $fe, $fe, $fe
1affb     FE FE FF 00 
1afff     00 02 02 02 
1b003     02 01 00 00 
1b007     FF FF FF FE | 	byte	$fe, $fe, $ff, $00, $00, $02, $02, $02, $02, $01, $00, $00, $ff, $ff, $ff, $fe
1b00b     FE FF FF 00 
1b00f     00 02 02 02 
1b013     02 01 00 00 
1b017     FF FF FF FE | 	byte	$fe, $ff, $ff, $00, $00, $02, $02, $02, $02, $01, $00, $00, $ff, $ff, $ff, $fe
1b01b     FE FF FF 00 
1b01f     00 01 02 03 
1b023     02 01 00 00 
1b027     FF FF FF FE | 	byte	$fe, $ff, $ff, $00, $00, $01, $02, $03, $02, $01, $00, $00, $ff, $ff, $ff, $fe
1b02b     FE FF FF 00 
1b02f     01 01 02 02 
1b033     02 00 00 00 
1b037     FF FF FF FE | 	byte	$fe, $ff, $ff, $00, $01, $01, $02, $02, $02, $00, $00, $00, $ff, $ff, $ff, $fe
1b03b     FE FF FF 00 
1b03f     01 01 02 02 
1b043     01 01 00 00 
1b047     FF FF FE FE | 	byte	$fe, $ff, $ff, $00, $01, $01, $02, $02, $01, $01, $00, $00, $ff, $ff, $fe, $fe
1b04b     FF FF FF 00 
1b04f     01 01 02 02 
1b053     01 01 00 FF 
1b057     FF FF FE FE | 	byte	$ff, $ff, $ff, $00, $01, $01, $02, $02, $01, $01, $00, $ff, $ff, $ff, $fe, $fe
1b05b     FF FF 00 00 
1b05f     01 01 02 02 
1b063     01 01 00 FF 
1b067     FF FF FE FF | 	byte	$ff, $ff, $00, $00, $01, $01, $02, $02, $01, $01, $00, $ff, $ff, $ff, $fe, $ff
1b06b     FF FF 00 00 
1b06f     01 01 02 01 
1b073     01 00 00 FF 
1b077     FF FF FE FF | 	byte	$ff, $ff, $00, $00, $01, $01, $02, $01, $01, $00, $00, $ff, $ff, $ff, $fe, $ff
1b07b     FF FF 00 00 
1b07f     00 02 02 01 
1b083     01 00 00 00 
1b087     FF FF FF FF | 	byte	$ff, $ff, $00, $00, $00, $02, $02, $01, $01, $00, $00, $00, $ff, $ff, $ff, $ff
1b08b     FF FF 00 00 
1b08f     01 02 02 01 
1b093     01 00 00 00 
1b097     FF FF FF FF | 	byte	$ff, $ff, $00, $00, $01, $02, $02, $01, $01, $00, $00, $00, $ff, $ff, $ff, $ff
1b09b     FF 00 00 00 
1b09f     01 02 01 01 
1b0a3     01 00 00 00 
1b0a7     FF FF FF FF | 	byte	$ff, $00, $00, $00, $01, $02, $01, $01, $01, $00, $00, $00, $ff, $ff, $ff, $ff
1b0ab     FF 00 00 00 
1b0af     01 02 01 01 
1b0b3     01 00 00 00 
1b0b7     00 00 00 02 | 	byte	$ff, $00, $00, $00, $01, $02, $01, $01, $01, $00, $00, $00, $00, $00, $00, $02
1b0bb     00 03 03 FA 
1b0bf     F5 0C 22 1E 
1b0c3     06 E7 D4 CF 
1b0c7     E0 00 F8 E2 | 	byte	$00, $03, $03, $fa, $f5, $0c, $22, $1e, $06, $e7, $d4, $cf, $e0, $00, $f8, $e2
1b0cb     D2 C7 DD F1 
1b0cf     E8 C3 B0 BB 
1b0d3     CA C8 D7 E8 
1b0d7     DF E1 EB F1 | 	byte	$d2, $c7, $dd, $f1, $e8, $c3, $b0, $bb, $ca, $c8, $d7, $e8, $df, $e1, $eb, $f1
1b0db     F2 E2 EE FD 
1b0df     02 FD F6 EB 
1b0e3     E1 D5 C9 D0 
1b0e7     E9 FA F6 F4 | 	byte	$f2, $e2, $ee, $fd, $02, $fd, $f6, $eb, $e1, $d5, $c9, $d0, $e9, $fa, $f6, $f4
1b0eb     FB FF 09 1D 
1b0ef     27 FF EE FD 
1b0f3     1A 2E 2E 35 
1b0f7     34 23 14 17 | 	byte	$fb, $ff, $09, $1d, $27, $ff, $ee, $fd, $1a, $2e, $2e, $35, $34, $23, $14, $17
1b0fb     1F 11 0C 0E 
1b0ff     18 2A 2F 22 
1b103     0B EF E5 E5 
1b107     F7 18 1B 0C | 	byte	$1f, $11, $0c, $0e, $18, $2a, $2f, $22, $0b, $ef, $e5, $e5, $f7, $18, $1b, $0c
1b10b     08 16 23 17 
1b10f     02 F7 EA F4 
1b113     F1 F9 EF E9 
1b117     DF D3 DB E1 | 	byte	$08, $16, $23, $17, $02, $f7, $ea, $f4, $f1, $f9, $ef, $e9, $df, $d3, $db, $e1
1b11b     F9 FE F7 FF 
1b11f     0B 1B 2B 1F 
1b123     03 FD 0F 23 
1b127     3D 31 30 23 | 	byte	$f9, $fe, $f7, $ff, $0b, $1b, $2b, $1f, $03, $fd, $0f, $23, $3d, $31, $30, $23
1b12b     19 1C 2C 29 
1b12f     FB E5 DC E3 
1b133     EF E7 DB D3 
1b137     E3 ED EF F2 | 	byte	$19, $1c, $2c, $29, $fb, $e5, $dc, $e3, $ef, $e7, $db, $d3, $e3, $ed, $ef, $f2
1b13b     F9 F2 F6 07 
1b13f     0F 17 1D 23 
1b143     1A 05 FD 0B 
1b147     12 05 FB FD | 	byte	$f9, $f2, $f6, $07, $0f, $17, $1d, $23, $1a, $05, $fd, $0b, $12, $05, $fb, $fd
1b14b     01 FF 04 03 
1b14f     ED D5 DF EA 
1b153     F6 F8 EE F9 
1b157     0F 13 02 EB | 	byte	$01, $ff, $04, $03, $ed, $d5, $df, $ea, $f6, $f8, $ee, $f9, $0f, $13, $02, $eb
1b15b     F4 F3 E7 E4 
1b15f     F1 01 FD ED 
1b163     DE E5 DD E3 
1b167     DB E5 DD DE | 	byte	$f4, $f3, $e7, $e4, $f1, $01, $fd, $ed, $de, $e5, $dd, $e3, $db, $e5, $dd, $de
1b16b     E4 F1 FC FF 
1b16f     F4 00 FC F4 
1b173     E6 F2 12 27 
1b177     1E 16 05 F1 | 	byte	$e4, $f1, $fc, $ff, $f4, $00, $fc, $f4, $e6, $f2, $12, $27, $1e, $16, $05, $f1
1b17b     ED F4 01 01 
1b17f     FF 09 11 04 
1b183     F9 F7 F4 03 
1b187     FF 05 04 0D | 	byte	$ed, $f4, $01, $01, $ff, $09, $11, $04, $f9, $f7, $f4, $03, $ff, $05, $04, $0d
1b18b     16 16 12 03 
1b18f     01 EE E2 EA 
1b193     F3 F0 FF 19 
1b197     10 FD F7 07 | 	byte	$16, $16, $12, $03, $01, $ee, $e2, $ea, $f3, $f0, $ff, $19, $10, $fd, $f7, $07
1b19b     0F 06 07 16 
1b19f     27 28 2F 31 
1b1a3     39 31 31 29 
1b1a7     2C 40 3D 38 | 	byte	$0f, $06, $07, $16, $27, $28, $2f, $31, $39, $31, $31, $29, $2c, $40, $3d, $38
1b1ab     47 4B 39 1F 
1b1af     07 EF DF D9 
1b1b3     DB DE E2 04 
1b1b7     1E 19 F9 D5 | 	byte	$47, $4b, $39, $1f, $07, $ef, $df, $d9, $db, $de, $e2, $04, $1e, $19, $f9, $d5
1b1bb     DC F5 0B 12 
1b1bf     09 09 0E FF 
1b1c3     DE CE D1 CB 
1b1c7     DB F3 F8 E8 | 	byte	$dc, $f5, $0b, $12, $09, $09, $0e, $ff, $de, $ce, $d1, $cb, $db, $f3, $f8, $e8
1b1cb     EB E3 DA C4 
1b1cf     B0 B5 CB DC 
1b1d3     D4 DD F8 0C 
1b1d7     09 FA E5 DE | 	byte	$eb, $e3, $da, $c4, $b0, $b5, $cb, $dc, $d4, $dd, $f8, $0c, $09, $fa, $e5, $de
1b1db     EA F3 EF F3 
1b1df     E5 DB DE DE 
1b1e3     D0 CA D9 E2 
1b1e7     F3 F1 FC 06 | 	byte	$ea, $f3, $ef, $f3, $e5, $db, $de, $de, $d0, $ca, $d9, $e2, $f3, $f1, $fc, $06
1b1eb     1A 0B 12 26 
1b1ef     33 2A 19 14 
1b1f3     0F 13 27 35 
1b1f7     33 25 0B 11 | 	byte	$1a, $0b, $12, $26, $33, $2a, $19, $14, $0f, $13, $27, $35, $33, $25, $0b, $11
1b1fb     21 1F 0B 01 
1b1ff     01 0A 0F 03 
1b203     F7 F3 E8 E8 
1b207     F9 15 1D 0A | 	byte	$21, $1f, $0b, $01, $01, $0a, $0f, $03, $f7, $f3, $e8, $e8, $f9, $15, $1d, $0a
1b20b     10 26 22 0B 
1b20f     F1 E4 ED ED 
1b213     EC EB EA F0 
1b217     E8 DF D5 E3 | 	byte	$10, $26, $22, $0b, $f1, $e4, $ed, $ed, $ec, $eb, $ea, $f0, $e8, $df, $d5, $e3
1b21b     F7 08 07 08 
1b21f     02 0C 1B 24 
1b223     11 FB 0D 20 
1b227     22 2D 24 15 | 	byte	$f7, $08, $07, $08, $02, $0c, $1b, $24, $11, $fb, $0d, $20, $22, $2d, $24, $15
1b22b     13 24 39 2F 
1b22f     0D F2 D7 C7 
1b233     BE D1 E6 FD 
1b237     05 F3 D1 E7 | 	byte	$13, $24, $39, $2f, $0d, $f2, $d7, $c7, $be, $d1, $e6, $fd, $05, $f3, $d1, $e7
1b23b     09 19 FF 05 
1b23f     22 24 22 21 
1b243     11 F4 F5 02 
1b247     09 11 0E 10 | 	byte	$09, $19, $ff, $05, $22, $24, $22, $21, $11, $f4, $f5, $02, $09, $11, $0e, $10
1b24b     0A 0D 0F FC 
1b24f     EA F3 FA F5 
1b253     F1 FF 0E 04 
1b257     FE 06 F8 D8 | 	byte	$0a, $0d, $0f, $fc, $ea, $f3, $fa, $f5, $f1, $ff, $0e, $04, $fe, $06, $f8, $d8
1b25b     DD DC C5 C3 
1b25f     E1 F4 EF E2 
1b263     D2 C1 D0 DE 
1b267     D6 C6 D5 ED | 	byte	$dd, $dc, $c5, $c3, $e1, $f4, $ef, $e2, $d2, $c1, $d0, $de, $d6, $c6, $d5, $ed
1b26b     04 0D 25 33 
1b26f     20 F7 E3 E9 
1b273     E5 05 2B 30 
1b277     1D 08 F1 E1 | 	byte	$04, $0d, $25, $33, $20, $f7, $e3, $e9, $e5, $05, $2b, $30, $1d, $08, $f1, $e1
1b27b     F2 0D 0E 05 
1b27f     02 07 FF F9 
1b283     F5 F2 F9 05 
1b287     0B 04 FA 0E | 	byte	$f2, $0d, $0e, $05, $02, $07, $ff, $f9, $f5, $f2, $f9, $05, $0b, $04, $fa, $0e
1b28b     28 23 01 E8 
1b28f     EA E0 EA FD 
1b293     F7 F3 02 0B 
1b297     05 05 07 FB | 	byte	$28, $23, $01, $e8, $ea, $e0, $ea, $fd, $f7, $f3, $02, $0b, $05, $05, $07, $fb
1b29b     F6 05 1C 37 
1b29f     38 49 45 38 
1b2a3     28 2C 32 32 
1b2a7     3A 51 41 24 | 	byte	$f6, $05, $1c, $37, $38, $49, $45, $38, $28, $2c, $32, $32, $3a, $51, $41, $24
1b2ab     2D 3A 37 28 
1b2af     16 F4 D4 CF 
1b2b3     DA E4 EE 09 
1b2b7     0D F3 F4 F1 | 	byte	$2d, $3a, $37, $28, $16, $f4, $d4, $cf, $da, $e4, $ee, $09, $0d, $f3, $f4, $f1
1b2bb     ED E8 EB FB 
1b2bf     FD FB FC F2 
1b2c3     CA D7 E7 DA 
1b2c7     DD EF EA E3 | 	byte	$ed, $e8, $eb, $fb, $fd, $fb, $fc, $f2, $ca, $d7, $e7, $da, $dd, $ef, $ea, $e3
1b2cb     F1 F7 D5 B4 
1b2cf     B9 F1 0C 0F 
1b2d3     0A E8 D7 EA 
1b2d7     FD F8 DC DA | 	byte	$f1, $f7, $d5, $b4, $b9, $f1, $0c, $0f, $0a, $e8, $d7, $ea, $fd, $f8, $dc, $da
1b2db     F1 E3 D2 EB 
1b2df     F2 EF EF D7 
1b2e3     CA E4 F7 F3 
1b2e7     DF E7 F7 12 | 	byte	$f1, $e3, $d2, $eb, $f2, $ef, $ef, $d7, $ca, $e4, $f7, $f3, $df, $e7, $f7, $12
1b2eb     2A 4E 4A 32 
1b2ef     23 19 13 06 
1b2f3     00 1D 2E 3C 
1b2f7     39 21 08 05 | 	byte	$2a, $4e, $4a, $32, $23, $19, $13, $06, $00, $1d, $2e, $3c, $39, $21, $08, $05
1b2fb     12 0D 0F 1D 
1b2ff     11 ED E0 EA 
1b303     FC 09 0F 15 
1b307     00 E9 EF 0F | 	byte	$12, $0d, $0f, $1d, $11, $ed, $e0, $ea, $fc, $09, $0f, $15, $00, $e9, $ef, $0f
1b30b     1E 0F 0D 14 
1b30f     0C FB DB C3 
1b313     C2 D0 DE EC 
1b317     FF 07 F6 DD | 	byte	$1e, $0f, $0d, $14, $0c, $fb, $db, $c3, $c2, $d0, $de, $ec, $ff, $07, $f6, $dd
1b31b     E5 F4 08 1D 
1b31f     25 1F 11 FE 
1b323     FE 0A 12 17 
1b327     31 2A 17 0D | 	byte	$e5, $f4, $08, $1d, $25, $1f, $11, $fe, $fe, $0a, $12, $17, $31, $2a, $17, $0d
1b32b     0A 12 20 1A 
1b32f     0B F2 E6 D6 
1b333     C3 D9 FF 0B 
1b337     FD 01 0B FC | 	byte	$0a, $12, $20, $1a, $0b, $f2, $e6, $d6, $c3, $d9, $ff, $0b, $fd, $01, $0b, $fc
1b33b     DE E1 FE 11 
1b33f     15 21 2B 23 
1b343     18 09 FB FE 
1b347     0A 07 06 19 | 	byte	$de, $e1, $fe, $11, $15, $21, $2b, $23, $18, $09, $fb, $fe, $0a, $07, $06, $19
1b34b     27 16 04 18 
1b34f     20 18 0F 06 
1b353     EC CF D9 FA 
1b357     FD E9 CE BB | 	byte	$27, $16, $04, $18, $20, $18, $0f, $06, $ec, $cf, $d9, $fa, $fd, $e9, $ce, $bb
1b35b     B5 BF D3 E2 
1b35f     E7 F4 EB D1 
1b363     C6 D1 CC BF 
1b367     CC DF F0 08 | 	byte	$b5, $bf, $d3, $e2, $e7, $f4, $eb, $d1, $c6, $d1, $cc, $bf, $cc, $df, $f0, $08
1b36b     21 20 0F 00 
1b36f     01 F7 F0 F8 
1b373     0C 1E 2A 25 
1b377     07 EB EE F9 | 	byte	$21, $20, $0f, $00, $01, $f7, $f0, $f8, $0c, $1e, $2a, $25, $07, $eb, $ee, $f9
1b37b     F7 0D 21 24 
1b37f     FB F3 F2 EE 
1b383     EA F6 02 00 
1b387     F7 05 0E 1A | 	byte	$f7, $0d, $21, $24, $fb, $f3, $f2, $ee, $ea, $f6, $02, $00, $f7, $05, $0e, $1a
1b38b     03 F2 F0 EF 
1b38f     F9 F4 EA E2 
1b393     E9 EE F7 07 
1b397     10 1B 16 13 | 	byte	$03, $f2, $f0, $ef, $f9, $f4, $ea, $e2, $e9, $ee, $f7, $07, $10, $1b, $16, $13
1b39b     1A 32 4A 4F 
1b39f     3B 22 11 18 
1b3a3     2B 38 4C 5B 
1b3a7     53 35 25 1F | 	byte	$1a, $32, $4a, $4f, $3b, $22, $11, $18, $2b, $38, $4c, $5b, $53, $35, $25, $1f
1b3ab     19 1A 1D 17 
1b3af     05 F2 E2 DC 
1b3b3     EA EF FA FD 
1b3b7     FB F3 E3 D0 | 	byte	$19, $1a, $1d, $17, $05, $f2, $e2, $dc, $ea, $ef, $fa, $fd, $fb, $f3, $e3, $d0
1b3bb     C4 DB F0 F4 
1b3bf     E8 E5 DD DE 
1b3c3     E4 CF DB E8 
1b3c7     E8 E7 E5 EF | 	byte	$c4, $db, $f0, $f4, $e8, $e5, $dd, $de, $e4, $cf, $db, $e8, $e8, $e7, $e5, $ef
1b3cb     EF ED EF F6 
1b3cf     0C 14 03 DC 
1b3d3     BF C0 E0 F0 
1b3d7     E3 E5 EF F0 | 	byte	$ef, $ed, $ef, $f6, $0c, $14, $03, $dc, $bf, $c0, $e0, $f0, $e3, $e5, $ef, $f0
1b3db     EB F3 01 00 
1b3df     F6 DC D1 D5 
1b3e3     D8 F3 03 FE 
1b3e7     F6 F9 0D 13 | 	byte	$eb, $f3, $01, $00, $f6, $dc, $d1, $d5, $d8, $f3, $03, $fe, $f6, $f9, $0d, $13
1b3eb     17 1C 2E 42 
1b3ef     49 3C 1A FB 
1b3f3     02 0D 1A 26 
1b3f7     32 3B 28 07 | 	byte	$17, $1c, $2e, $42, $49, $3c, $1a, $fb, $02, $0d, $1a, $26, $32, $3b, $28, $07
1b3fb     F9 04 17 1E 
1b3ff     1D 0D F4 F0 
1b403     E8 E3 DB D4 
1b407     F1 17 25 17 | 	byte	$f9, $04, $17, $1e, $1d, $0d, $f4, $f0, $e8, $e3, $db, $d4, $f1, $17, $25, $17
1b40b     00 08 13 0C 
1b40f     F5 D7 D1 CE 
1b413     D0 CF E7 0B 
1b417     0F FF EC E9 | 	byte	$00, $08, $13, $0c, $f5, $d7, $d1, $ce, $d0, $cf, $e7, $0b, $0f, $ff, $ec, $e9
1b41b     FB 16 13 04 
1b41f     E7 F4 15 1F 
1b423     15 03 01 06 
1b427     09 0A 16 30 | 	byte	$fb, $16, $13, $04, $e7, $f4, $15, $1f, $15, $03, $01, $06, $09, $0a, $16, $30
1b42b     26 08 F2 00 
1b42f     18 10 F4 F3 
1b433     F8 F6 00 04 
1b437     FA D3 C0 D7 | 	byte	$26, $08, $f2, $00, $18, $10, $f4, $f3, $f8, $f6, $00, $04, $fa, $d3, $c0, $d7
1b43b     FE 19 1F 21 
1b43f     20 2A 2D 0D 
1b443     0A 1C 22 15 
1b447     13 27 2D 1D | 	byte	$fe, $19, $1f, $21, $20, $2a, $2d, $0d, $0a, $1c, $22, $15, $13, $27, $2d, $1d
1b44b     0E 0F 17 27 
1b44f     1F FB D9 D0 
1b453     E2 F1 F6 DB 
1b457     B9 AF AE CD | 	byte	$0e, $0f, $17, $27, $1f, $fb, $d9, $d0, $e2, $f1, $f6, $db, $b9, $af, $ae, $cd
1b45b     EE FF 02 DA 
1b45f     A9 A5 CB EB 
1b463     E5 DB D6 D7 
1b467     DC F3 FD F9 | 	byte	$ee, $ff, $02, $da, $a9, $a5, $cb, $eb, $e5, $db, $d6, $d7, $dc, $f3, $fd, $f9
1b46b     FC 06 15 31 
1b46f     31 1A 0C FE 
1b473     F4 03 14 2A 
1b477     25 02 E0 E0 | 	byte	$fc, $06, $15, $31, $31, $1a, $0c, $fe, $f4, $03, $14, $2a, $25, $02, $e0, $e0
1b47b     00 13 14 11 
1b47f     00 F9 E8 D0 
1b483     C3 D2 E9 07 
1b487     23 22 FE D7 | 	byte	$00, $13, $14, $11, $00, $f9, $e8, $d0, $c3, $d2, $e9, $07, $23, $22, $fe, $d7
1b48b     C8 E3 FD 12 
1b48f     0A FD E9 D1 
1b493     D6 01 26 34 
1b497     28 1F 1E 3F | 	byte	$c8, $e3, $fd, $12, $0a, $fd, $e9, $d1, $d6, $01, $26, $34, $28, $1f, $1e, $3f
1b49b     51 3D 21 15 
1b49f     19 34 4C 55 
1b4a3     52 44 2A 25 
1b4a7     25 33 41 35 | 	byte	$51, $3d, $21, $15, $19, $34, $4c, $55, $52, $44, $2a, $25, $25, $33, $41, $35
1b4ab     1B F6 00 18 
1b4af     0D 02 F9 E5 
1b4b3     D4 D0 C4 C5 
1b4b7     CB C3 BD CE | 	byte	$1b, $f6, $00, $18, $0d, $02, $f9, $e5, $d4, $d0, $c4, $c5, $cb, $c3, $bd, $ce
1b4bb     E2 DC C2 C4 
1b4bf     ED 16 07 E3 
1b4c3     CD CC D8 E7 
1b4c7     00 0B 03 EB | 	byte	$e2, $dc, $c2, $c4, $ed, $16, $07, $e3, $cd, $cc, $d8, $e7, $00, $0b, $03, $eb
1b4cb     DE EC 0F 13 
1b4cf     EC D3 D6 E6 
1b4d3     F1 F0 F8 04 
1b4d7     F8 E7 F1 04 | 	byte	$de, $ec, $0f, $13, $ec, $d3, $d6, $e6, $f1, $f0, $f8, $04, $f8, $e7, $f1, $04
1b4db     15 0F E7 CC 
1b4df     CA EC F7 F3 
1b4e3     F2 EB EA EF 
1b4e7     EB F7 0A 26 | 	byte	$15, $0f, $e7, $cc, $ca, $ec, $f7, $f3, $f2, $eb, $ea, $ef, $eb, $f7, $0a, $26
1b4eb     41 4B 49 3C 
1b4ef     28 15 0C 20 
1b4f3     38 34 1F 0F 
1b4f7     16 1B 13 11 | 	byte	$41, $4b, $49, $3c, $28, $15, $0c, $20, $38, $34, $1f, $0f, $16, $1b, $13, $11
1b4fb     0E 08 FB F8 
1b4ff     0A 15 F7 D7 
1b503     D0 EF 03 1B 
1b507     16 0F 01 E8 | 	byte	$0e, $08, $fb, $f8, $0a, $15, $f7, $d7, $d0, $ef, $03, $1b, $16, $0f, $01, $e8
1b50b     EF 05 0C 0B 
1b50f     EF D5 CF DF 
1b513     E5 F6 01 FE 
1b517     FB F3 E4 E0 | 	byte	$ef, $05, $0c, $0b, $ef, $d5, $cf, $df, $e5, $f6, $01, $fe, $fb, $f3, $e4, $e0
1b51b     E0 ED F9 05 
1b51f     09 11 0A 05 
1b523     F8 F1 FC 0A 
1b527     16 23 21 1D | 	byte	$e0, $ed, $f9, $05, $09, $11, $0a, $05, $f8, $f1, $fc, $0a, $16, $23, $21, $1d
1b52b     25 1A 0F 10 
1b52f     FE F7 F8 03 
1b533     05 F2 DA CE 
1b537     E0 FA 00 FC | 	byte	$25, $1a, $0f, $10, $fe, $f7, $f8, $03, $05, $f2, $da, $ce, $e0, $fa, $00, $fc
1b53b     08 16 17 29 
1b53f     3C 3F 34 18 
1b543     0F 1A 1D 1C 
1b547     2F 35 12 F4 | 	byte	$08, $16, $17, $29, $3c, $3f, $34, $18, $0f, $1a, $1d, $1c, $2f, $35, $12, $f4
1b54b     FF 01 FF F8 
1b54f     E0 E4 EC EB 
1b553     E0 D5 E1 E7 
1b557     EC F1 E2 DB | 	byte	$ff, $01, $ff, $f8, $e0, $e4, $ec, $eb, $e0, $d5, $e1, $e7, $ec, $f1, $e2, $db
1b55b     DC DA C9 C9 
1b55f     D2 E6 E2 C4 
1b563     BE D8 EE F4 
1b567     FE 01 16 2A | 	byte	$dc, $da, $c9, $c9, $d2, $e6, $e2, $c4, $be, $d8, $ee, $f4, $fe, $01, $16, $2a
1b56b     32 24 1F 17 
1b56f     07 07 23 33 
1b573     22 07 FD F4 
1b577     FF FD EB EF | 	byte	$32, $24, $1f, $17, $07, $07, $23, $33, $22, $07, $fd, $f4, $ff, $fd, $eb, $ef
1b57b     F6 FA F6 F2 
1b57f     E1 DD D3 CC 
1b583     DA ED E8 EC 
1b587     F6 05 02 FE | 	byte	$f6, $fa, $f6, $f2, $e1, $dd, $d3, $cc, $da, $ed, $e8, $ec, $f6, $05, $02, $fe
1b58b     F9 E6 E9 F8 
1b58f     FF 00 0C 16 
1b593     17 11 0F 23 
1b597     41 4B 3C 36 | 	byte	$f9, $e6, $e9, $f8, $ff, $00, $0c, $16, $17, $11, $0f, $23, $41, $4b, $3c, $36
1b59b     39 39 37 33 
1b59f     49 51 49 31 
1b5a3     26 2B 24 1D 
1b5a7     22 31 2F 25 | 	byte	$39, $39, $37, $33, $49, $51, $49, $31, $26, $2b, $24, $1d, $22, $31, $2f, $25
1b5ab     1A 0D 04 FA 
1b5af     E6 DE D7 C1 
1b5b3     B0 AD B2 BB 
1b5b7     C3 C4 D7 E7 | 	byte	$1a, $0d, $04, $fa, $e6, $de, $d7, $c1, $b0, $ad, $b2, $bb, $c3, $c4, $d7, $e7
1b5bb     E5 E3 E4 E7 
1b5bf     D9 E3 F6 F1 
1b5c3     D9 D0 E4 F1 
1b5c7     EC E5 F5 05 | 	byte	$e5, $e3, $e4, $e7, $d9, $e3, $f6, $f1, $d9, $d0, $e4, $f1, $ec, $e5, $f5, $05
1b5cb     07 EB DB DC 
1b5cf     E5 FD FD 06 
1b5d3     14 1A 11 06 
1b5d7     FB E8 F1 F5 | 	byte	$07, $eb, $db, $dc, $e5, $fd, $fd, $06, $14, $1a, $11, $06, $fb, $e8, $f1, $f5
1b5db     F2 E3 E1 F7 
1b5df     07 E9 CE BD 
1b5e3     D3 EB 08 11 
1b5e7     21 34 36 24 | 	byte	$f2, $e3, $e1, $f7, $07, $e9, $ce, $bd, $d3, $eb, $08, $11, $21, $34, $36, $24
1b5eb     25 3B 42 38 
1b5ef     3C 41 26 13 
1b5f3     17 23 20 03 
1b5f7     FC 06 0E 04 | 	byte	$25, $3b, $42, $38, $3c, $41, $26, $13, $17, $23, $20, $03, $fc, $06, $0e, $04
1b5fb     F2 EC EC 01 
1b5ff     03 F1 EE E0 
1b603     E5 ED F1 F9 
1b607     03 0E 17 03 | 	byte	$f2, $ec, $ec, $01, $03, $f1, $ee, $e0, $e5, $ed, $f1, $f9, $03, $0e, $17, $03
1b60b     E2 DA E7 F0 
1b60f     EF F3 02 03 
1b613     EC DC E1 E2 
1b617     F0 FA F5 F8 | 	byte	$e2, $da, $e7, $f0, $ef, $f3, $02, $03, $ec, $dc, $e1, $e2, $f0, $fa, $f5, $f8
1b61b     EA E3 EE 14 
1b61f     20 15 F1 DD 
1b623     DF EE FA 15 
1b627     37 59 4E 2B | 	byte	$ea, $e3, $ee, $14, $20, $15, $f1, $dd, $df, $ee, $fa, $15, $37, $59, $4e, $2b
1b62b     08 E7 E1 FA 
1b62f     F9 04 17 0A 
1b633     F3 D5 CC D4 
1b637     EF 10 2F 3A | 	byte	$08, $e7, $e1, $fa, $f9, $04, $17, $0a, $f3, $d5, $cc, $d4, $ef, $10, $2f, $3a
1b63b     31 1A 0C 0A 
1b63f     0A 15 23 28 
1b643     20 22 12 01 
1b647     11 12 07 09 | 	byte	$31, $1a, $0c, $0a, $0a, $15, $23, $28, $20, $22, $12, $01, $11, $12, $07, $09
1b64b     FA EA E3 E4 
1b64f     F1 00 05 FB 
1b653     F3 ED EC E4 
1b657     DF DA E3 E5 | 	byte	$fa, $ea, $e3, $e4, $f1, $00, $05, $fb, $f3, $ed, $ec, $e4, $df, $da, $e3, $e5
1b65b     E9 C8 D5 D3 
1b65f     C2 C1 D2 D7 
1b663     ED 0E 13 1A 
1b667     19 16 17 19 | 	byte	$e9, $c8, $d5, $d3, $c2, $c1, $d2, $d7, $ed, $0e, $13, $1a, $19, $16, $17, $19
1b66b     24 34 2F 16 
1b66f     0E 0F 0F 08 
1b673     FD F2 EE ED 
1b677     FA EF E2 DD | 	byte	$24, $34, $2f, $16, $0e, $0f, $0f, $08, $fd, $f2, $ee, $ed, $fa, $ef, $e2, $dd
1b67b     CC D0 EF F6 
1b67f     EA CA BF BD 
1b683     CC D3 E6 06 
1b687     18 13 07 F1 | 	byte	$cc, $d0, $ef, $f6, $ea, $ca, $bf, $bd, $cc, $d3, $e6, $06, $18, $13, $07, $f1
1b68b     F1 F2 03 1B 
1b68f     29 33 21 03 
1b693     05 14 33 61 
1b697     64 57 34 19 | 	byte	$f1, $f2, $03, $1b, $29, $33, $21, $03, $05, $14, $33, $61, $64, $57, $34, $19
1b69b     22 3E 5E 61 
1b69f     4F 39 1D 0C 
1b6a3     09 0E 1F 3D 
1b6a7     48 3F 32 25 | 	byte	$22, $3e, $5e, $61, $4f, $39, $1d, $0c, $09, $0e, $1f, $3d, $48, $3f, $32, $25
1b6ab     04 E2 D1 CB 
1b6af     E9 F7 E2 BE 
1b6b3     96 91 AE D2 
1b6b7     D8 E5 E6 DC | 	byte	$04, $e2, $d1, $cb, $e9, $f7, $e2, $be, $96, $91, $ae, $d2, $d8, $e5, $e6, $dc
1b6bb     DA D7 DF E5 
1b6bf     E1 F6 F4 D9 
1b6c3     D2 BF C9 EB 
1b6c7     05 1B 14 F6 | 	byte	$da, $d7, $df, $e5, $e1, $f6, $f4, $d9, $d2, $bf, $c9, $eb, $05, $1b, $14, $f6
1b6cb     E5 D9 EA F8 
1b6cf     16 1E 1C 17 
1b6d3     11 0A 01 E3 
1b6d7     D5 DD E8 F4 | 	byte	$e5, $d9, $ea, $f8, $16, $1e, $1c, $17, $11, $0a, $01, $e3, $d5, $dd, $e8, $f4
1b6db     FE 19 15 F3 
1b6df     DC CB D8 05 
1b6e3     2F 30 1C 0F 
1b6e7     05 15 29 3C | 	byte	$fe, $19, $15, $f3, $dc, $cb, $d8, $05, $2f, $30, $1c, $0f, $05, $15, $29, $3c
1b6eb     49 49 47 37 
1b6ef     30 30 36 32 
1b6f3     18 F2 FA FD 
1b6f7     FC F7 E9 E1 | 	byte	$49, $49, $47, $37, $30, $30, $36, $32, $18, $f2, $fa, $fd, $fc, $f7, $e9, $e1
1b6fb     E3 F6 FB EE 
1b6ff     E5 DF D1 E4 
1b703     FA F8 E8 FC 
1b707     F8 EE E1 E6 | 	byte	$e3, $f6, $fb, $ee, $e5, $df, $d1, $e4, $fa, $f8, $e8, $fc, $f8, $ee, $e1, $e6
1b70b     EF F5 FA 0B 
1b70f     11 FF F5 E9 
1b713     E9 01 20 19 
1b717     06 D6 BC C0 | 	byte	$ef, $f5, $fa, $0b, $11, $ff, $f5, $e9, $e9, $01, $20, $19, $06, $d6, $bc, $c0
1b71b     EF 20 2A 0A 
1b71f     EB E0 E3 FA 
1b723     0A 1D 29 29 
1b727     2C 29 0E FB | 	byte	$ef, $20, $2a, $0a, $eb, $e0, $e3, $fa, $0a, $1d, $29, $29, $2c, $29, $0e, $fb
1b72b     F2 EF F4 08 
1b72f     16 17 05 E6 
1b733     DB E9 02 19 
1b737     23 25 1E 04 | 	byte	$f2, $ef, $f4, $08, $16, $17, $05, $e6, $db, $e9, $02, $19, $23, $25, $1e, $04
1b73b     EF FA 0F 15 
1b73f     18 19 28 23 
1b743     00 F6 01 14 
1b747     25 23 0F 07 | 	byte	$ef, $fa, $0f, $15, $18, $19, $28, $23, $00, $f6, $01, $14, $25, $23, $0f, $07
1b74b     F4 E9 EA EB 
1b74f     E3 EC EC F8 
1b753     F1 E6 E2 E3 
1b757     DF D6 D1 DB | 	byte	$f4, $e9, $ea, $eb, $e3, $ec, $ec, $f8, $f1, $e6, $e2, $e3, $df, $d6, $d1, $db
1b75b     DB D5 CE DD 
1b75f     E6 F0 F3 F3 
1b763     F9 FE 07 16 
1b767     26 1F 24 30 | 	byte	$db, $d5, $ce, $dd, $e6, $f0, $f3, $f3, $f9, $fe, $07, $16, $26, $1f, $24, $30
1b76b     34 1C F0 EC 
1b76f     13 27 16 F3 
1b773     E3 E8 E5 E9 
1b777     E9 D7 CD D7 | 	byte	$34, $1c, $f0, $ec, $13, $27, $16, $f3, $e3, $e8, $e5, $e9, $e9, $d7, $cd, $d7
1b77b     E0 E6 D5 C5 
1b77f     C5 C4 B9 B3 
1b783     D2 F3 FF FA 
1b787     FB 0A 1B 2F | 	byte	$e0, $e6, $d5, $c5, $c5, $c4, $b9, $b3, $d2, $f3, $ff, $fa, $fb, $0a, $1b, $2f
1b78b     2B 11 0D 19 
1b78f     2A 24 22 2D 
1b793     37 41 44 45 
1b797     31 28 44 5D | 	byte	$2b, $11, $0d, $19, $2a, $24, $22, $2d, $37, $41, $44, $45, $31, $28, $44, $5d
1b79b     4F 46 45 32 
1b79f     1A 12 1E 26 
1b7a3     2A 22 17 11 
1b7a7     08 01 03 14 | 	byte	$4f, $46, $45, $32, $1a, $12, $1e, $26, $2a, $22, $17, $11, $08, $01, $03, $14
1b7ab     01 E8 DC F0 
1b7af     EB C5 93 9C 
1b7b3     B3 B6 C4 D1 
1b7b7     C9 CB DE E7 | 	byte	$01, $e8, $dc, $f0, $eb, $c5, $93, $9c, $b3, $b6, $c4, $d1, $c9, $cb, $de, $e7
1b7bb     EC EE EB F0 
1b7bf     E9 D9 CA B0 
1b7c3     B5 DB FC 06 
1b7c7     0C 0B 11 0B | 	byte	$ec, $ee, $eb, $f0, $e9, $d9, $ca, $b0, $b5, $db, $fc, $06, $0c, $0b, $11, $0b
1b7cb     FF FC F6 FC 
1b7cf     1C 1D 00 F5 
1b7d3     EC E1 E7 EB 
1b7d7     F2 02 0C 0B | 	byte	$ff, $fc, $f6, $fc, $1c, $1d, $00, $f5, $ec, $e1, $e7, $eb, $f2, $02, $0c, $0b
1b7db     08 03 0E 19 
1b7df     1D 1E 0F FD 
1b7e3     F9 FF 13 0E 
1b7e7     0B 23 3F 4A | 	byte	$08, $03, $0e, $19, $1d, $1e, $0f, $fd, $f9, $ff, $13, $0e, $0b, $23, $3f, $4a
1b7eb     3F 39 3C 4A 
1b7ef     54 38 1A 03 
1b7f3     ED EA F2 FC 
1b7f7     FC F0 DB D3 | 	byte	$3f, $39, $3c, $4a, $54, $38, $1a, $03, $ed, $ea, $f2, $fc, $fc, $f0, $db, $d3
1b7fb     D3 D8 E0 E3 
1b7ff     D7 D9 D6 DB 
1b803     CF B9 CB E1 
1b807     FE 15 1D 14 | 	byte	$d3, $d8, $e0, $e3, $d7, $d9, $d6, $db, $cf, $b9, $cb, $e1, $fe, $15, $1d, $14
1b80b     F9 E6 EC 0D 
1b80f     28 2E 27 0F 
1b813     F5 E7 EB EA 
1b817     E8 E1 EA 05 | 	byte	$f9, $e6, $ec, $0d, $28, $2e, $27, $0f, $f5, $e7, $eb, $ea, $e8, $e1, $ea, $05
1b81b     F8 FA FB 07 
1b81f     11 1B 19 13 
1b823     0A 05 0E 0E 
1b827     13 0F 05 02 | 	byte	$f8, $fa, $fb, $07, $11, $1b, $19, $13, $0a, $05, $0e, $0e, $13, $0f, $05, $02
1b82b     0A 0C 0C 0A 
1b82f     0E FE E9 E2 
1b833     F0 FE 18 18 
1b837     02 FB 06 0F | 	byte	$0a, $0c, $0c, $0a, $0e, $fe, $e9, $e2, $f0, $fe, $18, $18, $02, $fb, $06, $0f
1b83b     12 24 23 0D 
1b83f     FE FD 01 01 
1b843     13 33 47 3A 
1b847     1D 0D 00 F7 | 	byte	$12, $24, $23, $0d, $fe, $fd, $01, $01, $13, $33, $47, $3a, $1d, $0d, $00, $f7
1b84b     F3 F0 ED E1 
1b84f     EA EC E5 DC 
1b853     DA D3 E5 F2 
1b857     EC DE D9 D8 | 	byte	$f3, $f0, $ed, $e1, $ea, $ec, $e5, $dc, $da, $d3, $e5, $f2, $ec, $de, $d9, $d8
1b85b     CE ED F7 F5 
1b85f     EE EA E0 E8 
1b863     EE FA FF 11 
1b867     1E 19 15 0F | 	byte	$ce, $ed, $f7, $f5, $ee, $ea, $e0, $e8, $ee, $fa, $ff, $11, $1e, $19, $15, $0f
1b86b     11 11 0D 1A 
1b86f     26 08 E5 D1 
1b873     D7 E2 FB 0C 
1b877     00 F4 D1 CB | 	byte	$11, $11, $0d, $1a, $26, $08, $e5, $d1, $d7, $e2, $fb, $0c, $00, $f4, $d1, $cb
1b87b     D8 E4 D3 B0 
1b87f     AD C5 CE DD 
1b883     EF 05 0F 16 
1b887     22 35 34 32 | 	byte	$d8, $e4, $d3, $b0, $ad, $c5, $ce, $dd, $ef, $05, $0f, $16, $22, $35, $34, $32
1b88b     31 1F 11 19 
1b88f     2F 33 2B 1F 
1b893     21 27 2E 3B 
1b897     39 3F 4C 39 | 	byte	$31, $1f, $11, $19, $2f, $33, $2b, $1f, $21, $27, $2e, $3b, $39, $3f, $4c, $39
1b89b     2D 24 22 26 
1b89f     2C 33 2B 14 
1b8a3     F7 EA EE EE 
1b8a7     04 1A 23 1D | 	byte	$2d, $24, $22, $26, $2c, $33, $2b, $14, $f7, $ea, $ee, $ee, $04, $1a, $23, $1d
1b8ab     F5 D1 BC BA 
1b8af     C1 BA AD AE 
1b8b3     B6 BD C6 D9 
1b8b7     ED F6 E9 EA | 	byte	$f5, $d1, $bc, $ba, $c1, $ba, $ad, $ae, $b6, $bd, $c6, $d9, $ed, $f6, $e9, $ea
1b8bb     F5 E8 D1 C3 
1b8bf     B5 B7 CB F5 
1b8c3     14 19 08 F8 
1b8c7     FC FD 03 18 | 	byte	$f5, $e8, $d1, $c3, $b5, $b7, $cb, $f5, $14, $19, $08, $f8, $fc, $fd, $03, $18
1b8cb     1A 09 FB 00 
1b8cf     08 06 F8 F0 
1b8d3     F4 06 0F 14 
1b8d7     23 20 06 08 | 	byte	$1a, $09, $fb, $00, $08, $06, $f8, $f0, $f4, $06, $0f, $14, $23, $20, $06, $08
1b8db     23 39 3B 14 
1b8df     03 FB F9 F6 
1b8e3     F6 FC 0E 27 
1b8e7     40 4D 53 4D | 	byte	$23, $39, $3b, $14, $03, $fb, $f9, $f6, $f6, $fc, $0e, $27, $40, $4d, $53, $4d
1b8eb     41 3C 3F 36 
1b8ef     23 0F F6 E3 
1b8f3     E4 EB FC FB 
1b8f7     E0 C2 BE C3 | 	byte	$41, $3c, $3f, $36, $23, $0f, $f6, $e3, $e4, $eb, $fc, $fb, $e0, $c2, $be, $c3
1b8fb     C9 BD C2 CD 
1b8ff     C2 BA C2 D3 
1b903     DC E1 F6 0C 
1b907     20 23 26 1B | 	byte	$c9, $bd, $c2, $cd, $c2, $ba, $c2, $d3, $dc, $e1, $f6, $0c, $20, $23, $26, $1b
1b90b     FD 04 1A 2F 
1b90f     26 0D EF E0 
1b913     E3 E6 EA F5 
1b917     FE 0B 0A 0B | 	byte	$fd, $04, $1a, $2f, $26, $0d, $ef, $e0, $e3, $e6, $ea, $f5, $fe, $0b, $0a, $0b
1b91b     15 15 0D 0D 
1b91f     1F 23 0D FE 
1b923     FA 04 0E 0D 
1b927     1A 20 1E 09 | 	byte	$15, $15, $0d, $0d, $1f, $23, $0d, $fe, $fa, $04, $0e, $0d, $1a, $20, $1e, $09
1b92b     ED E6 E6 EB 
1b92f     00 06 00 F3 
1b933     DE E4 F6 07 
1b937     0B 12 21 1F | 	byte	$ed, $e6, $e6, $eb, $00, $06, $00, $f3, $de, $e4, $f6, $07, $0b, $12, $21, $1f
1b93b     0D 01 FD 01 
1b93f     17 30 4D 49 
1b943     33 24 0F 02 
1b947     0B 22 22 00 | 	byte	$0d, $01, $fd, $01, $17, $30, $4d, $49, $33, $24, $0f, $02, $0b, $22, $22, $00
1b94b     D9 D4 DF F4 
1b94f     F2 E0 CF D1 
1b953     E1 EC EF DC 
1b957     D0 D5 F6 0A | 	byte	$d9, $d4, $df, $f4, $f2, $e0, $cf, $d1, $e1, $ec, $ef, $dc, $d0, $d5, $f6, $0a
1b95b     FE E6 D3 CD 
1b95f     D6 D1 EB 02 
1b963     0D 09 FE F6 
1b967     05 13 20 15 | 	byte	$fe, $e6, $d3, $cd, $d6, $d1, $eb, $02, $0d, $09, $fe, $f6, $05, $13, $20, $15
1b96b     0D 0F 1D 1D 
1b96f     0B EB DF E1 
1b973     F8 0B 09 FA 
1b977     E6 E9 F3 EE | 	byte	$0d, $0f, $1d, $1d, $0b, $eb, $df, $e1, $f8, $0b, $09, $fa, $e6, $e9, $f3, $ee
1b97b     D8 BC B0 CB 
1b97f     F0 03 F8 F6 
1b983     05 18 1F 35 
1b987     4D 45 1E FB | 	byte	$d8, $bc, $b0, $cb, $f0, $03, $f8, $f6, $05, $18, $1f, $35, $4d, $45, $1e, $fb
1b98b     FC 17 2E 24 
1b98f     0E F5 F6 02 
1b993     23 3A 3B 40 
1b997     33 27 35 35 | 	byte	$fc, $17, $2e, $24, $0e, $f5, $f6, $02, $23, $3a, $3b, $40, $33, $27, $35, $35
1b99b     28 1B 23 2A 
1b99f     17 00 F4 F2 
1b9a3     03 19 16 04 
1b9a7     FF 09 FF D8 | 	byte	$28, $1b, $23, $2a, $17, $00, $f4, $f2, $03, $19, $16, $04, $ff, $09, $ff, $d8
1b9ab     B7 BD D5 D9 
1b9af     C8 B2 A8 B4 
1b9b3     CA D1 D1 E7 
1b9b7     F8 EB DE C9 | 	byte	$b7, $bd, $d5, $d9, $c8, $b2, $a8, $b4, $ca, $d1, $d1, $e7, $f8, $eb, $de, $c9
1b9bb     AA 9F B6 E4 
1b9bf     02 0A 05 F5 
1b9c3     E2 E1 F7 12 
1b9c7     23 2E 21 FD | 	byte	$aa, $9f, $b6, $e4, $02, $0a, $05, $f5, $e2, $e1, $f7, $12, $23, $2e, $21, $fd
1b9cb     F7 0F 1C 1D 
1b9cf     17 0E 0C 15 
1b9d3     24 16 0A 0F 
1b9d7     1E 30 3B 40 | 	byte	$f7, $0f, $1c, $1d, $17, $0e, $0c, $15, $24, $16, $0a, $0f, $1e, $30, $3b, $40
1b9db     27 09 FB FB 
1b9df     F6 F4 FC 10 
1b9e3     12 17 1E 23 
1b9e7     3B 47 37 1F | 	byte	$27, $09, $fb, $fb, $f6, $f4, $fc, $10, $12, $17, $1e, $23, $3b, $47, $37, $1f
1b9eb     23 29 0B EC 
1b9ef     E2 E9 F7 F0 
1b9f3     E2 D6 BC BF 
1b9f7     C4 D5 DC DA | 	byte	$23, $29, $0b, $ec, $e2, $e9, $f7, $f0, $e2, $d6, $bc, $bf, $c4, $d5, $dc, $da
1b9fb     BC AC BA DC 
1b9ff     E2 D6 D4 EC 
1ba03     F7 15 34 38 
1ba07     24 1B 05 FB | 	byte	$bc, $ac, $ba, $dc, $e2, $d6, $d4, $ec, $f7, $15, $34, $38, $24, $1b, $05, $fb
1ba0b     0A 1D 1E 03 
1ba0f     ED DF E3 E6 
1ba13     EF F5 FF 10 
1ba17     1D 19 17 1B | 	byte	$0a, $1d, $1e, $03, $ed, $df, $e3, $e6, $ef, $f5, $ff, $10, $1d, $19, $17, $1b
1ba1b     15 05 03 02 
1ba1f     08 07 11 17 
1ba23     27 2C 28 17 
1ba27     07 02 F0 F0 | 	byte	$15, $05, $03, $02, $08, $07, $11, $17, $27, $2c, $28, $17, $07, $02, $f0, $f0
1ba2b     EF FB FB F2 
1ba2f     D7 D6 EB F5 
1ba33     FC F0 EA FB 
1ba37     0A 12 0E FC | 	byte	$ef, $fb, $fb, $f2, $d7, $d6, $eb, $f5, $fc, $f0, $ea, $fb, $0a, $12, $0e, $fc
1ba3b     F5 12 2F 41 
1ba3f     40 2C 15 0B 
1ba43     0C 0D 29 2F 
1ba47     19 F7 E9 ED | 	byte	$f5, $12, $2f, $41, $40, $2c, $15, $0b, $0c, $0d, $29, $2f, $19, $f7, $e9, $ed
1ba4b     E3 F8 FC F1 
1ba4f     F3 F4 E3 D6 
1ba53     D0 C7 C1 E6 
1ba57     08 0E 03 D9 | 	byte	$e3, $f8, $fc, $f1, $f3, $f4, $e3, $d6, $d0, $c7, $c1, $e6, $08, $0e, $03, $d9
1ba5b     D4 DB DC DE 
1ba5f     E2 E3 E7 F3 
1ba63     FC 02 0B 02 
1ba67     F6 03 22 2B | 	byte	$d4, $db, $dc, $de, $e2, $e3, $e7, $f3, $fc, $02, $0b, $02, $f6, $03, $22, $2b
1ba6b     16 F7 F2 F2 
1ba6f     FE 10 1E 17 
1ba73     01 E5 E9 F3 
1ba77     07 0B 07 E7 | 	byte	$16, $f7, $f2, $f2, $fe, $10, $1e, $17, $01, $e5, $e9, $f3, $07, $0b, $07, $e7
1ba7b     F1 02 0D 08 
1ba7f     F8 E3 F4 19 
1ba83     35 2E 1E 10 
1ba87     0D 17 12 07 | 	byte	$f1, $02, $0d, $08, $f8, $e3, $f4, $19, $35, $2e, $1e, $10, $0d, $17, $12, $07
1ba8b     FB 03 0C 13 
1ba8f     16 10 0D 10 
1ba93     10 17 20 1C 
1ba97     1C 27 21 20 | 	byte	$fb, $03, $0c, $13, $16, $10, $0d, $10, $10, $17, $20, $1c, $1c, $27, $21, $20
1ba9b     27 1C 14 09 
1ba9f     EF F3 18 39 
1baa3     44 38 21 06 
1baa7     F4 D9 D2 DD | 	byte	$27, $1c, $14, $09, $ef, $f3, $18, $39, $44, $38, $21, $06, $f4, $d9, $d2, $dd
1baab     D9 D1 CF CA 
1baaf     CA D4 DD D0 
1bab3     B1 A4 AE B5 
1bab7     CB CE BE C2 | 	byte	$d9, $d1, $cf, $ca, $ca, $d4, $dd, $d0, $b1, $a4, $ae, $b5, $cb, $ce, $be, $c2
1babb     DA E8 E0 D6 
1babf     E2 F2 F7 02 
1bac3     18 23 17 01 
1bac7     FD FA 12 29 | 	byte	$da, $e8, $e0, $d6, $e2, $f2, $f7, $02, $18, $23, $17, $01, $fd, $fa, $12, $29
1bacb     37 42 4D 48 
1bacf     32 1C 1F 16 
1bad3     11 23 43 3D 
1bad7     2C 1D 0A F0 | 	byte	$37, $42, $4d, $48, $32, $1c, $1f, $16, $11, $23, $43, $3d, $2c, $1d, $0a, $f0
1badb     EB 01 15 06 
1badf     F7 F4 09 29 
1bae3     35 1F 0F 11 
1bae7     0E 0C 10 01 | 	byte	$eb, $01, $15, $06, $f7, $f4, $09, $29, $35, $1f, $0f, $11, $0e, $0c, $10, $01
1baeb     E3 CE CC F0 
1baef     04 F9 E2 D6 
1baf3     C1 B3 AC CA 
1baf7     E2 ED DF CF | 	byte	$e3, $ce, $cc, $f0, $04, $f9, $e2, $d6, $c1, $b3, $ac, $ca, $e2, $ed, $df, $cf
1bafb     D6 E0 DB D0 
1baff     E9 0A 1B 1E 
1bb03     1B 16 18 17 
1bb07     1D 1D 14 04 | 	byte	$d6, $e0, $db, $d0, $e9, $0a, $1b, $1e, $1b, $16, $18, $17, $1d, $1d, $14, $04
1bb0b     02 00 F4 EB 
1bb0f     E7 E6 E4 F5 
1bb13     11 19 0F F6 
1bb17     EF 04 0B 0B | 	byte	$02, $00, $f4, $eb, $e7, $e6, $e4, $f5, $11, $19, $0f, $f6, $ef, $04, $0b, $0b
1bb1b     05 0D 0A 06 
1bb1f     07 27 3C 40 
1bb23     40 39 20 0B 
1bb27     01 02 01 F5 | 	byte	$05, $0d, $0a, $06, $07, $27, $3c, $40, $40, $39, $20, $0b, $01, $02, $01, $f5
1bb2b     DA C1 C0 E5 
1bb2f     EC E8 E2 E4 
1bb33     E3 CF CD F3 
1bb37     14 1F 25 25 | 	byte	$da, $c1, $c0, $e5, $ec, $e8, $e2, $e4, $e3, $cf, $cd, $f3, $14, $1f, $25, $25
1bb3b     18 0C 12 0E 
1bb3f     02 FA 01 0B 
1bb43     11 10 FF 00 
1bb47     0E 13 0A F9 | 	byte	$18, $0c, $12, $0e, $02, $fa, $01, $0b, $11, $10, $ff, $00, $0e, $13, $0a, $f9
1bb4b     FE 05 0A FD 
1bb4f     F1 E2 D5 EF 
1bb53     00 F1 DD E9 
1bb57     F1 EF DE E6 | 	byte	$fe, $05, $0a, $fd, $f1, $e2, $d5, $ef, $00, $f1, $dd, $e9, $f1, $ef, $de, $e6
1bb5b     F5 F1 CB AB 
1bb5f     AF EE 12 09 
1bb63     07 02 F8 EB 
1bb67     F2 FF FE F8 | 	byte	$f5, $f1, $cb, $ab, $af, $ee, $12, $09, $07, $02, $f8, $eb, $f2, $ff, $fe, $f8
1bb6b     04 1E 2F 1A 
1bb6f     10 02 00 EF 
1bb73     EF F5 06 14 
1bb77     1A 17 15 16 | 	byte	$04, $1e, $2f, $1a, $10, $02, $00, $ef, $ef, $f5, $06, $14, $1a, $17, $15, $16
1bb7b     13 0F 17 1A 
1bb7f     17 08 01 FD 
1bb83     F7 E9 FD 14 
1bb87     24 17 F6 F1 | 	byte	$13, $0f, $17, $1a, $17, $08, $01, $fd, $f7, $e9, $fd, $14, $24, $17, $f6, $f1
1bb8b     FA 02 FB F6 
1bb8f     F9 FB 09 22 
1bb93     20 02 E7 E7 
1bb97     00 0E 0C 1E | 	byte	$fa, $02, $fb, $f6, $f9, $fb, $09, $22, $20, $02, $e7, $e7, $00, $0e, $0c, $1e
1bb9b     2B 18 0F 18 
1bb9f     2D 3B 4E 47 
1bba3     37 15 F0 E7 
1bba7     F5 EE D3 CB | 	byte	$2b, $18, $0f, $18, $2d, $3b, $4e, $47, $37, $15, $f0, $e7, $f5, $ee, $d3, $cb
1bbab     D3 E4 E6 D0 
1bbaf     CB BB B2 A6 
1bbb3     9A AF CB DD 
1bbb7     E3 D4 C5 C8 | 	byte	$d3, $e4, $e6, $d0, $cb, $bb, $b2, $a6, $9a, $af, $cb, $dd, $e3, $d4, $c5, $c8
1bbbb     D6 D1 CE D7 
1bbbf     EA EE F7 F6 
1bbc3     F3 FC 1B 3C 
1bbc7     4D 4A 45 3E | 	byte	$d6, $d1, $ce, $d7, $ea, $ee, $f7, $f6, $f3, $fc, $1b, $3c, $4d, $4a, $45, $3e
1bbcb     43 3E 3F 3F 
1bbcf     48 50 57 54 
1bbd3     43 33 1B 02 
1bbd7     F7 F6 03 05 | 	byte	$43, $3e, $3f, $3f, $48, $50, $57, $54, $43, $33, $1b, $02, $f7, $f6, $03, $05
1bbdb     F6 E4 E2 F0 
1bbdf     04 19 2D 20 
1bbe3     02 EB F2 01 
1bbe7     FD EB E0 D3 | 	byte	$f6, $e4, $e2, $f0, $04, $19, $2d, $20, $02, $eb, $f2, $01, $fd, $eb, $e0, $d3
1bbeb     D9 E8 E2 E4 
1bbef     D3 C2 C1 CE 
1bbf3     DF DA D8 EE 
1bbf7     FC FB ED F5 | 	byte	$d9, $e8, $e2, $e4, $d3, $c2, $c1, $ce, $df, $da, $d8, $ee, $fc, $fb, $ed, $f5
1bbfb     07 16 14 0D 
1bbff     13 1D 11 19 
1bc03     1F 23 29 1E 
1bc07     10 F9 EB DD | 	byte	$07, $16, $14, $0d, $13, $1d, $11, $19, $1f, $23, $29, $1e, $10, $f9, $eb, $dd
1bc0b     F5 05 F8 E8 
1bc0f     DF F3 08 01 
1bc13     F4 E7 EA FB 
1bc17     FE 04 11 16 | 	byte	$f5, $05, $f8, $e8, $df, $f3, $08, $01, $f4, $e7, $ea, $fb, $fe, $04, $11, $16
1bc1b     13 12 23 43 
1bc1f     44 4C 47 39 
1bc23     10 EA F3 FD 
1bc27     00 FF F0 EE | 	byte	$13, $12, $23, $43, $44, $4c, $47, $39, $10, $ea, $f3, $fd, $00, $ff, $f0, $ee
1bc2b     DC C8 D0 D5 
1bc2f     CF DA E8 01 
1bc33     0C 05 04 11 
1bc37     10 01 01 03 | 	byte	$dc, $c8, $d0, $d5, $cf, $da, $e8, $01, $0c, $05, $04, $11, $10, $01, $01, $03
1bc3b     00 FC E8 E2 
1bc3f     DD E1 D8 DE 
1bc43     F8 19 34 2E 
1bc47     2E 1A FD F6 | 	byte	$00, $fc, $e8, $e2, $dd, $e1, $d8, $de, $f8, $19, $34, $2e, $2e, $1a, $fd, $f6
1bc4b     03 12 11 FD 
1bc4f     F5 05 0A 02 
1bc53     FB EB EF DD 
1bc57     CD C7 CA CE | 	byte	$03, $12, $11, $fd, $f5, $05, $0a, $02, $fb, $eb, $ef, $dd, $cd, $c7, $ca, $ce
1bc5b     C8 CA E2 EC 
1bc5f     FC 17 17 F8 
1bc63     E8 FD 1D 1D 
1bc67     10 08 0C 0D | 	byte	$c8, $ca, $e2, $ec, $fc, $17, $17, $f8, $e8, $fd, $1d, $1d, $10, $08, $0c, $0d
1bc6b     01 00 FC F5 
1bc6f     F6 F9 0B 21 
1bc73     0D F7 0D 2E 
1bc77     2E 1B 18 23 | 	byte	$01, $00, $fc, $f5, $f6, $f9, $0b, $21, $0d, $f7, $0d, $2e, $2e, $1b, $18, $23
1bc7b     1E 1E 1B 0D 
1bc7f     01 F4 F2 F9 
1bc83     03 00 FD F2 
1bc87     E6 D5 CA E2 | 	byte	$1e, $1e, $1b, $0d, $01, $f4, $f2, $f9, $03, $00, $fd, $f2, $e6, $d5, $ca, $e2
1bc8b     FF 06 F5 FB 
1bc8f     10 0C F0 EC 
1bc93     E9 EC F5 FD 
1bc97     0F 1D 23 30 | 	byte	$ff, $06, $f5, $fb, $10, $0c, $f0, $ec, $e9, $ec, $f5, $fd, $0f, $1d, $23, $30
1bc9b     43 46 3E 39 
1bc9f     3F 3C 24 06 
1bca3     FB 03 03 EC 
1bca7     E7 F0 EF EC | 	byte	$43, $46, $3e, $39, $3f, $3c, $24, $06, $fb, $03, $03, $ec, $e7, $f0, $ef, $ec
1bcab     DC C8 A9 A7 
1bcaf     BD D0 D7 C6 
1bcb3     B5 CF E5 D1 
1bcb7     B2 A7 B6 C8 | 	byte	$dc, $c8, $a9, $a7, $bd, $d0, $d7, $c6, $b5, $cf, $e5, $d1, $b2, $a7, $b6, $c8
1bcbb     BF B7 C6 DB 
1bcbf     E9 F4 08 1E 
1bcc3     26 35 3F 4C 
1bcc7     4B 47 5D 66 | 	byte	$bf, $b7, $c6, $db, $e9, $f4, $08, $1e, $26, $35, $3f, $4c, $4b, $47, $5d, $66
1bccb     66 5D 57 50 
1bccf     45 41 3F 32 
1bcd3     22 15 05 F6 
1bcd7     DC CF C9 E5 | 	byte	$66, $5d, $57, $50, $45, $41, $3f, $32, $22, $15, $05, $f6, $dc, $cf, $c9, $e5
1bcdb     01 0D 08 FD 
1bcdf     09 04 FF 09 
1bce3     1B 1C 07 FC 
1bce7     E5 BF AA A7 | 	byte	$01, $0d, $08, $fd, $09, $04, $ff, $09, $1b, $1c, $07, $fc, $e5, $bf, $aa, $a7
1bceb     B1 B3 C3 CC 
1bcef     E4 F0 EB D9 
1bcf3     E8 0D 1B 0E 
1bcf7     FD FA 0C 1F | 	byte	$b1, $b3, $c3, $cc, $e4, $f0, $eb, $d9, $e8, $0d, $1b, $0e, $fd, $fa, $0c, $1f
1bcfb     2D 30 25 25 
1bcff     2E 32 19 0E 
1bd03     05 FE EF E6 
1bd07     DB F2 01 00 | 	byte	$2d, $30, $25, $25, $2e, $32, $19, $0e, $05, $fe, $ef, $e6, $db, $f2, $01, $00
1bd0b     F4 E9 EE F9 
1bd0f     F2 EC F0 F1 
1bd13     E5 FD 16 10 
1bd17     F4 04 1D 2D | 	byte	$f4, $e9, $ee, $f9, $f2, $ec, $f0, $f1, $e5, $fd, $16, $10, $f4, $04, $1d, $2d
1bd1b     2D 1B 23 31 
1bd1f     40 25 0E 15 
1bd23     25 23 1F 16 
1bd27     01 F8 E7 DB | 	byte	$2d, $1b, $23, $31, $40, $25, $0e, $15, $25, $23, $1f, $16, $01, $f8, $e7, $db
1bd2b     DE D5 E2 F1 
1bd2f     FB F6 00 F5 
1bd33     EF F9 03 F9 
1bd37     DF D3 D1 D6 | 	byte	$de, $d5, $e2, $f1, $fb, $f6, $00, $f5, $ef, $f9, $03, $f9, $df, $d3, $d1, $d6
1bd3b     E7 D6 BE D1 
1bd3f     F7 08 0B 12 
1bd43     27 2F 12 0C 
1bd47     1E 3B 38 32 | 	byte	$e7, $d6, $be, $d1, $f7, $08, $0b, $12, $27, $2f, $12, $0c, $1e, $3b, $38, $32
1bd4b     21 09 FB E6 
1bd4f     E7 F7 05 F8 
1bd53     E3 E6 E8 C8 
1bd57     BA D6 E8 EF | 	byte	$21, $09, $fb, $e6, $e7, $f7, $05, $f8, $e3, $e6, $e8, $c8, $ba, $d6, $e8, $ef
1bd5b     ED F3 01 05 
1bd5f     15 1A 23 25 
1bd63     27 26 16 12 
1bd67     00 E7 E0 E9 | 	byte	$ed, $f3, $01, $05, $15, $1a, $23, $25, $27, $26, $16, $12, $00, $e7, $e0, $e9
1bd6b     D8 CD E7 06 
1bd6f     F7 F4 18 22 
1bd73     29 2C 27 17 
1bd77     0C 1B 35 35 | 	byte	$d8, $cd, $e7, $06, $f7, $f4, $18, $22, $29, $2c, $27, $17, $0c, $1b, $35, $35
1bd7b     22 13 11 FC 
1bd7f     ED DF DD D2 
1bd83     CF C2 C8 E6 
1bd87     FD F3 E0 04 | 	byte	$22, $13, $11, $fc, $ed, $df, $dd, $d2, $cf, $c2, $c8, $e6, $fd, $f3, $e0, $04
1bd8b     12 00 EF EC 
1bd8f     EF F2 F7 00 
1bd93     0A 08 02 0D 
1bd97     1D 2D 3A 36 | 	byte	$12, $00, $ef, $ec, $ef, $f2, $f7, $00, $0a, $08, $02, $0d, $1d, $2d, $3a, $36
1bd9b     2C 2B 23 0D 
1bd9f     13 24 2F 1E 
1bda3     1C 1A 07 F0 
1bda7     E9 DC CE CD | 	byte	$2c, $2b, $23, $0d, $13, $24, $2f, $1e, $1c, $1a, $07, $f0, $e9, $dc, $ce, $cd
1bdab     D9 DC D4 C7 
1bdaf     C4 BE A9 AB 
1bdb3     B9 C1 BD A5 
1bdb7     A1 B9 CB C3 | 	byte	$d9, $dc, $d4, $c7, $c4, $be, $a9, $ab, $b9, $c1, $bd, $a5, $a1, $b9, $cb, $c3
1bdbb     C4 E3 12 17 
1bdbf     11 20 31 2C 
1bdc3     29 32 55 65 
1bdc7     59 5D 66 66 | 	byte	$c4, $e3, $12, $17, $11, $20, $31, $2c, $29, $32, $55, $65, $59, $5d, $66, $66
1bdcb     59 47 37 28 
1bdcf     1C 0E 0A 16 
1bdd3     13 FB EB EB 
1bdd7     DE D1 E7 03 | 	byte	$59, $47, $37, $28, $1c, $0e, $0a, $16, $13, $fb, $eb, $eb, $de, $d1, $e7, $03
1bddb     02 F7 F3 10 
1bddf     22 23 21 0F 
1bde3     F9 CF C3 C1 
1bde7     C0 B3 AA BD | 	byte	$02, $f7, $f3, $10, $22, $23, $21, $0f, $f9, $cf, $c3, $c1, $c0, $b3, $aa, $bd
1bdeb     D6 D2 C6 D2 
1bdef     EA FE 09 14 
1bdf3     20 25 1B 15 
1bdf7     1E 1D 11 18 | 	byte	$d6, $d2, $c6, $d2, $ea, $fe, $09, $14, $20, $25, $1b, $15, $1e, $1d, $11, $18
1bdfb     19 1A 0F 16 
1bdff     06 FA E2 D2 
1be03     D8 EF 07 0B 
1be07     05 04 06 FC | 	byte	$19, $1a, $0f, $16, $06, $fa, $e2, $d2, $d8, $ef, $07, $0b, $05, $04, $06, $fc
1be0b     F2 EF E7 D2 
1be0f     DA F7 12 10 
1be13     0C 02 FA F2 
1be17     F9 0E 13 0E | 	byte	$f2, $ef, $e7, $d2, $da, $f7, $12, $10, $0c, $02, $fa, $f2, $f9, $0e, $13, $0e
1be1b     12 1A 2B 34 
1be1f     32 3D 41 36 
1be23     1F 17 1D 19 
1be27     07 03 01 FB | 	byte	$12, $1a, $2b, $34, $32, $3d, $41, $36, $1f, $17, $1d, $19, $07, $03, $01, $fb
1be2b     D9 CB BF D4 
1be2f     EE EE EA DA 
1be33     CC CA CC E5 
1be37     EC E1 D1 E1 | 	byte	$d9, $cb, $bf, $d4, $ee, $ee, $ea, $da, $cc, $ca, $cc, $e5, $ec, $e1, $d1, $e1
1be3b     FB 0B 19 1C 
1be3f     0F F7 F7 0B 
1be43     1A 24 3B 3F 
1be47     2F 1E 15 15 | 	byte	$fb, $0b, $19, $1c, $0f, $f7, $f7, $0b, $1a, $24, $3b, $3f, $2f, $1e, $15, $15
1be4b     FE DE D5 E8 
1be4f     01 07 F7 DE 
1be53     E5 E8 DB DC 
1be57     F1 01 05 07 | 	byte	$fe, $de, $d5, $e8, $01, $07, $f7, $de, $e5, $e8, $db, $dc, $f1, $01, $05, $07
1be5b     08 0B 0E 25 
1be5f     25 22 27 19 
1be63     FF EC D8 DE 
1be67     E7 F1 04 03 | 	byte	$08, $0b, $0e, $25, $25, $22, $27, $19, $ff, $ec, $d8, $de, $e7, $f1, $04, $03
1be6b     E4 E4 EF F4 
1be6f     07 22 30 24 
1be73     1E 21 2D 1D 
1be77     1C 19 06 F8 | 	byte	$e4, $e4, $ef, $f4, $07, $22, $30, $24, $1e, $21, $2d, $1d, $1c, $19, $06, $f8
1be7b     F4 EE DE D9 
1be7f     D7 D9 DB E1 
1be83     E8 ED F9 08 
1be87     F7 F7 19 1F | 	byte	$f4, $ee, $de, $d9, $d7, $d9, $db, $e1, $e8, $ed, $f9, $08, $f7, $f7, $19, $1f
1be8b     03 EA E3 F0 
1be8f     FE 0F 17 09 
1be93     00 09 0E 06 
1be97     FA 05 12 24 | 	byte	$03, $ea, $e3, $f0, $fe, $0f, $17, $09, $00, $09, $0e, $06, $fa, $05, $12, $24
1be9b     30 2F 30 35 
1be9f     33 24 13 10 
1bea3     0C 00 02 F6 
1bea7     E6 D9 D6 CB | 	byte	$30, $2f, $30, $35, $33, $24, $13, $10, $0c, $00, $02, $f6, $e6, $d9, $d6, $cb
1beab     A5 8D 9B B8 
1beaf     C7 BD BD C2 
1beb3     D4 DD D3 C8 
1beb7     C8 DF ED F7 | 	byte	$a5, $8d, $9b, $b8, $c7, $bd, $bd, $c2, $d4, $dd, $d3, $c8, $c8, $df, $ed, $f7
1bebb     0E 1C 1F 20 
1bebf     1B 22 29 35 
1bec3     4A 4C 47 50 
1bec7     58 53 41 33 | 	byte	$0e, $1c, $1f, $20, $1b, $22, $29, $35, $4a, $4c, $47, $50, $58, $53, $41, $33
1becb     21 22 29 27 
1becf     24 12 09 0A 
1bed3     07 0B 05 F6 
1bed7     EB EF EC E0 | 	byte	$21, $22, $29, $27, $24, $12, $09, $0a, $07, $0b, $05, $f6, $eb, $ef, $ec, $e0
1bedb     E9 0B 14 00 
1bedf     ED E8 D6 D7 
1bee3     CE DA ED F4 
1bee7     DD D1 C2 B5 | 	byte	$e9, $0b, $14, $00, $ed, $e8, $d6, $d7, $ce, $da, $ed, $f4, $dd, $d1, $c2, $b5
1beeb     B9 C3 E6 13 
1beef     18 08 0A 0F 
1bef3     0D 01 14 13 
1bef7     04 04 0C 00 | 	byte	$b9, $c3, $e6, $13, $18, $08, $0a, $0f, $0d, $01, $14, $13, $04, $04, $0c, $00
1befb     EA DF E5 EF 
1beff     09 03 F0 FE 
1bf03     07 12 04 09 
1bf07     1B 24 FC DD | 	byte	$ea, $df, $e5, $ef, $09, $03, $f0, $fe, $07, $12, $04, $09, $1b, $24, $fc, $dd
1bf0b     C6 C2 D4 F5 
1bf0f     F9 DC CC E6 
1bf13     F1 04 08 00 
1bf17     04 10 06 07 | 	byte	$c6, $c2, $d4, $f5, $f9, $dc, $cc, $e6, $f1, $04, $08, $00, $04, $10, $06, $07
1bf1b     2E 4A 56 40 
1bf1f     32 35 2B 19 
1bf23     23 2C 23 0F 
1bf27     05 F6 CE B5 | 	byte	$2e, $4a, $56, $40, $32, $35, $2b, $19, $23, $2c, $23, $0f, $05, $f6, $ce, $b5
1bf2b     B5 BD DF E1 
1bf2f     D9 D7 EA F0 
1bf33     E7 EE EC 03 
1bf37     16 13 08 00 | 	byte	$b5, $bd, $df, $e1, $d9, $d7, $ea, $f0, $e7, $ee, $ec, $03, $16, $13, $08, $00
1bf3b     FB F7 F1 DF 
1bf3f     F1 09 26 28 
1bf43     11 06 02 0C 
1bf47     13 0D 03 FE | 	byte	$fb, $f7, $f1, $df, $f1, $09, $26, $28, $11, $06, $02, $0c, $13, $0d, $03, $fe
1bf4b     F1 ED F4 03 
1bf4f     02 F9 F4 05 
1bf53     14 09 EF 00 
1bf57     03 FE F1 0B | 	byte	$f1, $ed, $f4, $03, $02, $f9, $f4, $05, $14, $09, $ef, $00, $03, $fe, $f1, $0b
1bf5b     25 24 17 09 
1bf5f     02 FA FA 01 
1bf63     0F 06 01 F4 
1bf67     F5 F7 00 E6 | 	byte	$25, $24, $17, $09, $02, $fa, $fa, $01, $0f, $06, $01, $f4, $f5, $f7, $00, $e6
1bf6b     E1 F6 FA E7 
1bf6f     F3 03 15 0F 
1bf73     13 0E 02 FE 
1bf77     02 F7 EA EF | 	byte	$e1, $f6, $fa, $e7, $f3, $03, $15, $0f, $13, $0e, $02, $fe, $02, $f7, $ea, $ef
1bf7b     EB ED F6 F5 
1bf7f     F7 FC FF 07 
1bf83     FD 02 1A 07 
1bf87     F3 F8 F7 EB | 	byte	$eb, $ed, $f6, $f5, $f7, $fc, $ff, $07, $fd, $02, $1a, $07, $f3, $f8, $f7, $eb
1bf8b     E2 F2 09 FB 
1bf8f     F3 F2 F7 FF 
1bf93     06 03 16 30 
1bf97     25 0A 0B 16 | 	byte	$e2, $f2, $09, $fb, $f3, $f2, $f7, $ff, $06, $03, $16, $30, $25, $0a, $0b, $16
1bf9b     2E 37 2D 22 
1bf9f     0A F5 FD FF 
1bfa3     FB E3 CE C5 
1bfa7     D2 C3 A8 A0 | 	byte	$2e, $37, $2d, $22, $0a, $f5, $fd, $ff, $fb, $e3, $ce, $c5, $d2, $c3, $a8, $a0
1bfab     A8 C1 CB DA 
1bfaf     EF EB E1 F3 
1bfb3     F9 FE 0F 0D 
1bfb7     08 F0 DE FA | 	byte	$a8, $c1, $cb, $da, $ef, $eb, $e1, $f3, $f9, $fe, $0f, $0d, $08, $f0, $de, $fa
1bfbb     16 2C 34 2D 
1bfbf     2B 32 33 29 
1bfc3     2F 4A 5D 4F 
1bfc7     46 3C 1C 0E | 	byte	$16, $2c, $34, $2d, $2b, $32, $33, $29, $2f, $4a, $5d, $4f, $46, $3c, $1c, $0e
1bfcb     25 35 3A 43 
1bfcf     2C 18 10 08 
1bfd3     FB FC FA F4 
1bfd7     D7 D8 EA F6 | 	byte	$25, $35, $3a, $43, $2c, $18, $10, $08, $fb, $fc, $fa, $f4, $d7, $d8, $ea, $f6
1bfdb     E7 EB EE F9 
1bfdf     E9 EB 00 04 
1bfe3     F1 F2 E3 D3 
1bfe7     D9 D3 C7 C8 | 	byte	$e7, $eb, $ee, $f9, $e9, $eb, $00, $04, $f1, $f2, $e3, $d3, $d9, $d3, $c7, $c8
1bfeb     C8 E3 F0 DF 
1bfef     DB EC 05 0A 
1bff3     01 01 11 17 
1bff7     0B EA DC E9 | 	byte	$c8, $e3, $f0, $df, $db, $ec, $05, $0a, $01, $01, $11, $17, $0b, $ea, $dc, $e9
1bffb     03 0D 18 25 
1bfff     12 11 14 14 
1c003     1A 0A F9 F9 
1c007     E3 D0 BD C7 | 	byte	$03, $0d, $18, $25, $12, $11, $14, $14, $1a, $0a, $f9, $f9, $e3, $d0, $bd, $c7
1c00b     DB E5 D7 CA 
1c00f     D9 FE 07 09 
1c013     19 27 1B 0F 
1c017     18 1D 26 41 | 	byte	$db, $e5, $d7, $ca, $d9, $fe, $07, $09, $19, $27, $1b, $0f, $18, $1d, $26, $41
1c01b     4C 36 18 16 
1c01f     1E 22 21 1B 
1c023     1C 0A F8 EE 
1c027     DC D9 D9 D1 | 	byte	$4c, $36, $18, $16, $1e, $22, $21, $1b, $1c, $0a, $f8, $ee, $dc, $d9, $d9, $d1
1c02b     CE DD E6 E6 
1c02f     E9 0B 15 12 
1c033     18 15 FA E9 
1c037     E9 FB EB EA | 	byte	$ce, $dd, $e6, $e6, $e9, $0b, $15, $12, $18, $15, $fa, $e9, $e9, $fb, $eb, $ea
1c03b     F0 FB 01 05 
1c03f     FC F7 0D 17 
1c043     0E 0B 1B 1F 
1c047     12 FB 06 1A | 	byte	$f0, $fb, $01, $05, $fc, $f7, $0d, $17, $0e, $0b, $1b, $1f, $12, $fb, $06, $1a
1c04b     15 0C 05 F5 
1c04f     FA 08 0C 0C 
1c053     09 05 FD FC 
1c057     00 03 07 20 | 	byte	$15, $0c, $05, $f5, $fa, $08, $0c, $0c, $09, $05, $fd, $fc, $00, $03, $07, $20
1c05b     28 0F 0A 0F 
1c05f     FE FC 00 10 
1c063     1B 07 F6 FB 
1c067     E8 C2 AF C1 | 	byte	$28, $0f, $0a, $0f, $fe, $fc, $00, $10, $1b, $07, $f6, $fb, $e8, $c2, $af, $c1
1c06b     D6 E0 E0 EA 
1c06f     00 FB FA F2 
1c073     00 0A 06 FC 
1c077     13 15 0F 11 | 	byte	$d6, $e0, $e0, $ea, $00, $fb, $fa, $f2, $00, $0a, $06, $fc, $13, $15, $0f, $11
1c07b     11 1B 1A FC 
1c07f     F9 FF F9 F4 
1c083     00 F8 EE EB 
1c087     EB EC E1 EF | 	byte	$11, $1b, $1a, $fc, $f9, $ff, $f9, $f4, $00, $f8, $ee, $eb, $eb, $ec, $e1, $ef
1c08b     F9 FD FB FA 
1c08f     02 19 1B 0B 
1c093     FF 08 1A 23 
1c097     14 0B 18 12 | 	byte	$f9, $fd, $fb, $fa, $02, $19, $1b, $0b, $ff, $08, $1a, $23, $14, $0b, $18, $12
1c09b     F4 F5 F2 ED 
1c09f     ED EC E4 E0 
1c0a3     CD C1 C3 CA 
1c0a7     BF AA C7 F0 | 	byte	$f4, $f5, $f2, $ed, $ed, $ec, $e4, $e0, $cd, $c1, $c3, $ca, $bf, $aa, $c7, $f0
1c0ab     02 04 FF 06 
1c0af     09 FA F2 F6 
1c0b3     FA F5 F5 01 
1c0b7     FE 07 1A 28 | 	byte	$02, $04, $ff, $06, $09, $fa, $f2, $f6, $fa, $f5, $f5, $01, $fe, $07, $1a, $28
1c0bb     25 1A 20 29 
1c0bf     32 43 4E 50 
1c0c3     57 47 3E 3B 
1c0c7     27 25 2F 36 | 	byte	$25, $1a, $20, $29, $32, $43, $4e, $50, $57, $47, $3e, $3b, $27, $25, $2f, $36
1c0cb     3A 32 28 1A 
1c0cf     0D FA F9 FC 
1c0d3     EB E3 DF D5 
1c0d7     D8 E5 EE E9 | 	byte	$3a, $32, $28, $1a, $0d, $fa, $f9, $fc, $eb, $e3, $df, $d5, $d8, $e5, $ee, $e9
1c0db     E8 FB 15 1A 
1c0df     1F 15 F6 D6 
1c0e3     D0 D2 C9 AD 
1c0e7     A8 AF BF CB | 	byte	$e8, $fb, $15, $1a, $1f, $15, $f6, $d6, $d0, $d2, $c9, $ad, $a8, $af, $bf, $cb
1c0eb     DA D3 D8 E3 
1c0ef     F2 07 0E 0C 
1c0f3     10 0F 18 0E 
1c0f7     05 0E 1E 1F | 	byte	$da, $d3, $d8, $e3, $f2, $07, $0e, $0c, $10, $0f, $18, $0e, $05, $0e, $1e, $1f
1c0fb     18 17 1F 10 
1c0ff     F4 F4 01 FE 
1c103     05 06 EB C8 
1c107     B7 BE DC E4 | 	byte	$18, $17, $1f, $10, $f4, $f4, $01, $fe, $05, $06, $eb, $c8, $b7, $be, $dc, $e4
1c10b     F3 FC 04 0F 
1c10f     12 14 1A 11 
1c113     09 1A 2B 28 
1c117     23 11 06 00 | 	byte	$f3, $fc, $04, $0f, $12, $14, $1a, $11, $09, $1a, $2b, $28, $23, $11, $06, $00
1c11b     03 14 21 20 
1c11f     1C 1B 0D 00 
1c123     FD F8 F7 F0 
1c127     F4 FE F8 F4 | 	byte	$03, $14, $21, $20, $1c, $1b, $0d, $00, $fd, $f8, $f7, $f0, $f4, $fe, $f8, $f4
1c12b     FA E9 EB ED 
1c12f     EB F3 F8 F5 
1c133     EF F9 FA F3 
1c137     F8 F5 F5 EB | 	byte	$fa, $e9, $eb, $ed, $eb, $f3, $f8, $f5, $ef, $f9, $fa, $f3, $f8, $f5, $f5, $eb
1c13b     DF EF FB 08 
1c13f     13 14 26 34 
1c143     37 2F 13 FE 
1c147     02 06 11 22 | 	byte	$df, $ef, $fb, $08, $13, $14, $26, $34, $37, $2f, $13, $fe, $02, $06, $11, $22
1c14b     2F 14 FF FA 
1c14f     01 01 FA FA 
1c153     03 03 15 25 
1c157     14 0A 05 11 | 	byte	$2f, $14, $ff, $fa, $01, $01, $fa, $fa, $03, $03, $15, $25, $14, $0a, $05, $11
1c15b     1D 26 2A 19 
1c15f     0B FE E8 D0 
1c163     CB CA C4 B5 
1c167     B5 C7 D5 CF | 	byte	$1d, $26, $2a, $19, $0b, $fe, $e8, $d0, $cb, $ca, $c4, $b5, $b5, $c7, $d5, $cf
1c16b     DC E0 D9 DA 
1c16f     FC 12 09 ED 
1c173     07 2B 41 3F 
1c177     1F 0C 0D 09 | 	byte	$dc, $e0, $d9, $da, $fc, $12, $09, $ed, $07, $2b, $41, $3f, $1f, $0c, $0d, $09
1c17b     00 F7 F4 02 
1c17f     F7 D7 CE E4 
1c183     E8 E3 E0 E6 
1c187     ED 01 1C 2A | 	byte	$00, $f7, $f4, $02, $f7, $d7, $ce, $e4, $e8, $e3, $e0, $e6, $ed, $01, $1c, $2a
1c18b     19 03 03 04 
1c18f     11 14 04 04 
1c193     0F 17 0A EB 
1c197     E2 E9 F3 EF | 	byte	$19, $03, $03, $04, $11, $14, $04, $04, $0f, $17, $0a, $eb, $e2, $e9, $f3, $ef
1c19b     F2 F3 EF E2 
1c19f     CB C1 D5 EC 
1c1a3     FB F4 F1 FC 
1c1a7     E8 EE FA FB | 	byte	$f2, $f3, $ef, $e2, $cb, $c1, $d5, $ec, $fb, $f4, $f1, $fc, $e8, $ee, $fa, $fb
1c1ab     F2 ED EA E6 
1c1af     E8 E5 DA F6 
1c1b3     0D 1B 25 1C 
1c1b7     04 05 0A 13 | 	byte	$f2, $ed, $ea, $e6, $e8, $e5, $da, $f6, $0d, $1b, $25, $1c, $04, $05, $0a, $13
1c1bb     30 49 5B 53 
1c1bf     43 34 41 4B 
1c1c3     47 45 48 46 
1c1c7     2C 20 27 31 | 	byte	$30, $49, $5b, $53, $43, $34, $41, $4b, $47, $45, $48, $46, $2c, $20, $27, $31
1c1cb     28 17 03 ED 
1c1cf     EF F4 DA D0 
1c1d3     E1 E8 E3 DC 
1c1d7     E5 01 08 0D | 	byte	$28, $17, $03, $ed, $ef, $f4, $da, $d0, $e1, $e8, $e3, $dc, $e5, $01, $08, $0d
1c1db     0B FE F0 DC 
1c1df     C1 B6 BD C2 
1c1e3     B2 9F A9 B7 
1c1e7     BC C3 D8 FE | 	byte	$0b, $fe, $f0, $dc, $c1, $b6, $bd, $c2, $b2, $9f, $a9, $b7, $bc, $c3, $d8, $fe
1c1eb     F9 E9 EA F4 
1c1ef     FF 07 12 23 
1c1f3     2E 4B 41 2B 
1c1f7     1C 14 0E 14 | 	byte	$f9, $e9, $ea, $f4, $ff, $07, $12, $23, $2e, $4b, $41, $2b, $1c, $14, $0e, $14
1c1fb     17 14 04 E6 
1c1ff     D3 DE E1 D7 
1c203     DB E1 E9 EF 
1c207     E7 FD 15 2C | 	byte	$17, $14, $04, $e6, $d3, $de, $e1, $d7, $db, $e1, $e9, $ef, $e7, $fd, $15, $2c
1c20b     23 0B FE FB 
1c20f     01 10 1A 12 
1c213     0A 0B FC F0 
1c217     F5 05 18 1F | 	byte	$23, $0b, $fe, $fb, $01, $10, $1a, $12, $0a, $0b, $fc, $f0, $f5, $05, $18, $1f
1c21b     19 19 08 03 
1c21f     0C 1F 2F 22 
1c223     0F 08 02 F8 
1c227     EF E1 EA F7 | 	byte	$19, $19, $08, $03, $0c, $1f, $2f, $22, $0f, $08, $02, $f8, $ef, $e1, $ea, $f7
1c22b     E4 CA CA CF 
1c22f     E2 F2 F7 FF 
1c233     EB E3 E0 D3 
1c237     D9 EF F4 07 | 	byte	$e4, $ca, $ca, $cf, $e2, $f2, $f7, $ff, $eb, $e3, $e0, $d3, $d9, $ef, $f4, $07
1c23b     1C 27 24 19 
1c23f     1F 37 34 2A 
1c243     2D 2D 24 1C 
1c247     FD 00 22 37 | 	byte	$1c, $27, $24, $19, $1f, $37, $34, $2a, $2d, $2d, $24, $1c, $fd, $00, $22, $37
1c24b     24 07 00 1D 
1c24f     2A 15 0A 13 
1c253     1F 23 14 14 
1c257     1F 13 14 0E | 	byte	$24, $07, $00, $1d, $2a, $15, $0a, $13, $1f, $23, $14, $14, $1f, $13, $14, $0e
1c25b     06 FA DA CF 
1c25f     DB E1 C1 B2 
1c263     C2 BE BF B6 
1c267     BB D5 E4 D5 | 	byte	$06, $fa, $da, $cf, $db, $e1, $c1, $b2, $c2, $be, $bf, $b6, $bb, $d5, $e4, $d5
1c26b     C1 CD E6 0F 
1c26f     2D 30 37 3C 
1c273     33 23 1A 0A 
1c277     0A 0D FC DC | 	byte	$c1, $cd, $e6, $0f, $2d, $30, $37, $3c, $33, $23, $1a, $0a, $0a, $0d, $fc, $dc
1c27b     D4 E4 D8 C9 
1c27f     D1 E1 F4 03 
1c283     0C 06 07 09 
1c287     04 0F 22 1B | 	byte	$d4, $e4, $d8, $c9, $d1, $e1, $f4, $03, $0c, $06, $07, $09, $04, $0f, $22, $1b
1c28b     12 FF FF 02 
1c28f     F8 F4 08 0E 
1c293     01 F3 01 F8 
1c297     E1 D4 D3 D1 | 	byte	$12, $ff, $ff, $02, $f8, $f4, $08, $0e, $01, $f3, $01, $f8, $e1, $d4, $d3, $d1
1c29b     E5 EA E0 EE 
1c29f     03 17 14 08 
1c2a3     02 F7 E7 DE 
1c2a7     F4 09 F9 E0 | 	byte	$e5, $ea, $e0, $ee, $03, $17, $14, $08, $02, $f7, $e7, $de, $f4, $09, $f9, $e0
1c2ab     CE B5 CB 05 
1c2af     22 13 09 05 
1c2b3     14 1F 1D 17 
1c2b7     15 17 29 3E | 	byte	$ce, $b5, $cb, $05, $22, $13, $09, $05, $14, $1f, $1d, $17, $15, $17, $29, $3e
1c2bb     4F 4D 4A 4B 
1c2bf     4F 47 42 43 
1c2c3     49 45 24 1F 
1c2c7     40 4A 25 EF | 	byte	$4f, $4d, $4a, $4b, $4f, $47, $42, $43, $49, $45, $24, $1f, $40, $4a, $25, $ef
1c2cb     D6 DA EB F2 
1c2cf     E4 DF EC F4 
1c2d3     F8 EA CB C1 
1c2d7     D1 F3 01 EF | 	byte	$d6, $da, $eb, $f2, $e4, $df, $ec, $f4, $f8, $ea, $cb, $c1, $d1, $f3, $01, $ef
1c2db     C7 AA A2 A3 
1c2df     AB C0 D4 D5 
1c2e3     C5 BF C9 D3 
1c2e7     DE EE F0 E4 | 	byte	$c7, $aa, $a2, $a3, $ab, $c0, $d4, $d5, $c5, $bf, $c9, $d3, $de, $ee, $f0, $e4
1c2eb     EF 01 24 3B 
1c2ef     32 2C 32 4A 
1c2f3     49 1E 0B 10 
1c2f7     05 FA FF 06 | 	byte	$ef, $01, $24, $3b, $32, $2c, $32, $4a, $49, $1e, $0b, $10, $05, $fa, $ff, $06
1c2fb     EC D5 D0 D6 
1c2ff     D9 D2 D7 F2 
1c303     0C 13 0B 07 
1c307     1A 28 10 F0 | 	byte	$ec, $d5, $d0, $d6, $d9, $d2, $d7, $f2, $0c, $13, $0b, $07, $1a, $28, $10, $f0
1c30b     F7 FD FC F8 
1c30f     F8 0A 08 11 
1c313     0F FC E4 F0 
1c317     11 2A 2D 24 | 	byte	$f7, $fd, $fc, $f8, $f8, $0a, $08, $11, $0f, $fc, $e4, $f0, $11, $2a, $2d, $24
1c31b     17 15 12 10 
1c31f     20 22 1B 0D 
1c323     F4 DD D7 D6 
1c327     DC E3 D1 C4 | 	byte	$17, $15, $12, $10, $20, $22, $1b, $0d, $f4, $dd, $d7, $d6, $dc, $e3, $d1, $c4
1c32b     D2 F2 EB D2 
1c32f     C1 CC DF E9 
1c333     DD D0 D0 EE 
1c337     07 1E 31 30 | 	byte	$d2, $f2, $eb, $d2, $c1, $cc, $df, $e9, $dd, $d0, $d0, $ee, $07, $1e, $31, $30
1c33b     29 24 2F 3E 
1c33f     2F 1F 28 34 
1c343     2F 2B 3C 48 
1c347     40 2A 28 35 | 	byte	$29, $24, $2f, $3e, $2f, $1f, $28, $34, $2f, $2b, $3c, $48, $40, $2a, $28, $35
1c34b     2A 1F 13 15 
1c34f     1F 24 26 22 
1c353     FC DD DC 06 
1c357     1A 10 E7 D8 | 	byte	$2a, $1f, $13, $15, $1f, $24, $26, $22, $fc, $dd, $dc, $06, $1a, $10, $e7, $d8
1c35b     D2 CC DA F4 
1c35f     EA C6 AB A0 
1c363     A4 B6 B7 B8 
1c367     CE EA FC 02 | 	byte	$d2, $cc, $da, $f4, $ea, $c6, $ab, $a0, $a4, $b6, $b7, $b8, $ce, $ea, $fc, $02
1c36b     02 0C 20 28 
1c36f     39 48 31 FE 
1c373     E0 DC D8 F1 
1c377     09 0D FA E6 | 	byte	$02, $0c, $20, $28, $39, $48, $31, $fe, $e0, $dc, $d8, $f1, $09, $0d, $fa, $e6
1c37b     E2 DE E1 EE 
1c37f     EA EE 09 16 
1c383     17 16 07 06 
1c387     0D 0F 14 0A | 	byte	$e2, $de, $e1, $ee, $ea, $ee, $09, $16, $17, $16, $07, $06, $0d, $0f, $14, $0a
1c38b     F0 EB F8 01 
1c38f     11 20 14 EE 
1c393     CD C2 D9 F2 
1c397     F9 02 FC 06 | 	byte	$f0, $eb, $f8, $01, $11, $20, $14, $ee, $cd, $c2, $d9, $f2, $f9, $02, $fc, $06
1c39b     11 14 22 29 
1c39f     16 02 07 08 
1c3a3     ED D0 CD D9 
1c3a7     DD EB 04 0C | 	byte	$11, $14, $22, $29, $16, $02, $07, $08, $ed, $d0, $cd, $d9, $dd, $eb, $04, $0c
1c3ab     03 FD FA 01 
1c3af     19 28 20 07 
1c3b3     EF FB 2B 4A 
1c3b7     51 4A 36 42 | 	byte	$03, $fd, $fa, $01, $19, $28, $20, $07, $ef, $fb, $2b, $4a, $51, $4a, $36, $42
1c3bb     57 4E 35 33 
1c3bf     37 43 50 5D 
1c3c3     52 2F 0F 0A 
1c3c7     04 FF F5 E1 | 	byte	$57, $4e, $35, $33, $37, $43, $50, $5d, $52, $2f, $0f, $0a, $04, $ff, $f5, $e1
1c3cb     D1 DB EB F0 
1c3cf     F3 E7 D4 B3 
1c3d3     B2 CA DB CA 
1c3d7     B6 AA AA B0 | 	byte	$d1, $db, $eb, $f0, $f3, $e7, $d4, $b3, $b2, $ca, $db, $ca, $b6, $aa, $aa, $b0
1c3db     D5 EE ED CF 
1c3df     C5 CF DE D5 
1c3e3     C7 C4 D9 F7 
1c3e7     13 1B 1F 25 | 	byte	$d5, $ee, $ed, $cf, $c5, $cf, $de, $d5, $c7, $c4, $d9, $f7, $13, $1b, $1f, $25
1c3eb     19 20 37 46 
1c3ef     44 31 1C 0D 
1c3f3     05 08 1C 19 
1c3f7     07 EC DE E6 | 	byte	$19, $20, $37, $46, $44, $31, $1c, $0d, $05, $08, $1c, $19, $07, $ec, $de, $e6
1c3fb     E6 D8 CF D5 
1c3ff     F3 1D 22 FC 
1c403     FF 04 15 21 
1c407     03 EC E4 DB | 	byte	$e6, $d8, $cf, $d5, $f3, $1d, $22, $fc, $ff, $04, $15, $21, $03, $ec, $e4, $db
1c40b     D8 E6 07 22 
1c40f     28 11 F3 E2 
1c413     EA 19 30 30 
1c417     25 17 1D 26 | 	byte	$d8, $e6, $07, $22, $28, $11, $f3, $e2, $ea, $19, $30, $30, $25, $17, $1d, $26
1c41b     20 1C 11 01 
1c41f     0B 05 F3 D8 
1c423     C4 CB D9 EE 
1c427     F6 E1 CE C4 | 	byte	$20, $1c, $11, $01, $0b, $05, $f3, $d8, $c4, $cb, $d9, $ee, $f6, $e1, $ce, $c4
1c42b     B5 B7 D1 E9 
1c42f     F2 E9 D2 E1 
1c433     F6 06 11 1B 
1c437     30 4A 42 28 | 	byte	$b5, $b7, $d1, $e9, $f2, $e9, $d2, $e1, $f6, $06, $11, $1b, $30, $4a, $42, $28
1c43b     1D 1F 23 23 
1c43f     31 56 5E 46 
1c443     36 35 3C 46 
1c447     35 28 1E 0E | 	byte	$1d, $1f, $23, $23, $31, $56, $5e, $46, $36, $35, $3c, $46, $35, $28, $1e, $0e
1c44b     13 2B 23 23 
1c44f     0F ED E2 E3 
1c453     EA F9 F2 EB 
1c457     E4 DE EB E5 | 	byte	$13, $2b, $23, $23, $0f, $ed, $e2, $e3, $ea, $f9, $f2, $eb, $e4, $de, $eb, $e5
1c45b     D1 C3 B9 B5 
1c45f     BF C5 B7 B2 
1c463     B4 CB E9 F2 
1c467     F4 03 06 13 | 	byte	$d1, $c3, $b9, $b5, $bf, $c5, $b7, $b2, $b4, $cb, $e9, $f2, $f4, $03, $06, $13
1c46b     23 2A 2D 12 
1c46f     ED E0 E2 F0 
1c473     F7 F8 F7 EB 
1c477     E6 F2 F3 EF | 	byte	$23, $2a, $2d, $12, $ed, $e0, $e2, $f0, $f7, $f8, $f7, $eb, $e6, $f2, $f3, $ef
1c47b     EC EF EB FD 
1c47f     01 0A 06 FD 
1c483     FF 06 11 17 
1c487     02 EA D8 E6 | 	byte	$ec, $ef, $eb, $fd, $01, $0a, $06, $fd, $ff, $06, $11, $17, $02, $ea, $d8, $e6
1c48b     05 22 17 08 
1c48f     EF DD E3 F8 
1c493     05 FC 01 06 
1c497     18 0F 08 16 | 	byte	$05, $22, $17, $08, $ef, $dd, $e3, $f8, $05, $fc, $01, $06, $18, $0f, $08, $16
1c49b     2B 33 1F 0D 
1c49f     09 F0 DB C7 
1c4a3     CF F3 0B 0A 
1c4a7     03 EF E2 E7 | 	byte	$2b, $33, $1f, $0d, $09, $f0, $db, $c7, $cf, $f3, $0b, $0a, $03, $ef, $e2, $e7
1c4ab     FE 19 24 21 
1c4af     15 13 0E 09 
1c4b3     11 31 50 58 
1c4b7     53 4B 39 36 | 	byte	$fe, $19, $24, $21, $15, $13, $0e, $09, $11, $31, $50, $58, $53, $4b, $39, $36
1c4bb     2B 2C 31 3E 
1c4bf     44 43 2B 16 
1c4c3     01 F9 F6 EE 
1c4c7     DD D1 D7 E2 | 	byte	$2b, $2c, $31, $3e, $44, $43, $2b, $16, $01, $f9, $f6, $ee, $dd, $d1, $d7, $e2
1c4cb     F3 F9 F9 EB 
1c4cf     CB BB CB BB 
1c4d3     BF BB BD BF 
1c4d7     D2 D9 E1 D8 | 	byte	$f3, $f9, $f9, $eb, $cb, $bb, $cb, $bb, $bf, $bb, $bd, $bf, $d2, $d9, $e1, $d8
1c4db     D2 CD CE D3 
1c4df     D8 E2 DF DF 
1c4e3     E7 F9 10 29 
1c4e7     2E 20 16 2E | 	byte	$d2, $cd, $ce, $d3, $d8, $e2, $df, $df, $e7, $f9, $10, $29, $2e, $20, $16, $2e
1c4eb     40 41 24 16 
1c4ef     12 1F 15 13 
1c4f3     05 F8 F2 05 
1c4f7     09 EA DF E8 | 	byte	$40, $41, $24, $16, $12, $1f, $15, $13, $05, $f8, $f2, $05, $09, $ea, $df, $e8
1c4fb     F4 F8 00 09 
1c4ff     15 12 F5 F4 
1c503     0C FF E3 CF 
1c507     DC EF 12 20 | 	byte	$f4, $f8, $00, $09, $15, $12, $f5, $f4, $0c, $ff, $e3, $cf, $dc, $ef, $12, $20
1c50b     21 12 F4 DE 
1c50f     EA 11 17 13 
1c513     08 0C 0D 00 
1c517     05 22 2C 1C | 	byte	$21, $12, $f4, $de, $ea, $11, $17, $13, $08, $0c, $0d, $00, $05, $22, $2c, $1c
1c51b     0E 12 FD EC 
1c51f     D8 D3 D7 E8 
1c523     EB F0 E6 DA 
1c527     D1 C7 C8 D6 | 	byte	$0e, $12, $fd, $ec, $d8, $d3, $d7, $e8, $eb, $f0, $e6, $da, $d1, $c7, $c8, $d6
1c52b     E1 F4 07 07 
1c52f     01 FA 03 15 
1c533     14 17 36 3D 
1c537     30 17 21 2B | 	byte	$e1, $f4, $07, $07, $01, $fa, $03, $15, $14, $17, $36, $3d, $30, $17, $21, $2b
1c53b     43 4B 48 30 
1c53f     23 1D 1B 2A 
1c543     38 2E 13 14 
1c547     20 22 1F 2B | 	byte	$43, $4b, $48, $30, $23, $1d, $1b, $2a, $38, $2e, $13, $14, $20, $22, $1f, $2b
1c54b     32 1C FF 08 
1c54f     0D 07 ED DE 
1c553     CC D1 DC E9 
1c557     E5 DA D7 BD | 	byte	$32, $1c, $ff, $08, $0d, $07, $ed, $de, $cc, $d1, $dc, $e9, $e5, $da, $d7, $bd
1c55b     B6 B4 C4 CE 
1c55f     CB C6 C6 D1 
1c563     E6 05 01 F7 
1c567     FD 00 05 F6 | 	byte	$b6, $b4, $c4, $ce, $cb, $c6, $c6, $d1, $e6, $05, $01, $f7, $fd, $00, $05, $f6
1c56b     F9 02 13 07 
1c56f     F6 E0 C4 C1 
1c573     D2 F3 09 0F 
1c577     09 06 F8 E5 | 	byte	$f9, $02, $13, $07, $f6, $e0, $c4, $c1, $d2, $f3, $09, $0f, $09, $06, $f8, $e5
1c57b     E6 05 1A 10 
1c57f     05 0B 0D FF 
1c583     E3 E6 DD F2 
1c587     0C 2D 2C 0B | 	byte	$e6, $05, $1a, $10, $05, $0b, $0d, $ff, $e3, $e6, $dd, $f2, $0c, $2d, $2c, $0b
1c58b     F0 E1 EE 01 
1c58f     FB F2 EF F2 
1c593     EB E6 02 26 
1c597     30 30 2A 14 | 	byte	$f0, $e1, $ee, $01, $fb, $f2, $ef, $f2, $eb, $e6, $02, $26, $30, $30, $2a, $14
1c59b     00 F8 07 04 
1c59f     01 04 05 FB 
1c5a3     F0 F5 EA EE 
1c5a7     01 07 11 19 | 	byte	$00, $f8, $07, $04, $01, $04, $05, $fb, $f0, $f5, $ea, $ee, $01, $07, $11, $19
1c5ab     2C 1F 0F 09 
1c5af     1A 18 1B 33 
1c5b3     3F 43 37 2B 
1c5b7     22 26 29 31 | 	byte	$2c, $1f, $0f, $09, $1a, $18, $1b, $33, $3f, $43, $37, $2b, $22, $26, $29, $31
1c5bb     3A 33 2F 17 
1c5bf     FA F7 E4 C9 
1c5c3     C9 E7 EF EF 
1c5c7     F4 02 F9 F1 | 	byte	$3a, $33, $2f, $17, $fa, $f7, $e4, $c9, $c9, $e7, $ef, $ef, $f4, $02, $f9, $f1
1c5cb     F2 F7 F6 E7 
1c5cf     E3 CD C5 C6 
1c5d3     C2 C2 C9 D0 
1c5d7     D1 C6 C9 CD | 	byte	$f2, $f7, $f6, $e7, $e3, $cd, $c5, $c6, $c2, $c2, $c9, $d0, $d1, $c6, $c9, $cd
1c5db     C8 EC 0A 06 
1c5df     E9 D8 F3 02 
1c5e3     12 18 19 1B 
1c5e7     16 13 03 05 | 	byte	$c8, $ec, $0a, $06, $e9, $d8, $f3, $02, $12, $18, $19, $1b, $16, $13, $03, $05
1c5eb     23 39 3C 30 
1c5ef     19 EC D3 E2 
1c5f3     FF 1B 19 15 
1c5f7     0C FD F1 F6 | 	byte	$23, $39, $3c, $30, $19, $ec, $d3, $e2, $ff, $1b, $19, $15, $0c, $fd, $f1, $f6
1c5fb     FE 15 1B 0D 
1c5ff     F2 E1 E3 E4 
1c603     E1 F5 04 08 
1c607     02 F6 E1 D7 | 	byte	$fe, $15, $1b, $0d, $f2, $e1, $e3, $e4, $e1, $f5, $04, $08, $02, $f6, $e1, $d7
1c60b     F0 01 F9 EF 
1c60f     F6 FD 00 FF 
1c613     07 FC FA 08 
1c617     06 01 F5 E5 | 	byte	$f0, $01, $f9, $ef, $f6, $fd, $00, $ff, $07, $fc, $fa, $08, $06, $01, $f5, $e5
1c61b     E2 E5 09 1A 
1c61f     0D 04 FB F2 
1c623     E3 E7 EE FF 
1c627     03 01 07 14 | 	byte	$e2, $e5, $09, $1a, $0d, $04, $fb, $f2, $e3, $e7, $ee, $ff, $03, $01, $07, $14
1c62b     0F 0C FF 03 
1c62f     17 1B 1E 2C 
1c633     30 35 2C 36 
1c637     3A 2A 21 24 | 	byte	$0f, $0c, $ff, $03, $17, $1b, $1e, $2c, $30, $35, $2c, $36, $3a, $2a, $21, $24
1c63b     1B 09 02 FB 
1c63f     F9 FB 16 2F 
1c643     41 2C 13 04 
1c647     08 26 38 37 | 	byte	$1b, $09, $02, $fb, $f9, $fb, $16, $2f, $41, $2c, $13, $04, $08, $26, $38, $37
1c64b     2B 14 FA E1 
1c64f     F5 00 F5 EA 
1c653     E8 D6 C2 C0 
1c657     B6 B0 BB CE | 	byte	$2b, $14, $fa, $e1, $f5, $00, $f5, $ea, $e8, $d6, $c2, $c0, $b6, $b0, $bb, $ce
1c65b     D9 EA E4 D1 
1c65f     C4 C7 E3 E6 
1c663     D4 E1 FE 08 
1c667     F2 EE F0 EF | 	byte	$d9, $ea, $e4, $d1, $c4, $c7, $e3, $e6, $d4, $e1, $fe, $08, $f2, $ee, $f0, $ef
1c66b     FE F5 D5 B3 
1c66f     B2 C3 E3 09 
1c673     18 1C 1F 17 
1c677     01 F7 FE 1B | 	byte	$fe, $f5, $d5, $b3, $b2, $c3, $e3, $09, $18, $1c, $1f, $17, $01, $f7, $fe, $1b
1c67b     25 18 00 E6 
1c67f     D0 E9 FC 10 
1c683     19 1C 0F 03 
1c687     E9 F7 00 0F | 	byte	$25, $18, $00, $e6, $d0, $e9, $fc, $10, $19, $1c, $0f, $03, $e9, $f7, $00, $0f
1c68b     0F FE E5 F6 
1c68f     00 F7 E6 ED 
1c693     FE 0A 0D 12 
1c697     0C 03 FD 06 | 	byte	$0f, $fe, $e5, $f6, $00, $f7, $e6, $ed, $fe, $0a, $0d, $12, $0c, $03, $fd, $06
1c69b     1A 2C 2C 0B 
1c69f     FC F3 FA F5 
1c6a3     07 2C 31 22 
1c6a7     24 24 1B 1A | 	byte	$1a, $2c, $2c, $0b, $fc, $f3, $fa, $f5, $07, $2c, $31, $22, $24, $24, $1b, $1a
1c6ab     15 05 0B 0B 
1c6af     13 1C 18 1B 
1c6b3     27 3C 3D 2F 
1c6b7     17 0D 00 F6 | 	byte	$15, $05, $0b, $0b, $13, $1c, $18, $1b, $27, $3c, $3d, $2f, $17, $0d, $00, $f6
1c6bb     F8 FE F9 E9 
1c6bf     EF FB F5 E1 
1c6c3     D7 E1 EC 05 
1c6c7     0E 12 12 F8 | 	byte	$f8, $fe, $f9, $e9, $ef, $fb, $f5, $e1, $d7, $e1, $ec, $05, $0e, $12, $12, $f8
1c6cb     E7 E0 E4 E9 
1c6cf     EF DD D0 AA 
1c6d3     97 A1 BB D1 
1c6d7     DC E9 F6 FD | 	byte	$e7, $e0, $e4, $e9, $ef, $dd, $d0, $aa, $97, $a1, $bb, $d1, $dc, $e9, $f6, $fd
1c6db     FB F2 F2 EF 
1c6df     F5 03 04 06 
1c6e3     02 FE FF 06 
1c6e7     13 27 27 23 | 	byte	$fb, $f2, $f2, $ef, $f5, $03, $04, $06, $02, $fe, $ff, $06, $13, $27, $27, $23
1c6eb     09 EB DF E9 
1c6ef     FD 10 22 30 
1c6f3     2D 22 0F 0D 
1c6f7     03 09 11 0F | 	byte	$09, $eb, $df, $e9, $fd, $10, $22, $30, $2d, $22, $0f, $0d, $03, $09, $11, $0f
1c6fb     0D F8 E9 F1 
1c6ff     06 04 EF D8 
1c703     DA D1 C9 D3 
1c707     F2 FD EF E8 | 	byte	$0d, $f8, $e9, $f1, $06, $04, $ef, $d8, $da, $d1, $c9, $d3, $f2, $fd, $ef, $e8
1c70b     DE E5 E2 E5 
1c70f     FA 0A 05 F7 
1c713     E2 D9 D7 E6 
1c717     F6 0B 18 25 | 	byte	$de, $e5, $e2, $e5, $fa, $0a, $05, $f7, $e2, $d9, $d7, $e6, $f6, $0b, $18, $25
1c71b     2C 24 05 F9 
1c71f     0C 22 29 2E 
1c723     36 2A 1E 10 
1c727     FE FC 0F 16 | 	byte	$2c, $24, $05, $f9, $0c, $22, $29, $2e, $36, $2a, $1e, $10, $fe, $fc, $0f, $16
1c72b     18 1F 20 1D 
1c72f     19 1B 2B 2F 
1c733     31 34 33 1F 
1c737     F8 DD E5 F9 | 	byte	$18, $1f, $20, $1d, $19, $1b, $2b, $2f, $31, $34, $33, $1f, $f8, $dd, $e5, $f9
1c73b     03 0C 1D 2E 
1c73f     2D 0C 03 0C 
1c743     03 0A 26 39 
1c747     31 1C 14 14 | 	byte	$03, $0c, $1d, $2e, $2d, $0c, $03, $0c, $03, $0a, $26, $39, $31, $1c, $14, $14
1c74b     03 08 0B 0A 
1c74f     FA DB B7 AF 
1c753     BE CD E3 E6 
1c757     D9 DA CC C7 | 	byte	$03, $08, $0b, $0a, $fa, $db, $b7, $af, $be, $cd, $e3, $e6, $d9, $da, $cc, $c7
1c75b     D1 C2 CC E5 
1c75f     ED EB E2 D8 
1c763     DF DF EB ED 
1c767     E3 D7 CD C1 | 	byte	$d1, $c2, $cc, $e5, $ed, $eb, $e2, $d8, $df, $df, $eb, $ed, $e3, $d7, $cd, $c1
1c76b     D2 D9 D4 E8 
1c76f     02 0E 0F 10 
1c773     1E 2C 1B 13 
1c777     0E 02 F7 F4 | 	byte	$d2, $d9, $d4, $e8, $02, $0e, $0f, $10, $1e, $2c, $1b, $13, $0e, $02, $f7, $f4
1c77b     F2 07 25 3B 
1c77f     32 1A 03 EE 
1c783     E5 F4 0C 10 
1c787     17 1F 0A F7 | 	byte	$f2, $07, $25, $3b, $32, $1a, $03, $ee, $e5, $f4, $0c, $10, $17, $1f, $0a, $f7
1c78b     E4 CF E0 F4 
1c78f     03 01 ED EF 
1c793     FB FF 09 0B 
1c797     14 1D 28 2A | 	byte	$e4, $cf, $e0, $f4, $03, $01, $ed, $ef, $fb, $ff, $09, $0b, $14, $1d, $28, $2a
1c79b     19 12 31 41 
1c79f     34 40 55 3D 
1c7a3     19 0C 11 1A 
1c7a7     15 14 16 11 | 	byte	$19, $12, $31, $41, $34, $40, $55, $3d, $19, $0c, $11, $1a, $15, $14, $16, $11
1c7ab     FF F4 F4 04 
1c7af     0E 16 1D 37 
1c7b3     36 1A FD F2 
1c7b7     F0 ED 03 16 | 	byte	$ff, $f4, $f4, $04, $0e, $16, $1d, $37, $36, $1a, $fd, $f2, $f0, $ed, $03, $16
1c7bb     0A 05 08 EF 
1c7bf     DA CC DB 00 
1c7c3     12 0A 08 09 
1c7c7     08 F0 DF E2 | 	byte	$0a, $05, $08, $ef, $da, $cc, $db, $00, $12, $0a, $08, $09, $08, $f0, $df, $e2
1c7cb     EE F1 D4 BB 
1c7cf     B3 AF B0 D3 
1c7d3     EF F6 F5 F8 
1c7d7     F7 F6 EC E5 | 	byte	$ee, $f1, $d4, $bb, $b3, $af, $b0, $d3, $ef, $f6, $f5, $f8, $f7, $f6, $ec, $e5
1c7db     F2 0F 11 FE 
1c7df     F3 FB F5 EC 
1c7e3     EB 04 12 06 
1c7e7     F5 F2 F8 02 | 	byte	$f2, $0f, $11, $fe, $f3, $fb, $f5, $ec, $eb, $04, $12, $06, $f5, $f2, $f8, $02
1c7eb     15 1E 13 FB 
1c7ef     11 1A 29 23 
1c7f3     17 30 35 21 
1c7f7     F2 DB F4 05 | 	byte	$15, $1e, $13, $fb, $11, $1a, $29, $23, $17, $30, $35, $21, $f2, $db, $f4, $05
1c7fb     0E 13 0E F6 
1c7ff     CE C3 C7 C7 
1c803     CF D8 E5 E5 
1c807     CB C8 D7 E9 | 	byte	$0e, $13, $0e, $f6, $ce, $c3, $c7, $c7, $cf, $d8, $e5, $e5, $cb, $c8, $d7, $e9
1c80b     F3 F0 EE E1 
1c80f     D9 D6 E0 EC 
1c813     F9 08 17 2B 
1c817     33 18 0E 21 | 	byte	$f3, $f0, $ee, $e1, $d9, $d6, $e0, $ec, $f9, $08, $17, $2b, $33, $18, $0e, $21
1c81b     43 4D 54 5F 
1c81f     4E 27 11 FC 
1c823     0A 07 0C 1E 
1c827     21 23 1C 23 | 	byte	$43, $4d, $54, $5f, $4e, $27, $11, $fc, $0a, $07, $0c, $1e, $21, $23, $1c, $23
1c82b     2D 1C F4 FD 
1c82f     27 3E 27 0F 
1c833     02 04 05 F4 
1c837     EC E7 EB 03 | 	byte	$2d, $1c, $f4, $fd, $27, $3e, $27, $0f, $02, $04, $05, $f4, $ec, $e7, $eb, $03
1c83b     0D 13 10 02 
1c83f     09 0E 13 14 
1c843     0D 12 1C 12 
1c847     13 1F 2B 14 | 	byte	$0d, $13, $10, $02, $09, $0e, $13, $14, $0d, $12, $1c, $12, $13, $1f, $2b, $14
1c84b     FF D3 C4 DC 
1c84f     F5 FF E0 C2 
1c853     CE E6 E5 CF 
1c857     BA BB CC E0 | 	byte	$ff, $d3, $c4, $dc, $f5, $ff, $e0, $c2, $ce, $e6, $e5, $cf, $ba, $bb, $cc, $e0
1c85b     E0 D7 E0 D9 
1c85f     CF CF CE D4 
1c863     CA C5 C4 D5 
1c867     D9 D5 E5 E3 | 	byte	$e0, $d7, $e0, $d9, $cf, $cf, $ce, $d4, $ca, $c5, $c4, $d5, $d9, $d5, $e5, $e3
1c86b     CD C9 E2 0B 
1c86f     26 1D 16 1D 
1c873     27 1D FA F0 
1c877     F9 0B 2F 3F | 	byte	$cd, $c9, $e2, $0b, $26, $1d, $16, $1d, $27, $1d, $fa, $f0, $f9, $0b, $2f, $3f
1c87b     39 25 18 1A 
1c87f     13 0E 08 00 
1c883     01 F3 F7 FD 
1c887     F4 E7 F1 F5 | 	byte	$39, $25, $18, $1a, $13, $0e, $08, $00, $01, $f3, $f7, $fd, $f4, $e7, $f1, $f5
1c88b     E7 DB DF E2 
1c88f     F6 F4 F3 11 
1c893     26 30 29 22 
1c897     1D 2B 40 5C | 	byte	$e7, $db, $df, $e2, $f6, $f4, $f3, $11, $26, $30, $29, $22, $1d, $2b, $40, $5c
1c89b     5D 4A 2F 27 
1c89f     24 22 1B 17 
1c8a3     16 13 06 FE 
1c8a7     F9 08 0C 05 | 	byte	$5d, $4a, $2f, $27, $24, $22, $1b, $17, $16, $13, $06, $fe, $f9, $08, $0c, $05
1c8ab     03 07 16 12 
1c8af     09 03 07 15 
1c8b3     1D 0F F3 D8 
1c8b7     EE 09 13 0D | 	byte	$03, $07, $16, $12, $09, $03, $07, $15, $1d, $0f, $f3, $d8, $ee, $09, $13, $0d
1c8bb     F5 EF F1 EC 
1c8bf     E9 F4 E9 EC 
1c8c3     E5 F7 F6 F7 
1c8c7     F2 E4 D9 D3 | 	byte	$f5, $ef, $f1, $ec, $e9, $f4, $e9, $ec, $e5, $f7, $f6, $f7, $f2, $e4, $d9, $d3
1c8cb     D5 D7 DA D8 
1c8cf     BE D6 08 1B 
1c8d3     0E F3 E7 DD 
1c8d7     E8 F7 01 EE | 	byte	$d5, $d7, $da, $d8, $be, $d6, $08, $1b, $0e, $f3, $e7, $dd, $e8, $f7, $01, $ee
1c8db     F4 FF 06 EE 
1c8df     E6 EA E1 D7 
1c8e3     E0 EF 05 12 
1c8e7     0F F8 FD 18 | 	byte	$f4, $ff, $06, $ee, $e6, $ea, $e1, $d7, $e0, $ef, $05, $12, $0f, $f8, $fd, $18
1c8eb     22 24 1D 24 
1c8ef     1D 1E 1E 20 
1c8f3     0D 0A 0C 19 
1c8f7     19 12 FB EB | 	byte	$22, $24, $1d, $24, $1d, $1e, $1e, $20, $0d, $0a, $0c, $19, $19, $12, $fb, $eb
1c8fb     ED F1 E7 D0 
1c8ff     CB C1 AF B0 
1c903     CA D3 D6 D9 
1c907     DD D0 CE E2 | 	byte	$ed, $f1, $e7, $d0, $cb, $c1, $af, $b0, $ca, $d3, $d6, $d9, $dd, $d0, $ce, $e2
1c90b     EB DD ED 02 
1c90f     13 0D 14 1A 
1c913     23 11 0C 25 
1c917     39 47 49 3E | 	byte	$eb, $dd, $ed, $02, $13, $0d, $14, $1a, $23, $11, $0c, $25, $39, $47, $49, $3e
1c91b     40 45 38 2F 
1c91f     28 21 15 07 
1c923     0F 2A 32 36 
1c927     2C 26 1A 22 | 	byte	$40, $45, $38, $2f, $28, $21, $15, $07, $0f, $2a, $32, $36, $2c, $26, $1a, $22
1c92b     21 26 14 04 
1c92f     04 06 01 E8 
1c933     D5 E5 02 00 
1c937     F6 F4 FA 05 | 	byte	$21, $26, $14, $04, $04, $06, $01, $e8, $d5, $e5, $02, $00, $f6, $f4, $fa, $05
1c93b     0B 17 0C 02 
1c93f     09 11 0B 03 
1c943     03 03 10 04 
1c947     FB FF FF FE | 	byte	$0b, $17, $0c, $02, $09, $11, $0b, $03, $03, $03, $10, $04, $fb, $ff, $ff, $fe
1c94b     E8 D7 DD F8 
1c94f     03 02 EC CF 
1c953     C3 C5 CE CF 
1c957     C7 D2 DF E8 | 	byte	$e8, $d7, $dd, $f8, $03, $02, $ec, $cf, $c3, $c5, $ce, $cf, $c7, $d2, $df, $e8
1c95b     DD CC BD CF 
1c95f     D2 C7 BF BD 
1c963     CA C6 BF CF 
1c967     DD DD DD EA | 	byte	$dd, $cc, $bd, $cf, $d2, $c7, $bf, $bd, $ca, $c6, $bf, $cf, $dd, $dd, $dd, $ea
1c96b     EA F6 01 10 
1c96f     0B 05 0C 0F 
1c973     1B 25 1F 12 
1c977     20 2D 33 2A | 	byte	$ea, $f6, $01, $10, $0b, $05, $0c, $0f, $1b, $25, $1f, $12, $20, $2d, $33, $2a
1c97b     18 15 06 FC 
1c97f     0A 16 12 05 
1c983     FB E8 E2 E3 
1c987     EC F0 E2 EE | 	byte	$18, $15, $06, $fc, $0a, $16, $12, $05, $fb, $e8, $e2, $e3, $ec, $f0, $e2, $ee
1c98b     EA FB 16 2F 
1c98f     3D 41 24 13 
1c993     14 19 22 26 
1c997     29 44 49 3E | 	byte	$ea, $fb, $16, $2f, $3d, $41, $24, $13, $14, $19, $22, $26, $29, $44, $49, $3e
1c99b     3F 29 15 13 
1c99f     10 11 0E 0F 
1c9a3     1C 07 EE FE 
1c9a7     0C 08 04 FA | 	byte	$3f, $29, $15, $13, $10, $11, $0e, $0f, $1c, $07, $ee, $fe, $0c, $08, $04, $fa
1c9ab     02 0A 08 08 
1c9af     03 EC 03 1E 
1c9b3     2B 25 0D EF 
1c9b7     F7 01 F8 E6 | 	byte	$02, $0a, $08, $08, $03, $ec, $03, $1e, $2b, $25, $0d, $ef, $f7, $01, $f8, $e6
1c9bb     E5 EB E4 DF 
1c9bf     E2 E7 EE F2 
1c9c3     E2 D6 D6 CF 
1c9c7     D4 D4 CD E9 | 	byte	$e5, $eb, $e4, $df, $e2, $e7, $ee, $f2, $e2, $d6, $d6, $cf, $d4, $d4, $cd, $e9
1c9cb     F8 07 10 10 
1c9cf     FC F3 EE E1 
1c9d3     EE 02 08 02 
1c9d7     F2 F9 EF E1 | 	byte	$f8, $07, $10, $10, $fc, $f3, $ee, $e1, $ee, $02, $08, $02, $f2, $f9, $ef, $e1
1c9db     D6 CB D5 D9 
1c9df     D1 DF 01 0F 
1c9e3     1F 24 1E 15 
1c9e7     0A 06 12 1F | 	byte	$d6, $cb, $d5, $d9, $d1, $df, $01, $0f, $1f, $24, $1e, $15, $0a, $06, $12, $1f
1c9eb     00 EF 02 20 
1c9ef     2E 21 10 13 
1c9f3     1E 1C 0E 00 
1c9f7     F0 D7 BE C5 | 	byte	$00, $ef, $02, $20, $2e, $21, $10, $13, $1e, $1c, $0e, $00, $f0, $d7, $be, $c5
1c9fb     CB D2 C9 C7 
1c9ff     D1 CB BD CD 
1ca03     DC D1 D3 F0 
1ca07     02 01 FD FF | 	byte	$cb, $d2, $c9, $c7, $d1, $cb, $bd, $cd, $dc, $d1, $d3, $f0, $02, $01, $fd, $ff
1ca0b     06 13 24 23 
1ca0f     10 F7 E5 FE 
1ca13     2C 42 51 56 
1ca17     5F 52 3D 1D | 	byte	$06, $13, $24, $23, $10, $f7, $e5, $fe, $2c, $42, $51, $56, $5f, $52, $3d, $1d
1ca1b     11 22 1B 1B 
1ca1f     2A 33 2D 26 
1ca23     2B 2E 2A 27 
1ca27     25 2B 23 05 | 	byte	$11, $22, $1b, $1b, $2a, $33, $2d, $26, $2b, $2e, $2a, $27, $25, $2b, $23, $05
1ca2b     EB F8 0E 19 
1ca2f     07 F9 F2 F2 
1ca33     EB 05 2B 1E 
1ca37     14 17 19 00 | 	byte	$eb, $f8, $0e, $19, $07, $f9, $f2, $f2, $eb, $05, $2b, $1e, $14, $17, $19, $00
1ca3b     F1 EE ED E1 
1ca3f     DF E4 F2 FD 
1ca43     05 FA F2 FC 
1ca47     0F 17 1B 13 | 	byte	$f1, $ee, $ed, $e1, $df, $e4, $f2, $fd, $05, $fa, $f2, $fc, $0f, $17, $1b, $13
1ca4b     F7 E8 EF EF 
1ca4f     BF A0 AE D7 
1ca53     E4 DF E0 DA 
1ca57     D9 D6 C7 B7 | 	byte	$f7, $e8, $ef, $ef, $bf, $a0, $ae, $d7, $e4, $df, $e0, $da, $d9, $d6, $c7, $b7
1ca5b     B9 B6 BA CD 
1ca5f     DF CA BF D2 
1ca63     CA B7 B3 CE 
1ca67     FC FD DC E9 | 	byte	$b9, $b6, $ba, $cd, $df, $ca, $bf, $d2, $ca, $b7, $b3, $ce, $fc, $fd, $dc, $e9
1ca6b     02 0C 11 07 
1ca6f     EF F7 1F 3B 
1ca73     39 24 13 1B 
1ca77     2B 3E 2D 0F | 	byte	$02, $0c, $11, $07, $ef, $f7, $1f, $3b, $39, $24, $13, $1b, $2b, $3e, $2d, $0f
1ca7b     16 29 1D 0A 
1ca7f     02 00 EC E1 
1ca83     E3 F1 F0 F2 
1ca87     04 15 2C 40 | 	byte	$16, $29, $1d, $0a, $02, $00, $ec, $e1, $e3, $f1, $f0, $f2, $04, $15, $2c, $40
1ca8b     41 2D 13 03 
1ca8f     FF 0A 25 25 
1ca93     11 21 40 3F 
1ca97     39 29 26 0F | 	byte	$41, $2d, $13, $03, $ff, $0a, $25, $25, $11, $21, $40, $3f, $39, $29, $26, $0f
1ca9b     06 1D 2C 15 
1ca9f     F4 F5 F8 F8 
1caa3     FB 00 FA 06 
1caa7     02 FF 0F 27 | 	byte	$06, $1d, $2c, $15, $f4, $f5, $f8, $f8, $fb, $00, $fa, $06, $02, $ff, $0f, $27
1caab     38 29 1C 1F 
1caaf     22 22 1C 1C 
1cab3     07 F5 F6 FB 
1cab7     E6 CE D3 CC | 	byte	$38, $29, $1c, $1f, $22, $22, $1c, $1c, $07, $f5, $f6, $fb, $e6, $ce, $d3, $cc
1cabb     CD D6 DC CE 
1cabf     D3 D6 CB BF 
1cac3     CE EE F9 F8 
1cac7     FF F3 FB 18 | 	byte	$cd, $d6, $dc, $ce, $d3, $d6, $cb, $bf, $ce, $ee, $f9, $f8, $ff, $f3, $fb, $18
1cacb     27 09 EC EF 
1cacf     FE FA E7 ED 
1cad3     F1 F7 F1 E1 
1cad7     C9 C6 C8 D8 | 	byte	$27, $09, $ec, $ef, $fe, $fa, $e7, $ed, $f1, $f7, $f1, $e1, $c9, $c6, $c8, $d8
1cadb     F4 08 1E 16 
1cadf     0C 0F 0F 06 
1cae3     08 0F F7 D9 
1cae7     DE F7 16 2B | 	byte	$f4, $08, $1e, $16, $0c, $0f, $0f, $06, $08, $0f, $f7, $d9, $de, $f7, $16, $2b
1caeb     2D 14 07 0E 
1caef     17 FD F8 F5 
1caf3     F1 DD D5 D9 
1caf7     CC C0 BE CB | 	byte	$2d, $14, $07, $0e, $17, $fd, $f8, $f5, $f1, $dd, $d5, $d9, $cc, $c0, $be, $cb
1cafb     D7 DE E3 DE 
1caff     D4 D5 D9 D9 
1cb03     EA 08 02 0D 
1cb07     09 08 11 08 | 	byte	$d7, $de, $e3, $de, $d4, $d5, $d9, $d9, $ea, $08, $02, $0d, $09, $08, $11, $08
1cb0b     10 19 16 13 
1cb0f     19 32 3C 4E 
1cb13     5B 48 21 0C 
1cb17     04 0B 27 3B | 	byte	$10, $19, $16, $13, $19, $32, $3c, $4e, $5b, $48, $21, $0c, $04, $0b, $27, $3b
1cb1b     3F 35 35 32 
1cb1f     2F 2B 33 37 
1cb23     2A 28 1D 0D 
1cb27     0F 24 35 16 | 	byte	$3f, $35, $35, $32, $2f, $2b, $33, $37, $2a, $28, $1d, $0d, $0f, $24, $35, $16
1cb2b     01 05 19 1A 
1cb2f     1A 1A 18 1A 
1cb33     19 00 E9 EE 
1cb37     F7 F0 D1 BF | 	byte	$01, $05, $19, $1a, $1a, $1a, $18, $1a, $19, $00, $e9, $ee, $f7, $f0, $d1, $bf
1cb3b     CB DA 0E 20 
1cb3f     FE F4 05 23 
1cb43     15 02 09 01 
1cb47     EB E6 D1 BE | 	byte	$cb, $da, $0e, $20, $fe, $f4, $05, $23, $15, $02, $09, $01, $eb, $e6, $d1, $be
1cb4b     C8 E3 D7 C3 
1cb4f     CD D7 E6 E2 
1cb53     D5 C5 B5 C9 
1cb57     D7 CE C6 D6 | 	byte	$c8, $e3, $d7, $c3, $cd, $d7, $e6, $e2, $d5, $c5, $b5, $c9, $d7, $ce, $c6, $d6
1cb5b     E9 D4 C5 C5 
1cb5f     D2 D9 E5 DD 
1cb63     CA C6 E4 F1 
1cb67     FA 07 01 EF | 	byte	$e9, $d4, $c5, $c5, $d2, $d9, $e5, $dd, $ca, $c6, $e4, $f1, $fa, $07, $01, $ef
1cb6b     E9 FF 05 15 
1cb6f     37 49 45 34 
1cb73     27 24 25 24 
1cb77     27 2E 1C 0D | 	byte	$e9, $ff, $05, $15, $37, $49, $45, $34, $27, $24, $25, $24, $27, $2e, $1c, $0d
1cb7b     FE E9 EF 00 
1cb7f     F7 F6 0C 23 
1cb83     27 19 13 19 
1cb87     29 30 2B 17 | 	byte	$fe, $e9, $ef, $00, $f7, $f6, $0c, $23, $27, $19, $13, $19, $29, $30, $2b, $17
1cb8b     0E 19 14 06 
1cb8f     10 26 43 3D 
1cb93     23 10 11 11 
1cb97     0B 06 04 0F | 	byte	$0e, $19, $14, $06, $10, $26, $43, $3d, $23, $10, $11, $11, $0b, $06, $04, $0f
1cb9b     11 FA E7 E3 
1cb9f     EB 08 24 1F 
1cba3     09 00 13 30 
1cba7     48 46 39 34 | 	byte	$11, $fa, $e7, $e3, $eb, $08, $24, $1f, $09, $00, $13, $30, $48, $46, $39, $34
1cbab     24 0B 07 06 
1cbaf     FA F9 F9 F1 
1cbb3     EA D6 BF B8 
1cbb7     BE CB E2 F1 | 	byte	$24, $0b, $07, $06, $fa, $f9, $f9, $f1, $ea, $d6, $bf, $b8, $be, $cb, $e2, $f1
1cbbb     F3 D8 BE C4 
1cbbf     D5 E6 F6 F6 
1cbc3     F5 0B 1E 0D 
1cbc7     F7 E3 EC F8 | 	byte	$f3, $d8, $be, $c4, $d5, $e6, $f6, $f6, $f5, $0b, $1e, $0d, $f7, $e3, $ec, $f8
1cbcb     F7 F9 FD F3 
1cbcf     E0 CD CB DF 
1cbd3     FD F7 EB E7 
1cbd7     02 16 0A 0E | 	byte	$f7, $f9, $fd, $f3, $e0, $cd, $cb, $df, $fd, $f7, $eb, $e7, $02, $16, $0a, $0e
1cbdb     19 0E 0F 04 
1cbdf     EC E2 D5 DA 
1cbe3     EB FD 19 1F 
1cbe7     00 F8 05 05 | 	byte	$19, $0e, $0f, $04, $ec, $e2, $d5, $da, $eb, $fd, $19, $1f, $00, $f8, $05, $05
1cbeb     FA FC E8 E0 
1cbef     D6 E5 D9 BB 
1cbf3     B1 C3 D8 EB 
1cbf7     EC CE C0 C3 | 	byte	$fa, $fc, $e8, $e0, $d6, $e5, $d9, $bb, $b1, $c3, $d8, $eb, $ec, $ce, $c0, $c3
1cbfb     D0 DB EB FA 
1cbff     02 F4 EC F5 
1cc03     FD 1B 2E 18 
1cc07     02 FF 1B 2E | 	byte	$d0, $db, $eb, $fa, $02, $f4, $ec, $f5, $fd, $1b, $2e, $18, $02, $ff, $1b, $2e
1cc0b     2A 2E 3B 37 
1cc0f     3C 22 F8 E8 
1cc13     06 29 31 34 
1cc17     39 45 49 3E | 	byte	$2a, $2e, $3b, $37, $3c, $22, $f8, $e8, $06, $29, $31, $34, $39, $45, $49, $3e
1cc1b     34 32 3C 44 
1cc1f     36 1F 0E 13 
1cc23     1F 21 26 26 
1cc27     36 45 37 18 | 	byte	$34, $32, $3c, $44, $36, $1f, $0e, $13, $1f, $21, $26, $26, $36, $45, $37, $18
1cc2b     FC F3 FA 04 
1cc2f     15 16 FF D6 
1cc33     C2 D2 E7 F0 
1cc37     FC 04 F5 DE | 	byte	$fc, $f3, $fa, $04, $15, $16, $ff, $d6, $c2, $d2, $e7, $f0, $fc, $04, $f5, $de
1cc3b     EF 07 0A 07 
1cc3f     FA F2 F3 E4 
1cc43     CA C0 BD C2 
1cc47     C9 DC EF F1 | 	byte	$ef, $07, $0a, $07, $fa, $f2, $f3, $e4, $ca, $c0, $bd, $c2, $c9, $dc, $ef, $f1
1cc4b     D8 C3 BE BD 
1cc4f     CB E5 E4 D1 
1cc53     B4 CA EF E7 
1cc57     D7 D0 E1 F6 | 	byte	$d8, $c3, $be, $bd, $cb, $e5, $e4, $d1, $b4, $ca, $ef, $e7, $d7, $d0, $e1, $f6
1cc5b     EE D3 C5 C2 
1cc5f     C6 CB E2 03 
1cc63     01 E3 E3 03 
1cc67     1A 1F 12 02 | 	byte	$ee, $d3, $c5, $c2, $c6, $cb, $e2, $03, $01, $e3, $e3, $03, $1a, $1f, $12, $02
1cc6b     08 1E 49 5A 
1cc6f     42 21 0A 03 
1cc73     16 24 19 0A 
1cc77     F1 E7 E8 F9 | 	byte	$08, $1e, $49, $5a, $42, $21, $0a, $03, $16, $24, $19, $0a, $f1, $e7, $e8, $f9
1cc7b     19 1F 18 23 
1cc7f     31 31 25 18 
1cc83     0F 0E 05 26 
1cc87     38 33 20 11 | 	byte	$19, $1f, $18, $23, $31, $31, $25, $18, $0f, $0e, $05, $26, $38, $33, $20, $11
1cc8b     14 2B 15 F8 
1cc8f     EB 02 10 04 
1cc93     0B 10 02 E8 
1cc97     F1 0E 17 16 | 	byte	$14, $2b, $15, $f8, $eb, $02, $10, $04, $0b, $10, $02, $e8, $f1, $0e, $17, $16
1cc9b     15 0A FB 00 
1cc9f     1E 2C 30 1C 
1cca3     1B 39 55 3C 
1cca7     0F F0 F1 0B | 	byte	$15, $0a, $fb, $00, $1e, $2c, $30, $1c, $1b, $39, $55, $3c, $0f, $f0, $f1, $0b
1ccab     09 0F 08 F3 
1ccaf     D9 CD C9 D8 
1ccb3     EF F3 E3 D6 
1ccb7     C5 C7 D9 F0 | 	byte	$09, $0f, $08, $f3, $d9, $cd, $c9, $d8, $ef, $f3, $e3, $d6, $c5, $c7, $d9, $f0
1ccbb     F3 ED FA FB 
1ccbf     FB FC F6 F0 
1ccc3     F7 FA 07 03 
1ccc7     F4 F0 F3 F0 | 	byte	$f3, $ed, $fa, $fb, $fb, $fc, $f6, $f0, $f7, $fa, $07, $03, $f4, $f0, $f3, $f0
1cccb     F6 F1 F0 EA 
1cccf     D9 E6 03 29 
1ccd3     2F 0B EC F8 
1ccd7     1B 21 11 EC | 	byte	$f6, $f1, $f0, $ea, $d9, $e6, $03, $29, $2f, $0b, $ec, $f8, $1b, $21, $11, $ec
1ccdb     E1 E6 E4 E5 
1ccdf     F7 FD FE FB 
1cce3     F9 F7 FC F4 
1cce7     DE C5 C8 D5 | 	byte	$e1, $e6, $e4, $e5, $f7, $fd, $fe, $fb, $f9, $f7, $fc, $f4, $de, $c5, $c8, $d5
1cceb     ED F6 DE C4 
1ccef     C6 D2 DB DD 
1ccf3     D5 C8 C3 C4 
1ccf7     D0 DB D9 E7 | 	byte	$ed, $f6, $de, $c4, $c6, $d2, $db, $dd, $d5, $c8, $c3, $c4, $d0, $db, $d9, $e7
1ccfb     FE 0B 0E 16 
1ccff     10 F9 E9 0A 
1cd03     2E 39 3D 26 
1cd07     13 1B 35 3E | 	byte	$fe, $0b, $0e, $16, $10, $f9, $e9, $0a, $2e, $39, $3d, $26, $13, $1b, $35, $3e
1cd0b     2D 13 0C 0B 
1cd0f     19 24 33 36 
1cd13     44 52 56 47 
1cd17     58 5B 32 12 | 	byte	$2d, $13, $0c, $0b, $19, $24, $33, $36, $44, $52, $56, $47, $58, $5b, $32, $12
1cd1b     04 14 2D 3C 
1cd1f     3C 2D 23 28 
1cd23     1F 1A 12 1E 
1cd27     1D 2A 20 FF | 	byte	$04, $14, $2d, $3c, $3c, $2d, $23, $28, $1f, $1a, $12, $1e, $1d, $2a, $20, $ff
1cd2b     EE 03 0B 00 
1cd2f     EE ED E8 DB 
1cd33     DF ED EF EB 
1cd37     EC EF EE EF | 	byte	$ee, $03, $0b, $00, $ee, $ed, $e8, $db, $df, $ed, $ef, $eb, $ec, $ef, $ee, $ef
1cd3b     EF EE DB C2 
1cd3f     C0 AE C1 DA 
1cd43     E4 E2 E0 E3 
1cd47     E8 D9 D4 E1 | 	byte	$ef, $ee, $db, $c2, $c0, $ae, $c1, $da, $e4, $e2, $e0, $e3, $e8, $d9, $d4, $e1
1cd4b     D4 BB AD B7 
1cd4f     DA F5 F4 E8 
1cd53     E1 D1 CE D4 
1cd57     E1 EA DD D8 | 	byte	$d4, $bb, $ad, $b7, $da, $f5, $f4, $e8, $e1, $d1, $ce, $d4, $e1, $ea, $dd, $d8
1cd5b     D2 D8 DE E9 
1cd5f     F1 03 14 17 
1cd63     1A 0B FB 03 
1cd67     16 31 46 46 | 	byte	$d2, $d8, $de, $e9, $f1, $03, $14, $17, $1a, $0b, $fb, $03, $16, $31, $46, $46
1cd6b     47 44 2A 16 
1cd6f     F2 E2 EC F4 
1cd73     FE 05 06 F2 
1cd77     F9 0A 1C 24 | 	byte	$47, $44, $2a, $16, $f2, $e2, $ec, $f4, $fe, $05, $06, $f2, $f9, $0a, $1c, $24
1cd7b     30 30 1A F1 
1cd7f     F3 1A 38 3D 
1cd83     26 19 14 04 
1cd87     0F 09 0E 00 | 	byte	$30, $30, $1a, $f1, $f3, $1a, $38, $3d, $26, $19, $14, $04, $0f, $09, $0e, $00
1cd8b     EB E0 F4 0F 
1cd8f     13 13 16 11 
1cd93     0C 17 18 10 
1cd97     FE FB 09 11 | 	byte	$eb, $e0, $f4, $0f, $13, $13, $16, $11, $0c, $17, $18, $10, $fe, $fb, $09, $11
1cd9b     19 0D 0F 27 
1cd9f     3B 3E 1C 16 
1cda3     0D 0B 0C 05 
1cda7     08 0A 07 10 | 	byte	$19, $0d, $0f, $27, $3b, $3e, $1c, $16, $0d, $0b, $0c, $05, $08, $0a, $07, $10
1cdab     03 E8 E1 DE 
1cdaf     DF C8 D0 E1 
1cdb3     FB 05 EF E2 
1cdb7     E1 E9 F7 ED | 	byte	$03, $e8, $e1, $de, $df, $c8, $d0, $e1, $fb, $05, $ef, $e2, $e1, $e9, $f7, $ed
1cdbb     E7 EA FD 0C 
1cdbf     03 F8 F8 04 
1cdc3     17 11 F9 FD 
1cdc7     04 FF E6 CB | 	byte	$e7, $ea, $fd, $0c, $03, $f8, $f8, $04, $17, $11, $f9, $fd, $04, $ff, $e6, $cb
1cdcb     C6 E8 0A 19 
1cdcf     23 19 0E 06 
1cdd3     FB FD FE F7 
1cdd7     EE D9 DC D8 | 	byte	$c6, $e8, $0a, $19, $23, $19, $0e, $06, $fb, $fd, $fe, $f7, $ee, $d9, $dc, $d8
1cddb     DF E7 E7 D3 
1cddf     D1 DB E6 DB 
1cde3     D3 D9 E5 EF 
1cde7     FA F3 DD CF | 	byte	$df, $e7, $e7, $d3, $d1, $db, $e6, $db, $d3, $d9, $e5, $ef, $fa, $f3, $dd, $cf
1cdeb     CD CB C8 C7 
1cdef     D5 DE D8 D0 
1cdf3     D6 DB EC 02 
1cdf7     FF 0A 15 10 | 	byte	$cd, $cb, $c8, $c7, $d5, $de, $d8, $d0, $d6, $db, $ec, $02, $ff, $0a, $15, $10
1cdfb     F3 DF F0 09 
1cdff     2D 44 47 30 
1ce03     37 37 2E 2B 
1ce07     1F 1A 1A 27 | 	byte	$f3, $df, $f0, $09, $2d, $44, $47, $30, $37, $37, $2e, $2b, $1f, $1a, $1a, $27
1ce0b     39 47 58 5D 
1ce0f     56 47 54 64 
1ce13     51 2F 2F 3B 
1ce17     27 12 04 0A | 	byte	$39, $47, $58, $5d, $56, $47, $54, $64, $51, $2f, $2f, $3b, $27, $12, $04, $0a
1ce1b     08 10 18 24 
1ce1f     1F 1D 28 2A 
1ce23     2D 27 16 10 
1ce27     1B 1E 0C 02 | 	byte	$08, $10, $18, $24, $1f, $1d, $28, $2a, $2d, $27, $16, $10, $1b, $1e, $0c, $02
1ce2b     FE F8 E0 D0 
1ce2f     E3 DE D6 DF 
1ce33     DC E1 F5 FD 
1ce37     E1 BF B1 B0 | 	byte	$fe, $f8, $e0, $d0, $e3, $de, $d6, $df, $dc, $e1, $f5, $fd, $e1, $bf, $b1, $b0
1ce3b     B5 C4 D0 DB 
1ce3f     F4 11 0C E2 
1ce43     D3 D1 CF C7 
1ce47     CB D3 D2 C7 | 	byte	$b5, $c4, $d0, $db, $f4, $11, $0c, $e2, $d3, $d1, $cf, $c7, $cb, $d3, $d2, $c7
1ce4b     CF D0 CF D8 
1ce4f     D6 DD E0 E7 
1ce53     F2 FD E7 D4 
1ce57     C6 D4 00 10 | 	byte	$cf, $d0, $cf, $d8, $d6, $dd, $e0, $e7, $f2, $fd, $e7, $d4, $c6, $d4, $00, $10
1ce5b     E9 E2 FA 14 
1ce5f     10 13 19 30 
1ce63     33 3E 4A 51 
1ce67     45 35 1D 0C | 	byte	$e9, $e2, $fa, $14, $10, $13, $19, $30, $33, $3e, $4a, $51, $45, $35, $1d, $0c
1ce6b     04 E4 D7 D8 
1ce6f     E3 EC 01 16 
1ce73     10 00 04 0D 
1ce77     09 F4 EC EB | 	byte	$04, $e4, $d7, $d8, $e3, $ec, $01, $16, $10, $00, $04, $0d, $09, $f4, $ec, $eb
1ce7b     FD 15 2B 13 
1ce7f     05 0A 05 F8 
1ce83     F9 11 18 0F 
1ce87     FC FE 04 17 | 	byte	$fd, $15, $2b, $13, $05, $0a, $05, $f8, $f9, $11, $18, $0f, $fc, $fe, $04, $17
1ce8b     37 3D 15 0F 
1ce8f     23 26 15 06 
1ce93     FB 0B 09 02 
1ce97     FB 0D 1F 23 | 	byte	$37, $3d, $15, $0f, $23, $26, $15, $06, $fb, $0b, $09, $02, $fb, $0d, $1f, $23
1ce9b     17 14 17 04 
1ce9f     03 19 1D 08 
1cea3     FF 0D 0D FE 
1cea7     02 0C 04 F3 | 	byte	$17, $14, $17, $04, $03, $19, $1d, $08, $ff, $0d, $0d, $fe, $02, $0c, $04, $f3
1ceab     E1 D3 DD E9 
1ceaf     E0 D8 D7 ED 
1ceb3     01 F7 E8 F2 
1ceb7     F0 FA FF 05 | 	byte	$e1, $d3, $dd, $e9, $e0, $d8, $d7, $ed, $01, $f7, $e8, $f2, $f0, $fa, $ff, $05
1cebb     0E 1E 34 3C 
1cebf     1F FB E9 E0 
1cec3     EF FE 04 FC 
1cec7     F3 E7 F0 16 | 	byte	$0e, $1e, $34, $3c, $1f, $fb, $e9, $e0, $ef, $fe, $04, $fc, $f3, $e7, $f0, $16
1cecb     22 17 EE EA 
1cecf     EE E8 E2 DA 
1ced3     D6 CF D6 D2 
1ced7     D6 DA C3 BA | 	byte	$22, $17, $ee, $ea, $ee, $e8, $e2, $da, $d6, $cf, $d6, $d2, $d6, $da, $c3, $ba
1cedb     BD D4 DD F6 
1cedf     F8 F2 DA D1 
1cee3     E0 F1 F5 E5 
1cee7     E4 E8 E4 CF | 	byte	$bd, $d4, $dd, $f6, $f8, $f2, $da, $d1, $e0, $f1, $f5, $e5, $e4, $e8, $e4, $cf
1ceeb     BE BE D7 F8 
1ceef     15 0B F2 ED 
1cef3     F5 FF F8 E5 
1cef7     EC E9 FC 0F | 	byte	$be, $be, $d7, $f8, $15, $0b, $f2, $ed, $f5, $ff, $f8, $e5, $ec, $e9, $fc, $0f
1cefb     2C 45 53 42 
1ceff     16 0D 1A 30 
1cf03     3A 47 49 55 
1cf07     59 5E 63 5E | 	byte	$2c, $45, $53, $42, $16, $0d, $1a, $30, $3a, $47, $49, $55, $59, $5e, $63, $5e
1cf0b     52 4D 51 47 
1cf0f     31 2C 32 1F 
1cf13     F9 F3 EB F6 
1cf17     02 0C 1C 27 | 	byte	$52, $4d, $51, $47, $31, $2c, $32, $1f, $f9, $f3, $eb, $f6, $02, $0c, $1c, $27
1cf1b     30 26 21 19 
1cf1f     21 32 25 15 
1cf23     0A 14 1F 1E 
1cf27     0F F3 DE C9 | 	byte	$30, $26, $21, $19, $21, $32, $25, $15, $0a, $14, $1f, $1e, $0f, $f3, $de, $c9
1cf2b     BD C4 E3 F3 
1cf2f     F0 D6 BF BC 
1cf33     C7 C4 C4 C4 
1cf37     D0 E8 FB F4 | 	byte	$bd, $c4, $e3, $f3, $f0, $d6, $bf, $bc, $c7, $c4, $c4, $c4, $d0, $e8, $fb, $f4
1cf3b     E8 E1 DB D4 
1cf3f     DD E2 DC EC 
1cf43     FC ED D1 CB 
1cf47     D9 E7 E3 D7 | 	byte	$e8, $e1, $db, $d4, $dd, $e2, $dc, $ec, $fc, $ed, $d1, $cb, $d9, $e7, $e3, $d7
1cf4b     D9 D0 C2 C1 
1cf4f     D4 EB F9 FC 
1cf53     F8 F4 E3 E7 
1cf57     EF 08 1C 28 | 	byte	$d9, $d0, $c2, $c1, $d4, $eb, $f9, $fc, $f8, $f4, $e3, $e7, $ef, $08, $1c, $28
1cf5b     21 1C 18 29 
1cf5f     45 4A 56 44 
1cf63     33 30 2B 12 
1cf67     FD E6 DB DE | 	byte	$21, $1c, $18, $29, $45, $4a, $56, $44, $33, $30, $2b, $12, $fd, $e6, $db, $de
1cf6b     EE FA F9 F7 
1cf6f     F7 E7 DF DF 
1cf73     F2 F5 E5 D8 
1cf77     E3 01 17 12 | 	byte	$ee, $fa, $f9, $f7, $f7, $e7, $df, $df, $f2, $f5, $e5, $d8, $e3, $01, $17, $12
1cf7b     F2 E7 F8 0D 
1cf7f     FB 02 1B 2F 
1cf83     41 45 41 32 
1cf87     31 2F 2C 20 | 	byte	$f2, $e7, $f8, $0d, $fb, $02, $1b, $2f, $41, $45, $41, $32, $31, $2f, $2c, $20
1cf8b     12 0C 01 FC 
1cf8f     EA E2 F8 10 
1cf93     1D 00 E4 02 
1cf97     34 31 24 17 | 	byte	$12, $0c, $01, $fc, $ea, $e2, $f8, $10, $1d, $00, $e4, $02, $34, $31, $24, $17
1cf9b     17 17 1F 12 
1cf9f     FB FC 01 07 
1cfa3     0B 03 0B 08 
1cfa7     F0 D1 BC C7 | 	byte	$17, $17, $1f, $12, $fb, $fc, $01, $07, $0b, $03, $0b, $08, $f0, $d1, $bc, $c7
1cfab     DB E7 DC D4 
1cfaf     DE E7 E0 FD 
1cfb3     0A 0F 22 49 
1cfb7     49 24 FA F8 | 	byte	$db, $e7, $dc, $d4, $de, $e7, $e0, $fd, $0a, $0f, $22, $49, $49, $24, $fa, $f8
1cfbb     03 06 07 01 
1cfbf     FF 04 05 0A 
1cfc3     03 0B 0C F8 
1cfc7     E3 DA D7 C3 | 	byte	$03, $06, $07, $01, $ff, $04, $05, $0a, $03, $0b, $0c, $f8, $e3, $da, $d7, $c3
1cfcb     B0 C3 DD D4 
1cfcf     CD C8 CC D9 
1cfd3     CF BB C3 D4 
1cfd7     E2 DF D4 CF | 	byte	$b0, $c3, $dd, $d4, $cd, $c8, $cc, $d9, $cf, $bb, $c3, $d4, $e2, $df, $d4, $cf
1cfdb     D0 D5 DF E7 
1cfdf     E7 E6 F7 EF 
1cfe3     D6 DC EE EB 
1cfe7     E8 F5 F2 F2 | 	byte	$d0, $d5, $df, $e7, $e7, $e6, $f7, $ef, $d6, $dc, $ee, $eb, $e8, $f5, $f2, $f2
1cfeb     F6 F2 DC DB 
1cfef     E6 F5 04 FE 
1cff3     F9 FB 11 2C 
1cff7     16 FF 01 21 | 	byte	$f6, $f2, $dc, $db, $e6, $f5, $04, $fe, $f9, $fb, $11, $2c, $16, $ff, $01, $21
1cffb     3B 38 30 37 
1cfff     48 61 64 65 
1d003     62 65 65 5D 
1d007     3B 2D 27 2A | 	byte	$3b, $38, $30, $37, $48, $61, $64, $65, $62, $65, $65, $5d, $3b, $2d, $27, $2a
1d00b     23 0F EF ED 
1d00f     02 07 05 F9 
1d013     02 19 28 27 
1d017     1F 1A 2B 38 | 	byte	$23, $0f, $ef, $ed, $02, $07, $05, $f9, $02, $19, $28, $27, $1f, $1a, $2b, $38
1d01b     2A 1D 10 04 
1d01f     05 10 08 08 
1d023     0A 05 F0 DD 
1d027     DB D5 CB BB | 	byte	$2a, $1d, $10, $04, $05, $10, $08, $08, $0a, $05, $f0, $dd, $db, $d5, $cb, $bb
1d02b     AE B0 B6 BD 
1d02f     DA EB E6 EC 
1d033     F3 F3 F7 F1 
1d037     E0 CF CE E2 | 	byte	$ae, $b0, $b6, $bd, $da, $eb, $e6, $ec, $f3, $f3, $f7, $f1, $e0, $cf, $ce, $e2
1d03b     F0 FD F3 EE 
1d03f     EB E3 E2 E0 
1d043     EC EA E2 E4 
1d047     C7 A9 AD C2 | 	byte	$f0, $fd, $f3, $ee, $eb, $e3, $e2, $e0, $ec, $ea, $e2, $e4, $c7, $a9, $ad, $c2
1d04b     E2 F0 F8 08 
1d04f     0B 06 EF EE 
1d053     02 1D 27 1C 
1d057     17 26 35 3D | 	byte	$e2, $f0, $f8, $08, $0b, $06, $ef, $ee, $02, $1d, $27, $1c, $17, $26, $35, $3d
1d05b     2D 1F 19 2F 
1d05f     29 19 23 1C 
1d063     10 02 00 FB 
1d067     02 FB D8 BA | 	byte	$2d, $1f, $19, $2f, $29, $19, $23, $1c, $10, $02, $00, $fb, $02, $fb, $d8, $ba
1d06b     AA B0 D7 F1 
1d06f     EE E4 D7 DA 
1d073     DA E0 E9 F3 
1d077     07 11 0D 0D | 	byte	$aa, $b0, $d7, $f1, $ee, $e4, $d7, $da, $da, $e0, $e9, $f3, $07, $11, $0d, $0d
1d07b     16 2D 51 61 
1d07f     50 4F 44 3D 
1d083     32 25 1A 15 
1d087     09 F3 EC F2 | 	byte	$16, $2d, $51, $61, $50, $4f, $44, $3d, $32, $25, $1a, $15, $09, $f3, $ec, $f2
1d08b     F9 F7 FF 05 
1d08f     14 20 24 24 
1d093     33 2C 1E 1C 
1d097     2A 38 44 35 | 	byte	$f9, $f7, $ff, $05, $14, $20, $24, $24, $33, $2c, $1e, $1c, $2a, $38, $44, $35
1d09b     15 EC D7 C8 
1d09f     EC 0A 0A EE 
1d0a3     D2 D0 CB D6 
1d0a7     D6 C8 C6 CE | 	byte	$15, $ec, $d7, $c8, $ec, $0a, $0a, $ee, $d2, $d0, $cb, $d6, $d6, $c8, $c6, $ce
1d0ab     E1 03 14 27 
1d0af     30 38 45 4A 
1d0b3     34 17 FD F4 
1d0b7     01 1C 27 2D | 	byte	$e1, $03, $14, $27, $30, $38, $45, $4a, $34, $17, $fd, $f4, $01, $1c, $27, $2d
1d0bb     25 13 FD E3 
1d0bf     E4 E4 E6 EB 
1d0c3     EF DA C7 B3 
1d0c7     A4 A6 C9 EE | 	byte	$25, $13, $fd, $e3, $e4, $e4, $e6, $eb, $ef, $da, $c7, $b3, $a4, $a6, $c9, $ee
1d0cb     00 F2 DF C3 
1d0cf     B2 C4 EA EC 
1d0d3     C8 B2 B4 D1 
1d0d7     E7 E6 E4 DA | 	byte	$00, $f2, $df, $c3, $b2, $c4, $ea, $ec, $c8, $b2, $b4, $d1, $e7, $e6, $e4, $da
1d0db     DE DA CB DE 
1d0df     E6 F4 03 17 
1d0e3     28 26 FD D2 
1d0e7     BC C1 D2 F2 | 	byte	$de, $da, $cb, $de, $e6, $f4, $03, $17, $28, $26, $fd, $d2, $bc, $c1, $d2, $f2
1d0eb     16 2B 29 0F 
1d0ef     F9 F3 E7 E7 
1d0f3     F4 15 2A 2D 
1d0f7     28 38 51 62 | 	byte	$16, $2b, $29, $0f, $f9, $f3, $e7, $e7, $f4, $15, $2a, $2d, $28, $38, $51, $62
1d0fb     64 64 65 5A 
1d0ff     5B 4E 3A 29 
1d103     1F 24 13 F5 
1d107     F2 F5 F7 00 | 	byte	$64, $64, $65, $5a, $5b, $4e, $3a, $29, $1f, $24, $13, $f5, $f2, $f5, $f7, $00
1d10b     25 2D 32 2B 
1d10f     24 1B 19 13 
1d113     17 2D 4F 53 
1d117     34 12 FE EE | 	byte	$25, $2d, $32, $2b, $24, $1b, $19, $13, $17, $2d, $4f, $53, $34, $12, $fe, $ee
1d11b     DF FB 2A 2E 
1d11f     11 F3 DA D6 
1d123     D3 C5 B3 B6 
1d127     BB C2 C8 E5 | 	byte	$df, $fb, $2a, $2e, $11, $f3, $da, $d6, $d3, $c5, $b3, $b6, $bb, $c2, $c8, $e5
1d12b     F0 EA F9 1B 
1d12f     09 EA D0 C6 
1d133     BB BD D4 EE 
1d137     F7 EF ED E4 | 	byte	$f0, $ea, $f9, $1b, $09, $ea, $d0, $c6, $bb, $bd, $d4, $ee, $f7, $ef, $ed, $e4
1d13b     CF CD D9 EB 
1d13f     FA 01 ED DA 
1d143     CE B9 B1 D2 
1d147     F7 07 00 F3 | 	byte	$cf, $cd, $d9, $eb, $fa, $01, $ed, $da, $ce, $b9, $b1, $d2, $f7, $07, $00, $f3
1d14b     F5 FD 0C 1D 
1d14f     2A 19 F7 FC 
1d153     0E 28 22 0F 
1d157     05 14 20 12 | 	byte	$f5, $fd, $0c, $1d, $2a, $19, $f7, $fc, $0e, $28, $22, $0f, $05, $14, $20, $12
1d15b     04 19 1E 1D 
1d15f     3A 47 38 FA 
1d163     D0 B3 A1 A7 
1d167     B2 C4 CD CD | 	byte	$04, $19, $1e, $1d, $3a, $47, $38, $fa, $d0, $b3, $a1, $a7, $b2, $c4, $cd, $cd
1d16b     CA C9 D3 D8 
1d16f     DC E7 04 17 
1d173     13 17 28 38 
1d177     46 5F 63 47 | 	byte	$ca, $c9, $d3, $d8, $dc, $e7, $04, $17, $13, $17, $28, $38, $46, $5f, $63, $47
1d17b     25 21 2A 23 
1d17f     1F 1A 15 14 
1d183     07 EC DD E7 
1d187     FC 11 16 24 | 	byte	$25, $21, $2a, $23, $1f, $1a, $15, $14, $07, $ec, $dd, $e7, $fc, $11, $16, $24
1d18b     35 27 27 33 
1d18f     2B 27 3F 55 
1d193     55 36 1F 0B 
1d197     F4 E2 D6 D6 | 	byte	$35, $27, $27, $33, $2b, $27, $3f, $55, $55, $36, $1f, $0b, $f4, $e2, $d6, $d6
1d19b     EB F1 E5 CF 
1d19f     D4 DB D7 E3 
1d1a3     EA ED DF EE 
1d1a7     12 1F 28 33 | 	byte	$eb, $f1, $e5, $cf, $d4, $db, $d7, $e3, $ea, $ed, $df, $ee, $12, $1f, $28, $33
1d1ab     3A 32 26 2E 
1d1af     15 0A 19 2B 
1d1b3     23 1A 1A 18 
1d1b7     08 FA E2 CC | 	byte	$3a, $32, $26, $2e, $15, $0a, $19, $2b, $23, $1a, $1a, $18, $08, $fa, $e2, $cc
1d1bb     C7 DE E6 CD 
1d1bf     C7 CA D4 DC 
1d1c3     DD D9 D6 E2 
1d1c7     EA DD CF C9 | 	byte	$c7, $de, $e6, $cd, $c7, $ca, $d4, $dc, $dd, $d9, $d6, $e2, $ea, $dd, $cf, $c9
1d1cb     C5 C3 D0 BE 
1d1cf     A6 9D C9 E2 
1d1d3     D7 C8 D7 E5 
1d1d7     DF D8 DE F0 | 	byte	$c5, $c3, $d0, $be, $a6, $9d, $c9, $e2, $d7, $c8, $d7, $e5, $df, $d8, $de, $f0
1d1db     0C 23 1F 14 
1d1df     01 F6 EA EB 
1d1e3     EB EF E5 FA 
1d1e7     0C 09 F0 F3 | 	byte	$0c, $23, $1f, $14, $01, $f6, $ea, $eb, $eb, $ef, $e5, $fa, $0c, $09, $f0, $f3
1d1eb     F7 F3 F7 0C 
1d1ef     19 28 39 3E 
1d1f3     39 52 65 65 
1d1f7     65 44 2D 1A | 	byte	$f7, $f3, $f7, $0c, $19, $28, $39, $3e, $39, $52, $65, $65, $65, $44, $2d, $1a
1d1fb     21 21 10 0D 
1d1ff     15 19 0E FB 
1d203     FB 09 2E 41 
1d207     44 3D 29 2E | 	byte	$21, $21, $10, $0d, $15, $19, $0e, $fb, $fb, $09, $2e, $41, $44, $3d, $29, $2e
1d20b     34 3D 33 22 
1d20f     1F 31 30 13 
1d213     FE 0F 1F 1A 
1d217     F8 F6 FF 02 | 	byte	$34, $3d, $33, $22, $1f, $31, $30, $13, $fe, $0f, $1f, $1a, $f8, $f6, $ff, $02
1d21b     F5 E8 D8 D1 
1d21f     D8 E7 E5 CA 
1d223     C2 CB F4 08 
1d227     00 F4 F3 E4 | 	byte	$f5, $e8, $d8, $d1, $d8, $e7, $e5, $ca, $c2, $cb, $f4, $08, $00, $f4, $f3, $e4
1d22b     D4 C6 BA BC 
1d22f     D0 D7 D7 D3 
1d233     CE DF E8 ED 
1d237     E6 DF E4 ED | 	byte	$d4, $c6, $ba, $bc, $d0, $d7, $d7, $d3, $ce, $df, $e8, $ed, $e6, $df, $e4, $ed
1d23b     F4 ED DD ED 
1d23f     EE EF F1 F2 
1d243     F4 FD 0E 0F 
1d247     08 03 FE 0A | 	byte	$f4, $ed, $dd, $ed, $ee, $ef, $f1, $f2, $f4, $fd, $0e, $0f, $08, $03, $fe, $0a
1d24b     11 FE E6 EA 
1d24f     02 02 F5 F7 
1d253     FC 0A 14 18 
1d257     20 2D 39 3E | 	byte	$11, $fe, $e6, $ea, $02, $02, $f5, $f7, $fc, $0a, $14, $18, $20, $2d, $39, $3e
1d25b     28 04 E6 E3 
1d25f     D6 D3 BB 9E 
1d263     A5 C5 C5 AB 
1d267     AC C8 E5 F9 | 	byte	$28, $04, $e6, $e3, $d6, $d3, $bb, $9e, $a5, $c5, $c5, $ab, $ac, $c8, $e5, $f9
1d26b     15 26 25 24 
1d26f     1F 26 31 4D 
1d273     5F 5C 42 22 
1d277     0A 01 14 08 | 	byte	$15, $26, $25, $24, $1f, $26, $31, $4d, $5f, $5c, $42, $22, $0a, $01, $14, $08
1d27b     EF EC 08 12 
1d27f     04 EB DD EE 
1d283     05 24 28 2C 
1d287     3D 4B 41 41 | 	byte	$ef, $ec, $08, $12, $04, $eb, $dd, $ee, $05, $24, $28, $2c, $3d, $4b, $41, $41
1d28b     4F 3E 2C 22 
1d28f     1B 13 FC 02 
1d293     EA DF E3 EE 
1d297     EA D7 D9 ED | 	byte	$4f, $3e, $2c, $22, $1b, $13, $fc, $02, $ea, $df, $e3, $ee, $ea, $d7, $d9, $ed
1d29b     F7 00 09 17 
1d29f     11 F3 F3 14 
1d2a3     2A 2D 1D 1A 
1d2a7     18 19 0F 1A | 	byte	$f7, $00, $09, $17, $11, $f3, $f3, $14, $2a, $2d, $1d, $1a, $18, $19, $0f, $1a
1d2ab     2A 1F 15 09 
1d2af     05 09 01 F6 
1d2b3     F1 F2 E5 C4 
1d2b7     C4 CE D8 CE | 	byte	$2a, $1f, $15, $09, $05, $09, $01, $f6, $f1, $f2, $e5, $c4, $c4, $ce, $d8, $ce
1d2bb     CC DA F2 00 
1d2bf     F9 E1 D2 CA 
1d2c3     DB DF D0 CA 
1d2c7     BE BF BB 9C | 	byte	$cc, $da, $f2, $00, $f9, $e1, $d2, $ca, $db, $df, $d0, $ca, $be, $bf, $bb, $9c
1d2cb     95 B3 CA D2 
1d2cf     CC D1 CF CA 
1d2d3     D7 E7 F3 02 
1d2d7     02 FF 00 08 | 	byte	$95, $b3, $ca, $d2, $cc, $d1, $cf, $ca, $d7, $e7, $f3, $02, $02, $ff, $00, $08
1d2db     09 FD FF F4 
1d2df     D8 D7 FB 12 
1d2e3     01 DE E1 F7 
1d2e7     05 0D 30 47 | 	byte	$09, $fd, $ff, $f4, $d8, $d7, $fb, $12, $01, $de, $e1, $f7, $05, $0d, $30, $47
1d2eb     45 44 43 40 
1d2ef     51 5A 52 4E 
1d2f3     4C 36 2D 25 
1d2f7     04 E9 D8 F6 | 	byte	$45, $44, $43, $40, $51, $5a, $52, $4e, $4c, $36, $2d, $25, $04, $e9, $d8, $f6
1d2fb     12 13 1D 2B 
1d2ff     30 3D 3C 4F 
1d303     46 3F 54 5B 
1d307     51 48 30 12 | 	byte	$12, $13, $1d, $2b, $30, $3d, $3c, $4f, $46, $3f, $54, $5b, $51, $48, $30, $12
1d30b     0C 0F 01 FD 
1d30f     FF FA F1 FB 
1d313     11 13 F9 DA 
1d317     E4 E6 F1 F7 | 	byte	$0c, $0f, $01, $fd, $ff, $fa, $f1, $fb, $11, $13, $f9, $da, $e4, $e6, $f1, $f7
1d31b     0A 0A F7 DF 
1d31f     EC EA E9 D9 
1d323     CA D5 F4 F5 
1d327     DB C1 BC B1 | 	byte	$0a, $0a, $f7, $df, $ec, $ea, $e9, $d9, $ca, $d5, $f4, $f5, $db, $c1, $bc, $b1
1d32b     AB B6 C8 CA 
1d32f     D4 E4 FB FE 
1d333     F4 F2 E3 CC 
1d337     DB EB 04 1C | 	byte	$ab, $b6, $c8, $ca, $d4, $e4, $fb, $fe, $f4, $f2, $e3, $cc, $db, $eb, $04, $1c
1d33b     22 0D F3 F6 
1d33f     04 0B 08 01 
1d343     F8 FE 1C 1A 
1d347     EC D1 DA E2 | 	byte	$22, $0d, $f3, $f6, $04, $0b, $08, $01, $f8, $fe, $1c, $1a, $ec, $d1, $da, $e2
1d34b     D5 D1 ED 02 
1d34f     FF FD 05 17 
1d353     1F 1C 12 1A 
1d357     1E 10 F0 DD | 	byte	$d5, $d1, $ed, $02, $ff, $fd, $05, $17, $1f, $1c, $12, $1a, $1e, $10, $f0, $dd
1d35b     DD C7 B1 BF 
1d35f     BE B5 B7 CD 
1d363     EF 0B 1C 1E 
1d367     0E 15 2D 3C | 	byte	$dd, $c7, $b1, $bf, $be, $b5, $b7, $cd, $ef, $0b, $1c, $1e, $0e, $15, $2d, $3c
1d36b     37 33 37 32 
1d36f     36 37 35 17 
1d373     FD DE C4 C5 
1d377     EA 03 06 0A | 	byte	$37, $33, $37, $32, $36, $37, $35, $17, $fd, $de, $c4, $c5, $ea, $03, $06, $0a
1d37b     FB E5 EA 11 
1d37f     35 3A 42 4C 
1d383     53 58 4B 38 
1d387     1A 1A 1D 16 | 	byte	$fb, $e5, $ea, $11, $35, $3a, $42, $4c, $53, $58, $4b, $38, $1a, $1a, $1d, $16
1d38b     00 FE FC ED 
1d38f     EA F1 F4 EE 
1d393     F3 06 1B 19 
1d397     1C 17 0E 15 | 	byte	$00, $fe, $fc, $ed, $ea, $f1, $f4, $ee, $f3, $06, $1b, $19, $1c, $17, $0e, $15
1d39b     24 27 2D 1C 
1d39f     08 EB 01 1C 
1d3a3     30 1E 01 F6 
1d3a7     F7 0D 1D 0E | 	byte	$24, $27, $2d, $1c, $08, $eb, $01, $1c, $30, $1e, $01, $f6, $f7, $0d, $1d, $0e
1d3ab     EC CE D2 DF 
1d3af     F4 15 0F E7 
1d3b3     BE B1 B9 C9 
1d3b7     E3 0B 11 FC | 	byte	$ec, $ce, $d2, $df, $f4, $15, $0f, $e7, $be, $b1, $b9, $c9, $e3, $0b, $11, $fc
1d3bb     DA D1 CE C7 
1d3bf     CC D2 D8 D9 
1d3c3     D3 BD A5 A1 
1d3c7     9E 9B A3 AC | 	byte	$da, $d1, $ce, $c7, $cc, $d2, $d8, $d9, $d3, $bd, $a5, $a1, $9e, $9b, $a3, $ac
1d3cb     AB B1 CB DB 
1d3cf     E0 DD DB DA 
1d3d3     EA F9 0B 05 
1d3d7     E9 DD E8 F0 | 	byte	$ab, $b1, $cb, $db, $e0, $dd, $db, $da, $ea, $f9, $0b, $05, $e9, $dd, $e8, $f0
1d3db     F0 EF E9 E1 
1d3df     FB 0C 2F 42 
1d3e3     40 2C 24 31 
1d3e7     42 49 55 5E | 	byte	$f0, $ef, $e9, $e1, $fb, $0c, $2f, $42, $40, $2c, $24, $31, $42, $49, $55, $5e
1d3eb     49 38 39 4B 
1d3ef     48 25 03 E9 
1d3f3     DD F1 03 10 
1d3f7     1B 33 35 42 | 	byte	$49, $38, $39, $4b, $48, $25, $03, $e9, $dd, $f1, $03, $10, $1b, $33, $35, $42
1d3fb     4B 47 42 52 
1d3ff     64 64 65 51 
1d403     38 1D 0F 0F 
1d407     0E 00 EA E2 | 	byte	$4b, $47, $42, $52, $64, $64, $65, $51, $38, $1d, $0f, $0f, $0e, $00, $ea, $e2
1d40b     E5 F9 08 01 
1d40f     F5 E2 EF 02 
1d413     1F 26 12 EE 
1d417     EB 02 05 ED | 	byte	$e5, $f9, $08, $01, $f5, $e2, $ef, $02, $1f, $26, $12, $ee, $eb, $02, $05, $ed
1d41b     E4 EF E2 D9 
1d41f     DD E8 D2 BB 
1d423     B5 AF BB C6 
1d427     BE B9 B3 CB | 	byte	$e4, $ef, $e2, $d9, $dd, $e8, $d2, $bb, $b5, $af, $bb, $c6, $be, $b9, $b3, $cb
1d42b     E1 FC 02 F1 
1d42f     DF EC EC F1 
1d433     F3 F8 10 21 
1d437     27 16 FC E1 | 	byte	$e1, $fc, $02, $f1, $df, $ec, $ec, $f1, $f3, $f8, $10, $21, $27, $16, $fc, $e1
1d43b     DE 01 0F 26 
1d43f     33 18 FC E7 
1d443     DD D2 D9 D6 
1d447     D6 CE CE E1 | 	byte	$de, $01, $0f, $26, $33, $18, $fc, $e7, $dd, $d2, $d9, $d6, $d6, $ce, $ce, $e1
1d44b     F1 F0 00 1F 
1d44f     2B 1A 18 0F 
1d453     E8 DB DD D7 
1d457     D3 D0 C4 CD | 	byte	$f1, $f0, $00, $1f, $2b, $1a, $18, $0f, $e8, $db, $dd, $d7, $d3, $d0, $c4, $cd
1d45b     DA EE F6 0A 
1d45f     19 1A 20 2A 
1d463     24 28 25 29 
1d467     38 2A 13 0E | 	byte	$da, $ee, $f6, $0a, $19, $1a, $20, $2a, $24, $28, $25, $29, $38, $2a, $13, $0e
1d46b     18 16 04 F2 
1d46f     E0 DE EA E3 
1d473     DF EC 0D 1E 
1d477     21 0B EC FD | 	byte	$18, $16, $04, $f2, $e0, $de, $ea, $e3, $df, $ec, $0d, $1e, $21, $0b, $ec, $fd
1d47b     21 35 54 65 
1d47f     65 55 2D 0A 
1d483     0D 11 02 08 
1d487     0E F7 EB EC | 	byte	$21, $35, $54, $65, $65, $55, $2d, $0a, $0d, $11, $02, $08, $0e, $f7, $eb, $ec
1d48b     F8 12 11 0C 
1d48f     1A 41 47 30 
1d493     27 2E 3E 47 
1d497     35 0A FF 0D | 	byte	$f8, $12, $11, $0c, $1a, $41, $47, $30, $27, $2e, $3e, $47, $35, $0a, $ff, $0d
1d49b     0F 13 14 01 
1d49f     F6 F8 07 12 
1d4a3     09 FA F1 E3 
1d4a7     EA F4 F8 DA | 	byte	$0f, $13, $14, $01, $f6, $f8, $07, $12, $09, $fa, $f1, $e3, $ea, $f4, $f8, $da
1d4ab     CC D8 EA E6 
1d4af     D6 DF E1 D7 
1d4b3     EA 01 04 E8 
1d4b7     C2 B1 C6 D3 | 	byte	$cc, $d8, $ea, $e6, $d6, $df, $e1, $d7, $ea, $01, $04, $e8, $c2, $b1, $c6, $d3
1d4bb     E1 F3 F9 E8 
1d4bf     D0 AC 99 9C 
1d4c3     99 96 A4 BD 
1d4c7     BC B1 A8 AE | 	byte	$e1, $f3, $f9, $e8, $d0, $ac, $99, $9c, $99, $96, $a4, $bd, $bc, $b1, $a8, $ae
1d4cb     C4 DF E2 DE 
1d4cf     DD D5 DC E4 
1d4d3     E8 E5 DC DE 
1d4d7     E9 F8 F7 09 | 	byte	$c4, $df, $e2, $de, $dd, $d5, $dc, $e4, $e8, $e5, $dc, $de, $e9, $f8, $f7, $09
1d4db     2A 3C 3B 38 
1d4df     48 46 2E 2D 
1d4e3     4D 56 59 4E 
1d4e7     30 1D 1D 22 | 	byte	$2a, $3c, $3b, $38, $48, $46, $2e, $2d, $4d, $56, $59, $4e, $30, $1d, $1d, $22
1d4eb     1D 11 11 09 
1d4ef     13 1B 1E 14 
1d4f3     2C 3B 4E 3E 
1d4f7     48 64 65 57 | 	byte	$1d, $11, $11, $09, $13, $1b, $1e, $14, $2c, $3b, $4e, $3e, $48, $64, $65, $57
1d4fb     63 65 53 35 
1d4ff     27 0F 07 09 
1d503     08 FD F8 E8 
1d507     D6 D4 EF 02 | 	byte	$63, $65, $53, $35, $27, $0f, $07, $09, $08, $fd, $f8, $e8, $d6, $d4, $ef, $02
1d50b     F3 0A 26 25 
1d50f     06 03 04 04 
1d513     F3 F6 02 F4 
1d517     F1 ED D5 C5 | 	byte	$f3, $0a, $26, $25, $06, $03, $04, $04, $f3, $f6, $02, $f4, $f1, $ed, $d5, $c5
1d51b     CA CA B4 B9 
1d51f     CA BF C9 DD 
1d523     E2 D0 CB CC 
1d527     DA E1 F6 09 | 	byte	$ca, $ca, $b4, $b9, $ca, $bf, $c9, $dd, $e2, $d0, $cb, $cc, $da, $e1, $f6, $09
1d52b     08 F0 E7 F7 
1d52f     F5 05 17 09 
1d533     E6 F0 EE E9 
1d537     07 23 22 24 | 	byte	$08, $f0, $e7, $f7, $f5, $05, $17, $09, $e6, $f0, $ee, $e9, $07, $23, $22, $24
1d53b     26 17 F2 DD 
1d53f     E0 EA DE E5 
1d543     E6 CC B6 BE 
1d547     D9 EE 11 17 | 	byte	$26, $17, $f2, $dd, $e0, $ea, $de, $e5, $e6, $cc, $b6, $be, $d9, $ee, $11, $17
1d54b     05 EB EB E8 
1d54f     CC C6 CB CF 
1d553     DC F2 F7 E1 
1d557     DD EA 11 2F | 	byte	$05, $eb, $eb, $e8, $cc, $c6, $cb, $cf, $dc, $f2, $f7, $e1, $dd, $ea, $11, $2f
1d55b     39 2F 28 24 
1d55f     29 2D 29 26 
1d563     1C F5 DE F8 
1d567     01 F3 F9 0B | 	byte	$39, $2f, $28, $24, $29, $2d, $29, $26, $1c, $f5, $de, $f8, $01, $f3, $f9, $0b
1d56b     02 EF E4 E2 
1d56f     D4 E9 FB 0F 
1d573     13 0E 0F 0F 
1d577     21 3E 5D 57 | 	byte	$02, $ef, $e4, $e2, $d4, $e9, $fb, $0f, $13, $0e, $0f, $0f, $21, $3e, $5d, $57
1d57b     42 39 1D 03 
1d57f     0E 15 06 0E 
1d583     14 0F 08 08 
1d587     11 09 10 2C | 	byte	$42, $39, $1d, $03, $0e, $15, $06, $0e, $14, $0f, $08, $08, $11, $09, $10, $2c
1d58b     55 61 50 3E 
1d58f     34 32 2A 2B 
1d593     2A 1D 1C 08 
1d597     EF EE FF 0C | 	byte	$55, $61, $50, $3e, $34, $32, $2a, $2b, $2a, $1d, $1c, $08, $ef, $ee, $ff, $0c
1d59b     16 19 0B F8 
1d59f     02 06 F9 EB 
1d5a3     DC EB F3 F4 
1d5a7     EA CF C1 D0 | 	byte	$16, $19, $0b, $f8, $02, $06, $f9, $eb, $dc, $eb, $f3, $f4, $ea, $cf, $c1, $d0
1d5ab     E8 F1 E3 E8 
1d5af     D5 BD B5 BE 
1d5b3     C5 E8 01 FB 
1d5b7     F1 F3 FA DC | 	byte	$e8, $f1, $e3, $e8, $d5, $bd, $b5, $be, $c5, $e8, $01, $fb, $f1, $f3, $fa, $dc
1d5bb     C6 B9 C1 D8 
1d5bf     E5 DB C3 92 
1d5c3     86 A1 C2 C2 
1d5c7     B2 AA AB B9 | 	byte	$c6, $b9, $c1, $d8, $e5, $db, $c3, $92, $86, $a1, $c2, $c2, $b2, $aa, $ab, $b9
1d5cb     C4 D1 DB D0 
1d5cf     BF C5 E1 EE 
1d5d3     DE EE 0B 36 
1d5d7     4E 50 43 30 | 	byte	$c4, $d1, $db, $d0, $bf, $c5, $e1, $ee, $de, $ee, $0b, $36, $4e, $50, $43, $30
1d5db     24 35 54 61 
1d5df     51 3E 28 17 
1d5e3     17 1E 2D 40 
1d5e7     3A 37 32 2D | 	byte	$24, $35, $54, $61, $51, $3e, $28, $17, $17, $1e, $2d, $40, $3a, $37, $32, $2d
1d5eb     2B 10 05 1A 
1d5ef     38 44 57 65 
1d5f3     65 53 50 56 
1d5f7     4E 42 2F 1B | 	byte	$2b, $10, $05, $1a, $38, $44, $57, $65, $65, $53, $50, $56, $4e, $42, $2f, $1b
1d5fb     13 0D 0C 02 
1d5ff     FF 04 E9 D7 
1d603     E2 00 00 00 
1d607     00 0B 05 14 | 	byte	$13, $0d, $0c, $02, $ff, $04, $e9, $d7, $e2, $00, $00, $00, $00, $0b, $05, $14
1d60b     2E 31 0B DE 
1d60f     DE 10 26 22 
1d613     20 35 4E 4A 
1d617     2A 1A 11 0A | 	byte	$2e, $31, $0b, $de, $de, $10, $26, $22, $20, $35, $4e, $4a, $2a, $1a, $11, $0a
1d61b     08 0B 07 DC 
1d61f     CD C9 C4 B2 
1d623     A9 A9 A8 B4 
1d627     D3 D0 AF C5 | 	byte	$08, $0b, $07, $dc, $cd, $c9, $c4, $b2, $a9, $a9, $a8, $b4, $d3, $d0, $af, $c5
1d62b     ED 03 F7 F2 
1d62f     F6 02 F5 E0 
1d633     EB 15 29 1E 
1d637     FD F4 F1 F8 | 	byte	$ed, $03, $f7, $f2, $f6, $02, $f5, $e0, $eb, $15, $29, $1e, $fd, $f4, $f1, $f8
1d63b     F5 FA 02 01 
1d63f     02 1F 3B 3C 
1d643     1D 01 0F 19 
1d647     04 FA 19 2E | 	byte	$f5, $fa, $02, $01, $02, $1f, $3b, $3c, $1d, $01, $0f, $19, $04, $fa, $19, $2e
1d64b     2B 08 EA F9 
1d64f     10 0B 0A 0C 
1d653     0A 03 F2 D5 
1d657     CB C9 B9 B8 | 	byte	$2b, $08, $ea, $f9, $10, $0b, $0a, $0c, $0a, $03, $f2, $d5, $cb, $c9, $b9, $b8
1d65b     C8 DF E5 E5 
1d65f     F3 10 01 E5 
1d663     F3 15 2B 27 
1d667     0A 12 36 4F | 	byte	$c8, $df, $e5, $e5, $f3, $10, $01, $e5, $f3, $15, $2b, $27, $0a, $12, $36, $4f
1d66b     4A 36 2D 23 
1d66f     18 15 17 20 
1d673     22 01 E8 E3 
1d677     DE D4 C9 DD | 	byte	$4a, $36, $2d, $23, $18, $15, $17, $20, $22, $01, $e8, $e3, $de, $d4, $c9, $dd
1d67b     F6 FF 08 11 
1d67f     19 21 22 1A 
1d683     16 0C ED DF 
1d687     F0 13 19 00 | 	byte	$f6, $ff, $08, $11, $19, $21, $22, $1a, $16, $0c, $ed, $df, $f0, $13, $19, $00
1d68b     D4 C2 D4 E0 
1d68f     E1 F7 02 F6 
1d693     F0 EF F2 E8 
1d697     DF E8 F8 E9 | 	byte	$d4, $c2, $d4, $e0, $e1, $f7, $02, $f6, $f0, $ef, $f2, $e8, $df, $e8, $f8, $e9
1d69b     D5 D3 E8 FD 
1d69f     FD F9 EF ED 
1d6a3     E7 E2 E6 E9 
1d6a7     EE FD 05 0C | 	byte	$d5, $d3, $e8, $fd, $fd, $f9, $ef, $ed, $e7, $e2, $e6, $e9, $ee, $fd, $05, $0c
1d6ab     19 23 24 1A 
1d6af     18 1F 23 47 
1d6b3     52 3C 27 1D 
1d6b7     1B 19 04 FB | 	byte	$19, $23, $24, $1a, $18, $1f, $23, $47, $52, $3c, $27, $1d, $1b, $19, $04, $fb
1d6bb     02 1C 34 34 
1d6bf     23 0D 04 F3 
1d6c3     EF EE FC 02 
1d6c7     01 F3 D7 C3 | 	byte	$02, $1c, $34, $34, $23, $0d, $04, $f3, $ef, $ee, $fc, $02, $01, $f3, $d7, $c3
1d6cb     B5 C3 E0 F6 
1d6cf     09 03 03 11 
1d6d3     03 E6 E7 E3 
1d6d7     DD BB AF B2 | 	byte	$b5, $c3, $e0, $f6, $09, $03, $03, $11, $03, $e6, $e7, $e3, $dd, $bb, $af, $b2
1d6db     DE F3 F0 EC 
1d6df     ED 03 10 16 
1d6e3     1E 20 1D 0E 
1d6e7     2F 4E 47 32 | 	byte	$de, $f3, $f0, $ec, $ed, $03, $10, $16, $1e, $20, $1d, $0e, $2f, $4e, $47, $32
1d6eb     33 43 46 0F 
1d6ef     FB 00 0C 0E 
1d6f3     00 FA F1 D1 
1d6f7     AB A6 BC DF | 	byte	$33, $43, $46, $0f, $fb, $00, $0c, $0e, $00, $fa, $f1, $d1, $ab, $a6, $bc, $df
1d6fb     F8 FF FC F1 
1d6ff     F8 08 13 15 
1d703     12 16 1E 3A 
1d707     4B 45 23 14 | 	byte	$f8, $ff, $fc, $f1, $f8, $08, $13, $15, $12, $16, $1e, $3a, $4b, $45, $23, $14
1d70b     0C 02 F8 04 
1d70f     0A 07 09 FC 
1d713     F0 F9 10 25 
1d717     18 F3 ED F7 | 	byte	$0c, $02, $f8, $04, $0a, $07, $09, $fc, $f0, $f9, $10, $25, $18, $f3, $ed, $f7
1d71b     F7 08 09 F7 
1d71f     E1 ED F0 F4 
1d723     E7 EB E9 E6 
1d727     E9 E4 DE D8 | 	byte	$f7, $08, $09, $f7, $e1, $ed, $f0, $f4, $e7, $eb, $e9, $e6, $e9, $e4, $de, $d8
1d72b     C8 B8 B5 C7 
1d72f     EB 05 FB EC 
1d733     F0 E9 CE CB 
1d737     E9 FC FE 12 | 	byte	$c8, $b8, $b5, $c7, $eb, $05, $fb, $ec, $f0, $e9, $ce, $cb, $e9, $fc, $fe, $12
1d73b     2C 41 28 18 
1d73f     22 25 12 F3 
1d743     EC F6 F0 F1 
1d747     F8 F6 F8 0A | 	byte	$2c, $41, $28, $18, $22, $25, $12, $f3, $ec, $f6, $f0, $f1, $f8, $f6, $f8, $0a
1d74b     1E 25 2D 21 
1d74f     01 FB 0A 22 
1d753     2D 2F 2C 15 
1d757     EE E4 06 1E | 	byte	$1e, $25, $2d, $21, $01, $fb, $0a, $22, $2d, $2f, $2c, $15, $ee, $e4, $06, $1e
1d75b     1C 16 F9 E5 
1d75f     CA C4 CF DC 
1d763     EF FE 09 10 
1d767     13 09 06 10 | 	byte	$1c, $16, $f9, $e5, $ca, $c4, $cf, $dc, $ef, $fe, $09, $10, $13, $09, $06, $10
1d76b     2C 2A 1C 0D 
1d76f     0D 17 1E 1A 
1d773     06 F4 D0 BB 
1d777     CA E3 EF E7 | 	byte	$2c, $2a, $1c, $0d, $0d, $17, $1e, $1a, $06, $f4, $d0, $bb, $ca, $e3, $ef, $e7
1d77b     E4 E1 F2 04 
1d77f     05 07 12 19 
1d783     19 17 2B 3D 
1d787     3B 24 19 1D | 	byte	$e4, $e1, $f2, $04, $05, $07, $12, $19, $19, $17, $2b, $3d, $3b, $24, $19, $1d
1d78b     2A 2A 1B 1B 
1d78f     10 F9 E5 E7 
1d793     D7 C6 A7 97 
1d797     A0 BF D1 D1 | 	byte	$2a, $2a, $1b, $1b, $10, $f9, $e5, $e7, $d7, $c6, $a7, $97, $a0, $bf, $d1, $d1
1d79b     E0 ED DA C5 
1d79f     C5 EA FE F4 
1d7a3     D2 D2 E5 04 
1d7a7     10 1C 2E 22 | 	byte	$e0, $ed, $da, $c5, $c5, $ea, $fe, $f4, $d2, $d2, $e5, $04, $10, $1c, $2e, $22
1d7ab     13 0A 0D 21 
1d7af     23 1F 00 02 
1d7b3     F8 E7 E9 FE 
1d7b7     24 3A 3B 3C | 	byte	$13, $0a, $0d, $21, $23, $1f, $00, $02, $f8, $e7, $e9, $fe, $24, $3a, $3b, $3c
1d7bb     49 4D 38 35 
1d7bf     3E 3F 1E 10 
1d7c3     1D 25 18 F8 
1d7c7     E4 CD BF CB | 	byte	$49, $4d, $38, $35, $3e, $3f, $1e, $10, $1d, $25, $18, $f8, $e4, $cd, $bf, $cb
1d7cb     D7 CF D7 C8 
1d7cf     BE D0 F7 07 
1d7d3     F1 CD B8 B9 
1d7d7     C9 E5 07 10 | 	byte	$d7, $cf, $d7, $c8, $be, $d0, $f7, $07, $f1, $cd, $b8, $b9, $c9, $e5, $07, $10
1d7db     02 EB EB FB 
1d7df     04 09 0D 02 
1d7e3     FF FA FC FA 
1d7e7     1D 2D 28 1E | 	byte	$02, $eb, $eb, $fb, $04, $09, $0d, $02, $ff, $fa, $fc, $fa, $1d, $2d, $28, $1e
1d7eb     19 23 42 4A 
1d7ef     4A 4B 42 18 
1d7f3     06 F8 F4 FC 
1d7f7     03 12 12 0C | 	byte	$19, $23, $42, $4a, $4a, $4b, $42, $18, $06, $f8, $f4, $fc, $03, $12, $12, $0c
1d7fb     0F 07 F8 F2 
1d7ff     E9 E8 01 1C 
1d803     31 19 FC F5 
1d807     0A 15 0B 01 | 	byte	$0f, $07, $f8, $f2, $e9, $e8, $01, $1c, $31, $19, $fc, $f5, $0a, $15, $0b, $01
1d80b     FE EF EA EF 
1d80f     EE FE FB FA 
1d813     E8 C5 CB E7 
1d817     EE EE DF D1 | 	byte	$fe, $ef, $ea, $ef, $ee, $fe, $fb, $fa, $e8, $c5, $cb, $e7, $ee, $ee, $df, $d1
1d81b     D7 E3 F1 EB 
1d81f     D7 D5 E0 EF 
1d823     F6 09 2A 3B 
1d827     3B 34 17 FD | 	byte	$d7, $e3, $f1, $eb, $d7, $d5, $e0, $ef, $f6, $09, $2a, $3b, $3b, $34, $17, $fd
1d82b     FD 12 25 1A 
1d82f     0B F3 D5 BE 
1d833     B0 AF C7 EC 
1d837     06 FC E6 ED | 	byte	$fd, $12, $25, $1a, $0b, $f3, $d5, $be, $b0, $af, $c7, $ec, $06, $fc, $e6, $ed
1d83b     F8 0F 20 0B 
1d83f     F9 F5 03 0C 
1d843     14 0A 01 FD 
1d847     00 02 FB F6 | 	byte	$f8, $0f, $20, $0b, $f9, $f5, $03, $0c, $14, $0a, $01, $fd, $00, $02, $fb, $f6
1d84b     FE FC F7 F6 
1d84f     FE 0F 15 F8 
1d853     D5 D9 05 2D 
1d857     51 48 3F 3B | 	byte	$fe, $fc, $f7, $f6, $fe, $0f, $15, $f8, $d5, $d9, $05, $2d, $51, $48, $3f, $3b
1d85b     30 2F 32 24 
1d85f     11 0C 07 11 
1d863     1E 1E 24 19 
1d867     14 10 05 02 | 	byte	$30, $2f, $32, $24, $11, $0c, $07, $11, $1e, $1e, $24, $19, $14, $10, $05, $02
1d86b     0B 15 08 F2 
1d86f     EE E0 EA DE 
1d873     CA D3 D2 D7 
1d877     DD E7 F4 FF | 	byte	$0b, $15, $08, $f2, $ee, $e0, $ea, $de, $ca, $d3, $d2, $d7, $dd, $e7, $f4, $ff
1d87b     01 00 F9 F6 
1d87f     F1 02 0F 15 
1d883     10 FA F9 09 
1d887     0A 00 02 03 | 	byte	$01, $00, $f9, $f6, $f1, $02, $0f, $15, $10, $fa, $f9, $09, $0a, $00, $02, $03
1d88b     FF 11 1B 2D 
1d88f     3D 24 07 EB 
1d893     DC F2 FB FD 
1d897     07 02 F3 DC | 	byte	$ff, $11, $1b, $2d, $3d, $24, $07, $eb, $dc, $f2, $fb, $fd, $07, $02, $f3, $dc
1d89b     DE D6 DF D3 
1d89f     C7 CA D4 BD 
1d8a3     C6 E6 FD 17 
1d8a7     24 16 1E 1B | 	byte	$de, $d6, $df, $d3, $c7, $ca, $d4, $bd, $c6, $e6, $fd, $17, $24, $16, $1e, $1b
1d8ab     0F 08 FA ED 
1d8af     F0 E9 DA D3 
1d8b3     E3 E2 F6 0F 
1d8b7     23 1D 09 12 | 	byte	$0f, $08, $fa, $ed, $f0, $e9, $da, $d3, $e3, $e2, $f6, $0f, $23, $1d, $09, $12
1d8bb     25 1A 18 1E 
1d8bf     1D 21 46 4B 
1d8c3     3B 37 33 2B 
1d8c7     17 F9 F3 F8 | 	byte	$25, $1a, $18, $1e, $1d, $21, $46, $4b, $3b, $37, $33, $2b, $17, $f9, $f3, $f8
1d8cb     FA 07 0A 15 
1d8cf     E9 C2 B3 BD 
1d8d3     C7 CD E9 F1 
1d8d7     D1 C5 CF D2 | 	byte	$fa, $07, $0a, $15, $e9, $c2, $b3, $bd, $c7, $cd, $e9, $f1, $d1, $c5, $cf, $d2
1d8db     E8 FA F9 F2 
1d8df     EB E9 F0 EB 
1d8e3     EC 06 1D 24 
1d8e7     24 1E 0B 06 | 	byte	$e8, $fa, $f9, $f2, $eb, $e9, $f0, $eb, $ec, $06, $1d, $24, $24, $1e, $0b, $06
1d8eb     10 1E 22 12 
1d8ef     F7 DE D4 E7 
1d8f3     0C 1D 17 11 
1d8f7     1B 2C 42 4D | 	byte	$10, $1e, $22, $12, $f7, $de, $d4, $e7, $0c, $1d, $17, $11, $1b, $2c, $42, $4d
1d8fb     4D 49 31 21 
1d8ff     2D 42 3B 1E 
1d903     09 02 03 FA 
1d907     E8 E0 E5 E0 | 	byte	$4d, $49, $31, $21, $2d, $42, $3b, $1e, $09, $02, $03, $fa, $e8, $e0, $e5, $e0
1d90b     D5 DE EE DF 
1d90f     BC B4 D1 E1 
1d913     DC E6 E6 E7 
1d917     C9 BB BF D4 | 	byte	$d5, $de, $ee, $df, $bc, $b4, $d1, $e1, $dc, $e6, $e6, $e7, $c9, $bb, $bf, $d4
1d91b     DF D0 C0 AD 
1d91f     AD C6 EC 05 
1d923     1B 1C FE F6 
1d927     EF FE 0D 14 | 	byte	$df, $d0, $c0, $ad, $ad, $c6, $ec, $05, $1b, $1c, $fe, $f6, $ef, $fe, $0d, $14
1d92b     19 23 16 F4 
1d92f     DC DF F9 05 
1d933     11 1A 25 1A 
1d937     0E 0E 11 23 | 	byte	$19, $23, $16, $f4, $dc, $df, $f9, $05, $11, $1a, $25, $1a, $0e, $0e, $11, $23
1d93b     2B 1B 0C 1B 
1d93f     13 04 FB FA 
1d943     F9 EF EC 04 
1d947     18 0E E4 DE | 	byte	$2b, $1b, $0c, $1b, $13, $04, $fb, $fa, $f9, $ef, $ec, $04, $18, $0e, $e4, $de
1d94b     F7 04 EA D8 
1d94f     DB E3 DB E7 
1d953     F8 01 06 03 
1d957     02 16 1E 19 | 	byte	$f7, $04, $ea, $d8, $db, $e3, $db, $e7, $f8, $01, $06, $03, $02, $16, $1e, $19
1d95b     0C FD 01 07 
1d95f     0E 1D 31 40 
1d963     46 3F 48 4B 
1d967     47 4B 40 33 | 	byte	$0c, $fd, $01, $07, $0e, $1d, $31, $40, $46, $3f, $48, $4b, $47, $4b, $40, $33
1d96b     24 04 EC E1 
1d96f     E5 EC D5 DE 
1d973     EA F2 FF 0F 
1d977     0E F8 E3 D9 | 	byte	$24, $04, $ec, $e1, $e5, $ec, $d5, $de, $ea, $f2, $ff, $0f, $0e, $f8, $e3, $d9
1d97b     DD FA 0F FF 
1d97f     F1 E8 DB CD 
1d983     C8 D4 D5 D4 
1d987     E0 E7 ED E3 | 	byte	$dd, $fa, $0f, $ff, $f1, $e8, $db, $cd, $c8, $d4, $d5, $d4, $e0, $e7, $ed, $e3
1d98b     EF F6 07 08 
1d98f     FC EA EE F7 
1d993     F6 F1 F7 06 
1d997     0A 06 0C 06 | 	byte	$ef, $f6, $07, $08, $fc, $ea, $ee, $f7, $f6, $f1, $f7, $06, $0a, $06, $0c, $06
1d99b     01 FE 08 0E 
1d99f     0D 0F 0B 10 
1d9a3     11 13 21 25 
1d9a7     24 22 0B EE | 	byte	$01, $fe, $08, $0e, $0d, $0f, $0b, $10, $11, $13, $21, $25, $24, $22, $0b, $ee
1d9ab     F3 F6 EA D0 
1d9af     C6 C7 E7 EA 
1d9b3     F5 F0 F8 F6 
1d9b7     FF 19 1D 0E | 	byte	$f3, $f6, $ea, $d0, $c6, $c7, $e7, $ea, $f5, $f0, $f8, $f6, $ff, $19, $1d, $0e
1d9bb     09 08 0F 11 
1d9bf     03 02 0E 27 
1d9c3     36 25 13 0C 
1d9c7     FB EE F3 16 | 	byte	$09, $08, $0f, $11, $03, $02, $0e, $27, $36, $25, $13, $0c, $fb, $ee, $f3, $16
1d9cb     26 09 DB C1 
1d9cf     C5 DF 05 29 
1d9d3     26 14 FF DC 
1d9d7     DB E8 DC F0 | 	byte	$26, $09, $db, $c1, $c5, $df, $05, $29, $26, $14, $ff, $dc, $db, $e8, $dc, $f0
1d9db     02 11 12 07 
1d9df     01 1A 30 39 
1d9e3     3C 3B 27 11 
1d9e7     E8 DA DF E6 | 	byte	$02, $11, $12, $07, $01, $1a, $30, $39, $3c, $3b, $27, $11, $e8, $da, $df, $e6
1d9eb     ED E3 F0 F2 
1d9ef     E9 D8 D5 E9 
1d9f3     00 14 12 0B 
1d9f7     1A 35 36 41 | 	byte	$ed, $e3, $f0, $f2, $e9, $d8, $d5, $e9, $00, $14, $12, $0b, $1a, $35, $36, $41
1d9fb     46 30 16 FF 
1d9ff     02 11 18 12 
1da03     11 22 16 04 
1da07     0D 17 1C 11 | 	byte	$46, $30, $16, $ff, $02, $11, $18, $12, $11, $22, $16, $04, $0d, $17, $1c, $11
1da0b     ED CF C8 C0 
1da0f     CF E4 FB 07 
1da13     04 E8 DC E3 
1da17     EA DE CF BC | 	byte	$ed, $cf, $c8, $c0, $cf, $e4, $fb, $07, $04, $e8, $dc, $e3, $ea, $de, $cf, $bc
1da1b     B2 B0 AD B6 
1da1f     C8 CB D2 F1 
1da23     FE 0A F8 DC 
1da27     C8 C2 CC C6 | 	byte	$b2, $b0, $ad, $b6, $c8, $cb, $d2, $f1, $fe, $0a, $f8, $dc, $c8, $c2, $cc, $c6
1da2b     C5 D2 EC EF 
1da2f     FE 1B 23 1E 
1da33     23 24 2C 44 
1da37     57 48 31 26 | 	byte	$c5, $d2, $ec, $ef, $fe, $1b, $23, $1e, $23, $24, $2c, $44, $57, $48, $31, $26
1da3b     1B 2A 35 3B 
1da3f     37 29 22 38 
1da43     35 0B FD FB 
1da47     18 22 1A 08 | 	byte	$1b, $2a, $35, $3b, $37, $29, $22, $38, $35, $0b, $fd, $fb, $18, $22, $1a, $08
1da4b     E8 DC E6 EE 
1da4f     E9 DD CF D0 
1da53     C1 CF F1 03 
1da57     F0 EB ED F1 | 	byte	$e8, $dc, $e6, $ee, $e9, $dd, $cf, $d0, $c1, $cf, $f1, $03, $f0, $eb, $ed, $f1
1da5b     F0 EF FA 09 
1da5f     0C 0E 2B 4A 
1da63     47 4B 42 31 
1da67     1E 10 0C 08 | 	byte	$f0, $ef, $fa, $09, $0c, $0e, $2b, $4a, $47, $4b, $42, $31, $1e, $10, $0c, $08
1da6b     F5 FC 07 02 
1da6f     FA FE 1B 25 
1da73     2C 34 1E FD 
1da77     00 0B FB E9 | 	byte	$f5, $fc, $07, $02, $fa, $fe, $1b, $25, $2c, $34, $1e, $fd, $00, $0b, $fb, $e9
1da7b     F1 FA EF E6 
1da7f     F4 F8 FC 09 
1da83     0C FC D7 B6 
1da87     B5 C6 D0 C4 | 	byte	$f1, $fa, $ef, $e6, $f4, $f8, $fc, $09, $0c, $fc, $d7, $b6, $b5, $c6, $d0, $c4
1da8b     C4 D1 D5 D2 
1da8f     CB C9 CD D4 
1da93     D7 F2 F1 FC 
1da97     05 FD 05 06 | 	byte	$c4, $d1, $d5, $d2, $cb, $c9, $cd, $d4, $d7, $f2, $f1, $fc, $05, $fd, $05, $06
1da9b     0C 14 22 25 
1da9f     0E 0F 1D 30 
1daa3     29 0F F3 E2 
1daa7     02 23 1F 10 | 	byte	$0c, $14, $22, $25, $0e, $0f, $1d, $30, $29, $0f, $f3, $e2, $02, $23, $1f, $10
1daab     F3 EA 05 F8 
1daaf     F2 0A 2C 3C 
1dab3     41 32 13 0A 
1dab7     0F 1D 21 0F | 	byte	$f3, $ea, $05, $f8, $f2, $0a, $2c, $3c, $41, $32, $13, $0a, $0f, $1d, $21, $0f
1dabb     06 F8 E3 E5 
1dabf     F1 F6 FF 08 
1dac3     EA C3 BC D6 
1dac7     FC EC D0 C2 | 	byte	$06, $f8, $e3, $e5, $f1, $f6, $ff, $08, $ea, $c3, $bc, $d6, $fc, $ec, $d0, $c2
1dacb     D9 EE EF F0 
1dacf     F3 E3 ED F8 
1dad3     08 06 F7 EB 
1dad7     F1 F3 F6 16 | 	byte	$d9, $ee, $ef, $f0, $f3, $e3, $ed, $f8, $08, $06, $f7, $eb, $f1, $f3, $f6, $16
1dadb     30 45 4A 51 
1dadf     49 41 48 44 
1dae3     23 F9 FA 26 
1dae7     2C 1F 1A 09 | 	byte	$30, $45, $4a, $51, $49, $41, $48, $44, $23, $f9, $fa, $26, $2c, $1f, $1a, $09
1daeb     02 0C 12 13 
1daef     1C 1B 12 F1 
1daf3     D8 CF DE E5 
1daf7     EB E7 D9 D7 | 	byte	$02, $0c, $12, $13, $1c, $1b, $12, $f1, $d8, $cf, $de, $e5, $eb, $e7, $d9, $d7
1dafb     F0 07 12 13 
1daff     13 22 23 04 
1db03     E8 E7 00 0C 
1db07     FD EC E3 E0 | 	byte	$f0, $07, $12, $13, $13, $22, $23, $04, $e8, $e7, $00, $0c, $fd, $ec, $e3, $e0
1db0b     D3 C9 D3 D3 
1db0f     D9 F1 08 18 
1db13     12 F5 DA C9 
1db17     D6 EC F5 FE | 	byte	$d3, $c9, $d3, $d3, $d9, $f1, $08, $18, $12, $f5, $da, $c9, $d6, $ec, $f5, $fe
1db1b     0E 0C 0E 0A 
1db1f     04 09 0D F9 
1db23     D7 CB C8 AF 
1db27     A3 A1 AD BB | 	byte	$0e, $0c, $0e, $0a, $04, $09, $0d, $f9, $d7, $cb, $c8, $af, $a3, $a1, $ad, $bb
1db2b     C0 D4 EB F7 
1db2f     0E 31 31 35 
1db33     33 1E 14 29 
1db37     36 44 39 3A | 	byte	$c0, $d4, $eb, $f7, $0e, $31, $31, $35, $33, $1e, $14, $29, $36, $44, $39, $3a
1db3b     42 42 36 3E 
1db3f     37 0C FB FA 
1db43     07 10 0B 06 
1db47     17 18 0F FD | 	byte	$42, $42, $36, $3e, $37, $0c, $fb, $fa, $07, $10, $0b, $06, $17, $18, $0f, $fd
1db4b     E8 D3 D7 EA 
1db4f     06 21 3D 3F 
1db53     21 F1 E6 FA 
1db57     FF 02 0D 0D | 	byte	$e8, $d3, $d7, $ea, $06, $21, $3d, $3f, $21, $f1, $e6, $fa, $ff, $02, $0d, $0d
1db5b     F1 E9 F2 F2 
1db5f     E7 E7 DE E4 
1db63     F1 F8 F3 E9 
1db67     F1 F2 FE 0A | 	byte	$f1, $e9, $f2, $f2, $e7, $e7, $de, $e4, $f1, $f8, $f3, $e9, $f1, $f2, $fe, $0a
1db6b     1F 30 2F 24 
1db6f     1D 1D 20 0B 
1db73     F5 FE F7 DF 
1db77     D6 EC EC EF | 	byte	$1f, $30, $2f, $24, $1d, $1d, $20, $0b, $f5, $fe, $f7, $df, $d6, $ec, $ec, $ef
1db7b     FF 14 2A 2E 
1db7f     19 ED CC D7 
1db83     FC 18 2D 2D 
1db87     16 F1 D2 C7 | 	byte	$ff, $14, $2a, $2e, $19, $ed, $cc, $d7, $fc, $18, $2d, $2d, $16, $f1, $d2, $c7
1db8b     C3 C8 D8 EF 
1db8f     F8 ED D8 BD 
1db93     AB AE C8 D8 
1db97     DA E8 F5 FC | 	byte	$c3, $c8, $d8, $ef, $f8, $ed, $d8, $bd, $ab, $ae, $c8, $d8, $da, $e8, $f5, $fc
1db9b     FB FF 12 24 
1db9f     22 06 FC 04 
1dba3     FE FC 01 07 
1dba7     01 FF 0C 08 | 	byte	$fb, $ff, $12, $24, $22, $06, $fc, $04, $fe, $fc, $01, $07, $01, $ff, $0c, $08
1dbab     F0 F2 0D 1D 
1dbaf     1D 16 07 10 
1dbb3     29 3F 40 23 
1dbb7     0B 27 43 41 | 	byte	$f0, $f2, $0d, $1d, $1d, $16, $07, $10, $29, $3f, $40, $23, $0b, $27, $43, $41
1dbbb     41 42 2B 1B 
1dbbf     09 FE F4 EC 
1dbc3     FA F4 DA CE 
1dbc7     D4 BF 91 80 | 	byte	$41, $42, $2b, $1b, $09, $fe, $f4, $ec, $fa, $f4, $da, $ce, $d4, $bf, $91, $80
1dbcb     86 99 B0 C4 
1dbcf     E3 F1 F0 ED 
1dbd3     FA 0B 11 08 
1dbd7     28 44 5A 5D | 	byte	$86, $99, $b0, $c4, $e3, $f1, $f0, $ed, $fa, $0b, $11, $08, $28, $44, $5a, $5d
1dbdb     55 36 1E 17 
1dbdf     13 14 1B 26 
1dbe3     20 0A FB 09 
1dbe7     2C 50 56 35 | 	byte	$55, $36, $1e, $17, $13, $14, $1b, $26, $20, $0a, $fb, $09, $2c, $50, $56, $35
1dbeb     1F 1A 1B 1F 
1dbef     22 1F 2C 2F 
1dbf3     1E 0B 03 FC 
1dbf7     01 14 14 07 | 	byte	$1f, $1a, $1b, $1f, $22, $1f, $2c, $2f, $1e, $0b, $03, $fc, $01, $14, $14, $07
1dbfb     01 F7 DC A7 
1dbff     95 A3 BA CB 
1dc03     C4 BB B1 AF 
1dc07     C2 D4 D5 D4 | 	byte	$01, $f7, $dc, $a7, $95, $a3, $ba, $cb, $c4, $bb, $b1, $af, $c2, $d4, $d5, $d4
1dc0b     D7 DF EB 00 
1dc0f     FE FD EF E8 
1dc13     EA F2 F2 01 
1dc17     11 11 09 08 | 	byte	$d7, $df, $eb, $00, $fe, $fd, $ef, $e8, $ea, $f2, $f2, $01, $11, $11, $09, $08
1dc1b     09 0B FC F7 
1dc1f     EE D7 C7 C8 
1dc23     E3 FF 12 21 
1dc27     30 1B 09 01 | 	byte	$09, $0b, $fc, $f7, $ee, $d7, $c7, $c8, $e3, $ff, $12, $21, $30, $1b, $09, $01
1dc2b     04 20 3E 32 
1dc2f     1A 11 19 18 
1dc33     F1 DE F4 0C 
1dc37     1E 1F 19 09 | 	byte	$04, $20, $3e, $32, $1a, $11, $19, $18, $f1, $de, $f4, $0c, $1e, $1f, $19, $09
1dc3b     13 17 19 2D 
1dc3f     37 22 07 08 
1dc43     1E 27 1A FC 
1dc47     EE D7 C2 D2 | 	byte	$13, $17, $19, $2d, $37, $22, $07, $08, $1e, $27, $1a, $fc, $ee, $d7, $c2, $d2
1dc4b     F4 0E 17 08 
1dc4f     EF DF F4 F1 
1dc53     FC 12 1D 1B 
1dc57     1B 25 35 29 | 	byte	$f4, $0e, $17, $08, $ef, $df, $f4, $f1, $fc, $12, $1d, $1b, $1b, $25, $35, $29
1dc5b     1A 1D 2B 2A 
1dc5f     1F 02 E8 EC 
1dc63     F7 FF 1A 23 
1dc67     03 CA A9 BD | 	byte	$1a, $1d, $2b, $2a, $1f, $02, $e8, $ec, $f7, $ff, $1a, $23, $03, $ca, $a9, $bd
1dc6b     E5 F9 F3 E3 
1dc6f     D0 D8 EC F7 
1dc73     09 03 06 07 
1dc77     11 25 2E 1F | 	byte	$e5, $f9, $f3, $e3, $d0, $d8, $ec, $f7, $09, $03, $06, $07, $11, $25, $2e, $1f
1dc7b     0A 01 F7 E5 
1dc7f     F9 0E 1A 00 
1dc83     E4 D1 C3 CD 
1dc87     CA C9 C1 CC | 	byte	$0a, $01, $f7, $e5, $f9, $0e, $1a, $00, $e4, $d1, $c3, $cd, $ca, $c9, $c1, $cc
1dc8b     EC FC 0F 21 
1dc8f     14 03 FA 13 
1dc93     22 27 20 17 
1dc97     1B 0F FF 08 | 	byte	$ec, $fc, $0f, $21, $14, $03, $fa, $13, $22, $27, $20, $17, $1b, $0f, $ff, $08
1dc9b     07 EB C5 9F 
1dc9f     A1 C6 DC D5 
1dca3     D1 CB BE CB 
1dca7     E0 FC 0B 10 | 	byte	$07, $eb, $c5, $9f, $a1, $c6, $dc, $d5, $d1, $cb, $be, $cb, $e0, $fc, $0b, $10
1dcab     11 1E 2C 2A 
1dcaf     25 22 20 20 
1dcb3     10 24 3A 34 
1dcb7     1F 19 14 13 | 	byte	$11, $1e, $2c, $2a, $25, $22, $20, $20, $10, $24, $3a, $34, $1f, $19, $14, $13
1dcbb     1A 15 FF FA 
1dcbf     0D 16 18 16 
1dcc3     0F 01 E4 C7 
1dcc7     BF CC D7 E9 | 	byte	$1a, $15, $ff, $fa, $0d, $16, $18, $16, $0f, $01, $e4, $c7, $bf, $cc, $d7, $e9
1dccb     FF FB E8 D9 
1dccf     EE 08 0A F2 
1dcd3     DF E9 00 1B 
1dcd7     22 01 EF E7 | 	byte	$ff, $fb, $e8, $d9, $ee, $08, $0a, $f2, $df, $e9, $00, $1b, $22, $01, $ef, $e7
1dcdb     F5 0C 19 29 
1dcdf     2F 2B 29 42 
1dce3     56 44 13 FD 
1dce7     03 FC 12 30 | 	byte	$f5, $0c, $19, $29, $2f, $2b, $29, $42, $56, $44, $13, $fd, $03, $fc, $12, $30
1dceb     33 14 FC 00 
1dcef     0F 19 15 12 
1dcf3     0D 13 1F 19 
1dcf7     00 F6 05 FA | 	byte	$33, $14, $fc, $00, $0f, $19, $15, $12, $0d, $13, $1f, $19, $00, $f6, $05, $fa
1dcfb     F4 F3 E1 ED 
1dcff     EF E5 D1 C9 
1dd03     C1 B3 AC 97 
1dd07     80 82 8C A8 | 	byte	$f4, $f3, $e1, $ed, $ef, $e5, $d1, $c9, $c1, $b3, $ac, $97, $80, $82, $8c, $a8
1dd0b     C6 D4 CF D2 
1dd0f     CD D5 E8 04 
1dd13     2D 42 35 26 
1dd17     11 08 11 09 | 	byte	$c6, $d4, $cf, $d2, $cd, $d5, $e8, $04, $2d, $42, $35, $26, $11, $08, $11, $09
1dd1b     EB D8 CE DC 
1dd1f     F8 08 FC F4 
1dd23     F9 F5 07 05 
1dd27     08 10 1D 3A | 	byte	$eb, $d8, $ce, $dc, $f8, $08, $fc, $f4, $f9, $f5, $07, $05, $08, $10, $1d, $3a
1dd2b     44 42 2F 34 
1dd2f     32 32 3F 4E 
1dd33     54 51 59 49 
1dd37     28 14 19 10 | 	byte	$44, $42, $2f, $34, $32, $32, $3f, $4e, $54, $51, $59, $49, $28, $14, $19, $10
1dd3b     F4 E0 EA EB 
1dd3f     E5 E7 E5 DF 
1dd43     CE BA B0 B9 
1dd47     D3 F3 03 FB | 	byte	$f4, $e0, $ea, $eb, $e5, $e7, $e5, $df, $ce, $ba, $b0, $b9, $d3, $f3, $03, $fb
1dd4b     E2 DB EF 10 
1dd4f     19 08 14 16 
1dd53     18 28 35 1D 
1dd57     02 F7 F3 09 | 	byte	$e2, $db, $ef, $10, $19, $08, $14, $16, $18, $28, $35, $1d, $02, $f7, $f3, $09
1dd5b     08 F9 FC 05 
1dd5f     14 2C 33 28 
1dd63     26 05 EA 0E 
1dd67     2C 42 3B 1A | 	byte	$08, $f9, $fc, $05, $14, $2c, $33, $28, $26, $05, $ea, $0e, $2c, $42, $3b, $1a
1dd6b     0B 13 0D 05 
1dd6f     F6 EE E0 D7 
1dd73     D0 D6 E1 E5 
1dd77     E7 F4 EC D9 | 	byte	$0b, $13, $0d, $05, $f6, $ee, $e0, $d7, $d0, $d6, $e1, $e5, $e7, $f4, $ec, $d9
1dd7b     E3 E6 EA F5 
1dd7f     FF FA E6 D8 
1dd83     D1 C7 BF D1 
1dd87     F6 11 0E 04 | 	byte	$e3, $e6, $ea, $f5, $ff, $fa, $e6, $d8, $d1, $c7, $bf, $d1, $f6, $11, $0e, $04
1dd8b     F5 F8 EF D9 
1dd8f     F1 1D 30 2C 
1dd93     2E 26 23 1C 
1dd97     23 2D 22 05 | 	byte	$f5, $f8, $ef, $d9, $f1, $1d, $30, $2c, $2e, $26, $23, $1c, $23, $2d, $22, $05
1dd9b     EE EB 00 F9 
1dd9f     E5 D8 DF EC 
1dda3     DB CC C9 DE 
1dda7     E2 DD E3 E3 | 	byte	$ee, $eb, $00, $f9, $e5, $d8, $df, $ec, $db, $cc, $c9, $de, $e2, $dd, $e3, $e3
1ddab     EA EC EE ED 
1ddaf     F5 FF 0A 1C 
1ddb3     34 37 38 31 
1ddb7     28 22 18 1E | 	byte	$ea, $ec, $ee, $ed, $f5, $ff, $0a, $1c, $34, $37, $38, $31, $28, $22, $18, $1e
1ddbb     2B 1F 1A 21 
1ddbf     16 F6 DE CF 
1ddc3     B7 B4 C9 E5 
1ddc7     F0 F4 FF 1C | 	byte	$2b, $1f, $1a, $21, $16, $f6, $de, $cf, $b7, $b4, $c9, $e5, $f0, $f4, $ff, $1c
1ddcb     33 33 2A 42 
1ddcf     4D 36 31 43 
1ddd3     3A 2A 1F 23 
1ddd7     1E 13 07 EF | 	byte	$33, $33, $2a, $42, $4d, $36, $31, $43, $3a, $2a, $1f, $23, $1e, $13, $07, $ef
1dddb     FD FD FA E8 
1dddf     DA E3 E0 D3 
1dde3     E3 F1 06 0D 
1dde7     16 28 34 3D | 	byte	$fd, $fd, $fa, $e8, $da, $e3, $e0, $d3, $e3, $f1, $06, $0d, $16, $28, $34, $3d
1ddeb     34 2F 26 0F 
1ddef     FD FA 02 F7 
1ddf3     F0 F3 FC D6 
1ddf7     B0 B9 CD C9 | 	byte	$34, $2f, $26, $0f, $fd, $fa, $02, $f7, $f0, $f3, $fc, $d6, $b0, $b9, $cd, $c9
1ddfb     C5 D4 E0 E2 
1ddff     E3 CB C0 BC 
1de03     D0 CE CB DA 
1de07     00 FA F1 FD | 	byte	$c5, $d4, $e0, $e2, $e3, $cb, $c0, $bc, $d0, $ce, $cb, $da, $00, $fa, $f1, $fd
1de0b     F7 E9 02 12 
1de0f     18 19 04 E1 
1de13     D4 E5 F6 F4 
1de17     E1 D0 C9 C1 | 	byte	$f7, $e9, $02, $12, $18, $19, $04, $e1, $d4, $e5, $f6, $f4, $e1, $d0, $c9, $c1
1de1b     C4 EA 0C 2B 
1de1f     2D 12 FD 05 
1de23     07 06 15 2C 
1de27     31 27 19 2A | 	byte	$c4, $ea, $0c, $2b, $2d, $12, $fd, $05, $07, $06, $15, $2c, $31, $27, $19, $2a
1de2b     23 11 01 FA 
1de2f     25 44 46 27 
1de33     2A 3F 31 31 
1de37     49 64 4A 10 | 	byte	$23, $11, $01, $fa, $25, $44, $46, $27, $2a, $3f, $31, $31, $49, $64, $4a, $10
1de3b     01 2A 31 1B 
1de3f     00 F4 E3 D9 
1de43     C5 BB B8 C1 
1de47     BD A9 AB B5 | 	byte	$01, $2a, $31, $1b, $00, $f4, $e3, $d9, $c5, $bb, $b8, $c1, $bd, $a9, $ab, $b5
1de4b     D3 DE F0 0E 
1de4f     12 03 07 28 
1de53     46 3D 1E 0F 
1de57     FA E9 E2 F0 | 	byte	$d3, $de, $f0, $0e, $12, $03, $07, $28, $46, $3d, $1e, $0f, $fa, $e9, $e2, $f0
1de5b     0C 0E 10 0D 
1de5f     11 FA F1 EB 
1de63     E3 F2 0E 2C 
1de67     25 22 36 35 | 	byte	$0c, $0e, $10, $0d, $11, $fa, $f1, $eb, $e3, $f2, $0e, $2c, $25, $22, $36, $35
1de6b     25 1A 29 2C 
1de6f     0D 09 1E 33 
1de73     2C 05 F9 EF 
1de77     F5 ED DA CD | 	byte	$25, $1a, $29, $2c, $0d, $09, $1e, $33, $2c, $05, $f9, $ef, $f5, $ed, $da, $cd
1de7b     C3 C1 B4 AD 
1de7f     A0 9F A7 A5 
1de83     C4 E3 E8 D9 
1de87     E4 FA 0D 12 | 	byte	$c3, $c1, $b4, $ad, $a0, $9f, $a7, $a5, $c4, $e3, $e8, $d9, $e4, $fa, $0d, $12
1de8b     21 1F 1F 0E 
1de8f     0C 07 22 33 
1de93     35 36 20 E8 
1de97     BD A0 A1 B5 | 	byte	$21, $1f, $1f, $0e, $0c, $07, $22, $33, $35, $36, $20, $e8, $bd, $a0, $a1, $b5
1de9b     CA E6 EF ED 
1de9f     E3 E4 FB 2F 
1dea3     40 28 2A 2E 
1dea7     25 1A 09 04 | 	byte	$ca, $e6, $ef, $ed, $e3, $e4, $fb, $2f, $40, $28, $2a, $2e, $25, $1a, $09, $04
1deab     E9 EF 08 1B 
1deaf     1A 0D 08 FE 
1deb3     04 09 02 F9 
1deb7     F5 FB FA FC | 	byte	$e9, $ef, $08, $1b, $1a, $0d, $08, $fe, $04, $09, $02, $f9, $f5, $fb, $fa, $fc
1debb     01 1C 24 1C 
1debf     0B FE DD D8 
1dec3     E1 F1 F4 0C 
1dec7     1A 2A 34 27 | 	byte	$01, $1c, $24, $1c, $0b, $fe, $dd, $d8, $e1, $f1, $f4, $0c, $1a, $2a, $34, $27
1decb     1F 14 03 FD 
1decf     0A 20 37 4A 
1ded3     49 35 25 23 
1ded7     3C 42 2E 21 | 	byte	$1f, $14, $03, $fd, $0a, $20, $37, $4a, $49, $35, $25, $23, $3c, $42, $2e, $21
1dedb     20 23 28 1F 
1dedf     FF EA F1 03 
1dee3     27 2E 11 05 
1dee7     F0 F5 FA E6 | 	byte	$20, $23, $28, $1f, $ff, $ea, $f1, $03, $27, $2e, $11, $05, $f0, $f5, $fa, $e6
1deeb     C3 B4 BC C4 
1deef     C3 CF E9 F1 
1def3     E2 E4 F0 EF 
1def7     D2 D4 D9 C4 | 	byte	$c3, $b4, $bc, $c4, $c3, $cf, $e9, $f1, $e2, $e4, $f0, $ef, $d2, $d4, $d9, $c4
1defb     BD CA D1 CC 
1deff     B1 9C 96 A3 
1df03     B3 C9 D6 E7 
1df07     0B 1D 12 17 | 	byte	$bd, $ca, $d1, $cc, $b1, $9c, $96, $a3, $b3, $c9, $d6, $e7, $0b, $1d, $12, $17
1df0b     31 4A 47 41 
1df0f     43 4C 49 4F 
1df13     41 12 D4 BA 
1df17     C7 E6 04 0B | 	byte	$31, $4a, $47, $41, $43, $4c, $49, $4f, $41, $12, $d4, $ba, $c7, $e6, $04, $0b
1df1b     FA DD CE D8 
1df1f     DA D4 D3 EC 
1df23     F5 F8 FE 20 
1df27     32 20 26 2F | 	byte	$fa, $dd, $ce, $d8, $da, $d4, $d3, $ec, $f5, $f8, $fe, $20, $32, $20, $26, $2f
1df2b     3A 39 29 2F 
1df2f     1B 12 33 47 
1df33     44 2A 07 ED 
1df37     E9 F5 FC FB | 	byte	$3a, $39, $29, $2f, $1b, $12, $33, $47, $44, $2a, $07, $ed, $e9, $f5, $fc, $fb
1df3b     08 1D 1B FD 
1df3f     DE E0 EF EE 
1df43     FD 08 0A 0E 
1df47     10 11 11 07 | 	byte	$08, $1d, $1b, $fd, $de, $e0, $ef, $ee, $fd, $08, $0a, $0e, $10, $11, $11, $07
1df4b     08 05 0C 17 
1df4f     17 17 04 E5 
1df53     D8 BE C4 CE 
1df57     D7 DA EE F9 | 	byte	$08, $05, $0c, $17, $17, $17, $04, $e5, $d8, $be, $c4, $ce, $d7, $da, $ee, $f9
1df5b     0B 19 1A 20 
1df5f     16 18 2F 30 
1df63     21 0F 17 31 
1df67     2C 14 F5 DC | 	byte	$0b, $19, $1a, $20, $16, $18, $2f, $30, $21, $0f, $17, $31, $2c, $14, $f5, $dc
1df6b     C8 C3 E5 EC 
1df6f     FA 08 0B 08 
1df73     0B FB F7 F7 
1df77     F8 07 0B 07 | 	byte	$c8, $c3, $e5, $ec, $fa, $08, $0b, $08, $0b, $fb, $f7, $f7, $f8, $07, $0b, $07
1df7b     FB F2 E5 D8 
1df7f     CC C4 D0 D7 
1df83     DF E3 F1 DF 
1df87     DB D0 D3 E3 | 	byte	$fb, $f2, $e5, $d8, $cc, $c4, $d0, $d7, $df, $e3, $f1, $df, $db, $d0, $d3, $e3
1df8b     F9 F6 EB 05 
1df8f     23 2A 1E 0A 
1df93     F0 E8 C7 D0 
1df97     D9 D9 C9 C5 | 	byte	$f9, $f6, $eb, $05, $23, $2a, $1e, $0a, $f0, $e8, $c7, $d0, $d9, $d9, $c9, $c5
1df9b     E3 F7 FC F3 
1df9f     ED E0 D0 D6 
1dfa3     EA 06 16 0A 
1dfa7     FD 09 1B 24 | 	byte	$e3, $f7, $fc, $f3, $ed, $e0, $d0, $d6, $ea, $06, $16, $0a, $fd, $09, $1b, $24
1dfab     27 3A 4D 64 
1dfaf     65 5A 50 49 
1dfb3     34 21 1B 1F 
1dfb7     1E 14 04 0C | 	byte	$27, $3a, $4d, $64, $65, $5a, $50, $49, $34, $21, $1b, $1f, $1e, $14, $04, $0c
1dfbb     03 E1 B4 A4 
1dfbf     BA E0 EA EF 
1dfc3     0E 1A 07 11 
1dfc7     2A 35 36 27 | 	byte	$03, $e1, $b4, $a4, $ba, $e0, $ea, $ef, $0e, $1a, $07, $11, $2a, $35, $36, $27
1dfcb     1B 1D 2B 32 
1dfcf     34 3B 33 30 
1dfd3     15 EB E3 E1 
1dfd7     DB E4 F9 09 | 	byte	$1b, $1d, $2b, $32, $34, $3b, $33, $30, $15, $eb, $e3, $e1, $db, $e4, $f9, $09
1dfdb     0B FC 03 19 
1dfdf     24 27 37 48 
1dfe3     5D 54 20 00 
1dfe7     F1 E7 D0 D7 | 	byte	$0b, $fc, $03, $19, $24, $27, $37, $48, $5d, $54, $20, $00, $f1, $e7, $d0, $d7
1dfeb     DC D9 D3 BC 
1dfef     C8 D5 D1 C5 
1dff3     B7 B7 BC AD 
1dff7     A2 AD B7 B0 | 	byte	$dc, $d9, $d3, $bc, $c8, $d5, $d1, $c5, $b7, $b7, $bc, $ad, $a2, $ad, $b7, $b0
1dffb     BB C6 B8 C8 
1dfff     C8 D2 E9 F0 
1e003     F8 03 12 27 
1e007     30 14 04 F8 | 	byte	$bb, $c6, $b8, $c8, $c8, $d2, $e9, $f0, $f8, $03, $12, $27, $30, $14, $04, $f8
1e00b     F8 15 2C 34 
1e00f     1A FF F0 DD 
1e013     E7 04 1B 31 
1e017     3E 37 2A 19 | 	byte	$f8, $15, $2c, $34, $1a, $ff, $f0, $dd, $e7, $04, $1b, $31, $3e, $37, $2a, $19
1e01b     14 0D 03 07 
1e01f     14 1A 2A 25 
1e023     0C 10 0F 07 
1e027     F3 E8 EF F9 | 	byte	$14, $0d, $03, $07, $14, $1a, $2a, $25, $0c, $10, $0f, $07, $f3, $e8, $ef, $f9
1e02b     1D 24 16 0D 
1e02f     FD 0D 1B 24 
1e033     2B 27 1B 0F 
1e037     F9 F6 F3 F6 | 	byte	$1d, $24, $16, $0d, $fd, $0d, $1b, $24, $2b, $27, $1b, $0f, $f9, $f6, $f3, $f6
1e03b     F3 F2 DF CD 
1e03f     C5 D0 DC CF 
1e043     E4 F8 05 0E 
1e047     10 0D 06 1A | 	byte	$f3, $f2, $df, $cd, $c5, $d0, $dc, $cf, $e4, $f8, $05, $0e, $10, $0d, $06, $1a
1e04b     47 5C 56 40 
1e04f     38 2D 0D F1 
1e053     F3 FE 1A 26 
1e057     17 00 01 07 | 	byte	$47, $5c, $56, $40, $38, $2d, $0d, $f1, $f3, $fe, $1a, $26, $17, $00, $01, $07
1e05b     09 FA F6 FA 
1e05f     0D 26 33 10 
1e063     E6 C0 AF C8 
1e067     DC ED 05 13 | 	byte	$09, $fa, $f6, $fa, $0d, $26, $33, $10, $e6, $c0, $af, $c8, $dc, $ed, $05, $13
1e06b     0B F1 E4 E9 
1e06f     F6 FD 0A 02 
1e073     E4 C3 B7 B1 
1e077     B7 D5 DF D3 | 	byte	$0b, $f1, $e4, $e9, $f6, $fd, $0a, $02, $e4, $c3, $b7, $b1, $b7, $d5, $df, $d3
1e07b     C7 C0 C0 D0 
1e07f     FE 1F 29 1F 
1e083     12 0D 0E 0D 
1e087     0A 08 23 39 | 	byte	$c7, $c0, $c0, $d0, $fe, $1f, $29, $1f, $12, $0d, $0e, $0d, $0a, $08, $23, $39
1e08b     2C 15 F4 DF 
1e08f     DD D5 C5 C1 
1e093     C6 D2 D4 C1 
1e097     B1 C0 B9 A6 | 	byte	$2c, $15, $f4, $df, $dd, $d5, $c5, $c1, $c6, $d2, $d4, $c1, $b1, $c0, $b9, $a6
1e09b     CB F1 02 17 
1e09f     1E 13 0A 03 
1e0a3     00 00 FF 06 
1e0a7     03 06 26 3E | 	byte	$cb, $f1, $02, $17, $1e, $13, $0a, $03, $00, $00, $ff, $06, $03, $06, $26, $3e
1e0ab     37 27 26 32 
1e0af     39 42 38 27 
1e0b3     2C 29 30 41 
1e0b7     32 1E 09 F7 | 	byte	$37, $27, $26, $32, $39, $42, $38, $27, $2c, $29, $30, $41, $32, $1e, $09, $f7
1e0bb     EA 00 21 47 
1e0bf     41 2A 23 12 
1e0c3     FD F7 05 0A 
1e0c7     08 0F 19 26 | 	byte	$ea, $00, $21, $47, $41, $2a, $23, $12, $fd, $f7, $05, $0a, $08, $0f, $19, $26
1e0cb     29 10 0F 0D 
1e0cf     EF F0 F5 FE 
1e0d3     11 13 F9 E7 
1e0d7     DF F2 FD 01 | 	byte	$29, $10, $0f, $0d, $ef, $f0, $f5, $fe, $11, $13, $f9, $e7, $df, $f2, $fd, $01
1e0db     0A 0B 23 2E 
1e0df     1D F6 D8 C2 
1e0e3     A9 AD CC E5 
1e0e7     E9 EE E6 E6 | 	byte	$0a, $0b, $23, $2e, $1d, $f6, $d8, $c2, $a9, $ad, $cc, $e5, $e9, $ee, $e6, $e6
1e0eb     FE 0D 11 00 
1e0ef     FE EE E4 E2 
1e0f3     D8 D1 D7 DA 
1e0f7     D8 CC C1 A8 | 	byte	$fe, $0d, $11, $00, $fe, $ee, $e4, $e2, $d8, $d1, $d7, $da, $d8, $cc, $c1, $a8
1e0fb     96 BC E2 F3 
1e0ff     04 0B FB E4 
1e103     DE EB F9 09 
1e107     0F 19 23 1F | 	byte	$96, $bc, $e2, $f3, $04, $0b, $fb, $e4, $de, $eb, $f9, $09, $0f, $19, $23, $1f
1e10b     07 F1 EA F1 
1e10f     F3 FA FC 0F 
1e113     23 15 F5 E3 
1e117     D4 B8 C1 F7 | 	byte	$07, $f1, $ea, $f1, $f3, $fa, $fc, $0f, $23, $15, $f5, $e3, $d4, $b8, $c1, $f7
1e11b     34 48 39 34 
1e11f     27 2E 34 34 
1e123     2A 28 22 26 
1e127     36 40 41 41 | 	byte	$34, $48, $39, $34, $27, $2e, $34, $34, $2a, $28, $22, $26, $36, $40, $41, $41
1e12b     32 2D 3B 3D 
1e12f     14 F3 F1 EE 
1e133     E6 EF EF E2 
1e137     C1 C2 CD DA | 	byte	$32, $2d, $3b, $3d, $14, $f3, $f1, $ee, $e6, $ef, $ef, $e2, $c1, $c2, $cd, $da
1e13b     E6 DC E9 02 
1e13f     0A F6 DC DA 
1e143     F1 08 13 09 
1e147     28 3B 2C 26 | 	byte	$e6, $dc, $e9, $02, $0a, $f6, $dc, $da, $f1, $08, $13, $09, $28, $3b, $2c, $26
1e14b     26 1D F7 DB 
1e14f     ED 0E 19 1B 
1e153     17 1D 29 2A 
1e157     30 3E 4B 49 | 	byte	$26, $1d, $f7, $db, $ed, $0e, $19, $1b, $17, $1d, $29, $2a, $30, $3e, $4b, $49
1e15b     40 2C 2E 29 
1e15f     0F EB D0 E1 
1e163     F0 E1 E1 E1 
1e167     F4 F3 09 09 | 	byte	$40, $2c, $2e, $29, $0f, $eb, $d0, $e1, $f0, $e1, $e1, $e1, $f4, $f3, $09, $09
1e16b     EB D1 DA D3 
1e16f     DF CD B2 B3 
1e173     C4 DB F2 DD 
1e177     BA BA BE D7 | 	byte	$eb, $d1, $da, $d3, $df, $cd, $b2, $b3, $c4, $db, $f2, $dd, $ba, $ba, $be, $d7
1e17b     EE 0F 21 08 
1e17f     EF DA D2 D6 
1e183     DD EB ED F6 
1e187     01 03 0B 0C | 	byte	$ee, $0f, $21, $08, $ef, $da, $d2, $d6, $dd, $eb, $ed, $f6, $01, $03, $0b, $0c
1e18b     05 15 27 22 
1e18f     0A E2 D2 DC 
1e193     F1 DE D0 D7 
1e197     F3 04 08 1D | 	byte	$05, $15, $27, $22, $0a, $e2, $d2, $dc, $f1, $de, $d0, $d7, $f3, $04, $08, $1d
1e19b     16 05 F1 FE 
1e19f     16 0C E8 E5 
1e1a3     F4 04 FD 09 
1e1a7     28 43 50 4C | 	byte	$16, $05, $f1, $fe, $16, $0c, $e8, $e5, $f4, $04, $fd, $09, $28, $43, $50, $4c
1e1ab     48 41 38 19 
1e1af     09 13 28 2B 
1e1b3     1C 01 E0 CF 
1e1b7     DA EF 00 03 | 	byte	$48, $41, $38, $19, $09, $13, $28, $2b, $1c, $01, $e0, $cf, $da, $ef, $00, $03
1e1bb     00 18 2C 28 
1e1bf     14 0C 27 48 
1e1c3     59 4F 3B 24 
1e1c7     2C 3B 51 5F | 	byte	$00, $18, $2c, $28, $14, $0c, $27, $48, $59, $4f, $3b, $24, $2c, $3b, $51, $5f
1e1cb     5A 3B 17 04 
1e1cf     09 FD E0 DA 
1e1d3     EB F1 EA DA 
1e1d7     F9 FC E8 D1 | 	byte	$5a, $3b, $17, $04, $09, $fd, $e0, $da, $eb, $f1, $ea, $da, $f9, $fc, $e8, $d1
1e1db     CF CB CC CE 
1e1df     CA C8 DA D8 
1e1e3     BB C4 EF 10 
1e1e7     08 E2 CE D0 | 	byte	$cf, $cb, $cc, $ce, $ca, $c8, $da, $d8, $bb, $c4, $ef, $10, $08, $e2, $ce, $d0
1e1eb     C9 C4 CD D7 
1e1ef     BE 9D A1 DA 
1e1f3     FF FC D9 DB 
1e1f7     FA 09 05 02 | 	byte	$c9, $c4, $cd, $d7, $be, $9d, $a1, $da, $ff, $fc, $d9, $db, $fa, $09, $05, $02
1e1fb     0E 17 08 09 
1e1ff     1A 34 32 1A 
1e203     FC FC 0D 0A 
1e207     FC FE 03 03 | 	byte	$0e, $17, $08, $09, $1a, $34, $32, $1a, $fc, $fc, $0d, $0a, $fc, $fe, $03, $03
1e20b     E8 EB E5 CE 
1e20f     B5 B0 C3 D2 
1e213     D0 D6 F7 12 
1e217     1C 01 0D 22 | 	byte	$e8, $eb, $e5, $ce, $b5, $b0, $c3, $d2, $d0, $d6, $f7, $12, $1c, $01, $0d, $22
1e21b     2E 31 24 18 
1e21f     0B FE FC 13 
1e223     2E 32 24 1A 
1e227     2B 4A 48 3C | 	byte	$2e, $31, $24, $18, $0b, $fe, $fc, $13, $2e, $32, $24, $1a, $2b, $4a, $48, $3c
1e22b     30 2B 22 FF 
1e22f     FA 03 FE F8 
1e233     F3 04 1A 21 
1e237     0A 00 05 FA | 	byte	$30, $2b, $22, $ff, $fa, $03, $fe, $f8, $f3, $04, $1a, $21, $0a, $00, $05, $fa
1e23b     E7 D9 DE E6 
1e23f     ED EE 07 15 
1e243     02 F9 FD 09 
1e247     1C 24 21 22 | 	byte	$e7, $d9, $de, $e6, $ed, $ee, $07, $15, $02, $f9, $fd, $09, $1c, $24, $21, $22
1e24b     09 F1 E2 E5 
1e24f     01 29 2D 1D 
1e253     24 1F 15 09 
1e257     12 22 0E E3 | 	byte	$09, $f1, $e2, $e5, $01, $29, $2d, $1d, $24, $1f, $15, $09, $12, $22, $0e, $e3
1e25b     D7 F6 09 FE 
1e25f     FD 06 11 0A 
1e263     03 18 12 F1 
1e267     F0 01 17 23 | 	byte	$d7, $f6, $09, $fe, $fd, $06, $11, $0a, $03, $18, $12, $f1, $f0, $01, $17, $23
1e26b     17 F0 DF CD 
1e26f     C9 D4 D3 DB 
1e273     E1 DE D7 DF 
1e277     00 FC E1 C4 | 	byte	$17, $f0, $df, $cd, $c9, $d4, $d3, $db, $e1, $de, $d7, $df, $00, $fc, $e1, $c4
1e27b     B0 B7 BF C5 
1e27f     C8 C5 C9 CB 
1e283     D3 F8 1A 1D 
1e287     0D F8 E0 D2 | 	byte	$b0, $b7, $bf, $c5, $c8, $c5, $c9, $cb, $d3, $f8, $1a, $1d, $0d, $f8, $e0, $d2
1e28b     D2 D5 D0 C0 
1e28f     AF A3 BD EE 
1e293     04 1B 1C 21 
1e297     21 15 19 1C | 	byte	$d2, $d5, $d0, $c0, $af, $a3, $bd, $ee, $04, $1b, $1c, $21, $21, $15, $19, $1c
1e29b     1A 16 19 22 
1e29f     33 3C 32 48 
1e2a3     4E 3C 3A 4E 
1e2a7     5A 4E 2A 1C | 	byte	$1a, $16, $19, $22, $33, $3c, $32, $48, $4e, $3c, $3a, $4e, $5a, $4e, $2a, $1c
1e2ab     1C 26 16 0C 
1e2af     03 E6 CF CE 
1e2b3     D9 EF F2 00 
1e2b7     0A FE 01 0E | 	byte	$1c, $26, $16, $0c, $03, $e6, $cf, $ce, $d9, $ef, $f2, $00, $0a, $fe, $01, $0e
1e2bb     1A 2B 32 10 
1e2bf     07 16 27 35 
1e2c3     2D 24 2C 3E 
1e2c7     4D 49 4B 41 | 	byte	$1a, $2b, $32, $10, $07, $16, $27, $35, $2d, $24, $2c, $3e, $4d, $49, $4b, $41
1e2cb     2C 10 FE F7 
1e2cf     FE 01 0D 10 
1e2d3     0B 08 04 EF 
1e2d7     F6 F3 EB DE | 	byte	$2c, $10, $fe, $f7, $fe, $01, $0d, $10, $0b, $08, $04, $ef, $f6, $f3, $eb, $de
1e2db     E2 EB DF C9 
1e2df     D3 F2 F4 E3 
1e2e3     D9 D2 BD B0 
1e2e7     A5 9B A7 B3 | 	byte	$e2, $eb, $df, $c9, $d3, $f2, $f4, $e3, $d9, $d2, $bd, $b0, $a5, $9b, $a7, $b3
1e2eb     C3 C4 C1 C3 
1e2ef     D6 E3 F1 FB 
1e2f3     E6 D9 F0 F5 
1e2f7     F8 EF E1 EE | 	byte	$c3, $c4, $c1, $c3, $d6, $e3, $f1, $fb, $e6, $d9, $f0, $f5, $f8, $ef, $e1, $ee
1e2fb     14 1A 13 10 
1e2ff     23 2C 20 0B 
1e303     0C 27 22 03 
1e307     F0 E3 EF EC | 	byte	$14, $1a, $13, $10, $23, $2c, $20, $0b, $0c, $27, $22, $03, $f0, $e3, $ef, $ec
1e30b     E7 E9 ED F2 
1e30f     EF FE 0A 0F 
1e313     05 FE 19 21 
1e317     11 0E 16 0E | 	byte	$e7, $e9, $ed, $f2, $ef, $fe, $0a, $0f, $05, $fe, $19, $21, $11, $0e, $16, $0e
1e31b     12 08 E9 F5 
1e31f     14 1D 24 1E 
1e323     2C 2C 28 27 
1e327     29 09 E3 D6 | 	byte	$12, $08, $e9, $f5, $14, $1d, $24, $1e, $2c, $2c, $28, $27, $29, $09, $e3, $d6
1e32b     ED FD F8 E0 
1e32f     D5 E5 F7 0A 
1e333     35 43 33 1E 
1e337     EC C8 EA 0C | 	byte	$ed, $fd, $f8, $e0, $d5, $e5, $f7, $0a, $35, $43, $33, $1e, $ec, $c8, $ea, $0c
1e33b     12 05 F9 0A 
1e33f     28 36 3B 44 
1e343     52 43 1F 03 
1e347     14 20 02 F6 | 	byte	$12, $05, $f9, $0a, $28, $36, $3b, $44, $52, $43, $1f, $03, $14, $20, $02, $f6
1e34b     FB 00 17 31 
1e34f     2C 21 13 E4 
1e353     C3 D4 F0 06 
1e357     FA FE 03 01 | 	byte	$fb, $00, $17, $31, $2c, $21, $13, $e4, $c3, $d4, $f0, $06, $fa, $fe, $03, $01
1e35b     F6 F7 E5 DB 
1e35f     CE D3 DF 01 
1e363     03 E8 D5 E1 
1e367     00 0E 0C 03 | 	byte	$f6, $f7, $e5, $db, $ce, $d3, $df, $01, $03, $e8, $d5, $e1, $00, $0e, $0c, $03
1e36b     F3 D4 B1 CB 
1e36f     FA 1F 27 1E 
1e373     0C FE F7 F2 
1e377     EA F4 E3 CF | 	byte	$f3, $d4, $b1, $cb, $fa, $1f, $27, $1e, $0c, $fe, $f7, $f2, $ea, $f4, $e3, $cf
1e37b     C0 C0 C5 C9 
1e37f     CD E2 ED 0B 
1e383     1D EE B9 CA 
1e387     C2 9D 8F A6 | 	byte	$c0, $c0, $c5, $c9, $cd, $e2, $ed, $0b, $1d, $ee, $b9, $ca, $c2, $9d, $8f, $a6
1e38b     C0 C9 D0 D7 
1e38f     DB EB F5 F0 
1e393     E0 E5 F8 FC 
1e397     0F 20 0C FF | 	byte	$c0, $c9, $d0, $d7, $db, $eb, $f5, $f0, $e0, $e5, $f8, $fc, $0f, $20, $0c, $ff
1e39b     0C 2A 48 4E 
1e39f     49 4A 5B 4F 
1e3a3     40 47 54 58 
1e3a7     45 3B 3D 2F | 	byte	$0c, $2a, $48, $4e, $49, $4a, $5b, $4f, $40, $47, $54, $58, $45, $3b, $3d, $2f
1e3ab     20 1A 1A 10 
1e3af     0C 03 FF FD 
1e3b3     FA FD 0B 0F 
1e3b7     21 32 24 10 | 	byte	$20, $1a, $1a, $10, $0c, $03, $ff, $fd, $fa, $fd, $0b, $0f, $21, $32, $24, $10
1e3bb     0F 0D F9 EE 
1e3bf     F7 05 29 44 
1e3c3     39 2C 31 34 
1e3c7     22 FC E4 DE | 	byte	$0f, $0d, $f9, $ee, $f7, $05, $29, $44, $39, $2c, $31, $34, $22, $fc, $e4, $de
1e3cb     EB F9 0C 0D 
1e3cf     01 E3 D4 CB 
1e3d3     ED 0C 1C 1B 
1e3d7     FF DC D6 F0 | 	byte	$eb, $f9, $0c, $0d, $01, $e3, $d4, $cb, $ed, $0c, $1c, $1b, $ff, $dc, $d6, $f0
1e3db     F3 F9 FF 00 
1e3df     EC EA F1 EB 
1e3e3     C6 B1 B2 B5 
1e3e7     C3 D7 D2 C4 | 	byte	$f3, $f9, $ff, $00, $ec, $ea, $f1, $eb, $c6, $b1, $b2, $b5, $c3, $d7, $d2, $c4
1e3eb     C0 D2 E9 FB 
1e3ef     03 0A FE D1 
1e3f3     BB BE CB EC 
1e3f7     05 17 0A FB | 	byte	$c0, $d2, $e9, $fb, $03, $0a, $fe, $d1, $bb, $be, $cb, $ec, $05, $17, $0a, $fb
1e3fb     03 0E 01 FA 
1e3ff     F3 07 03 0B 
1e403     09 F2 CA BD 
1e407     C5 E3 16 1D | 	byte	$03, $0e, $01, $fa, $f3, $07, $03, $0b, $09, $f2, $ca, $bd, $c5, $e3, $16, $1d
1e40b     10 06 0B 0D 
1e40f     02 FC 02 1D 
1e413     33 30 28 33 
1e417     3A 27 0E 0A | 	byte	$10, $06, $0b, $0d, $02, $fc, $02, $1d, $33, $30, $28, $33, $3a, $27, $0e, $0a
1e41b     24 37 31 1F 
1e41f     12 1A 24 2E 
1e423     2D 12 FA EC 
1e427     DA CA C5 BF | 	byte	$24, $37, $31, $1f, $12, $1a, $24, $2e, $2d, $12, $fa, $ec, $da, $ca, $c5, $bf
1e42b     C3 F3 27 27 
1e42f     0E 10 1C 03 
1e433     EB E2 E4 EB 
1e437     F8 00 FC F3 | 	byte	$c3, $f3, $27, $27, $0e, $10, $1c, $03, $eb, $e2, $e4, $eb, $f8, $00, $fc, $f3
1e43b     FA 16 34 41 
1e43f     4B 3E 23 12 
1e443     17 11 01 03 
1e447     25 36 32 33 | 	byte	$fa, $16, $34, $41, $4b, $3e, $23, $12, $17, $11, $01, $03, $25, $36, $32, $33
1e44b     4B 53 35 FF 
1e44f     E0 EF 0F 1F 
1e453     1F 0C 02 0C 
1e457     1C FA C9 C7 | 	byte	$4b, $53, $35, $ff, $e0, $ef, $0f, $1f, $1f, $0c, $02, $0c, $1c, $fa, $c9, $c7
1e45b     E0 E6 D7 D1 
1e45f     CB C2 D5 EA 
1e463     ED E6 E0 E0 
1e467     CD B8 BA CD | 	byte	$e0, $e6, $d7, $d1, $cb, $c2, $d5, $ea, $ed, $e6, $e0, $e0, $cd, $b8, $ba, $cd
1e46b     E6 06 1F 29 
1e46f     15 FC ED EC 
1e473     E0 E3 FE FD 
1e477     D7 BD A8 A0 | 	byte	$e6, $06, $1f, $29, $15, $fc, $ed, $ec, $e0, $e3, $fe, $fd, $d7, $bd, $a8, $a0
1e47b     C0 F4 0D 0D 
1e47f     10 15 14 EF 
1e483     C3 AF B7 C8 
1e487     D6 D0 CE D1 | 	byte	$c0, $f4, $0d, $0d, $10, $15, $14, $ef, $c3, $af, $b7, $c8, $d6, $d0, $ce, $d1
1e48b     C7 DC EE EB 
1e48f     E5 FA 07 FE 
1e493     F3 E4 D8 E4 
1e497     F8 05 1B 32 | 	byte	$c7, $dc, $ee, $eb, $e5, $fa, $07, $fe, $f3, $e4, $d8, $e4, $f8, $05, $1b, $32
1e49b     41 33 16 31 
1e49f     60 64 48 39 
1e4a3     3F 44 34 26 
1e4a7     22 1B 1D 2C | 	byte	$41, $33, $16, $31, $60, $64, $48, $39, $3f, $44, $34, $26, $22, $1b, $1d, $2c
1e4ab     32 24 15 0E 
1e4af     EF F0 1C 40 
1e4b3     42 41 3C 2C 
1e4b7     12 01 FF 11 | 	byte	$32, $24, $15, $0e, $ef, $f0, $1c, $40, $42, $41, $3c, $2c, $12, $01, $ff, $11
1e4bb     16 1E 1E 2A 
1e4bf     34 2B 22 30 
1e4c3     2C 17 0B 00 
1e4c7     E4 E4 F9 E2 | 	byte	$16, $1e, $1e, $2a, $34, $2b, $22, $30, $2c, $17, $0b, $00, $e4, $e4, $f9, $e2
1e4cb     CC CB D5 E2 
1e4cf     EA E9 F0 E7 
1e4d3     F9 17 14 EA 
1e4d7     D6 D6 EE F6 | 	byte	$cc, $cb, $d5, $e2, $ea, $e9, $f0, $e7, $f9, $17, $14, $ea, $d6, $d6, $ee, $f6
1e4db     F0 E8 DC D2 
1e4df     C2 AE AE C3 
1e4e3     DE D2 C6 DA 
1e4e7     F6 F5 F2 FE | 	byte	$f0, $e8, $dc, $d2, $c2, $ae, $ae, $c3, $de, $d2, $c6, $da, $f6, $f5, $f2, $fe
1e4eb     09 07 01 FB 
1e4ef     FD F1 EF FF 
1e4f3     22 25 12 F0 
1e4f7     F1 07 15 0F | 	byte	$09, $07, $01, $fb, $fd, $f1, $ef, $ff, $22, $25, $12, $f0, $f1, $07, $15, $0f
1e4fb     0D FB F0 FA 
1e4ff     F0 CC C4 CC 
1e503     C7 D1 D3 E2 
1e507     E0 EC 02 0C | 	byte	$0d, $fb, $f0, $fa, $f0, $cc, $c4, $cc, $c7, $d1, $d3, $e2, $e0, $ec, $02, $0c
1e50b     00 FF 14 1E 
1e50f     1A 1F 27 29 
1e513     1B 17 0D FB 
1e517     03 22 35 24 | 	byte	$00, $ff, $14, $1e, $1a, $1f, $27, $29, $1b, $17, $0d, $fb, $03, $22, $35, $24
1e51b     15 39 51 48 
1e51f     35 18 FB E7 
1e523     EB F7 FF EF 
1e527     F4 03 14 26 | 	byte	$15, $39, $51, $48, $35, $18, $fb, $e7, $eb, $f7, $ff, $ef, $f4, $03, $14, $26
1e52b     36 1D 0D 17 
1e52f     03 F2 EE DD 
1e533     D5 C4 BB C3 
1e537     F2 10 1A 1D | 	byte	$36, $1d, $0d, $17, $03, $f2, $ee, $dd, $d5, $c4, $bb, $c3, $f2, $10, $1a, $1d
1e53b     15 02 0B 21 
1e53f     29 1E 07 07 
1e543     24 33 4B 54 
1e547     4E 37 2C 1F | 	byte	$15, $02, $0b, $21, $29, $1e, $07, $07, $24, $33, $4b, $54, $4e, $37, $2c, $1f
1e54b     09 0A 1C 2E 
1e54f     2B 20 32 40 
1e553     38 22 ED CA 
1e557     C8 F0 F7 F3 | 	byte	$09, $0a, $1c, $2e, $2b, $20, $32, $40, $38, $22, $ed, $ca, $c8, $f0, $f7, $f3
1e55b     DA C9 CA D5 
1e55f     DB ED EE E5 
1e563     F9 F8 DB C1 
1e567     B6 CA EE 00 | 	byte	$da, $c9, $ca, $d5, $db, $ed, $ee, $e5, $f9, $f8, $db, $c1, $b6, $ca, $ee, $00
1e56b     FA FD F8 DA 
1e56f     C4 C8 C7 D1 
1e573     DE E0 C7 A1 
1e577     AA D2 F0 04 | 	byte	$fa, $fd, $f8, $da, $c4, $c8, $c7, $d1, $de, $e0, $c7, $a1, $aa, $d2, $f0, $04
1e57b     1D 25 0F F3 
1e57f     D3 A1 88 AB 
1e583     D0 D7 CF DD 
1e587     E3 EF F8 E8 | 	byte	$1d, $25, $0f, $f3, $d3, $a1, $88, $ab, $d0, $d7, $cf, $dd, $e3, $ef, $f8, $e8
1e58b     E9 FC 29 2F 
1e58f     10 FA E5 E5 
1e593     E9 E7 FA 22 
1e597     46 5C 5D 48 | 	byte	$e9, $fc, $29, $2f, $10, $fa, $e5, $e5, $e9, $e7, $fa, $22, $46, $5c, $5d, $48
1e59b     34 39 35 34 
1e59f     26 15 20 40 
1e5a3     3D 1E FD 03 
1e5a7     19 47 54 38 | 	byte	$34, $39, $35, $34, $26, $15, $20, $40, $3d, $1e, $fd, $03, $19, $47, $54, $38
1e5ab     0E 00 19 1E 
1e5af     1C 2C 30 2B 
1e5b3     11 F0 D2 DD 
1e5b7     FA 11 12 24 | 	byte	$0e, $00, $19, $1e, $1c, $2c, $30, $2b, $11, $f0, $d2, $dd, $fa, $11, $12, $24
1e5bb     41 46 43 3B 
1e5bf     2C 17 15 20 
1e5c3     1B F6 D1 C2 
1e5c7     D9 F0 DB DB | 	byte	$41, $46, $43, $3b, $2c, $17, $15, $20, $1b, $f6, $d1, $c2, $d9, $f0, $db, $db
1e5cb     ED 0E 23 1F 
1e5cf     0A 0B 07 EF 
1e5d3     D5 B8 BC D5 
1e5d7     E6 CD B6 B1 | 	byte	$ed, $0e, $23, $1f, $0a, $0b, $07, $ef, $d5, $b8, $bc, $d5, $e6, $cd, $b6, $b1
1e5db     B7 BB BC BD 
1e5df     D3 DC EA FC 
1e5e3     F1 E4 D8 E0 
1e5e7     04 16 FC DB | 	byte	$b7, $bb, $bc, $bd, $d3, $dc, $ea, $fc, $f1, $e4, $d8, $e0, $04, $16, $fc, $db
1e5eb     DE F3 FB 06 
1e5ef     0D 29 40 3B 
1e5f3     17 FA F4 07 
1e5f7     1B 1E 0A FC | 	byte	$de, $f3, $fb, $06, $0d, $29, $40, $3b, $17, $fa, $f4, $07, $1b, $1e, $0a, $fc
1e5fb     D5 C8 D9 CD 
1e5ff     C4 C0 D6 F3 
1e603     FB E2 D7 E7 
1e607     ED E3 EB 02 | 	byte	$d5, $c8, $d9, $cd, $c4, $c0, $d6, $f3, $fb, $e2, $d7, $e7, $ed, $e3, $eb, $02
1e60b     1C 13 F8 FE 
1e60f     0D 02 FF 04 
1e613     13 28 23 14 
1e617     14 1A 20 20 | 	byte	$1c, $13, $f8, $fe, $0d, $02, $ff, $04, $13, $28, $23, $14, $14, $1a, $20, $20
1e61b     1E 1F 18 FA 
1e61f     D9 DF F3 0C 
1e623     15 09 1B 4B 
1e627     5D 40 2B 18 | 	byte	$1e, $1f, $18, $fa, $d9, $df, $f3, $0c, $15, $09, $1b, $4b, $5d, $40, $2b, $18
1e62b     09 F5 E6 E9 
1e62f     E2 C4 AF B8 
1e633     D3 ED F6 02 
1e637     26 40 35 1F | 	byte	$09, $f5, $e6, $e9, $e2, $c4, $af, $b8, $d3, $ed, $f6, $02, $26, $40, $35, $1f
1e63b     0A 03 1A 20 
1e63f     2B 2A 24 23 
1e643     26 28 31 48 
1e647     37 2E 2F 2E | 	byte	$0a, $03, $1a, $20, $2b, $2a, $24, $23, $26, $28, $31, $48, $37, $2e, $2f, $2e
1e64b     20 1D 22 39 
1e64f     30 17 02 01 
1e653     FC D4 BE C2 
1e657     E5 05 F8 DF | 	byte	$20, $1d, $22, $39, $30, $17, $02, $01, $fc, $d4, $be, $c2, $e5, $05, $f8, $df
1e65b     D5 E8 FD 0A 
1e65f     0D 05 F8 E5 
1e663     C8 B6 BD D0 
1e667     E1 F7 F5 DC | 	byte	$d5, $e8, $fd, $0a, $0d, $05, $f8, $e5, $c8, $b6, $bd, $d0, $e1, $f7, $f5, $dc
1e66b     BD BC E1 EF 
1e66f     EE D2 B9 BA 
1e673     BE C2 E1 EF 
1e677     F0 F6 EE D7 | 	byte	$bd, $bc, $e1, $ef, $ee, $d2, $b9, $ba, $be, $c2, $e1, $ef, $f0, $f6, $ee, $d7
1e67b     E3 EA E6 C8 
1e67f     B0 A1 A4 B9 
1e683     D6 E6 E2 DC 
1e687     E7 FD 00 F9 | 	byte	$e3, $ea, $e6, $c8, $b0, $a1, $a4, $b9, $d6, $e6, $e2, $dc, $e7, $fd, $00, $f9
1e68b     F4 09 29 27 
1e68f     0D 07 12 37 
1e693     53 57 57 5E 
1e697     63 5A 41 2F | 	byte	$f4, $09, $29, $27, $0d, $07, $12, $37, $53, $57, $57, $5e, $63, $5a, $41, $2f
1e69b     1E 13 1A 1F 
1e69f     28 1E 22 2F 
1e6a3     3C 4A 3C 3C 
1e6a7     3E 2A 14 00 | 	byte	$1e, $13, $1a, $1f, $28, $1e, $22, $2f, $3c, $4a, $3c, $3c, $3e, $2a, $14, $00
1e6ab     FB FF 0B 06 
1e6af     F7 F4 06 14 
1e6b3     07 05 FC FA 
1e6b7     0E 2B 31 35 | 	byte	$fb, $ff, $0b, $06, $f7, $f4, $06, $14, $07, $05, $fc, $fa, $0e, $2b, $31, $35
1e6bb     37 2B 1A 0F 
1e6bf     F2 DB E8 F3 
1e6c3     08 FD EB EB 
1e6c7     04 19 28 27 | 	byte	$37, $2b, $1a, $0f, $f2, $db, $e8, $f3, $08, $fd, $eb, $eb, $04, $19, $28, $27
1e6cb     26 27 0E DF 
1e6cf     CE C9 C8 C8 
1e6d3     BF BF B3 B6 
1e6d7     D0 DE DD D5 | 	byte	$26, $27, $0e, $df, $ce, $c9, $c8, $c8, $bf, $bf, $b3, $b6, $d0, $de, $dd, $d5
1e6db     D9 DD D3 DB 
1e6df     E7 DC D6 E1 
1e6e3     F5 FB FA FE 
1e6e7     08 09 FA EC | 	byte	$d9, $dd, $d3, $db, $e7, $dc, $d6, $e1, $f5, $fb, $fa, $fe, $08, $09, $fa, $ec
1e6eb     F0 08 29 3A 
1e6ef     29 14 06 F8 
1e6f3     FD E9 F3 03 
1e6f7     07 02 F0 F8 | 	byte	$f0, $08, $29, $3a, $29, $14, $06, $f8, $fd, $e9, $f3, $03, $07, $02, $f0, $f8
1e6fb     EB E2 EC EA 
1e6ff     FC 01 F8 E6 
1e703     CF B9 B1 C7 
1e707     E0 00 07 FB | 	byte	$eb, $e2, $ec, $ea, $fc, $01, $f8, $e6, $cf, $b9, $b1, $c7, $e0, $00, $07, $fb
1e70b     0B 0E 11 16 
1e70f     18 2A 2E 26 
1e713     12 03 F3 F1 
1e717     0E 1F 1C 17 | 	byte	$0b, $0e, $11, $16, $18, $2a, $2e, $26, $12, $03, $f3, $f1, $0e, $1f, $1c, $17
1e71b     08 F7 F6 F9 
1e71f     FB FE 0D 27 
1e723     3F 40 36 23 
1e727     01 F1 D0 C6 | 	byte	$08, $f7, $f6, $f9, $fb, $fe, $0d, $27, $3f, $40, $36, $23, $01, $f1, $d0, $c6
1e72b     DF E9 F2 E4 
1e72f     EA EF F8 13 
1e733     2A 37 35 36 
1e737     3A 30 1E F9 | 	byte	$df, $e9, $f2, $e4, $ea, $ef, $f8, $13, $2a, $37, $35, $36, $3a, $30, $1e, $f9
1e73b     EE FB 16 2F 
1e73f     2F 3C 4C 45 
1e743     41 2F 29 25 
1e747     19 0F 0B 1D | 	byte	$ee, $fb, $16, $2f, $2f, $3c, $4c, $45, $41, $2f, $29, $25, $19, $0f, $0b, $1d
1e74b     1C 03 FC 0A 
1e74f     1C 1B 0C FB 
1e753     EB C7 B5 D4 
1e757     F2 03 FB E4 | 	byte	$1c, $03, $fc, $0a, $1c, $1b, $0c, $fb, $eb, $c7, $b5, $d4, $f2, $03, $fb, $e4
1e75b     CA BB D4 DD 
1e75f     E0 EB F1 EF 
1e763     E7 DB DB E7 
1e767     EF F6 F1 E2 | 	byte	$ca, $bb, $d4, $dd, $e0, $eb, $f1, $ef, $e7, $db, $db, $e7, $ef, $f6, $f1, $e2
1e76b     E2 DE CC BE 
1e76f     AB 9E AD BB 
1e773     D6 D8 E1 E7 
1e777     EA E9 DB D9 | 	byte	$e2, $de, $cc, $be, $ab, $9e, $ad, $bb, $d6, $d8, $e1, $e7, $ea, $e9, $db, $d9
1e77b     C3 A2 98 A0 
1e77f     BA CC CD CC 
1e783     DD F5 F4 02 
1e787     1E 2E 11 F2 | 	byte	$c3, $a2, $98, $a0, $ba, $cc, $cd, $cc, $dd, $f5, $f4, $02, $1e, $2e, $11, $f2
1e78b     00 1C 33 45 
1e78f     53 4D 42 45 
1e793     3A 40 62 64 
1e797     64 64 32 0A | 	byte	$00, $1c, $33, $45, $53, $4d, $42, $45, $3a, $40, $62, $64, $64, $64, $32, $0a
1e79b     E1 EF 2B 5A 
1e79f     65 4E 34 27 
1e7a3     22 19 04 F5 
1e7a7     F5 F8 EB EE | 	byte	$e1, $ef, $2b, $5a, $65, $4e, $34, $27, $22, $19, $04, $f5, $f5, $f8, $eb, $ee
1e7ab     FA F9 FA F3 
1e7af     F6 02 05 0B 
1e7b3     09 07 1B 2B 
1e7b7     2F 2A 33 1C | 	byte	$fa, $f9, $fa, $f3, $f6, $02, $05, $0b, $09, $07, $1b, $2b, $2f, $2a, $33, $1c
1e7bb     F2 FB 09 00 
1e7bf     EC E9 EA E8 
1e7c3     F1 FA F9 F7 
1e7c7     0E 0B F6 F7 | 	byte	$f2, $fb, $09, $00, $ec, $e9, $ea, $e8, $f1, $fa, $f9, $f7, $0e, $0b, $f6, $f7
1e7cb     FC F6 FB F9 
1e7cf     E6 C8 B2 CF 
1e7d3     F3 07 00 F7 
1e7d7     E9 CE A6 8F | 	byte	$fc, $f6, $fb, $f9, $e6, $c8, $b2, $cf, $f3, $07, $00, $f7, $e9, $ce, $a6, $8f
1e7db     A0 C0 DA EF 
1e7df     04 0B 05 09 
1e7e3     14 16 0E 15 
1e7e7     16 14 17 2B | 	byte	$a0, $c0, $da, $ef, $04, $0b, $05, $09, $14, $16, $0e, $15, $16, $14, $17, $2b
1e7eb     2B 1D 12 1F 
1e7ef     FF E3 EB FB 
1e7f3     F6 E1 DF DF 
1e7f7     EB F9 F4 D9 | 	byte	$2b, $1d, $12, $1f, $ff, $e3, $eb, $fb, $f6, $e1, $df, $df, $eb, $f9, $f4, $d9
1e7fb     C8 D7 E9 EA 
1e7ff     EA DE CB C8 
1e803     D7 E1 F2 0B 
1e807     20 29 33 26 | 	byte	$c8, $d7, $e9, $ea, $ea, $de, $cb, $c8, $d7, $e1, $f2, $0b, $20, $29, $33, $26
1e80b     1C 1B 14 0B 
1e80f     F3 DB E2 F4 
1e813     08 22 25 19 
1e817     0A FB E5 D8 | 	byte	$1c, $1b, $14, $0b, $f3, $db, $e2, $f4, $08, $22, $25, $19, $0a, $fb, $e5, $d8
1e81b     E4 FB 11 29 
1e81f     2D 26 1C 26 
1e823     37 19 F2 F6 
1e827     01 F1 DA DB | 	byte	$e4, $fb, $11, $29, $2d, $26, $1c, $26, $37, $19, $f2, $f6, $01, $f1, $da, $db
1e82b     D3 D2 EF 00 
1e82f     0D 13 23 2E 
1e833     2F 34 4A 4A 
1e837     37 27 24 25 | 	byte	$d3, $d2, $ef, $00, $0d, $13, $23, $2e, $2f, $34, $4a, $4a, $37, $27, $24, $25
1e83b     36 57 65 65 
1e83f     65 1F 1B 27 
1e843     0D E0 CE D5 
1e847     DC EA 03 19 | 	byte	$36, $57, $65, $65, $65, $1f, $1b, $27, $0d, $e0, $ce, $d5, $dc, $ea, $03, $19
1e84b     1B 19 16 FB 
1e84f     D3 D3 ED F3 
1e853     F1 FA EF C9 
1e857     B3 C4 D0 CD | 	byte	$1b, $19, $16, $fb, $d3, $d3, $ed, $f3, $f1, $fa, $ef, $c9, $b3, $c4, $d0, $cd
1e85b     DB FA F7 E6 
1e85f     DB CD CB E5 
1e863     E4 DD E1 E7 
1e867     EE ED D3 C6 | 	byte	$db, $fa, $f7, $e6, $db, $cd, $cb, $e5, $e4, $dd, $e1, $e7, $ee, $ed, $d3, $c6
1e86b     BE CD CB C9 
1e86f     C4 D7 EF 00 
1e873     09 03 E7 D5 
1e877     CD B7 97 89 | 	byte	$be, $cd, $cb, $c9, $c4, $d7, $ef, $00, $09, $03, $e7, $d5, $cd, $b7, $97, $89
1e87b     9F B0 AE BF 
1e87f     C8 D3 F7 12 
1e883     11 FE 04 12 
1e887     14 2E 50 54 | 	byte	$9f, $b0, $ae, $bf, $c8, $d3, $f7, $12, $11, $fe, $04, $12, $14, $2e, $50, $54
1e88b     44 3B 46 49 
1e88f     50 64 64 64 
1e893     53 32 1B 20 
1e897     10 04 E7 E7 | 	byte	$44, $3b, $46, $49, $50, $64, $64, $64, $53, $32, $1b, $20, $10, $04, $e7, $e7
1e89b     0B 27 50 49 
1e89f     2C 1F 24 21 
1e8a3     0F 0C 12 21 
1e8a7     22 1E 05 EA | 	byte	$0b, $27, $50, $49, $2c, $1f, $24, $21, $0f, $0c, $12, $21, $22, $1e, $05, $ea
1e8ab     DB DD F0 F2 
1e8af     EF F6 FA FB 
1e8b3     12 15 1C 1D 
1e8b7     1C 0D F2 06 | 	byte	$db, $dd, $f0, $f2, $ef, $f6, $fa, $fb, $12, $15, $1c, $1d, $1c, $0d, $f2, $06
1e8bb     0D F7 EA F5 
1e8bf     0C 1B 15 FC 
1e8c3     E3 E5 00 14 
1e8c7     1B 13 F7 DB | 	byte	$0d, $f7, $ea, $f5, $0c, $1b, $15, $fc, $e3, $e5, $00, $14, $1b, $13, $f7, $db
1e8cb     D3 CA C5 BA 
1e8cf     D3 F3 FB 05 
1e8d3     F0 D4 BF C4 
1e8d7     D2 CA D9 FD | 	byte	$d3, $ca, $c5, $ba, $d3, $f3, $fb, $05, $f0, $d4, $bf, $c4, $d2, $ca, $d9, $fd
1e8db     1F 3C 39 1F 
1e8df     1D 0F 08 0F 
1e8e3     19 1D 17 FB 
1e8e7     ED E9 EA FA | 	byte	$1f, $3c, $39, $1f, $1d, $0f, $08, $0f, $19, $1d, $17, $fb, $ed, $e9, $ea, $fa
1e8eb     F7 FD F7 D0 
1e8ef     C9 D5 DC E5 
1e8f3     F0 FF 03 FB 
1e8f7     E7 CD D4 EA | 	byte	$f7, $fd, $f7, $d0, $c9, $d5, $dc, $e5, $f0, $ff, $03, $fb, $e7, $cd, $d4, $ea
1e8fb     F1 D7 CF D4 
1e8ff     E1 E5 DD DB 
1e903     CE E7 09 1E 
1e907     42 46 21 FC | 	byte	$f1, $d7, $cf, $d4, $e1, $e5, $dd, $db, $ce, $e7, $09, $1e, $42, $46, $21, $fc
1e90b     EA EF 02 23 
1e90f     46 49 39 22 
1e913     08 02 FC F4 
1e917     E8 D7 E0 F5 | 	byte	$ea, $ef, $02, $23, $46, $49, $39, $22, $08, $02, $fc, $f4, $e8, $d7, $e0, $f5
1e91b     FF 05 0A 05 
1e91f     05 08 0D 17 
1e923     0C 01 F5 F6 
1e927     EE FA FB 06 | 	byte	$ff, $05, $0a, $05, $05, $08, $0d, $17, $0c, $01, $f5, $f6, $ee, $fa, $fb, $06
1e92b     23 2E 21 32 
1e92f     47 53 45 42 
1e933     44 3F 31 23 
1e937     32 39 34 26 | 	byte	$23, $2e, $21, $32, $47, $53, $45, $42, $44, $3f, $31, $23, $32, $39, $34, $26
1e93b     2F 51 65 5A 
1e93f     3A 17 E4 C4 
1e943     DC 11 3D 48 
1e947     33 10 F8 E3 | 	byte	$2f, $51, $65, $5a, $3a, $17, $e4, $c4, $dc, $11, $3d, $48, $33, $10, $f8, $e3
1e94b     DA E5 F2 E7 
1e94f     D9 CB BB BD 
1e953     B9 B0 AE B7 
1e957     D1 EB EC E2 | 	byte	$da, $e5, $f2, $e7, $d9, $cb, $bb, $bd, $b9, $b0, $ae, $b7, $d1, $eb, $ec, $e2
1e95b     E5 E4 EF F3 
1e95f     F3 EE FA 03 
1e963     05 FA E4 D0 
1e967     C7 BE B7 C5 | 	byte	$e5, $e4, $ef, $f3, $f3, $ee, $fa, $03, $05, $fa, $e4, $d0, $c7, $be, $b7, $c5
1e96b     CC BC B6 B3 
1e96f     B0 C5 F2 0B 
1e973     FF E6 C9 AC 
1e977     97 A7 D6 F3 | 	byte	$cc, $bc, $b6, $b3, $b0, $c5, $f2, $0b, $ff, $e6, $c9, $ac, $97, $a7, $d6, $f3
1e97b     FE 06 03 F9 
1e97f     00 FC FF 05 
1e983     FF 05 1E 36 
1e987     31 2C 1C 10 | 	byte	$fe, $06, $03, $f9, $00, $fc, $ff, $05, $ff, $05, $1e, $36, $31, $2c, $1c, $10
1e98b     2C 61 64 64 
1e98f     45 34 33 30 
1e993     2D 2B 12 10 
1e997     23 2C 29 20 | 	byte	$2c, $61, $64, $64, $45, $34, $33, $30, $2d, $2b, $12, $10, $23, $2c, $29, $20
1e99b     1D 14 16 0F 
1e99f     FD 01 09 00 
1e9a3     F6 E2 EF 03 
1e9a7     0E 04 FB ED | 	byte	$1d, $14, $16, $0f, $fd, $01, $09, $00, $f6, $e2, $ef, $03, $0e, $04, $fb, $ed
1e9ab     E4 E1 F3 17 
1e9af     30 48 56 47 
1e9b3     19 F4 F7 0B 
1e9b7     13 FB DE DF | 	byte	$e4, $e1, $f3, $17, $30, $48, $56, $47, $19, $f4, $f7, $0b, $13, $fb, $de, $df
1e9bb     F6 FF FE F9 
1e9bf     DF DD EC F9 
1e9c3     01 04 FE F4 
1e9c7     E1 DF E7 E7 | 	byte	$f6, $ff, $fe, $f9, $df, $dd, $ec, $f9, $01, $04, $fe, $f4, $e1, $df, $e7, $e7
1e9cb     F5 11 17 F1 
1e9cf     D3 D7 D0 CF 
1e9d3     C9 C9 E0 F8 
1e9d7     F3 EC E1 F7 | 	byte	$f5, $11, $17, $f1, $d3, $d7, $d0, $cf, $c9, $c9, $e0, $f8, $f3, $ec, $e1, $f7
1e9db     16 3A 34 1F 
1e9df     0F 06 04 0B 
1e9e3     1C 2F 30 2E 
1e9e7     14 F1 D9 E0 | 	byte	$16, $3a, $34, $1f, $0f, $06, $04, $0b, $1c, $2f, $30, $2e, $14, $f1, $d9, $e0
1e9eb     E1 CA B7 B2 
1e9ef     BE CB D9 DF 
1e9f3     CE B3 A9 BD 
1e9f7     CF DA DD DF | 	byte	$e1, $ca, $b7, $b2, $be, $cb, $d9, $df, $ce, $b3, $a9, $bd, $cf, $da, $dd, $df
1e9fb     E6 EA DF EF 
1e9ff     05 15 17 1A 
1ea03     16 22 30 29 
1ea07     10 EF ED F6 | 	byte	$e6, $ea, $df, $ef, $05, $15, $17, $1a, $16, $22, $30, $29, $10, $ef, $ed, $f6
1ea0b     13 11 F9 E3 
1ea0f     E4 FB 14 12 
1ea13     0D 04 F3 FB 
1ea17     06 0F 1D 23 | 	byte	$13, $11, $f9, $e3, $e4, $fb, $14, $12, $0d, $04, $f3, $fb, $06, $0f, $1d, $23
1ea1b     37 2F 1C 12 
1ea1f     1B 2B 19 05 
1ea23     FE F7 ED EF 
1ea27     EE 02 11 08 | 	byte	$37, $2f, $1c, $12, $1b, $2b, $19, $05, $fe, $f7, $ed, $ef, $ee, $02, $11, $08
1ea2b     0B 20 33 36 
1ea2f     41 50 4B 31 
1ea33     2D 43 5D 5E 
1ea37     51 4B 5B 63 | 	byte	$0b, $20, $33, $36, $41, $50, $4b, $31, $2d, $43, $5d, $5e, $51, $4b, $5b, $63
1ea3b     57 3C 1E 17 
1ea3f     04 ED E3 ED 
1ea43     ED DB DD EE 
1ea47     F2 F0 D7 D1 | 	byte	$57, $3c, $1e, $17, $04, $ed, $e3, $ed, $ed, $db, $dd, $ee, $f2, $f0, $d7, $d1
1ea4b     D9 CF C5 D0 
1ea4f     E3 FE F9 DD 
1ea53     D5 E5 F4 F2 
1ea57     EA E1 D7 D9 | 	byte	$d9, $cf, $c5, $d0, $e3, $fe, $f9, $dd, $d5, $e5, $f4, $f2, $ea, $e1, $d7, $d9
1ea5b     DA D3 DA E1 
1ea5f     D8 D8 DD E6 
1ea63     DE D1 C6 B5 
1ea67     AF C6 D7 DA | 	byte	$da, $d3, $da, $e1, $d8, $d8, $dd, $e6, $de, $d1, $c6, $b5, $af, $c6, $d7, $da
1ea6b     CE D5 D9 EB 
1ea6f     03 FD E5 CC 
1ea73     C4 BC CC CD 
1ea77     C7 CA DB EA | 	byte	$ce, $d5, $d9, $eb, $03, $fd, $e5, $cc, $c4, $bc, $cc, $cd, $c7, $ca, $db, $ea
1ea7b     F5 03 1E 17 
1ea7f     0C 18 1C 25 
1ea83     3D 4B 61 5A 
1ea87     43 30 3C 41 | 	byte	$f5, $03, $1e, $17, $0c, $18, $1c, $25, $3d, $4b, $61, $5a, $43, $30, $3c, $41
1ea8b     3B 31 2F 25 
1ea8f     22 25 24 26 
1ea93     23 1E 20 1B 
1ea97     10 F7 EA EC | 	byte	$3b, $31, $2f, $25, $22, $25, $24, $26, $23, $1e, $20, $1b, $10, $f7, $ea, $ec
1ea9b     F6 F4 16 2B 
1ea9f     29 16 13 22 
1eaa3     32 34 19 06 
1eaa7     02 F6 D9 E6 | 	byte	$f6, $f4, $16, $2b, $29, $16, $13, $22, $32, $34, $19, $06, $02, $f6, $d9, $e6
1eaab     FC 07 02 03 
1eaaf     07 0F 1E 1D 
1eab3     17 0A F9 EF 
1eab7     01 21 2C 2E | 	byte	$fc, $07, $02, $03, $07, $0f, $1e, $1d, $17, $0a, $f9, $ef, $01, $21, $2c, $2e
1eabb     29 1F 13 00 
1eabf     01 02 FE F5 
1eac3     E8 E1 D3 CC 
1eac7     CB D9 E0 E4 | 	byte	$29, $1f, $13, $00, $01, $02, $fe, $f5, $e8, $e1, $d3, $cc, $cb, $d9, $e0, $e4
1eacb     CE B6 B7 C8 
1eacf     C8 D5 E6 00 
1ead3     18 26 30 2E 
1ead7     23 16 17 1D | 	byte	$ce, $b6, $b7, $c8, $c8, $d5, $e6, $00, $18, $26, $30, $2e, $23, $16, $17, $1d
1eadb     2B 2A 11 F4 
1eadf     E4 FC 10 0B 
1eae3     FC E5 E1 DE 
1eae7     E5 D9 C6 AE | 	byte	$2b, $2a, $11, $f4, $e4, $fc, $10, $0b, $fc, $e5, $e1, $de, $e5, $d9, $c6, $ae
1eaeb     AA B8 CA DC 
1eaef     E6 E2 CF C7 
1eaf3     CF D7 DA DD 
1eaf7     E1 EF EC DA | 	byte	$aa, $b8, $ca, $dc, $e6, $e2, $cf, $c7, $cf, $d7, $da, $dd, $e1, $ef, $ec, $da
1eafb     E5 F4 F9 00 
1eaff     0B 03 00 00 
1eb03     FB E8 EE 0C 
1eb07     1A 13 FA FF | 	byte	$e5, $f4, $f9, $00, $0b, $03, $00, $00, $fb, $e8, $ee, $0c, $1a, $13, $fa, $ff
1eb0b     09 0B 20 30 
1eb0f     34 2E 17 0B 
1eb13     0B 0D 10 04 
1eb17     F7 EC F5 07 | 	byte	$09, $0b, $20, $30, $34, $2e, $17, $0b, $0b, $0d, $10, $04, $f7, $ec, $f5, $07
1eb1b     18 2F 28 14 
1eb1f     FB FE 19 22 
1eb23     1B 1D 20 18 
1eb27     06 1B 43 4D | 	byte	$18, $2f, $28, $14, $fb, $fe, $19, $22, $1b, $1d, $20, $18, $06, $1b, $43, $4d
1eb2b     37 20 22 23 
1eb2f     2B 35 41 45 
1eb33     3A 29 29 31 
1eb37     44 37 22 24 | 	byte	$37, $20, $22, $23, $2b, $35, $41, $45, $3a, $29, $29, $31, $44, $37, $22, $24
1eb3b     3D 40 27 04 
1eb3f     F0 F7 02 08 
1eb43     0C 0B E7 BD 
1eb47     AF B3 B0 BE | 	byte	$3d, $40, $27, $04, $f0, $f7, $02, $08, $0c, $0b, $e7, $bd, $af, $b3, $b0, $be
1eb4b     C8 D1 D1 CC 
1eb4f     D3 D3 F4 09 
1eb53     FF E8 D0 D2 
1eb57     D5 D0 E8 0B | 	byte	$c8, $d1, $d1, $cc, $d3, $d3, $f4, $09, $ff, $e8, $d0, $d2, $d5, $d0, $e8, $0b
1eb5b     01 E5 DB ED 
1eb5f     F1 E7 DC C9 
1eb63     A9 97 A6 B0 
1eb67     B7 BE B9 B7 | 	byte	$01, $e5, $db, $ed, $f1, $e7, $dc, $c9, $a9, $97, $a6, $b0, $b7, $be, $b9, $b7
1eb6b     B1 BC C1 C0 
1eb6f     C4 DA E8 EC 
1eb73     D7 DA E6 09 
1eb77     20 2B 36 29 | 	byte	$b1, $bc, $c1, $c0, $c4, $da, $e8, $ec, $d7, $da, $e6, $09, $20, $2b, $36, $29
1eb7b     1A 1C 1B 1C 
1eb7f     1F 22 15 09 
1eb83     11 25 2B 28 
1eb87     25 12 00 02 | 	byte	$1a, $1c, $1b, $1c, $1f, $22, $15, $09, $11, $25, $2b, $28, $25, $12, $00, $02
1eb8b     2B 48 45 45 
1eb8f     57 59 4A 43 
1eb93     3E 27 0C 03 
1eb97     03 FE F7 F9 | 	byte	$2b, $48, $45, $45, $57, $59, $4a, $43, $3e, $27, $0c, $03, $03, $fe, $f7, $f9
1eb9b     FE 06 0A 09 
1eb9f     18 1E 09 E5 
1eba3     DF E7 FA 0C 
1eba7     18 0C 02 FD | 	byte	$fe, $06, $0a, $09, $18, $1e, $09, $e5, $df, $e7, $fa, $0c, $18, $0c, $02, $fd
1ebab     17 36 48 4E 
1ebaf     39 20 25 13 
1ebb3     F9 F3 06 06 
1ebb7     F0 F2 09 1B | 	byte	$17, $36, $48, $4e, $39, $20, $25, $13, $f9, $f3, $06, $06, $f0, $f2, $09, $1b
1ebbb     18 FF E8 D8 
1ebbf     CA DF FA 08 
1ebc3     04 F1 E3 E2 
1ebc7     D7 DD EB FB | 	byte	$18, $ff, $e8, $d8, $ca, $df, $fa, $08, $04, $f1, $e3, $e2, $d7, $dd, $eb, $fb
1ebcb     FD ED EA EB 
1ebcf     07 1E 20 16 
1ebd3     0A FF E7 CF 
1ebd7     DA FB 00 EF | 	byte	$fd, $ed, $ea, $eb, $07, $1e, $20, $16, $0a, $ff, $e7, $cf, $da, $fb, $00, $ef
1ebdb     F5 12 11 02 
1ebdf     0C 2F 27 0D 
1ebe3     FC 01 FF EF 
1ebe7     CD A7 92 A5 | 	byte	$f5, $12, $11, $02, $0c, $2f, $27, $0d, $fc, $01, $ff, $ef, $cd, $a7, $92, $a5
1ebeb     B4 A5 AB BF 
1ebef     CF BF AF B8 
1ebf3     BF CD DD F2 
1ebf7     0A 1E 1A 11 | 	byte	$b4, $a5, $ab, $bf, $cf, $bf, $af, $b8, $bf, $cd, $dd, $f2, $0a, $1e, $1a, $11
1ebfb     1B 16 13 0F 
1ebff     13 0B 09 03 
1ec03     00 09 0B 01 
1ec07     E4 DF F1 FC | 	byte	$1b, $16, $13, $0f, $13, $0b, $09, $03, $00, $09, $0b, $01, $e4, $df, $f1, $fc
1ec0b     E6 DF E9 05 
1ec0f     16 1C 16 10 
1ec13     0E 16 2B 44 
1ec17     3E 3B 34 38 | 	byte	$e6, $df, $e9, $05, $16, $1c, $16, $10, $0e, $16, $2b, $44, $3e, $3b, $34, $38
1ec1b     2F 29 24 19 
1ec1f     0B 00 F6 FB 
1ec23     19 2B 1E 09 
1ec27     05 07 0F 19 | 	byte	$2f, $29, $24, $19, $0b, $00, $f6, $fb, $19, $2b, $1e, $09, $05, $07, $0f, $19
1ec2b     2B 43 50 59 
1ec2f     51 46 3C 30 
1ec33     46 63 65 53 
1ec37     37 31 36 44 | 	byte	$2b, $43, $50, $59, $51, $46, $3c, $30, $46, $63, $65, $53, $37, $31, $36, $44
1ec3b     32 F6 CC C4 
1ec3f     C9 BF C0 C7 
1ec43     C0 A2 97 B2 
1ec47     CE E0 EB 00 | 	byte	$32, $f6, $cc, $c4, $c9, $bf, $c0, $c7, $c0, $a2, $97, $b2, $ce, $e0, $eb, $00
1ec4b     0E 0A 0A 21 
1ec4f     1F 0B F7 DC 
1ec53     E3 C7 B9 BD 
1ec57     C9 D2 DF E0 | 	byte	$0e, $0a, $0a, $21, $1f, $0b, $f7, $dc, $e3, $c7, $b9, $bd, $c9, $d2, $df, $e0
1ec5b     CB C2 C0 BE 
1ec5f     B9 A8 A1 AB 
1ec63     C2 D8 D3 BA 
1ec67     A8 B4 D8 E8 | 	byte	$cb, $c2, $c0, $be, $b9, $a8, $a1, $ab, $c2, $d8, $d3, $ba, $a8, $b4, $d8, $e8
1ec6b     E9 DE ED F2 
1ec6f     EF FF DE BC 
1ec73     B3 CB F7 19 
1ec77     26 1B 09 F9 | 	byte	$e9, $de, $ed, $f2, $ef, $ff, $de, $bc, $b3, $cb, $f7, $19, $26, $1b, $09, $f9
1ec7b     F8 11 21 2A 
1ec7f     36 46 42 41 
1ec83     42 48 42 2C 
1ec87     1F 30 40 3E | 	byte	$f8, $11, $21, $2a, $36, $46, $42, $41, $42, $48, $42, $2c, $1f, $30, $40, $3e
1ec8b     2F 23 23 2F 
1ec8f     38 2F 18 09 
1ec93     F4 E3 EF 05 
1ec97     0A 09 0B 21 | 	byte	$2f, $23, $23, $2f, $38, $2f, $18, $09, $f4, $e3, $ef, $05, $0a, $09, $0b, $21
1ec9b     24 18 19 24 
1ec9f     29 27 10 16 
1eca3     11 06 09 07 
1eca7     FA E3 E3 FF | 	byte	$24, $18, $19, $24, $29, $27, $10, $16, $11, $06, $09, $07, $fa, $e3, $e3, $ff
1ecab     14 1E 21 10 
1ecaf     FF F5 FB 07 
1ecb3     15 1B 1F 1E 
1ecb7     18 23 33 2F | 	byte	$14, $1e, $21, $10, $ff, $f5, $fb, $07, $15, $1b, $1f, $1e, $18, $23, $33, $2f
1ecbb     16 F6 E5 D7 
1ecbf     ED FA E8 CF 
1ecc3     CB D8 E5 DD 
1ecc7     D1 CC E5 FC | 	byte	$16, $f6, $e5, $d7, $ed, $fa, $e8, $cf, $cb, $d8, $e5, $dd, $d1, $cc, $e5, $fc
1eccb     0F 10 17 0F 
1eccf     0D 0E 19 12 
1ecd3     FE 04 16 18 
1ecd7     22 1B 19 08 | 	byte	$0f, $10, $17, $0f, $0d, $0e, $19, $12, $fe, $04, $16, $18, $22, $1b, $19, $08
1ecdb     F8 EE E6 DF 
1ecdf     F2 FE E7 C5 
1ece3     B9 AD A0 9D 
1ece7     9D B6 C5 CC | 	byte	$f8, $ee, $e6, $df, $f2, $fe, $e7, $c5, $b9, $ad, $a0, $9d, $9d, $b6, $c5, $cc
1eceb     D2 D2 DD F8 
1ecef     07 E7 D5 DA 
1ecf3     E8 FB 11 12 
1ecf7     F5 D6 C8 E6 | 	byte	$d2, $d2, $dd, $f8, $07, $e7, $d5, $da, $e8, $fb, $11, $12, $f5, $d6, $c8, $e6
1ecfb     00 F9 E4 EB 
1ecff     EC F1 EF 09 
1ed03     1E 10 FE 07 
1ed07     0A FB F9 07 | 	byte	$00, $f9, $e4, $eb, $ec, $f1, $ef, $09, $1e, $10, $fe, $07, $0a, $fb, $f9, $07
1ed0b     05 1F 34 42 
1ed0f     4B 32 0A E8 
1ed13     EF 1B 35 30 
1ed17     12 06 04 01 | 	byte	$05, $1f, $34, $42, $4b, $32, $0a, $e8, $ef, $1b, $35, $30, $12, $06, $04, $01
1ed1b     0B 08 1C 34 
1ed1f     35 25 1B 29 
1ed23     3D 4F 4C 3B 
1ed27     25 27 33 43 | 	byte	$0b, $08, $1c, $34, $35, $25, $1b, $29, $3d, $4f, $4c, $3b, $25, $27, $33, $43
1ed2b     44 47 3F 30 
1ed2f     2A 31 2D 29 
1ed33     3C 49 33 0E 
1ed37     05 16 0F F2 | 	byte	$44, $47, $3f, $30, $2a, $31, $2d, $29, $3c, $49, $33, $0e, $05, $16, $0f, $f2
1ed3b     E0 E7 EC E4 
1ed3f     DD D6 E7 F4 
1ed43     FC F6 E9 DE 
1ed47     C2 C1 E2 FD | 	byte	$e0, $e7, $ec, $e4, $dd, $d6, $e7, $f4, $fc, $f6, $e9, $de, $c2, $c1, $e2, $fd
1ed4b     ED C9 BE D2 
1ed4f     E7 E4 B7 C4 
1ed53     E2 E5 D8 E2 
1ed57     FA 00 F7 EF | 	byte	$ed, $c9, $be, $d2, $e7, $e4, $b7, $c4, $e2, $e5, $d8, $e2, $fa, $00, $f7, $ef
1ed5b     DD C3 AF A9 
1ed5f     AE 9E AD B3 
1ed63     A5 A1 A6 A6 
1ed67     A7 C1 D5 D9 | 	byte	$dd, $c3, $af, $a9, $ae, $9e, $ad, $b3, $a5, $a1, $a6, $a6, $a7, $c1, $d5, $d9
1ed6b     C9 D6 FC FC 
1ed6f     E6 E1 EC 0F 
1ed73     2E 35 2D 28 
1ed77     29 27 29 2D | 	byte	$c9, $d6, $fc, $fc, $e6, $e1, $ec, $0f, $2e, $35, $2d, $28, $29, $27, $29, $2d
1ed7b     23 0E 07 11 
1ed7f     25 2D 30 24 
1ed83     1C 28 2E 18 
1ed87     23 39 36 1B | 	byte	$23, $0e, $07, $11, $25, $2d, $30, $24, $1c, $28, $2e, $18, $23, $39, $36, $1b
1ed8b     1F 38 55 51 
1ed8f     3D 1F 0D 0B 
1ed93     0C 13 07 F9 
1ed97     FB EE F2 0A | 	byte	$1f, $38, $55, $51, $3d, $1f, $0d, $0b, $0c, $13, $07, $f9, $fb, $ee, $f2, $0a
1ed9b     0E 05 03 FF 
1ed9f     E5 CF D5 05 
1eda3     18 14 15 13 
1eda7     18 1A 15 24 | 	byte	$0e, $05, $03, $ff, $e5, $cf, $d5, $05, $18, $14, $15, $13, $18, $1a, $15, $24
1edab     49 5C 51 30 
1edaf     22 FF E6 E1 
1edb3     EE F2 FB 00 
1edb7     F7 DC DE D7 | 	byte	$49, $5c, $51, $30, $22, $ff, $e6, $e1, $ee, $f2, $fb, $00, $f7, $dc, $de, $d7
1edbb     D1 E9 03 F2 
1edbf     DD E9 06 21 
1edc3     21 16 16 F7 
1edc7     F9 FC 07 FE | 	byte	$d1, $e9, $03, $f2, $dd, $e9, $06, $21, $21, $16, $16, $f7, $f9, $fc, $07, $fe
1edcb     FB 02 F2 EE 
1edcf     F5 04 0D 09 
1edd3     F2 ED DB EE 
1edd7     11 1C 0E 0F | 	byte	$fb, $02, $f2, $ee, $f5, $04, $0d, $09, $f2, $ed, $db, $ee, $11, $1c, $0e, $0f
1eddb     12 0D FF D3 
1eddf     C8 DD E6 E6 
1ede3     CD CB B5 A6 
1ede7     A3 A2 A4 B3 | 	byte	$12, $0d, $ff, $d3, $c8, $dd, $e6, $e6, $cd, $cb, $b5, $a6, $a3, $a2, $a4, $b3
1edeb     CC DA CD C7 
1edef     D1 D2 EB FF 
1edf3     EF DC DD E9 
1edf7     06 0E 03 0C | 	byte	$cc, $da, $cd, $c7, $d1, $d2, $eb, $ff, $ef, $dc, $dd, $e9, $06, $0e, $03, $0c
1edfb     15 10 FD FB 
1edff     0C 19 21 04 
1ee03     EB E0 D9 E6 
1ee07     FA F7 E6 E3 | 	byte	$15, $10, $fd, $fb, $0c, $19, $21, $04, $eb, $e0, $d9, $e6, $fa, $f7, $e6, $e3
1ee0b     FF 2F 31 27 
1ee0f     1C 29 39 35 
1ee13     18 15 37 4E 
1ee17     4B 44 49 33 | 	byte	$ff, $2f, $31, $27, $1c, $29, $39, $35, $18, $15, $37, $4e, $4b, $44, $49, $33
1ee1b     04 F7 01 08 
1ee1f     12 0C 16 21 
1ee23     28 33 33 46 
1ee27     42 2B 25 48 | 	byte	$04, $f7, $01, $08, $12, $0c, $16, $21, $28, $33, $33, $46, $42, $2b, $25, $48
1ee2b     64 64 64 55 
1ee2f     53 5E 60 41 
1ee33     1E 13 0B F7 
1ee37     D6 BB BC D8 | 	byte	$64, $64, $64, $55, $53, $5e, $60, $41, $1e, $13, $0b, $f7, $d6, $bb, $bc, $d8
1ee3b     DD D5 DB DE 
1ee3f     C6 C4 DF F2 
1ee43     02 F3 E7 E6 
1ee47     E2 D3 D5 EF | 	byte	$dd, $d5, $db, $de, $c6, $c4, $df, $f2, $02, $f3, $e7, $e6, $e2, $d3, $d5, $ef
1ee4b     10 0B F3 EE 
1ee4f     FD F2 D6 C6 
1ee53     BB BA C2 DC 
1ee57     DC D5 C6 B6 | 	byte	$10, $0b, $f3, $ee, $fd, $f2, $d6, $c6, $bb, $ba, $c2, $dc, $dc, $d5, $c6, $b6
1ee5b     AE A7 95 94 
1ee5f     AE CA C5 CC 
1ee63     D9 DA E1 D4 
1ee67     CF D9 FB 08 | 	byte	$ae, $a7, $95, $94, $ae, $ca, $c5, $cc, $d9, $da, $e1, $d4, $cf, $d9, $fb, $08
1ee6b     EF E2 DE CF 
1ee6f     D8 F5 09 19 
1ee73     14 06 FB 07 
1ee77     0B 16 37 56 | 	byte	$ef, $e2, $de, $cf, $d8, $f5, $09, $19, $14, $06, $fb, $07, $0b, $16, $37, $56
1ee7b     51 3F 38 44 
1ee7f     53 5D 60 54 
1ee83     49 4C 3A 22 
1ee87     0B 01 04 04 | 	byte	$51, $3f, $38, $44, $53, $5d, $60, $54, $49, $4c, $3a, $22, $0b, $01, $04, $04
1ee8b     FE 01 13 11 
1ee8f     08 02 03 F9 
1ee93     EF FE 18 21 
1ee97     22 1C 12 09 | 	byte	$fe, $01, $13, $11, $08, $02, $03, $f9, $ef, $fe, $18, $21, $22, $1c, $12, $09
1ee9b     FE F7 F1 05 
1ee9f     0B FD F7 EC 
1eea3     EA FA FE 07 
1eea7     17 1A 14 09 | 	byte	$fe, $f7, $f1, $05, $0b, $fd, $f7, $ec, $ea, $fa, $fe, $07, $17, $1a, $14, $09
1eeab     13 18 11 12 
1eeaf     1B 22 0B 07 
1eeb3     1B 1B 0C FE 
1eeb7     FD 00 08 F7 | 	byte	$13, $18, $11, $12, $1b, $22, $0b, $07, $1b, $1b, $0c, $fe, $fd, $00, $08, $f7
1eebb     F2 FC 01 F7 
1eebf     E1 DF E7 F3 
1eec3     F6 F4 EA E7 
1eec7     E6 F3 09 1B | 	byte	$f2, $fc, $01, $f7, $e1, $df, $e7, $f3, $f6, $f4, $ea, $e7, $e6, $f3, $09, $1b
1eecb     27 20 17 1B 
1eecf     1D 16 18 18 
1eed3     1A 0B FF 09 
1eed7     0B EF D1 C6 | 	byte	$27, $20, $17, $1b, $1d, $16, $18, $18, $1a, $0b, $ff, $09, $0b, $ef, $d1, $c6
1eedb     C4 D0 CB AE 
1eedf     94 96 B3 B7 
1eee3     B6 BF CD D8 
1eee7     D3 DA E2 EC | 	byte	$c4, $d0, $cb, $ae, $94, $96, $b3, $b7, $b6, $bf, $cd, $d8, $d3, $da, $e2, $ec
1eeeb     EC F5 00 08 
1eeef     F0 D0 C9 E5 
1eef3     E9 D4 C1 BF 
1eef7     EA 05 0D 11 | 	byte	$ec, $f5, $00, $08, $f0, $d0, $c9, $e5, $e9, $d4, $c1, $bf, $ea, $05, $0d, $11
1eefb     22 24 14 EB 
1eeff     E4 02 19 0F 
1ef03     FE F4 E6 01 
1ef07     21 24 1A 0D | 	byte	$22, $24, $14, $eb, $e4, $02, $19, $0f, $fe, $f4, $e6, $01, $21, $24, $1a, $0d
1ef0b     0C FC F1 E4 
1ef0f     F2 04 18 24 
1ef13     2A 17 0D 14 
1ef17     11 0E 18 26 | 	byte	$0c, $fc, $f1, $e4, $f2, $04, $18, $24, $2a, $17, $0d, $14, $11, $0e, $18, $26
1ef1b     39 4B 47 34 
1ef1f     3B 48 55 60 
1ef23     49 3E 34 3E 
1ef27     46 45 33 26 | 	byte	$39, $4b, $47, $34, $3b, $48, $55, $60, $49, $3e, $34, $3e, $46, $45, $33, $26
1ef2b     3C 64 65 65 
1ef2f     33 1E 18 1E 
1ef33     FB DB DE E0 
1ef37     D5 D8 F3 04 | 	byte	$3c, $64, $65, $65, $33, $1e, $18, $1e, $fb, $db, $de, $e0, $d5, $d8, $f3, $04
1ef3b     0B 01 ED D3 
1ef3f     C0 BD C7 C3 
1ef43     A7 9D 9F AA 
1ef47     C8 E8 EB DE | 	byte	$0b, $01, $ed, $d3, $c0, $bd, $c7, $c3, $a7, $9d, $9f, $aa, $c8, $e8, $eb, $de
1ef4b     D7 DE E6 ED 
1ef4f     FC 04 05 02 
1ef53     EA E0 E0 ED 
1ef57     EB D5 B9 A0 | 	byte	$d7, $de, $e6, $ed, $fc, $04, $05, $02, $ea, $e0, $e0, $ed, $eb, $d5, $b9, $a0
1ef5b     B8 C9 BF B3 
1ef5f     A7 9C A2 BA 
1ef63     DC E5 D6 DC 
1ef67     E1 DB D1 EC | 	byte	$b8, $c9, $bf, $b3, $a7, $9c, $a2, $ba, $dc, $e5, $d6, $dc, $e1, $db, $d1, $ec
1ef6b     0C 12 04 0B 
1ef6f     22 1F 1B 27 
1ef73     30 1C 01 FD 
1ef77     14 22 31 45 | 	byte	$0c, $12, $04, $0b, $22, $1f, $1b, $27, $30, $1c, $01, $fd, $14, $22, $31, $45
1ef7b     40 35 32 31 
1ef7f     2A 38 48 43 
1ef83     35 26 29 2C 
1ef87     2E 2F 22 19 | 	byte	$40, $35, $32, $31, $2a, $38, $48, $43, $35, $26, $29, $2c, $2e, $2f, $22, $19
1ef8b     12 11 0F 10 
1ef8f     F9 F9 11 08 
1ef93     FB E7 EB E3 
1ef97     EF 06 08 FD | 	byte	$12, $11, $0f, $10, $f9, $f9, $11, $08, $fb, $e7, $eb, $e3, $ef, $06, $08, $fd
1ef9b     F7 F5 06 0E 
1ef9f     F8 FD FE 10 
1efa3     1A 25 26 19 
1efa7     19 23 1A 03 | 	byte	$f7, $f5, $06, $0e, $f8, $fd, $fe, $10, $1a, $25, $26, $19, $19, $23, $1a, $03
1efab     11 22 07 F4 
1efaf     F7 0A 0F 12 
1efb3     00 E9 D1 D5 
1efb7     F2 17 2F 31 | 	byte	$11, $22, $07, $f4, $f7, $0a, $0f, $12, $00, $e9, $d1, $d5, $f2, $17, $2f, $31
1efbb     21 F1 E3 E8 
1efbf     FE 08 FA FA 
1efc3     0F EE D8 F1 
1efc7     19 1C 0A 05 | 	byte	$21, $f1, $e3, $e8, $fe, $08, $fa, $fa, $0f, $ee, $d8, $f1, $19, $1c, $0a, $05
1efcb     03 05 0F 1D 
1efcf     25 1C 0F 15 
1efd3     0B 01 15 10 
1efd7     F7 DE D6 DA | 	byte	$03, $05, $0f, $1d, $25, $1c, $0f, $15, $0b, $01, $15, $10, $f7, $de, $d6, $da
1efdb     E7 DD D2 BE 
1efdf     94 8A 9D 9A 
1efe3     9C 9F A7 AE 
1efe7     C6 D9 E3 D9 | 	byte	$e7, $dd, $d2, $be, $94, $8a, $9d, $9a, $9c, $9f, $a7, $ae, $c6, $d9, $e3, $d9
1efeb     DC E3 F1 F8 
1efef     F9 FC FC FB 
1eff3     DD DC 05 28 
1eff7     27 20 23 22 | 	byte	$dc, $e3, $f1, $f8, $f9, $fc, $fc, $fb, $dd, $dc, $05, $28, $27, $20, $23, $22
1effb     15 FC EE F2 
1efff     FB FF FA 04 
1f003     0F 16 06 08 
1f007     0D 0E 12 18 | 	byte	$15, $fc, $ee, $f2, $fb, $ff, $fa, $04, $0f, $16, $06, $08, $0d, $0e, $12, $18
1f00b     16 0E 06 11 
1f00f     1B 36 36 1F 
1f013     08 F7 07 15 
1f017     12 06 0D 24 | 	byte	$16, $0e, $06, $11, $1b, $36, $36, $1f, $08, $f7, $07, $15, $12, $06, $0d, $24
1f01b     32 36 2F 30 
1f01f     31 21 26 41 
1f023     47 47 46 58 
1f027     64 64 63 65 | 	byte	$32, $36, $2f, $30, $31, $21, $26, $41, $47, $47, $46, $58, $64, $64, $63, $65
1f02b     65 65 4F 38 
1f02f     1E 16 0D FB 
1f033     E3 E7 E9 DC 
1f037     C6 D0 EC E9 | 	byte	$65, $65, $4f, $38, $1e, $16, $0d, $fb, $e3, $e7, $e9, $dc, $c6, $d0, $ec, $e9
1f03b     C3 B5 AD B1 
1f03f     BB CC DB D0 
1f043     B1 A5 C8 DC 
1f047     E3 EA DF D5 | 	byte	$c3, $b5, $ad, $b1, $bb, $cc, $db, $d0, $b1, $a5, $c8, $dc, $e3, $ea, $df, $d5
1f04b     C5 B7 C4 D8 
1f04f     FE 07 E3 C5 
1f053     BF CC BE AC 
1f057     C1 DB E7 E4 | 	byte	$c5, $b7, $c4, $d8, $fe, $07, $e3, $c5, $bf, $cc, $be, $ac, $c1, $db, $e7, $e4
1f05b     D6 E8 DB C0 
1f05f     BB C8 DB E4 
1f063     DA C7 C4 D6 
1f067     F1 07 0C 1C | 	byte	$d6, $e8, $db, $c0, $bb, $c8, $db, $e4, $da, $c7, $c4, $d6, $f1, $07, $0c, $1c
1f06b     17 00 FF 12 
1f06f     27 12 0C 13 
1f073     33 4C 45 36 
1f077     31 32 35 3D | 	byte	$17, $00, $ff, $12, $27, $12, $0c, $13, $33, $4c, $45, $36, $31, $32, $35, $3d
1f07b     3F 47 47 3A 
1f07f     38 29 1E 17 
1f083     05 F9 04 1B 
1f087     1E 09 FB E6 | 	byte	$3f, $47, $47, $3a, $38, $29, $1e, $17, $05, $f9, $04, $1b, $1e, $09, $fb, $e6
1f08b     D4 E0 F4 17 
1f08f     29 1B 0A 0A 
1f093     FA EF EE 0D 
1f097     29 27 07 F0 | 	byte	$d4, $e0, $f4, $17, $29, $1b, $0a, $0a, $fa, $ef, $ee, $0d, $29, $27, $07, $f0
1f09b     F8 02 00 FC 
1f09f     06 0F F0 EB 
1f0a3     0D 28 2B 23 
1f0a7     1E 19 1E 29 | 	byte	$f8, $02, $00, $fc, $06, $0f, $f0, $eb, $0d, $28, $2b, $23, $1e, $19, $1e, $29
1f0ab     2A 2F 26 06 
1f0af     F2 F1 16 2B 
1f0b3     1D F4 E1 CB 
1f0b7     C9 DB E3 DE | 	byte	$2a, $2f, $26, $06, $f2, $f1, $16, $2b, $1d, $f4, $e1, $cb, $c9, $db, $e3, $de
1f0bb     D9 CB C5 DC 
1f0bf     E8 F2 F6 FB 
1f0c3     00 05 1B 37 
1f0c7     40 29 09 F7 | 	byte	$d9, $cb, $c5, $dc, $e8, $f2, $f6, $fb, $00, $05, $1b, $37, $40, $29, $09, $f7
1f0cb     02 20 31 2B 
1f0cf     1E 1C 20 19 
1f0d3     FC F3 04 04 
1f0d7     EF D8 C4 CC | 	byte	$02, $20, $31, $2b, $1e, $1c, $20, $19, $fc, $f3, $04, $04, $ef, $d8, $c4, $cc
1f0db     D3 BE BB BA 
1f0df     AB 97 8C 9B 
1f0e3     A6 A7 AC C4 
1f0e7     E3 F0 EE DF | 	byte	$d3, $be, $bb, $ba, $ab, $97, $8c, $9b, $a6, $a7, $ac, $c4, $e3, $f0, $ee, $df
1f0eb     D3 C7 B1 B9 
1f0ef     DA 07 12 06 
1f0f3     F8 E6 F0 09 
1f0f7     26 43 47 38 | 	byte	$d3, $c7, $b1, $b9, $da, $07, $12, $06, $f8, $e6, $f0, $09, $26, $43, $47, $38
1f0fb     2E 25 02 F2 
1f0ff     F1 0E 21 23 
1f103     18 14 1C 1D 
1f107     19 11 09 11 | 	byte	$2e, $25, $02, $f2, $f1, $0e, $21, $23, $18, $14, $1c, $1d, $19, $11, $09, $11
1f10b     1A 22 19 18 
1f10f     12 1A 1E 2B 
1f113     2F 23 21 39 
1f117     26 1E 1D 11 | 	byte	$1a, $22, $19, $18, $12, $1a, $1e, $2b, $2f, $23, $21, $39, $26, $1e, $1d, $11
1f11b     1C 2D 39 39 
1f11f     2B 0F 01 13 
1f123     34 49 58 64 
1f127     63 50 3C 46 | 	byte	$1c, $2d, $39, $39, $2b, $0f, $01, $13, $34, $49, $58, $64, $63, $50, $3c, $46
1f12b     57 50 44 35 
1f12f     20 1E 32 1F 
1f133     E2 AD A4 AE 
1f137     C1 C6 C3 B4 | 	byte	$57, $50, $44, $35, $20, $1e, $32, $1f, $e2, $ad, $a4, $ae, $c1, $c6, $c3, $b4
1f13b     A5 A3 B9 D8 
1f13f     CF BB AF B2 
1f143     CB D2 E7 F1 
1f147     F1 E2 CF CA | 	byte	$a5, $a3, $b9, $d8, $cf, $bb, $af, $b2, $cb, $d2, $e7, $f1, $f1, $e2, $cf, $ca
1f14b     DE F5 09 03 
1f14f     F7 DD BF AF 
1f153     AA B7 CD CC 
1f157     BB BB C5 B4 | 	byte	$de, $f5, $09, $03, $f7, $dd, $bf, $af, $aa, $b7, $cd, $cc, $bb, $bb, $c5, $b4
1f15b     C7 E1 D9 B8 
1f15f     AC C9 E6 00 
1f163     00 F4 F7 12 
1f167     22 24 11 F8 | 	byte	$c7, $e1, $d9, $b8, $ac, $c9, $e6, $00, $00, $f4, $f7, $12, $22, $24, $11, $f8
1f16b     EF 00 1E 28 
1f16f     26 35 44 42 
1f173     37 3F 3C 38 
1f177     3A 47 39 2F | 	byte	$ef, $00, $1e, $28, $26, $35, $44, $42, $37, $3f, $3c, $38, $3a, $47, $39, $2f
1f17b     3E 4F 4B 38 
1f17f     27 1E 26 32 
1f183     1C F7 ED F1 
1f187     F0 ED E3 CE | 	byte	$3e, $4f, $4b, $38, $27, $1e, $26, $32, $1c, $f7, $ed, $f1, $f0, $ed, $e3, $ce
1f18b     C5 D1 E3 EE 
1f18f     F9 04 0D 00 
1f193     E5 DD F5 18 
1f197     21 17 07 0A | 	byte	$c5, $d1, $e3, $ee, $f9, $04, $0d, $00, $e5, $dd, $f5, $18, $21, $17, $07, $0a
1f19b     17 15 07 F5 
1f19f     F3 E9 FE 24 
1f1a3     42 45 34 2B 
1f1a7     21 16 16 1E | 	byte	$17, $15, $07, $f5, $f3, $e9, $fe, $24, $42, $45, $34, $2b, $21, $16, $16, $1e
1f1ab     2E 31 20 0E 
1f1af     0A 1C 1F 03 
1f1b3     F1 E1 DB E1 
1f1b7     F2 EE C3 B2 | 	byte	$2e, $31, $20, $0e, $0a, $1c, $1f, $03, $f1, $e1, $db, $e1, $f2, $ee, $c3, $b2
1f1bb     B8 BB C9 DC 
1f1bf     E4 E6 EF EF 
1f1c3     EF 02 2E 42 
1f1c7     24 F3 F7 0F | 	byte	$b8, $bb, $c9, $dc, $e4, $e6, $ef, $ef, $ef, $02, $2e, $42, $24, $f3, $f7, $0f
1f1cb     32 44 40 37 
1f1cf     24 16 0A FC 
1f1d3     F5 F6 E6 D9 
1f1d7     D2 C3 BD C2 | 	byte	$32, $44, $40, $37, $24, $16, $0a, $fc, $f5, $f6, $e6, $d9, $d2, $c3, $bd, $c2
1f1db     D2 C7 BC B3 
1f1df     9D 96 AA B7 
1f1e3     B9 CB E1 E8 
1f1e7     DD CC D5 E7 | 	byte	$d2, $c7, $bc, $b3, $9d, $96, $aa, $b7, $b9, $cb, $e1, $e8, $dd, $cc, $d5, $e7
1f1eb     ED EE F7 FF 
1f1ef     EE D7 CD DE 
1f1f3     01 0A 0F 1D 
1f1f7     1E 11 14 31 | 	byte	$ed, $ee, $f7, $ff, $ee, $d7, $cd, $de, $01, $0a, $0f, $1d, $1e, $11, $14, $31
1f1fb     39 18 E7 E5 
1f1ff     01 28 33 1B 
1f203     1E 3E 4C 3B 
1f207     22 19 18 09 | 	byte	$39, $18, $e7, $e5, $01, $28, $33, $1b, $1e, $3e, $4c, $3b, $22, $19, $18, $09
1f20b     17 27 34 3A 
1f20f     2C 22 19 19 
1f213     2A 33 33 31 
1f217     2B 1E 1A 24 | 	byte	$17, $27, $34, $3a, $2c, $22, $19, $19, $2a, $33, $33, $31, $2b, $1e, $1a, $24
1f21b     2F 33 3B 3E 
1f21f     39 3D 40 3F 
1f223     44 45 2C 1F 
1f227     20 2B 2F 34 | 	byte	$2f, $33, $3b, $3e, $39, $3d, $40, $3f, $44, $45, $2c, $1f, $20, $2b, $2f, $34
1f22b     2F 1C 09 0E 
1f22f     13 FC DD CB 
1f233     C1 AF AF B0 
1f237     A4 B1 CD CD | 	byte	$2f, $1c, $09, $0e, $13, $fc, $dd, $cb, $c1, $af, $af, $b0, $a4, $b1, $cd, $cd
1f23b     C7 BA BD C6 
1f23f     C5 C4 C9 D4 
1f243     F0 F9 F0 D8 
1f247     EB E7 EC 00 | 	byte	$c7, $ba, $bd, $c6, $c5, $c4, $c9, $d4, $f0, $f9, $f0, $d8, $eb, $e7, $ec, $00
1f24b     0B 0D 0E 03 
1f24f     D3 BA AB AB 
1f253     C7 D3 D4 C9 
1f257     CF C8 C6 C2 | 	byte	$0b, $0d, $0e, $03, $d3, $ba, $ab, $ab, $c7, $d3, $d4, $c9, $cf, $c8, $c6, $c2
1f25b     C3 D8 D0 C3 
1f25f     D5 E4 E1 EB 
1f263     00 17 09 E4 
1f267     E6 04 1A 24 | 	byte	$c3, $d8, $d0, $c3, $d5, $e4, $e1, $eb, $00, $17, $09, $e4, $e6, $04, $1a, $24
1f26b     1F 1D 2D 3D 
1f26f     3C 37 48 64 
1f273     5C 48 36 39 
1f277     41 3F 33 34 | 	byte	$1f, $1d, $2d, $3d, $3c, $37, $48, $64, $5c, $48, $36, $39, $41, $3f, $33, $34
1f27b     39 40 37 36 
1f27f     38 2B 0C 11 
1f283     21 14 F0 DF 
1f287     D5 D9 D9 E5 | 	byte	$39, $40, $37, $36, $38, $2b, $0c, $11, $21, $14, $f0, $df, $d5, $d9, $d9, $e5
1f28b     DF F1 F9 E3 
1f28f     D1 CC E5 E7 
1f293     DC D9 EB F3 
1f297     04 20 25 13 | 	byte	$df, $f1, $f9, $e3, $d1, $cc, $e5, $e7, $dc, $d9, $eb, $f3, $04, $20, $25, $13
1f29b     01 EF F8 19 
1f29f     2C 28 2B 44 
1f2a3     4D 43 26 11 
1f2a7     08 18 23 29 | 	byte	$01, $ef, $f8, $19, $2c, $28, $2b, $44, $4d, $43, $26, $11, $08, $18, $23, $29
1f2ab     23 24 1E 08 
1f2af     F6 FF 0E 11 
1f2b3     0B 08 FA E1 
1f2b7     C4 C8 CF D0 | 	byte	$23, $24, $1e, $08, $f6, $ff, $0e, $11, $0b, $08, $fa, $e1, $c4, $c8, $cf, $d0
1f2bb     B9 B7 CF E8 
1f2bf     FB F8 F3 E4 
1f2c3     EA F7 09 24 
1f2c7     21 16 11 07 | 	byte	$b9, $b7, $cf, $e8, $fb, $f8, $f3, $e4, $ea, $f7, $09, $24, $21, $16, $11, $07
1f2cb     06 1D 21 06 
1f2cf     F5 EA D6 CA 
1f2d3     DE E7 E8 D3 
1f2d7     D0 E4 E9 D2 | 	byte	$06, $1d, $21, $06, $f5, $ea, $d6, $ca, $de, $e7, $e8, $d3, $d0, $e4, $e9, $d2
1f2db     BF A8 9D A5 
1f2df     B8 BA B9 BC 
1f2e3     C2 D4 CE CA 
1f2e7     EC 08 07 EE | 	byte	$bf, $a8, $9d, $a5, $b8, $ba, $b9, $bc, $c2, $d4, $ce, $ca, $ec, $08, $07, $ee
1f2eb     F0 F9 FC F3 
1f2ef     F1 F9 F4 F0 
1f2f3     0C 23 28 17 
1f2f7     0E 02 08 09 | 	byte	$f0, $f9, $fc, $f3, $f1, $f9, $f4, $f0, $0c, $23, $28, $17, $0e, $02, $08, $09
1f2fb     F4 F7 02 1F 
1f2ff     27 12 17 29 
1f303     34 2C 2C 2E 
1f307     28 36 38 3A | 	byte	$f4, $f7, $02, $1f, $27, $12, $17, $29, $34, $2c, $2c, $2e, $28, $36, $38, $3a
1f30b     3D 31 2E 3A 
1f30f     34 0E FE 06 
1f313     02 13 34 38 
1f317     38 37 42 4A | 	byte	$3d, $31, $2e, $3a, $34, $0e, $fe, $06, $02, $13, $34, $38, $38, $37, $42, $4a
1f31b     41 4A 59 5D 
1f31f     54 47 28 1F 
1f323     2B 28 1C 19 
1f327     16 28 2F 11 | 	byte	$41, $4a, $59, $5d, $54, $47, $28, $1f, $2b, $28, $1c, $19, $16, $28, $2f, $11
1f32b     F1 EF E1 C4 
1f32f     C5 CC C2 C2 
1f333     AA 9E 9A A5 
1f337     AF C2 C9 B7 | 	byte	$f1, $ef, $e1, $c4, $c5, $cc, $c2, $c2, $aa, $9e, $9a, $a5, $af, $c2, $c9, $b7
1f33b     B8 B8 CF EC 
1f33f     F0 EB DF E5 
1f343     F7 F9 E3 E8 
1f347     F9 F8 F3 05 | 	byte	$b8, $b8, $cf, $ec, $f0, $eb, $df, $e5, $f7, $f9, $e3, $e8, $f9, $f8, $f3, $05
1f34b     0A FC F3 DD 
1f34f     C5 AA B1 CC 
1f353     E2 EC F0 DF 
1f357     D4 D5 DD D1 | 	byte	$0a, $fc, $f3, $dd, $c5, $aa, $b1, $cc, $e2, $ec, $f0, $df, $d4, $d5, $dd, $d1
1f35b     DB E5 EE 01 
1f35f     EA C4 CB E1 
1f363     EA E0 F3 02 
1f367     07 F1 E8 03 | 	byte	$db, $e5, $ee, $01, $ea, $c4, $cb, $e1, $ea, $e0, $f3, $02, $07, $f1, $e8, $03
1f36b     2A 45 48 4A 
1f36f     4F 4F 3C 3A 
1f373     3B 3B 33 33 
1f377     42 3D 2C 14 | 	byte	$2a, $45, $48, $4a, $4f, $4f, $3c, $3a, $3b, $3b, $33, $33, $42, $3d, $2c, $14
1f37b     1E 3E 5A 4A 
1f37f     2D 14 0E 06 
1f383     F1 EB F4 0D 
1f387     0B 00 FD F6 | 	byte	$1e, $3e, $5a, $4a, $2d, $14, $0e, $06, $f1, $eb, $f4, $0d, $0b, $00, $fd, $f6
1f38b     E5 EA F3 EF 
1f38f     DC D6 E3 F2 
1f393     F4 F0 F4 F6 
1f397     0A 16 03 07 | 	byte	$e5, $ea, $f3, $ef, $dc, $d6, $e3, $f2, $f4, $f0, $f4, $f6, $0a, $16, $03, $07
1f39b     15 03 06 15 
1f39f     22 33 4D 42 
1f3a3     2F 27 22 0F 
1f3a7     0F 17 14 14 | 	byte	$15, $03, $06, $15, $22, $33, $4d, $42, $2f, $27, $22, $0f, $0f, $17, $14, $14
1f3ab     1C 21 12 F6 
1f3af     F3 FE 06 10 
1f3b3     00 E8 DA EE 
1f3b7     F5 DD BD BF | 	byte	$1c, $21, $12, $f6, $f3, $fe, $06, $10, $00, $e8, $da, $ee, $f5, $dd, $bd, $bf
1f3bb     DF 00 12 12 
1f3bf     01 F0 FA FF 
1f3c3     00 10 2C 31 
1f3c7     26 0D E8 D9 | 	byte	$df, $00, $12, $12, $01, $f0, $fa, $ff, $00, $10, $2c, $31, $26, $0d, $e8, $d9
1f3cb     DB E3 EB C7 
1f3cf     C1 CC D3 DD 
1f3d3     D1 CE DB E3 
1f3d7     DE C9 B8 AB | 	byte	$db, $e3, $eb, $c7, $c1, $cc, $d3, $dd, $d1, $ce, $db, $e3, $de, $c9, $b8, $ab
1f3db     A5 B3 C5 B5 
1f3df     B5 C1 CD D4 
1f3e3     D7 E6 F2 E3 
1f3e7     EB F9 03 09 | 	byte	$a5, $b3, $c5, $b5, $b5, $c1, $cd, $d4, $d7, $e6, $f2, $e3, $eb, $f9, $03, $09
1f3eb     1C 20 17 FD 
1f3ef     F2 F4 09 18 
1f3f3     17 1D 22 35 
1f3f7     23 08 06 1E | 	byte	$1c, $20, $17, $fd, $f2, $f4, $09, $18, $17, $1d, $22, $35, $23, $08, $06, $1e
1f3fb     34 31 28 10 
1f3ff     F8 F8 05 17 
1f403     1D 1B 1F 34 
1f407     40 2E 20 29 | 	byte	$34, $31, $28, $10, $f8, $f8, $05, $17, $1d, $1b, $1f, $34, $40, $2e, $20, $29
1f40b     2B 2B 1D 12 
1f40f     0D 03 14 13 
1f413     1B 33 48 50 
1f417     53 55 55 49 | 	byte	$2b, $2b, $1d, $12, $0d, $03, $14, $13, $1b, $33, $48, $50, $53, $55, $55, $49
1f41b     36 39 45 48 
1f41f     3D 46 4B 2A 
1f423     0F 09 12 16 
1f427     12 08 FD EF | 	byte	$36, $39, $45, $48, $3d, $46, $4b, $2a, $0f, $09, $12, $16, $12, $08, $fd, $ef
1f42b     DC DE CD A9 
1f42f     A0 B0 C4 B4 
1f433     8F 8D 9C AA 
1f437     AF B1 BF D6 | 	byte	$dc, $de, $cd, $a9, $a0, $b0, $c4, $b4, $8f, $8d, $9c, $aa, $af, $b1, $bf, $d6
1f43b     DD E0 F4 EF 
1f43f     CA C4 D6 E9 
1f443     02 04 F4 F4 
1f447     F2 E8 E3 EC | 	byte	$dd, $e0, $f4, $ef, $ca, $c4, $d6, $e9, $02, $04, $f4, $f4, $f2, $e8, $e3, $ec
1f44b     EB EB DF DA 
1f44f     E0 DF C7 CF 
1f453     EC 09 1B 18 
1f457     F7 D9 C6 CF | 	byte	$eb, $eb, $df, $da, $e0, $df, $c7, $cf, $ec, $09, $1b, $18, $f7, $d9, $c6, $cf
1f45b     DC EF 0C 0F 
1f45f     EE EB E6 DD 
1f463     E1 E4 F0 04 
1f467     11 0E 1C 25 | 	byte	$dc, $ef, $0c, $0f, $ee, $eb, $e6, $dd, $e1, $e4, $f0, $04, $11, $0e, $1c, $25
1f46b     2A 30 27 2C 
1f46f     2A 29 29 27 
1f473     23 28 23 23 
1f477     32 51 5F 65 | 	byte	$2a, $30, $27, $2c, $2a, $29, $29, $27, $23, $28, $23, $23, $32, $51, $5f, $65
1f47b     51 31 11 FB 
1f47f     EC F6 FE FA 
1f483     FC FC FD 03 
1f487     04 0A 16 0C | 	byte	$51, $31, $11, $fb, $ec, $f6, $fe, $fa, $fc, $fc, $fd, $03, $04, $0a, $16, $0c
1f48b     FB F0 F6 F4 
1f48f     EE DC ED 0C 
1f493     13 0F 1F 24 
1f497     0F E9 F2 0D | 	byte	$fb, $f0, $f6, $f4, $ee, $dc, $ed, $0c, $13, $0f, $1f, $24, $0f, $e9, $f2, $0d
1f49b     1B 17 19 29 
1f49f     31 23 0E 08 
1f4a3     0F 05 F9 F9 
1f4a7     03 18 17 06 | 	byte	$1b, $17, $19, $29, $31, $23, $0e, $08, $0f, $05, $f9, $f9, $03, $18, $17, $06
1f4ab     02 0B 0F 01 
1f4af     E8 F1 E7 D9 
1f4b3     E4 EE ED E0 
1f4b7     E7 F3 07 12 | 	byte	$02, $0b, $0f, $01, $e8, $f1, $e7, $d9, $e4, $ee, $ed, $e0, $e7, $f3, $07, $12
1f4bb     09 13 1E 22 
1f4bf     0F FF 01 13 
1f4c3     1A 0E F5 EC 
1f4c7     EB F3 EC DE | 	byte	$09, $13, $1e, $22, $0f, $ff, $01, $13, $1a, $0e, $f5, $ec, $eb, $f3, $ec, $de
1f4cb     E2 D4 C3 C6 
1f4cf     EB EF D3 C9 
1f4d3     D5 D3 CE B6 
1f4d7     9F 9F B2 BE | 	byte	$e2, $d4, $c3, $c6, $eb, $ef, $d3, $c9, $d5, $d3, $ce, $b6, $9f, $9f, $b2, $be
1f4db     BD C0 DC DC 
1f4df     C9 BF D6 F4 
1f4e3     F2 E5 F3 F8 
1f4e7     FB FC FA FB | 	byte	$bd, $c0, $dc, $dc, $c9, $bf, $d6, $f4, $f2, $e5, $f3, $f8, $fb, $fc, $fa, $fb
1f4eb     03 FA F8 09 
1f4ef     17 13 11 33 
1f4f3     45 42 40 43 
1f4f7     41 35 2F 26 | 	byte	$03, $fa, $f8, $09, $17, $13, $11, $33, $45, $42, $40, $43, $41, $35, $2f, $26
1f4fb     10 FE 0E 1E 
1f4ff     1C 06 0D 19 
1f503     13 11 20 34 
1f507     38 31 1F 19 | 	byte	$10, $fe, $0e, $1e, $1c, $06, $0d, $19, $13, $11, $20, $34, $38, $31, $1f, $19
1f50b     0F FF 04 12 
1f50f     1D 2A 34 47 
1f513     4C 4A 4C 4D 
1f517     45 41 3E 30 | 	byte	$0f, $ff, $04, $12, $1d, $2a, $34, $47, $4c, $4a, $4c, $4d, $45, $41, $3e, $30
1f51b     20 25 2A 22 
1f51f     21 17 0B 01 
1f523     0D 27 2E 20 
1f527     0B F4 E7 D8 | 	byte	$20, $25, $2a, $22, $21, $17, $0b, $01, $0d, $27, $2e, $20, $0b, $f4, $e7, $d8
1f52b     CC BC B0 AB 
1f52f     9E 95 A1 BB 
1f533     C7 B9 B5 CF 
1f537     EA EB ED F3 | 	byte	$cc, $bc, $b0, $ab, $9e, $95, $a1, $bb, $c7, $b9, $b5, $cf, $ea, $eb, $ed, $f3
1f53b     EE DB C2 B6 
1f53f     CD D7 D7 D5 
1f543     DF D5 E0 F2 
1f547     FC 00 F7 F3 | 	byte	$ee, $db, $c2, $b6, $cd, $d7, $d7, $d5, $df, $d5, $e0, $f2, $fc, $00, $f7, $f3
1f54b     E7 EA D9 CB 
1f54f     D2 DC E9 F0 
1f553     EE E9 EF F4 
1f557     F0 ED FD 08 | 	byte	$e7, $ea, $d9, $cb, $d2, $dc, $e9, $f0, $ee, $e9, $ef, $f4, $f0, $ed, $fd, $08
1f55b     0C 0B 15 20 
1f55f     06 E9 D7 E0 
1f563     F3 FD 12 25 
1f567     23 18 14 13 | 	byte	$0c, $0b, $15, $20, $06, $e9, $d7, $e0, $f3, $fd, $12, $25, $23, $18, $14, $13
1f56b     12 17 19 18 
1f56f     1C 1D 13 11 
1f573     2A 3F 40 40 
1f577     44 45 42 3A | 	byte	$12, $17, $19, $18, $1c, $1d, $13, $11, $2a, $3f, $40, $40, $44, $45, $42, $3a
1f57b     2B 16 FE E8 
1f57f     E9 F4 F6 E7 
1f583     D4 DD F0 FD 
1f587     FD F9 E7 EC | 	byte	$2b, $16, $fe, $e8, $e9, $f4, $f6, $e7, $d4, $dd, $f0, $fd, $fd, $f9, $e7, $ec
1f58b     0F 18 19 28 
1f58f     28 19 13 21 
1f593     28 20 16 0A 
1f597     FB FC FD 05 | 	byte	$0f, $18, $19, $28, $28, $19, $13, $21, $28, $20, $16, $0a, $fb, $fc, $fd, $05
1f59b     14 21 33 2B 
1f59f     06 E1 DD FE 
1f5a3     14 1B 0E 04 
1f5a7     F1 F6 01 02 | 	byte	$14, $21, $33, $2b, $06, $e1, $dd, $fe, $14, $1b, $0e, $04, $f1, $f6, $01, $02
1f5ab     F3 E7 E3 F3 
1f5af     F5 E5 E9 FE 
1f5b3     0F 0A 01 03 
1f5b7     FB FD 05 05 | 	byte	$f3, $e7, $e3, $f3, $f5, $e5, $e9, $fe, $0f, $0a, $01, $03, $fb, $fd, $05, $05
1f5bb     EC EA F5 05 
1f5bf     11 11 0B 03 
1f5c3     FB 07 06 FC 
1f5c7     FB F4 F1 E5 | 	byte	$ec, $ea, $f5, $05, $11, $11, $0b, $03, $fb, $07, $06, $fc, $fb, $f4, $f1, $e5
1f5cb     D6 DA EB FC 
1f5cf     FE DD B4 B4 
1f5d3     B0 B4 B1 B5 
1f5d7     C6 D1 BC A6 | 	byte	$d6, $da, $eb, $fc, $fe, $dd, $b4, $b4, $b0, $b4, $b1, $b5, $c6, $d1, $bc, $a6
1f5db     B4 D4 DC D5 
1f5df     E0 E0 E0 F6 
1f5e3     14 16 06 ED 
1f5e7     E9 07 14 F7 | 	byte	$b4, $d4, $dc, $d5, $e0, $e0, $e0, $f6, $14, $16, $06, $ed, $e9, $07, $14, $f7
1f5eb     D1 C9 EA 01 
1f5ef     05 0A 1C 3A 
1f5f3     4A 48 40 49 
1f5f7     50 43 40 42 | 	byte	$d1, $c9, $ea, $01, $05, $0a, $1c, $3a, $4a, $48, $40, $49, $50, $43, $40, $42
1f5fb     32 12 0D 2E 
1f5ff     31 19 01 11 
1f603     2C 2F 1E 0B 
1f607     08 06 0A F4 | 	byte	$32, $12, $0d, $2e, $31, $19, $01, $11, $2c, $2f, $1e, $0b, $08, $06, $0a, $f4
1f60b     01 23 43 37 
1f60f     23 1E 2C 3D 
1f613     3D 3B 42 35 
1f617     2E 49 54 30 | 	byte	$01, $23, $43, $37, $23, $1e, $2c, $3d, $3d, $3b, $42, $35, $2e, $49, $54, $30
1f61b     19 11 1B 2D 
1f61f     24 0B 08 0E 
1f623     0D 14 F4 D3 
1f627     D5 E1 CD BE | 	byte	$19, $11, $1b, $2d, $24, $0b, $08, $0e, $0d, $14, $f4, $d3, $d5, $e1, $cd, $be
1f62b     B9 C7 D0 BE 
1f62f     BD B7 BC D0 
1f633     E9 F6 F9 04 
1f637     05 04 F5 C9 | 	byte	$b9, $c7, $d0, $be, $bd, $b7, $bc, $d0, $e9, $f6, $f9, $04, $05, $04, $f5, $c9
1f63b     AE B1 CD D3 
1f63f     C7 C6 CD C8 
1f643     C6 CF DE E8 
1f647     EC DF CA C8 | 	byte	$ae, $b1, $cd, $d3, $c7, $c6, $cd, $c8, $c6, $cf, $de, $e8, $ec, $df, $ca, $c8
1f64b     EA FE 17 19 
1f64f     0A EA E2 F9 
1f653     17 1B 13 FC 
1f657     E5 EF EF EB | 	byte	$ea, $fe, $17, $19, $0a, $ea, $e2, $f9, $17, $1b, $13, $fc, $e5, $ef, $ef, $eb
1f65b     ED 03 0D 10 
1f65f     FC EE 05 1D 
1f663     2C 1B 0B 10 
1f667     1A 24 0E F7 | 	byte	$ed, $03, $0d, $10, $fc, $ee, $05, $1d, $2c, $1b, $0b, $10, $1a, $24, $0e, $f7
1f66b     06 2A 2A 18 
1f66f     0B 06 17 1E 
1f673     25 34 4A 50 
1f677     3F 33 2B 16 | 	byte	$06, $2a, $2a, $18, $0b, $06, $17, $1e, $25, $34, $4a, $50, $3f, $33, $2b, $16
1f67b     EA DB D9 DC 
1f67f     E7 E5 F4 0C 
1f683     0D FB DE E6 
1f687     FC 04 0A 14 | 	byte	$ea, $db, $d9, $dc, $e7, $e5, $f4, $0c, $0d, $fb, $de, $e6, $fc, $04, $0a, $14
1f68b     17 18 12 01 
1f68f     F2 F3 16 28 
1f693     22 13 05 06 
1f697     1B 25 05 FD | 	byte	$17, $18, $12, $01, $f2, $f3, $16, $28, $22, $13, $05, $06, $1b, $25, $05, $fd
1f69b     02 0D 0F 11 
1f69f     1C 1E 22 1C 
1f6a3     0E FF EF EB 
1f6a7     F7 05 02 F9 | 	byte	$02, $0d, $0f, $11, $1c, $1e, $22, $1c, $0e, $ff, $ef, $eb, $f7, $05, $02, $f9
1f6ab     E7 DB D7 E4 
1f6af     D0 D6 ED ED 
1f6b3     E4 F9 20 31 
1f6b7     2E 2E 21 03 | 	byte	$e7, $db, $d7, $e4, $d0, $d6, $ed, $ed, $e4, $f9, $20, $31, $2e, $2e, $21, $03
1f6bb     F5 06 19 18 
1f6bf     F6 E7 E7 E3 
1f6c3     D0 D3 DC E0 
1f6c7     E3 F1 EF E2 | 	byte	$f5, $06, $19, $18, $f6, $e7, $e7, $e3, $d0, $d3, $dc, $e0, $e3, $f1, $ef, $e2
1f6cb     D9 F0 F1 D5 
1f6cf     BB BC D3 D0 
1f6d3     D2 E0 E3 D9 
1f6d7     C9 BB B8 C7 | 	byte	$d9, $f0, $f1, $d5, $bb, $bc, $d3, $d0, $d2, $e0, $e3, $d9, $c9, $bb, $b8, $c7
1f6db     DF EF FA F6 
1f6df     E4 EA EC F2 
1f6e3     E3 CC C5 C2 
1f6e7     C7 CA DF 01 | 	byte	$df, $ef, $fa, $f6, $e4, $ea, $ec, $f2, $e3, $cc, $c5, $c2, $c7, $ca, $df, $01
1f6eb     1E 2C 20 0B 
1f6ef     05 1B 26 33 
1f6f3     47 60 64 58 
1f6f7     48 2D 1F 12 | 	byte	$1e, $2c, $20, $0b, $05, $1b, $26, $33, $47, $60, $64, $58, $48, $2d, $1f, $12
1f6fb     1A 37 4D 37 
1f6ff     15 02 0D 11 
1f703     FA F5 FC 10 
1f707     13 17 19 23 | 	byte	$1a, $37, $4d, $37, $15, $02, $0d, $11, $fa, $f5, $fc, $10, $13, $17, $19, $23
1f70b     25 22 24 31 
1f70f     45 56 5E 58 
1f713     44 3A 28 29 
1f717     1D F7 F2 FF | 	byte	$25, $22, $24, $31, $45, $56, $5e, $58, $44, $3a, $28, $29, $1d, $f7, $f2, $ff
1f71b     FC FC FA 02 
1f71f     35 51 50 2A 
1f723     F5 D4 C7 C2 
1f727     D8 E1 D8 D1 | 	byte	$fc, $fc, $fa, $02, $35, $51, $50, $2a, $f5, $d4, $c7, $c2, $d8, $e1, $d8, $d1
1f72b     D8 C3 9D 8E 
1f72f     A1 CB EF F5 
1f733     F8 FB 03 F8 
1f737     DE CA BD D3 | 	byte	$d8, $c3, $9d, $8e, $a1, $cb, $ef, $f5, $f8, $fb, $03, $f8, $de, $ca, $bd, $d3
1f73b     DA DF E5 DE 
1f73f     DD D4 D8 D2 
1f743     CC D0 E1 F2 
1f747     05 F7 DB CB | 	byte	$da, $df, $e5, $de, $dd, $d4, $d8, $d2, $cc, $d0, $e1, $f2, $05, $f7, $db, $cb
1f74b     D0 E0 D6 D8 
1f74f     E3 F5 F8 FF 
1f753     0C 20 39 36 
1f757     13 FA 04 0E | 	byte	$d0, $e0, $d6, $d8, $e3, $f5, $f8, $ff, $0c, $20, $39, $36, $13, $fa, $04, $0e
1f75b     08 00 01 04 
1f75f     12 30 38 1D 
1f763     F8 F4 00 10 
1f767     21 23 1C 13 | 	byte	$08, $00, $01, $04, $12, $30, $38, $1d, $f8, $f4, $00, $10, $21, $23, $1c, $13
1f76b     EC CF C7 D8 
1f76f     10 29 40 4C 
1f773     60 64 60 53 
1f777     3D 1C 0B 07 | 	byte	$ec, $cf, $c7, $d8, $10, $29, $40, $4c, $60, $64, $60, $53, $3d, $1c, $0b, $07
1f77b     0E 11 FB DF 
1f77f     D3 F2 FB D4 
1f783     C1 C2 CD CC 
1f787     DA 01 25 37 | 	byte	$0e, $11, $fb, $df, $d3, $f2, $fb, $d4, $c1, $c2, $cd, $cc, $da, $01, $25, $37
1f78b     1C FA FD 21 
1f78f     29 18 1B 27 
1f793     26 2E 2E 26 
1f797     18 0F 05 0C | 	byte	$1c, $fa, $fd, $21, $29, $18, $1b, $27, $26, $2e, $2e, $26, $18, $0f, $05, $0c
1f79b     17 08 F7 05 
1f79f     20 1E 06 DF 
1f7a3     E3 E8 FF 23 
1f7a7     35 23 1A 14 | 	byte	$17, $08, $f7, $05, $20, $1e, $06, $df, $e3, $e8, $ff, $23, $35, $23, $1a, $14
1f7ab     F5 CC AF BF 
1f7af     F1 05 05 06 
1f7b3     0F 11 1B 17 
1f7b7     08 0B 00 E9 | 	byte	$f5, $cc, $af, $bf, $f1, $05, $05, $06, $0f, $11, $1b, $17, $08, $0b, $00, $e9
1f7bb     D7 E3 E8 F4 
1f7bf     F7 F2 F0 D9 
1f7c3     D4 DD EB E9 
1f7c7     F0 E8 F2 F7 | 	byte	$d7, $e3, $e8, $f4, $f7, $f2, $f0, $d9, $d4, $dd, $eb, $e9, $f0, $e8, $f2, $f7
1f7cb     E6 D9 D7 D7 
1f7cf     DA D7 CF BB 
1f7d3     BD BD B9 BC 
1f7d7     CF DC CC DF | 	byte	$e6, $d9, $d7, $d7, $da, $d7, $cf, $bb, $bd, $bd, $b9, $bc, $cf, $dc, $cc, $df
1f7db     01 08 FA FB 
1f7df     02 FA EF C0 
1f7e3     B1 BF E9 FE 
1f7e7     0F 0B 0A F5 | 	byte	$01, $08, $fa, $fb, $02, $fa, $ef, $c0, $b1, $bf, $e9, $fe, $0f, $0b, $0a, $f5
1f7eb     DF D7 E0 E2 
1f7ef     E6 01 26 44 
1f7f3     52 60 58 53 
1f7f7     59 56 3B 31 | 	byte	$df, $d7, $e0, $e2, $e6, $01, $26, $44, $52, $60, $58, $53, $59, $56, $3b, $31
1f7fb     44 52 3A 28 
1f7ff     25 49 59 2A 
1f803     FB E2 E5 F8 
1f807     FD F7 04 FE | 	byte	$44, $52, $3a, $28, $25, $49, $59, $2a, $fb, $e2, $e5, $f8, $fd, $f7, $04, $fe
1f80b     FB 08 28 42 
1f80f     5B 64 65 53 
1f813     40 1F 08 F8 
1f817     05 11 08 0D | 	byte	$fb, $08, $28, $42, $5b, $64, $65, $53, $40, $1f, $08, $f8, $05, $11, $08, $0d
1f81b     12 36 24 1A 
1f81f     25 26 0E DE 
1f823     BB B5 BC CA 
1f827     C9 C5 C8 C5 | 	byte	$12, $36, $24, $1a, $25, $26, $0e, $de, $bb, $b5, $bc, $ca, $c9, $c5, $c8, $c5
1f82b     BB B0 B2 B8 
1f82f     C7 EE 0A 0A 
1f833     06 FC 02 1B 
1f837     22 EF C1 B3 | 	byte	$bb, $b0, $b2, $b8, $c7, $ee, $0a, $0a, $06, $fc, $02, $1b, $22, $ef, $c1, $b3
1f83b     B0 AD B6 C4 
1f83f     D7 E6 E3 CE 
1f843     B8 C8 DE F4 
1f847     F2 F9 F3 D7 | 	byte	$b0, $ad, $b6, $c4, $d7, $e6, $e3, $ce, $b8, $c8, $de, $f4, $f2, $f9, $f3, $d7
1f84b     BE BD DC F8 
1f84f     1C 2D 34 15 
1f853     0D 13 1F 21 
1f857     17 05 F8 F9 | 	byte	$be, $bd, $dc, $f8, $1c, $2d, $34, $15, $0d, $13, $1f, $21, $17, $05, $f8, $f9
1f85b     F5 F0 E1 E9 
1f85f     0C 27 29 1F 
1f863     0F 15 34 38 
1f867     2C 15 0D 06 | 	byte	$f5, $f0, $e1, $e9, $0c, $27, $29, $1f, $0f, $15, $34, $38, $2c, $15, $0d, $06
1f86b     FD EC E4 E6 
1f86f     06 18 1E 1E 
1f873     2E 41 47 42 
1f877     2F 14 FB 01 | 	byte	$fd, $ec, $e4, $e6, $06, $18, $1e, $1e, $2e, $41, $47, $42, $2f, $14, $fb, $01
1f87b     1C 0B FB F8 
1f87f     0A 0B E0 C5 
1f883     C2 D3 EC 0C 
1f887     1C 0B E4 EC | 	byte	$1c, $0b, $fb, $f8, $0a, $0b, $e0, $c5, $c2, $d3, $ec, $0c, $1c, $0b, $e4, $ec
1f88b     FB 10 1A 1F 
1f88f     19 0E 09 03 
1f893     F9 FE 24 3E 
1f897     3C 28 29 2A | 	byte	$fb, $10, $1a, $1f, $19, $0e, $09, $03, $f9, $fe, $24, $3e, $3c, $28, $29, $2a
1f89b     13 0B 18 3D 
1f89f     55 44 1D FC 
1f8a3     F3 EE EF F2 
1f8a7     F3 06 F2 E1 | 	byte	$13, $0b, $18, $3d, $55, $44, $1d, $fc, $f3, $ee, $ef, $f2, $f3, $06, $f2, $e1
1f8ab     D4 D0 C7 D9 
1f8af     FD 1E 1F 1A 
1f8b3     0B 04 12 16 
1f8b7     14 0B 05 04 | 	byte	$d4, $d0, $c7, $d9, $fd, $1e, $1f, $1a, $0b, $04, $12, $16, $14, $0b, $05, $04
1f8bb     EC DF EB 03 
1f8bf     07 F9 DC D2 
1f8c3     BC B6 BB C6 
1f8c7     C1 BF C4 D5 | 	byte	$ec, $df, $eb, $03, $07, $f9, $dc, $d2, $bc, $b6, $bb, $c6, $c1, $bf, $c4, $d5
1f8cb     E6 EF EC F8 
1f8cf     F8 F1 E3 DC 
1f8d3     FE 06 FB EF 
1f8d7     E7 DF E6 D5 | 	byte	$e6, $ef, $ec, $f8, $f8, $f1, $e3, $dc, $fe, $06, $fb, $ef, $e7, $df, $e6, $d5
1f8db     BB B5 C6 CF 
1f8df     D9 E1 E8 DE 
1f8e3     D9 EB 00 01 
1f8e7     02 F8 EB E9 | 	byte	$bb, $b5, $c6, $cf, $d9, $e1, $e8, $de, $d9, $eb, $00, $01, $02, $f8, $eb, $e9
1f8eb     E0 DF FC 27 
1f8ef     2C 1B 1F 38 
1f8f3     53 65 65 5B 
1f8f7     31 22 34 3F | 	byte	$e0, $df, $fc, $27, $2c, $1b, $1f, $38, $53, $65, $65, $5b, $31, $22, $34, $3f
1f8fb     34 2F 2A 33 
1f8ff     3E 43 28 13 
1f903     0E 18 1E 21 
1f907     22 17 0F 14 | 	byte	$34, $2f, $2a, $33, $3e, $43, $28, $13, $0e, $18, $1e, $21, $22, $17, $0f, $14
1f90b     28 35 42 49 
1f90f     42 2D 0F FA 
1f913     F0 F8 0A 24 
1f917     25 1A 0C FC | 	byte	$28, $35, $42, $49, $42, $2d, $0f, $fa, $f0, $f8, $0a, $24, $25, $1a, $0c, $fc
1f91b     01 09 12 25 
1f91f     2B 18 FE DC 
1f923     DC D9 CA BD 
1f927     B9 C5 D0 D1 | 	byte	$01, $09, $12, $25, $2b, $18, $fe, $dc, $dc, $d9, $ca, $bd, $b9, $c5, $d0, $d1
1f92b     BB AA A6 BA 
1f92f     DD ED ED DF 
1f933     D3 D8 E9 FB 
1f937     EF EF EC EC | 	byte	$bb, $aa, $a6, $ba, $dd, $ed, $ed, $df, $d3, $d8, $e9, $fb, $ef, $ef, $ec, $ec
1f93b     F4 FE 05 07 
1f93f     03 EA D6 D1 
1f943     C9 BF B3 BD 
1f947     BA AA A9 BE | 	byte	$f4, $fe, $05, $07, $03, $ea, $d6, $d1, $c9, $bf, $b3, $bd, $ba, $aa, $a9, $be
1f94b     DA F2 05 13 
1f94f     1D 2F 3A 29 
1f953     1A 2A 2B 28 
1f957     21 1D 14 06 | 	byte	$da, $f2, $05, $13, $1d, $2f, $3a, $29, $1a, $2a, $2b, $28, $21, $1d, $14, $06
1f95b     E2 D3 E9 14 
1f95f     23 12 10 10 
1f963     1C 02 F2 F1 
1f967     EA CA C2 DC | 	byte	$e2, $d3, $e9, $14, $23, $12, $10, $10, $1c, $02, $f2, $f1, $ea, $ca, $c2, $dc
1f96b     F3 04 14 25 
1f96f     32 3A 4D 60 
1f973     64 64 3E 17 
1f977     FF 01 08 00 | 	byte	$f3, $04, $14, $25, $32, $3a, $4d, $60, $64, $64, $3e, $17, $ff, $01, $08, $00
1f97b     F6 EC D3 D9 
1f97f     F0 F1 FB F8 
1f983     EA DD E6 F3 
1f987     EC EE FA 07 | 	byte	$f6, $ec, $d3, $d9, $f0, $f1, $fb, $f8, $ea, $dd, $e6, $f3, $ec, $ee, $fa, $07
1f98b     0F 21 29 1F 
1f98f     1C 18 1A 17 
1f993     1E 2C 37 36 
1f997     2E 14 FD FC | 	byte	$0f, $21, $29, $1f, $1c, $18, $1a, $17, $1e, $2c, $37, $36, $2e, $14, $fd, $fc
1f99b     EE E5 F5 0F 
1f99f     11 FD 06 1D 
1f9a3     2E 2A 35 42 
1f9a7     33 15 FC EA | 	byte	$ee, $e5, $f5, $0f, $11, $fd, $06, $1d, $2e, $2a, $35, $42, $33, $15, $fc, $ea
1f9ab     D5 D1 E2 ED 
1f9af     0E 13 F8 D6 
1f9b3     DE FA FD F8 
1f9b7     0D 14 FF F2 | 	byte	$d5, $d1, $e2, $ed, $0e, $13, $f8, $d6, $de, $fa, $fd, $f8, $0d, $14, $ff, $f2
1f9bb     ED DE D8 DA 
1f9bf     EB 00 FD DD 
1f9c3     B9 A8 C4 D4 
1f9c7     C3 BD D0 E3 | 	byte	$ed, $de, $d8, $da, $eb, $00, $fd, $dd, $b9, $a8, $c4, $d4, $c3, $bd, $d0, $e3
1f9cb     E3 E3 DC DB 
1f9cf     D7 CB C1 CA 
1f9d3     E0 F1 EF F5 
1f9d7     0E 0B F2 F6 | 	byte	$e3, $e3, $dc, $db, $d7, $cb, $c1, $ca, $e0, $f1, $ef, $f5, $0e, $0b, $f2, $f6
1f9db     09 01 F7 E8 
1f9df     E3 E9 E8 D1 
1f9e3     CB DB E9 D6 
1f9e7     C3 CB EC 05 | 	byte	$09, $01, $f7, $e8, $e3, $e9, $e8, $d1, $cb, $db, $e9, $d6, $c3, $cb, $ec, $05
1f9eb     0C 0D 13 0C 
1f9ef     11 0F 23 43 
1f9f3     51 4E 45 4E 
1f9f7     57 54 4F 5E | 	byte	$0c, $0d, $13, $0c, $11, $0f, $23, $43, $51, $4e, $45, $4e, $57, $54, $4f, $5e
1f9fb     65 56 39 3C 
1f9ff     3D 36 2E 1C 
1fa03     0E FF F9 EB 
1fa07     DF F7 16 27 | 	byte	$65, $56, $39, $3c, $3d, $36, $2e, $1c, $0e, $ff, $f9, $eb, $df, $f7, $16, $27
1fa0b     20 37 50 5A 
1fa0f     5B 42 2D 1E 
1fa13     24 28 1E 23 
1fa17     0F ED E3 E3 | 	byte	$20, $37, $50, $5a, $5b, $42, $2d, $1e, $24, $28, $1e, $23, $0f, $ed, $e3, $e3
1fa1b     E1 DD F3 02 
1fa1f     06 FE F0 DF 
1fa23     DB CC A8 87 
1fa27     93 B1 CE D9 | 	byte	$e1, $dd, $f3, $02, $06, $fe, $f0, $df, $db, $cc, $a8, $87, $93, $b1, $ce, $d9
1fa2b     CF E4 EC EE 
1fa2f     F2 F5 05 00 
1fa33     F9 EF DE E6 
1fa37     E9 E2 DF D5 | 	byte	$cf, $e4, $ec, $ee, $f2, $f5, $05, $00, $f9, $ef, $de, $e6, $e9, $e2, $df, $d5
1fa3b     D6 C6 DB 07 
1fa3f     18 F9 D0 C3 
1fa43     D8 DD E5 DC 
1fa47     CA C5 D7 E8 | 	byte	$d6, $c6, $db, $07, $18, $f9, $d0, $c3, $d8, $dd, $e5, $dc, $ca, $c5, $d7, $e8
1fa4b     F3 FD 09 10 
1fa4f     12 04 07 1C 
1fa53     25 24 21 2A 
1fa57     14 17 01 DB | 	byte	$f3, $fd, $09, $10, $12, $04, $07, $1c, $25, $24, $21, $2a, $14, $17, $01, $db
1fa5b     C5 CE EA 08 
1fa5f     0E 1B 17 09 
1fa63     09 07 F3 F0 
1fa67     F9 F9 08 07 | 	byte	$c5, $ce, $ea, $08, $0e, $1b, $17, $09, $09, $07, $f3, $f0, $f9, $f9, $08, $07
1fa6b     F3 FD FE FF 
1fa6f     F9 0E 34 44 
1fa73     4F 3B 2E 2B 
1fa77     21 21 29 2A | 	byte	$f3, $fd, $fe, $ff, $f9, $0e, $34, $44, $4f, $3b, $2e, $2b, $21, $21, $29, $2a
1fa7b     13 EC F6 02 
1fa7f     06 04 FE F4 
1fa83     E4 D4 C0 C2 
1fa87     DC FE 0A 00 | 	byte	$13, $ec, $f6, $02, $06, $04, $fe, $f4, $e4, $d4, $c0, $c2, $dc, $fe, $0a, $00
1fa8b     12 1A 0C 00 
1fa8f     EC EE 0E 2A 
1fa93     36 3B 4C 38 
1fa97     1C 20 0E 11 | 	byte	$12, $1a, $0c, $00, $ec, $ee, $0e, $2a, $36, $3b, $4c, $38, $1c, $20, $0e, $11
1fa9b     0F 17 1C 1C 
1fa9f     08 00 0B 0F 
1faa3     05 E9 E8 06 
1faa7     08 02 FE ED | 	byte	$0f, $17, $1c, $1c, $08, $00, $0b, $0f, $05, $e9, $e8, $06, $08, $02, $fe, $ed
1faab     DE F1 11 1F 
1faaf     14 00 08 12 
1fab3     11 F5 F5 FF 
1fab7     0C 06 FB DC | 	byte	$de, $f1, $11, $1f, $14, $00, $08, $12, $11, $f5, $f5, $ff, $0c, $06, $fb, $dc
1fabb     D0 D8 EF ED 
1fabf     DC D5 C0 AA 
1fac3     97 93 92 89 
1fac7     AC E1 FA F4 | 	byte	$d0, $d8, $ef, $ed, $dc, $d5, $c0, $aa, $97, $93, $92, $89, $ac, $e1, $fa, $f4
1facb     EB F8 FE E6 
1facf     D7 F6 12 11 
1fad3     00 02 0D 04 
1fad7     FB E7 CA C7 | 	byte	$eb, $f8, $fe, $e6, $d7, $f6, $12, $11, $00, $02, $0d, $04, $fb, $e7, $ca, $c7
1fadb     D8 E9 FE FC 
1fadf     EE CB A6 BF 
1fae3     E8 E9 DC E9 
1fae7     12 2D 09 EA | 	byte	$d8, $e9, $fe, $fc, $ee, $cb, $a6, $bf, $e8, $e9, $dc, $e9, $12, $2d, $09, $ea
1faeb     04 18 25 1C 
1faef     22 37 49 4D 
1faf3     4B 4B 47 3D 
1faf7     34 2D 37 4D | 	byte	$04, $18, $25, $1c, $22, $37, $49, $4d, $4b, $4b, $47, $3d, $34, $2d, $37, $4d
1fafb     42 2E 3F 47 
1faff     2E 1B 2C 3F 
1fb03     35 09 F5 FC 
1fb07     1A 33 44 4B | 	byte	$42, $2e, $3f, $47, $2e, $1b, $2c, $3f, $35, $09, $f5, $fc, $1a, $33, $44, $4b
1fb0b     38 20 08 04 
1fb0f     10 26 39 37 
1fb13     24 11 F7 DF 
1fb17     D3 F3 FE EB | 	byte	$38, $20, $08, $04, $10, $26, $39, $37, $24, $11, $f7, $df, $d3, $f3, $fe, $eb
1fb1b     F4 0C 12 FA 
1fb1f     ED E6 E3 DC 
1fb23     C6 C1 CC C9 
1fb27     BB BB C8 CB | 	byte	$f4, $0c, $12, $fa, $ed, $e6, $e3, $dc, $c6, $c1, $cc, $c9, $bb, $bb, $c8, $cb
1fb2b     D4 D2 C9 BE 
1fb2f     CA D9 E8 EA 
1fb33     03 0D F2 F1 
1fb37     F9 F0 F7 FA | 	byte	$d4, $d2, $c9, $be, $ca, $d9, $e8, $ea, $03, $0d, $f2, $f1, $f9, $f0, $f7, $fa
1fb3b     F5 0F 20 2C 
1fb3f     1F FA DA BC 
1fb43     B4 B2 C4 DF 
1fb47     EA DC E6 F1 | 	byte	$f5, $0f, $20, $2c, $1f, $fa, $da, $bc, $b4, $b2, $c4, $df, $ea, $dc, $e6, $f1
1fb4b     E9 D3 E0 08 
1fb4f     33 4C 4B 3B 
1fb53     28 0F FF 07 
1fb57     27 28 19 0C | 	byte	$e9, $d3, $e0, $08, $33, $4c, $4b, $3b, $28, $0f, $ff, $07, $27, $28, $19, $0c
1fb5b     07 0B 0A 15 
1fb5f     FF DF C8 C5 
1fb63     C5 D8 EE FC 
1fb67     D7 CB E7 0B | 	byte	$07, $0b, $0a, $15, $ff, $df, $c8, $c5, $c5, $d8, $ee, $fc, $d7, $cb, $e7, $0b
1fb6b     13 0F 14 18 
1fb6f     20 29 45 62 
1fb73     64 64 57 2F 
1fb77     17 17 1E 16 | 	byte	$13, $0f, $14, $18, $20, $29, $45, $62, $64, $64, $57, $2f, $17, $17, $1e, $16
1fb7b     21 0E F0 E3 
1fb7f     F3 F4 F3 EF 
1fb83     DF D5 D7 ED 
1fb87     FA 05 0E FF | 	byte	$21, $0e, $f0, $e3, $f3, $f4, $f3, $ef, $df, $d5, $d7, $ed, $fa, $05, $0e, $ff
1fb8b     F0 F6 0B 14 
1fb8f     33 50 47 3E 
1fb93     3C 2E 1A FA 
1fb97     F3 EE ED FD | 	byte	$f0, $f6, $0b, $14, $33, $50, $47, $3e, $3c, $2e, $1a, $fa, $f3, $ee, $ed, $fd
1fb9b     FC F2 F7 11 
1fb9f     13 F2 DF EC 
1fba3     03 03 04 1A 
1fba7     22 27 1B 1E | 	byte	$fc, $f2, $f7, $11, $13, $f2, $df, $ec, $03, $03, $04, $1a, $22, $27, $1b, $1e
1fbab     0E 01 00 FD 
1fbaf     12 18 0F 0C 
1fbb3     08 04 F2 E1 
1fbb7     E7 F0 F7 E9 | 	byte	$0e, $01, $00, $fd, $12, $18, $0f, $0c, $08, $04, $f2, $e1, $e7, $f0, $f7, $e9
1fbbb     CB B7 BA CF 
1fbbf     BC A6 A8 A6 
1fbc3     AD AB CF EB 
1fbc7     FA 03 EA C9 | 	byte	$cb, $b7, $ba, $cf, $bc, $a6, $a8, $a6, $ad, $ab, $cf, $eb, $fa, $03, $ea, $c9
1fbcb     B1 BB C3 D4 
1fbcf     F3 F9 E5 E8 
1fbd3     F3 00 FB F1 
1fbd7     FB 06 FF E9 | 	byte	$b1, $bb, $c3, $d4, $f3, $f9, $e5, $e8, $f3, $00, $fb, $f1, $fb, $06, $ff, $e9
1fbdb     ED 08 13 07 
1fbdf     ED E1 E2 DC 
1fbe3     F2 04 08 F0 
1fbe7     DE F6 10 24 | 	byte	$ed, $08, $13, $07, $ed, $e1, $e2, $dc, $f2, $04, $08, $f0, $de, $f6, $10, $24
1fbeb     2B 34 1F 0D 
1fbef     0D 15 1C 43 
1fbf3     58 40 27 2F 
1fbf7     34 4B 55 58 | 	byte	$2b, $34, $1f, $0d, $0d, $15, $1c, $43, $58, $40, $27, $2f, $34, $4b, $55, $58
1fbfb     63 5C 40 36 
1fbff     1F 0D 05 F0 
1fc03     EF EF F6 0D 
1fc07     30 30 1E 0A | 	byte	$63, $5c, $40, $36, $1f, $0d, $05, $f0, $ef, $ef, $f6, $0d, $30, $30, $1e, $0a
1fc0b     F6 F2 14 35 
1fc0f     4A 3A 16 10 
1fc13     11 07 FB 08 
1fc17     11 10 07 E8 | 	byte	$f6, $f2, $14, $35, $4a, $3a, $16, $10, $11, $07, $fb, $08, $11, $10, $07, $e8
1fc1b     EA EB EB E0 
1fc1f     DB F7 FD CF 
1fc23     A4 A0 A7 A8 
1fc27     AC C7 E1 E4 | 	byte	$ea, $eb, $eb, $e0, $db, $f7, $fd, $cf, $a4, $a0, $a7, $a8, $ac, $c7, $e1, $e4
1fc2b     D3 D0 D7 DE 
1fc2f     ED 0E 22 19 
1fc33     02 DD D8 DD 
1fc37     D6 F3 F4 E8 | 	byte	$d3, $d0, $d7, $de, $ed, $0e, $22, $19, $02, $dd, $d8, $dd, $d6, $f3, $f4, $e8
1fc3b     F2 FA E9 E2 
1fc3f     E8 DD DC C9 
1fc43     C9 DA FE 20 
1fc47     24 0A EC D7 | 	byte	$f2, $fa, $e9, $e2, $e8, $dd, $dc, $c9, $c9, $da, $fe, $20, $24, $0a, $ec, $d7
1fc4b     F3 1A 27 27 
1fc4f     23 15 06 07 
1fc53     21 29 39 3C 
1fc57     15 F9 E2 E2 | 	byte	$f3, $1a, $27, $27, $23, $15, $06, $07, $21, $29, $39, $3c, $15, $f9, $e2, $e2
1fc5b     EB E3 E2 EE 
1fc5f     FA DF D1 E0 
1fc63     F0 F6 E8 F4 
1fc67     FB F4 F5 FC | 	byte	$eb, $e3, $e2, $ee, $fa, $df, $d1, $e0, $f0, $f6, $e8, $f4, $fb, $f4, $f5, $fc
1fc6b     FE 09 07 FD 
1fc6f     0A 3A 58 44 
1fc73     28 1B 2D 3F 
1fc77     38 26 30 37 | 	byte	$fe, $09, $07, $fd, $0a, $3a, $58, $44, $28, $1b, $2d, $3f, $38, $26, $30, $37
1fc7b     25 1A 15 1D 
1fc7f     11 0D 1E 03 
1fc83     E4 DB E7 E9 
1fc87     06 09 0E 06 | 	byte	$25, $1a, $15, $1d, $11, $0d, $1e, $03, $e4, $db, $e7, $e9, $06, $09, $0e, $06
1fc8b     0B 0F 09 06 
1fc8f     09 05 03 08 
1fc93     1E 28 1A 13 
1fc97     20 1D 13 0E | 	byte	$0b, $0f, $09, $06, $09, $05, $03, $08, $1e, $28, $1a, $13, $20, $1d, $13, $0e
1fc9b     19 19 0B FD 
1fc9f     F4 E8 E8 E1 
1fca3     DD EC F9 11 
1fca7     0C F8 E9 F9 | 	byte	$19, $19, $0b, $fd, $f4, $e8, $e8, $e1, $dd, $ec, $f9, $11, $0c, $f8, $e9, $f9
1fcab     06 13 0C 17 
1fcaf     2F 25 11 13 
1fcb3     14 0A FD 00 
1fcb7     00 00 00 03 | 	byte	$06, $13, $0c, $17, $2f, $25, $11, $13, $14, $0a, $fd, $00, $00, $00, $00, $03
1fcbb     EE ED EC BF 
1fcbf     C7 B1 A8 C7 
1fcc3     E0 21 14 3A 
1fcc7     61 30 3A 0D | 	byte	$ee, $ed, $ec, $bf, $c7, $b1, $a8, $c7, $e0, $21, $14, $3a, $61, $30, $3a, $0d
1fccb     22 00 F3 0D 
1fccf     26 33 F8 1F 
1fcd3     09 00 1B FF 
1fcd7     F3 D2 F6 F5 | 	byte	$22, $00, $f3, $0d, $26, $33, $f8, $1f, $09, $00, $1b, $ff, $f3, $d2, $f6, $f5
1fcdb     DE F5 DA C4 
1fcdf     B6 B7 B1 CA 
1fce3     E9 2B 27 4D 
1fce7     66 37 35 0E | 	byte	$de, $f5, $da, $c4, $b6, $b7, $b1, $ca, $e9, $2b, $27, $4d, $66, $37, $35, $0e
1fceb     01 F8 E7 12 
1fcef     31 25 02 16 
1fcf3     0C FE 24 0D 
1fcf7     E6 D8 F3 E1 | 	byte	$01, $f8, $e7, $12, $31, $25, $02, $16, $0c, $fe, $24, $0d, $e6, $d8, $f3, $e1
1fcfb     EB DA D0 BC 
1fcff     AE D6 BB C5 
1fd03     FC 26 43 57 
1fd07     6A 39 15 1B | 	byte	$eb, $da, $d0, $bc, $ae, $d6, $bb, $c5, $fc, $26, $43, $57, $6a, $39, $15, $1b
1fd0b     EF FA EA 13 
1fd0f     44 0F 01 1B 
1fd13     12 06 1A 14 
1fd17     D2 E4 0B D8 | 	byte	$ef, $fa, $ea, $13, $44, $0f, $01, $1b, $12, $06, $1a, $14, $d2, $e4, $0b, $d8
1fd1b     DC DC D1 BB 
1fd1f     A9 E1 CC CC 
1fd23     06 26 61 54 
1fd27     53 41 03 12 | 	byte	$dc, $dc, $d1, $bb, $a9, $e1, $cc, $cc, $06, $26, $61, $54, $53, $41, $03, $12
1fd2b     FF DA EC 17 
1fd2f     3B 04 06 2C 
1fd33     10 0E 10 11 
1fd37     CF D7 00 E0 | 	byte	$ff, $da, $ec, $17, $3b, $04, $06, $2c, $10, $0e, $10, $11, $cf, $d7, $00, $e0
1fd3b     D7 DB D1 C7 
1fd3f     C3 DC C4 D7 
1fd43     14 41 6F 48 
1fd47     43 32 07 FD | 	byte	$d7, $db, $d1, $c7, $c3, $dc, $c4, $d7, $14, $41, $6f, $48, $43, $32, $07, $fd
1fd4b     EF E9 ED 18 
1fd4f     2A E1 08 12 
1fd53     1A 12 14 06 
1fd57     C2 EA E6 D6 | 	byte	$ef, $e9, $ed, $18, $2a, $e1, $08, $12, $1a, $12, $14, $06, $c2, $ea, $e6, $d6
1fd5b     D2 C9 D9 DC 
1fd5f     D7 D9 C9 E6 
1fd63     36 5A 6C 4C 
1fd67     3D 2C F1 02 | 	byte	$d2, $c9, $d9, $dc, $d7, $d9, $c9, $e6, $36, $5a, $6c, $4c, $3d, $2c, $f1, $02
1fd6b     E7 E4 F1 1C 
1fd6f     14 EC 19 19 
1fd73     22 20 0F F5 
1fd77     CF EB DC C8 | 	byte	$e7, $e4, $f1, $1c, $14, $ec, $19, $19, $22, $20, $0f, $f5, $cf, $eb, $dc, $c8
1fd7b     B9 C1 E7 D4 
1fd7f     E3 C6 D1 FF 
1fd83     40 67 5F 56 
1fd87     45 23 F7 E8 | 	byte	$b9, $c1, $e7, $d4, $e3, $c6, $d1, $ff, $40, $67, $5f, $56, $45, $23, $f7, $e8
1fd8b     F5 E1 EB 21 
1fd8f     00 F3 13 1D 
1fd93     1E 27 10 E6 
1fd97     DB E0 D7 C8 | 	byte	$f5, $e1, $eb, $21, $00, $f3, $13, $1d, $1e, $27, $10, $e6, $db, $e0, $d7, $c8
1fd9b     B3 D1 E8 DD 
1fd9f     DA D2 DA 1B 
1fda3     53 75 5E 45 
1fda7     43 10 EB DE | 	byte	$b3, $d1, $e8, $dd, $da, $d2, $da, $1b, $53, $75, $5e, $45, $43, $10, $eb, $de
1fdab     F9 D6 F8 19 
1fdaf     01 FA 16 2E 
1fdb3     27 2A 00 E2 
1fdb7     E4 DA D2 B5 | 	byte	$f9, $d6, $f8, $19, $01, $fa, $16, $2e, $27, $2a, $00, $e2, $e4, $da, $d2, $b5
1fdbb     B6 DF F1 DA 
1fdbf     DB E4 EC 23 
1fdc3     5D 7F 5C 30 
1fdc7     2F EE E9 EF | 	byte	$b6, $df, $f1, $da, $db, $e4, $ec, $23, $5d, $7f, $5c, $30, $2f, $ee, $e9, $ef
1fdcb     E9 E0 EB 1D 
1fdcf     EE F4 1B 35 
1fdd3     33 0C 08 E9 
1fdd7     DA D0 BC B6 | 	byte	$e9, $e0, $eb, $1d, $ee, $f4, $1b, $35, $33, $0c, $08, $e9, $da, $d0, $bc, $b6
1fddb     C9 EB F2 D4 
1fddf     D1 EB FF 3C 
1fde3     61 7D 5A 27 
1fde7     26 ED E4 E6 | 	byte	$c9, $eb, $f2, $d4, $d1, $eb, $ff, $3c, $61, $7d, $5a, $27, $26, $ed, $e4, $e6
1fdeb     DD E1 FD 0D 
1fdef     EF FA 2C 30 
1fdf3     29 1C 0A D8 
1fdf7     DB B6 BB B5 | 	byte	$dd, $e1, $fd, $0d, $ef, $fa, $2c, $30, $29, $1c, $0a, $d8, $db, $b6, $bb, $b5
1fdfb     D1 FB E5 D3 
1fdff     D0 ED 10 43 
1fe03     7F 7B 42 32 
1fe07     0E E1 E2 DF | 	byte	$d1, $fb, $e5, $d3, $d0, $ed, $10, $43, $7f, $7b, $42, $32, $0e, $e1, $e2, $df
1fe0b     D4 E2 0A 01 
1fe0f     F2 12 3D 36 
1fe13     0B 2F 0B D6 
1fe17     C8 B5 BF B9 | 	byte	$d4, $e2, $0a, $01, $f2, $12, $3d, $36, $0b, $2f, $0b, $d6, $c8, $b5, $bf, $b9
1fe1b     E0 E8 D9 E7 
1fe1f     D4 F9 1E 56 
1fe23     7F 5B 31 25 
1fe27     11 E4 D5 DC | 	byte	$e0, $e8, $d9, $e7, $d4, $f9, $1e, $56, $7f, $5b, $31, $25, $11, $e4, $d5, $dc
1fe2b     D2 E2 08 F9 
1fe2f     08 26 3E 2C 
1fe33     22 1D ED D6 
1fe37     C3 B4 C6 CC | 	byte	$d2, $e2, $08, $f9, $08, $26, $3e, $2c, $22, $1d, $ed, $d6, $c3, $b4, $c6, $cc
1fe3b     E7 ED DD F1 
1fe3f     DB 06 40 69 
1fe43     72 47 2D 0E 
1fe47     FD E4 C9 DB | 	byte	$e7, $ed, $dd, $f1, $db, $06, $40, $69, $72, $47, $2d, $0e, $fd, $e4, $c9, $db
1fe4b     CC E7 09 F7 
1fe4f     0B 2E 37 2A 
1fe53     28 16 DC C8 
1fe57     C3 B2 CA CB | 	byte	$cc, $e7, $09, $f7, $0b, $2e, $37, $2a, $28, $16, $dc, $c8, $c3, $b2, $ca, $cb
1fe5b     E9 EF EC EB 
1fe5f     E5 09 63 74 
1fe63     69 59 21 05 
1fe67     EF D9 D9 CA | 	byte	$e9, $ef, $ec, $eb, $e5, $09, $63, $74, $69, $59, $21, $05, $ef, $d9, $d9, $ca
1fe6b     D8 00 03 FB 
1fe6f     16 3E 22 2C 
1fe73     2E FC CC D2 
1fe77     AF B7 CA DA | 	byte	$d8, $00, $03, $fb, $16, $3e, $22, $2c, $2e, $fc, $cc, $d2, $af, $b7, $ca, $da
1fe7b     EC EE EC E3 
1fe7f     EF 20 69 74 
1fe83     57 4C 1E F8 
1fe87     E7 D2 CD BF | 	byte	$ec, $ee, $ec, $e3, $ef, $20, $69, $74, $57, $4c, $1e, $f8, $e7, $d2, $cd, $bf
1fe8b     E0 02 0D FF 
1fe8f     2A 3C 29 2F 
1fe93     31 EA D1 BC 
1fe97     AC BB C2 DC | 	byte	$e0, $02, $0d, $ff, $2a, $3c, $29, $2f, $31, $ea, $d1, $bc, $ac, $bb, $c2, $dc
1fe9b     EC ED EB DB 
1fe9f     0A 35 63 79 
1fea3     57 38 17 F5 
1fea7     DF BF C5 CE | 	byte	$ec, $ed, $eb, $db, $0a, $35, $63, $79, $57, $38, $17, $f5, $df, $bf, $c5, $ce
1feab     E1 03 0D 25 
1feaf     2A 3A 3D 1F 
1feb3     1F E5 D1 B8 
1feb7     A4 CB D5 DF | 	byte	$e1, $03, $0d, $25, $2a, $3a, $3d, $1f, $1f, $e5, $d1, $b8, $a4, $cb, $d5, $df
1febb     F2 F0 E4 E1 
1febf     1F 4E 5A 79 
1fec3     59 1E 06 EA 
1fec7     D2 C3 BC D2 | 	byte	$f2, $f0, $e4, $e1, $1f, $4e, $5a, $79, $59, $1e, $06, $ea, $d2, $c3, $bc, $d2
1fecb     E6 09 13 31 
1fecf     34 38 3F 1F 
1fed3     06 D2 C3 B6 
1fed7     AF C8 D9 E5 | 	byte	$e6, $09, $13, $31, $34, $38, $3f, $1f, $06, $d2, $c3, $b6, $af, $c8, $d9, $e5
1fedb     FC E9 DE 00 
1fedf     29 5F 6B 64 
1fee3     4F 17 05 DF 
1fee7     C3 D2 B1 CF | 	byte	$fc, $e9, $de, $00, $29, $5f, $6b, $64, $4f, $17, $05, $df, $c3, $d2, $b1, $cf
1feeb     F8 10 1C 22 
1feef     38 40 27 19 
1fef3     02 CA B5 B6 
1fef7     B5 C4 D3 FD | 	byte	$f8, $10, $1c, $22, $38, $40, $27, $19, $02, $ca, $b5, $b6, $b5, $c4, $d3, $fd
1fefb     F0 E2 E8 0F 
1feff     27 59 78 62 
1ff03     3F 0C 01 CC 
1ff07     BE CB BE D9 | 	byte	$f0, $e2, $e8, $0f, $27, $59, $78, $62, $3f, $0c, $01, $cc, $be, $cb, $be, $d9
1ff0b     06 1A 18 2D 
1ff0f     46 3C 2A 13 
1ff13     F0 C3 AF B2 
1ff17     C1 C0 DE 05 | 	byte	$06, $1a, $18, $2d, $46, $3c, $2a, $13, $f0, $c3, $af, $b2, $c1, $c0, $de, $05
1ff1b     E9 E1 E9 1B 
1ff1f     36 65 71 4B 
1ff23     3F 07 E4 C2 
1ff27     B8 C4 C2 E7 | 	byte	$e9, $e1, $e9, $1b, $36, $65, $71, $4b, $3f, $07, $e4, $c2, $b8, $c4, $c2, $e7
1ff2b     12 1E 30 37 
1ff2f     47 42 1F 19 
1ff33     D4 B4 BB A8 
1ff37     C9 CD F3 02 | 	byte	$12, $1e, $30, $37, $47, $42, $1f, $19, $d4, $b4, $bb, $a8, $c9, $cd, $f3, $02
1ff3b     D6 F3 F9 23 
1ff3f     52 60 77 3F 
1ff43     23 13 CB BB 
1ff47     B8 C4 CB E4 | 	byte	$d6, $f3, $f9, $23, $52, $60, $77, $3f, $23, $13, $cb, $bb, $b8, $c4, $cb, $e4
1ff4b     1F 22 2E 41 
1ff4f     50 39 16 07 
1ff53     C2 AD B1 AF 
1ff57     D4 D1 FA FD | 	byte	$1f, $22, $2e, $41, $50, $39, $16, $07, $c2, $ad, $b1, $af, $d4, $d1, $fa, $fd
1ff5b     D8 F4 0D 34 
1ff5f     4C 60 71 49 
1ff63     20 F5 C4 BB 
1ff67     BE C6 D6 EF | 	byte	$d8, $f4, $0d, $34, $4c, $60, $71, $49, $20, $f5, $c4, $bb, $be, $c6, $d6, $ef
1ff6b     25 2F 31 47 
1ff6f     4A 3B 0C EE 
1ff73     B2 A6 A4 B5 
1ff77     D6 E3 FC F1 | 	byte	$25, $2f, $31, $47, $4a, $3b, $0c, $ee, $b2, $a6, $a4, $b5, $d6, $e3, $fc, $f1
1ff7b     E0 EF 18 41 
1ff7f     4B 5F 67 47 
1ff83     0D EC C4 B1 
1ff87     C2 CC E5 FD | 	byte	$e0, $ef, $18, $41, $4b, $5f, $67, $47, $0d, $ec, $c4, $b1, $c2, $cc, $e5, $fd
1ff8b     33 30 2D 42 
1ff8f     4E 2B FF E4 
1ff93     AF 97 A6 C4 
1ff97     DA EE F8 EF | 	byte	$33, $30, $2d, $42, $4e, $2b, $ff, $e4, $af, $97, $a6, $c4, $da, $ee, $f8, $ef
1ff9b     E2 F8 2E 36 
1ff9f     42 6D 5E 30 
1ffa3     FD F0 B8 A6 
1ffa7     BC DE E7 22 | 	byte	$e2, $f8, $2e, $36, $42, $6d, $5e, $30, $fd, $f0, $b8, $a6, $bc, $de, $e7, $22
1ffab     32 35 39 44 
1ffaf     4D 23 F8 D3 
1ffb3     AB 93 A7 D5 
1ffb7     E6 EB F3 F3 | 	byte	$32, $35, $39, $44, $4d, $23, $f8, $d3, $ab, $93, $a7, $d5, $e6, $eb, $f3, $f3
1ffbb     F5 08 30 45 
1ffbf     53 69 52 15 
1ffc3     FC D6 B2 A3 
1ffc7     BA E7 F3 27 | 	byte	$f5, $08, $30, $45, $53, $69, $52, $15, $fc, $d6, $b2, $a3, $ba, $e7, $f3, $27
1ffcb     2F 3C 3C 40 
1ffcf     40 1A F0 BD 
1ffd3     98 A1 B1 E4 
1ffd7     EF F1 FE F8 | 	byte	$2f, $3c, $3c, $40, $40, $1a, $f0, $bd, $98, $a1, $b1, $e4, $ef, $f1, $fe, $f8
1ffdb     FC 1A 3A 52 
1ffdf     56 65 3D 0A 
1ffe3     F3 C4 A9 A6 
1ffe7     C8 ED 03 2A | 	byte	$fc, $1a, $3a, $52, $56, $65, $3d, $0a, $f3, $c4, $a9, $a6, $c8, $ed, $03, $2a
1ffeb     38 37 37 47 
1ffef     3D 0A E2 A5 
1fff3     95 A3 C5 EA 
1fff7     E4 F7 07 FD | 	byte	$38, $37, $37, $47, $3d, $0a, $e2, $a5, $95, $a3, $c5, $ea, $e4, $f7, $07, $fd
1fffb     FF 20 3E 5E 
1ffff     50 55 3A 01 
20003     DE AA A9 B2 
20007     CD FC 18 36 | 	byte	$ff, $20, $3e, $5e, $50, $55, $3a, $01, $de, $aa, $a9, $b2, $cd, $fc, $18, $36
2000b     3A 40 43 3D 
2000f     35 FD C9 95 
20013     9B B0 C5 E5 
20017     F9 F6 05 09 | 	byte	$3a, $40, $43, $3d, $35, $fd, $c9, $95, $9b, $b0, $c5, $e5, $f9, $f6, $05, $09
2001b     FB 29 47 53 
2001f     51 3E 33 F7 
20023     C8 A3 A6 C1 
20027     CB 09 24 3C | 	byte	$fb, $29, $47, $53, $51, $3e, $33, $f7, $c8, $a3, $a6, $c1, $cb, $09, $24, $3c
2002b     3F 47 41 45 
2002f     20 EE B9 94 
20033     A8 B6 D2 E8 
20037     FA 06 02 03 | 	byte	$3f, $47, $41, $45, $20, $ee, $b9, $94, $a8, $b6, $d2, $e8, $fa, $06, $02, $03
2003b     0F 32 4A 50 
2003f     5A 37 17 E8 
20043     BE A6 AC BF 
20047     DF 0E 36 38 | 	byte	$0f, $32, $4a, $50, $5a, $37, $17, $e8, $be, $a6, $ac, $bf, $df, $0e, $36, $38
2004b     48 46 44 32 
2004f     0B DD AC 97 
20053     AB BC D4 ED 
20057     01 08 00 12 | 	byte	$48, $46, $44, $32, $0b, $dd, $ac, $97, $ab, $bc, $d4, $ed, $01, $08, $00, $12
2005b     18 38 4A 59 
2005f     58 2B FF E6 
20063     B8 A9 AD CC 
20067     E8 1C 41 38 | 	byte	$18, $38, $4a, $59, $58, $2b, $ff, $e6, $b8, $a9, $ad, $cc, $e8, $1c, $41, $38
2006b     47 49 46 26 
2006f     F7 D1 A7 93 
20073     A9 C0 DC EA 
20077     0E 08 03 10 | 	byte	$47, $49, $46, $26, $f7, $d1, $a7, $93, $a9, $c0, $dc, $ea, $0e, $08, $03, $10
2007b     1D 34 5C 54 
2007f     4E 1E F4 D1 
20083     A6 B2 BB D3 
20087     FE 30 40 3D | 	byte	$1d, $34, $5c, $54, $4e, $1e, $f4, $d1, $a6, $b2, $bb, $d3, $fe, $30, $40, $3d
2008b     4A 53 33 1F 
2008f     F2 C6 9A 9B 
20093     AE CF D0 FE 
20097     13 09 0C 12 | 	byte	$4a, $53, $33, $1f, $f2, $c6, $9a, $9b, $ae, $cf, $d0, $fe, $13, $09, $0c, $12
2009b     0E 34 58 54 
2009f     40 0B E7 C9 
200a3     AA AB C5 E2 
200a7     0E 34 4B 40 | 	byte	$0e, $34, $58, $54, $40, $0b, $e7, $c9, $aa, $ab, $c5, $e2, $0e, $34, $4b, $40
200ab     4F 47 2A 05 
200af     E2 BF A2 A7 
200b3     BF D1 D9 04 
200b7     18 10 0E 0C | 	byte	$4f, $47, $2a, $05, $e2, $bf, $a2, $a7, $bf, $d1, $d9, $04, $18, $10, $0e, $0c
200bb     1A 3E 4A 55 
200bf     2B FC E2 C0 
200c3     A0 B5 CC EF 
200c7     18 44 47 43 | 	byte	$1a, $3e, $4a, $55, $2b, $fc, $e2, $c0, $a0, $b5, $cc, $ef, $18, $44, $47, $43
200cb     53 43 21 F7 
200cf     D1 B6 A0 AE 
200d3     C2 D9 E9 07 
200d7     1F 16 0F 07 | 	byte	$53, $43, $21, $f7, $d1, $b6, $a0, $ae, $c2, $d9, $e9, $07, $1f, $16, $0f, $07
200db     22 4B 49 4C 
200df     21 F0 D4 B6 
200e3     AA AF D9 04 
200e7     20 44 41 51 | 	byte	$22, $4b, $49, $4c, $21, $f0, $d4, $b6, $aa, $af, $d9, $04, $20, $44, $41, $51
200eb     4C 35 15 E4 
200ef     C6 AA A8 B4 
200f3     B8 E3 FD 14 
200f7     22 19 10 0A | 	byte	$4c, $35, $15, $e4, $c6, $aa, $a8, $b4, $b8, $e3, $fd, $14, $22, $19, $10, $0a
200fb     25 4C 48 48 
200ff     17 E3 C7 AD 
20103     AC BD E5 10 
20107     2F 44 47 57 | 	byte	$25, $4c, $48, $48, $17, $e3, $c7, $ad, $ac, $bd, $e5, $10, $2f, $44, $47, $57
2010b     42 34 10 D7 
2010f     BF A1 A6 B0 
20113     C0 E7 06 24 
20117     25 17 0A 0B | 	byte	$42, $34, $10, $d7, $bf, $a1, $a6, $b0, $c0, $e7, $06, $24, $25, $17, $0a, $0b
2011b     2D 42 48 38 
2011f     06 DC C1 A4 
20123     B1 D1 EE 11 
20127     34 4A 4C 47 | 	byte	$2d, $42, $48, $38, $06, $dc, $c1, $a4, $b1, $d1, $ee, $11, $34, $4a, $4c, $47
2012b     3E 1E 08 D4 
2012f     B8 A1 A7 B3 
20133     CA F3 16 2D 
20137     22 1C 05 12 | 	byte	$3e, $1e, $08, $d4, $b8, $a1, $a7, $b3, $ca, $f3, $16, $2d, $22, $1c, $05, $12
2013b     2E 3F 4A 29 
2013f     FD D7 B1 AE 
20143     B9 DD EC 1B 
20147     3F 49 4F 44 | 	byte	$2e, $3f, $4a, $29, $fd, $d7, $b1, $ae, $b9, $dd, $ec, $1b, $3f, $49, $4f, $44
2014b     33 11 F9 CA 
2014f     B4 A1 B1 B5 
20153     D3 FA 27 2E 
20157     1B 19 0E 14 | 	byte	$33, $11, $f9, $ca, $b4, $a1, $b1, $b5, $d3, $fa, $27, $2e, $1b, $19, $0e, $14
2015b     32 3D 47 1C 
2015f     F3 D1 B3 AD 
20163     CB E8 F1 16 
20167     4C 4B 42 4B | 	byte	$32, $3d, $47, $1c, $f3, $d1, $b3, $ad, $cb, $e8, $f1, $16, $4c, $4b, $42, $4b
2016b     2A 0D E4 C9 
2016f     B2 9E B0 C2 
20173     DE 0E 27 38 
20177     12 16 15 16 | 	byte	$2a, $0d, $e4, $c9, $b2, $9e, $b0, $c2, $de, $0e, $27, $38, $12, $16, $15, $16
2017b     38 3D 41 09 
2017f     DB CC BA B3 
20183     D1 EF FD 14 
20187     4E 49 45 3B | 	byte	$38, $3d, $41, $09, $db, $cc, $ba, $b3, $d1, $ef, $fd, $14, $4e, $49, $45, $3b
2018b     2F 0B D6 C5 
2018f     AD A4 A8 C9 
20193     F7 14 2F 3E 
20197     14 06 04 25 | 	byte	$2f, $0b, $d6, $c5, $ad, $a4, $a8, $c9, $f7, $14, $2f, $3e, $14, $06, $04, $25
2019b     31 35 38 08 
2019f     C7 C0 BF C6 
201a3     CD F0 06 28 
201a7     46 46 4B 33 | 	byte	$31, $35, $38, $08, $c7, $c0, $bf, $c6, $cd, $f0, $06, $28, $46, $46, $4b, $33
201ab     27 04 D4 BB 
201af     B2 A8 AC CF 
201b3     07 1D 36 34 
201b7     19 F9 08 21 | 	byte	$27, $04, $d4, $bb, $b2, $a8, $ac, $cf, $07, $1d, $36, $34, $19, $f9, $08, $21
201bb     34 35 24 F9 
201bf     CC C0 C9 C9 
201c3     D2 E7 0F 30 
201c7     3F 52 43 2E | 	byte	$34, $35, $24, $f9, $cc, $c0, $c9, $c9, $d2, $e7, $0f, $30, $3f, $52, $43, $2e
201cb     11 01 D1 B8 
201cf     B0 AE AD E1 
201d3     0A 31 3B 2F 
201d7     15 FA 0B 2B | 	byte	$11, $01, $d1, $b8, $b0, $ae, $ad, $e1, $0a, $31, $3b, $2f, $15, $fa, $0b, $2b
201db     33 32 0D EA 
201df     CF BA D1 D1 
201e3     D9 ED 15 38 
201e7     41 4C 43 25 | 	byte	$33, $32, $0d, $ea, $cf, $ba, $d1, $d1, $d9, $ed, $15, $38, $41, $4c, $43, $25
201eb     12 F5 CC B5 
201ef     AC AA BA EB 
201f3     16 36 3F 26 
201f7     0F FF 0F 2C | 	byte	$12, $f5, $cc, $b5, $ac, $aa, $ba, $eb, $16, $36, $3f, $26, $0f, $ff, $0f, $2c
201fb     32 2D 03 E2 
201ff     CD D0 D4 D5 
20203     DF F0 14 3A 
20207     44 47 3B 21 | 	byte	$32, $2d, $03, $e2, $cd, $d0, $d4, $d5, $df, $f0, $14, $3a, $44, $47, $3b, $21
2020b     0F E7 CA B8 
2020f     AB AC C8 FE 
20213     1C 3C 47 1A 
20217     08 01 1A 34 | 	byte	$0f, $e7, $ca, $b8, $ab, $ac, $c8, $fe, $1c, $3c, $47, $1a, $08, $01, $1a, $34
2021b     24 19 03 D0 
2021f     CD D6 D6 D5 
20223     DB FB 1D 34 
20227     44 41 39 1B | 	byte	$24, $19, $03, $d0, $cd, $d6, $d6, $d5, $db, $fb, $1d, $34, $44, $41, $39, $1b
2022b     04 EA C6 B5 
2022f     AC B0 D0 FD 
20233     2C 42 37 17 
20237     02 05 1D 2C | 	byte	$04, $ea, $c6, $b5, $ac, $b0, $d0, $fd, $2c, $42, $37, $17, $02, $05, $1d, $2c
2023b     27 06 F9 D5 
2023f     D1 D3 D6 DB 
20243     DE FD 22 35 
20247     3D 42 34 15 | 	byte	$27, $06, $f9, $d5, $d1, $d3, $d6, $db, $de, $fd, $22, $35, $3d, $42, $34, $15
2024b     F9 E8 C5 B3 
2024f     AD BD E3 02 
20253     33 4B 29 13 
20257     03 10 1F 21 | 	byte	$f9, $e8, $c5, $b3, $ad, $bd, $e3, $02, $33, $4b, $29, $13, $03, $10, $1f, $21
2025b     22 01 ED DD 
2025f     DD D7 CD D9 
20263     EE F4 29 3A 
20267     3D 38 33 14 | 	byte	$22, $01, $ed, $dd, $dd, $d7, $cd, $d9, $ee, $f4, $29, $3a, $3d, $38, $33, $14
2026b     F7 DC C7 B5 
2026f     B5 C2 E9 11 
20273     2F 45 20 0E 
20277     02 21 1F 17 | 	byte	$f7, $dc, $c7, $b5, $b5, $c2, $e9, $11, $2f, $45, $20, $0e, $02, $21, $1f, $17
2027b     19 FF E5 DF 
2027f     DF DB CD E3 
20283     EC 03 27 39 
20287     3A 32 27 13 | 	byte	$19, $ff, $e5, $df, $df, $db, $cd, $e3, $ec, $03, $27, $39, $3a, $32, $27, $13
2028b     F1 D9 C1 BD 
2028f     B8 C6 FE 18 
20293     33 3C 1F 11 
20297     06 1C 25 08 | 	byte	$f1, $d9, $c1, $bd, $b8, $c6, $fe, $18, $33, $3c, $1f, $11, $06, $1c, $25, $08
2029b     15 FA E3 E4 
2029f     D7 E3 D0 DD 
202a3     F3 10 25 2C 
202a7     3A 3A 21 0E | 	byte	$15, $fa, $e3, $e4, $d7, $e3, $d0, $dd, $f3, $10, $25, $2c, $3a, $3a, $21, $0e
202ab     F1 DE BB B7 
202af     B8 D9 03 1F 
202b3     34 37 1A 0F 
202b7     14 1E 1B 0E | 	byte	$f1, $de, $bb, $b7, $b8, $d9, $03, $1f, $34, $37, $1a, $0f, $14, $1e, $1b, $0e
202bb     07 F5 E8 E2 
202bf     D1 DB D4 DE 
202c3     FC 15 2C 2D 
202c7     35 33 1E 0E | 	byte	$07, $f5, $e8, $e2, $d1, $db, $d4, $de, $fc, $15, $2c, $2d, $35, $33, $1e, $0e
202cb     F3 D3 B9 B1 
202cf     C3 E2 05 23 
202d3     35 2D 19 14 
202d7     1E 1B 13 0D | 	byte	$f3, $d3, $b9, $b1, $c3, $e2, $05, $23, $35, $2d, $19, $14, $1e, $1b, $13, $0d
202db     FF F6 E8 DD 
202df     DA D2 D4 E8 
202e3     FD 1A 26 2C 
202e7     33 22 1B 0B | 	byte	$ff, $f6, $e8, $dd, $da, $d2, $d4, $e8, $fd, $1a, $26, $2c, $33, $22, $1b, $0b
202eb     EC D2 BA B8 
202ef     CC EA 0C 21 
202f3     33 28 16 16 
202f7     1C 17 0F 09 | 	byte	$ec, $d2, $ba, $b8, $cc, $ea, $0c, $21, $33, $28, $16, $16, $1c, $17, $0f, $09
202fb     00 F9 E5 DF 
202ff     DD D0 D4 ED 
20303     02 1F 27 33 
20307     29 1B 23 08 | 	byte	$00, $f9, $e5, $df, $dd, $d0, $d4, $ed, $02, $1f, $27, $33, $29, $1b, $23, $08
2030b     E3 C7 C2 C4 
2030f     CD F3 15 21 
20313     2B 1D 22 17 
20317     19 1E 0B 08 | 	byte	$e3, $c7, $c2, $c4, $cd, $f3, $15, $21, $2b, $1d, $22, $17, $19, $1e, $0b, $08
2031b     02 F3 E5 D7 
2031f     DD D2 DA F2 
20323     08 20 20 2B 
20327     25 1D 1C 05 | 	byte	$02, $f3, $e5, $d7, $dd, $d2, $da, $f2, $08, $20, $20, $2b, $25, $1d, $1c, $05
2032b     DF C9 C2 CA 
2032f     D9 F2 13 20 
20333     2C 24 18 1B 
20337     15 19 0A 0B | 	byte	$df, $c9, $c2, $ca, $d9, $f2, $13, $20, $2c, $24, $18, $1b, $15, $19, $0a, $0b
2033b     04 F0 E4 D8 
2033f     D2 D4 DD F5 
20343     0D 18 29 21 
20347     1B 26 1E F9 | 	byte	$04, $f0, $e4, $d8, $d2, $d4, $dd, $f5, $0d, $18, $29, $21, $1b, $26, $1e, $f9
2034b     DB D1 CA C8 
2034f     E3 FA 0E 22 
20353     2A 21 13 19 
20357     1D 14 08 0D | 	byte	$db, $d1, $ca, $c8, $e3, $fa, $0e, $22, $2a, $21, $13, $19, $1d, $14, $08, $0d
2035b     06 F1 DE D5 
2035f     D0 D2 E0 FF 
20363     10 1A 27 20 
20367     1B 23 1C F8 | 	byte	$06, $f1, $de, $d5, $d0, $d2, $e0, $ff, $10, $1a, $27, $20, $1b, $23, $1c, $f8
2036b     D7 D2 D5 CE 
2036f     E4 FA 12 21 
20373     27 24 13 1B 
20377     1F 13 0B 03 | 	byte	$d7, $d2, $d5, $ce, $e4, $fa, $12, $21, $27, $24, $13, $1b, $1f, $13, $0b, $03
2037b     02 F3 D6 CF 
2037f     D5 D9 DD 00 
20383     14 1B 21 1D 
20387     1C 21 13 F7 | 	byte	$02, $f3, $d6, $cf, $d5, $d9, $dd, $00, $14, $1b, $21, $1d, $1c, $21, $13, $f7
2038b     D6 D9 D7 D6 
2038f     E7 F9 15 24 
20393     28 21 15 1A 
20397     25 0F 0C 0A | 	byte	$d6, $d9, $d7, $d6, $e7, $f9, $15, $24, $28, $21, $15, $1a, $25, $0f, $0c, $0a
2039b     07 E6 D1 D5 
2039f     D5 D4 E6 03 
203a3     11 15 27 18 
203a7     18 20 0F F1 | 	byte	$07, $e6, $d1, $d5, $d5, $d4, $e6, $03, $11, $15, $27, $18, $18, $20, $0f, $f1
203ab     D2 E4 DC D5 
203af     EC FE 17 23 
203b3     21 1F 12 22 
203b7     25 0D 0B 11 | 	byte	$d2, $e4, $dc, $d5, $ec, $fe, $17, $23, $21, $1f, $12, $22, $25, $0d, $0b, $11
203bb     FD DA C4 D6 
203bf     D1 D4 EF 06 
203c3     17 0F 20 1B 
203c7     17 1B 0C EE | 	byte	$fd, $da, $c4, $d6, $d1, $d4, $ef, $06, $17, $0f, $20, $1b, $17, $1b, $0c, $ee
203cb     DF E7 E0 D9 
203cf     E4 05 21 22 
203d3     1C 1C 18 1C 
203d7     1C 14 0D 10 | 	byte	$df, $e7, $e0, $d9, $e4, $05, $21, $22, $1c, $1c, $18, $1c, $1c, $14, $0d, $10
203db     F3 D3 CB D3 
203df     CF DF ED 0E 
203e3     12 13 1D 1B 
203e7     17 17 06 EE | 	byte	$f3, $d3, $cb, $d3, $cf, $df, $ed, $0e, $12, $13, $1d, $1b, $17, $17, $06, $ee
203eb     E7 ED DB D4 
203ef     EC 0E 1A 1C 
203f3     21 19 19 1A 
203f7     1B 17 10 09 | 	byte	$e7, $ed, $db, $d4, $ec, $0e, $1a, $1c, $21, $19, $19, $1a, $1b, $17, $10, $09
203fb     ED CC CA CD 
203ff     D4 DE F4 0D 
20403     11 16 1E 1E 
20407     17 10 05 F4 | 	byte	$ed, $cc, $ca, $cd, $d4, $de, $f4, $0d, $11, $16, $1e, $1e, $17, $10, $05, $f4
2040b     EF ED D5 DF 
2040f     EF 09 1F 1D 
20413     1D 1A 19 1F 
20417     15 20 13 FC | 	byte	$ef, $ed, $d5, $df, $ef, $09, $1f, $1d, $1d, $1a, $19, $1f, $15, $20, $13, $fc
2041b     E9 CF C9 CF 
2041f     D9 E5 F6 09 
20423     11 17 20 1B 
20427     1B 0E 07 FB | 	byte	$e9, $cf, $c9, $cf, $d9, $e5, $f6, $09, $11, $17, $20, $1b, $1b, $0e, $07, $fb
2042b     ED E6 DA DF 
2042f     F2 08 20 1D 
20433     15 17 1A 20 
20437     14 22 18 F6 | 	byte	$ed, $e6, $da, $df, $f2, $08, $20, $1d, $15, $17, $1a, $20, $14, $22, $18, $f6
2043b     E2 C8 CA D2 
2043f     D7 E7 F8 06 
20443     16 19 1A 1A 
20447     1E 0E 06 FE | 	byte	$e2, $c8, $ca, $d2, $d7, $e7, $f8, $06, $16, $19, $1a, $1a, $1e, $0e, $06, $fe
2044b     F2 DA DB E6 
2044f     F2 0B 1E 1B 
20453     14 12 1E 1E 
20457     16 28 11 F2 | 	byte	$f2, $da, $db, $e6, $f2, $0b, $1e, $1b, $14, $12, $1e, $1e, $16, $28, $11, $f2
2045b     D0 C7 CE CB 
2045f     DF EF F6 0C 
20463     12 1C 13 1D 
20467     21 10 06 04 | 	byte	$d0, $c7, $ce, $cb, $df, $ef, $f6, $0c, $12, $1c, $13, $1d, $21, $10, $06, $04
2046b     F0 D9 D4 E8 
2046f     FA 08 1B 16 
20473     11 17 1E 1F 
20477     22 21 0F E7 | 	byte	$f0, $d9, $d4, $e8, $fa, $08, $1b, $16, $11, $17, $1e, $1f, $22, $21, $0f, $e7
2047b     CC CB CD CE 
2047f     DD EF 01 06 
20483     1A 1A 15 1C 
20487     1C 15 09 01 | 	byte	$cc, $cb, $cd, $ce, $dd, $ef, $01, $06, $1a, $1a, $15, $1c, $1c, $15, $09, $01
2048b     EB D2 DB ED 
2048f     FA 0F 17 1C 
20493     0F 14 1F 29 
20497     21 20 06 DC | 	byte	$eb, $d2, $db, $ed, $fa, $0f, $17, $1c, $0f, $14, $1f, $29, $21, $20, $06, $dc
2049b     C6 D1 CA CF 
2049f     E2 FA FE 02 
204a3     20 18 18 1D 
204a7     23 15 09 FD | 	byte	$c6, $d1, $ca, $cf, $e2, $fa, $fe, $02, $20, $18, $18, $1d, $23, $15, $09, $fd
204ab     E5 CE E2 F0 
204af     FB 0D 19 15 
204b3     09 11 2C 28 
204b7     22 1B 01 D9 | 	byte	$e5, $ce, $e2, $f0, $fb, $0d, $19, $15, $09, $11, $2c, $28, $22, $1b, $01, $d9
204bb     C5 CD CD D5 
204bf     E5 F8 FE 06 
204c3     15 19 17 21 
204c7     25 1F FF F8 | 	byte	$c5, $cd, $cd, $d5, $e5, $f8, $fe, $06, $15, $19, $17, $21, $25, $1f, $ff, $f8
204cb     E5 D5 DD F3 
204cf     06 11 12 10 
204d3     07 13 2D 2F 
204d7     24 13 FA D8 | 	byte	$e5, $d5, $dd, $f3, $06, $11, $12, $10, $07, $13, $2d, $2f, $24, $13, $fa, $d8
204db     C2 C7 D3 D4 
204df     E3 F5 05 05 
204e3     15 1A 1A 25 
204e7     2A 1E 00 EF | 	byte	$c2, $c7, $d3, $d4, $e3, $f5, $05, $05, $15, $1a, $1a, $25, $2a, $1e, $00, $ef
204eb     E2 D5 DD F8 
204ef     0F 10 08 0B 
204f3     09 18 2A 37 
204f7     24 0B F4 D3 | 	byte	$e2, $d5, $dd, $f8, $0f, $10, $08, $0b, $09, $18, $2a, $37, $24, $0b, $f4, $d3
204fb     BF CA D3 D8 
204ff     E8 FF 02 00 
20503     14 1E 1E 24 
20507     2E 1D FF E9 | 	byte	$bf, $ca, $d3, $d8, $e8, $ff, $02, $00, $14, $1e, $1e, $24, $2e, $1d, $ff, $e9
2050b     DB D9 E6 FE 
2050f     0F 06 09 06 
20513     0E 20 31 35 
20517     1D 05 EF D2 | 	byte	$db, $d9, $e6, $fe, $0f, $06, $09, $06, $0e, $20, $31, $35, $1d, $05, $ef, $d2
2051b     C5 C8 D4 DE 
2051f     EC FE FB 06 
20523     15 1D 24 2B 
20527     2E 1A F8 E4 | 	byte	$c5, $c8, $d4, $de, $ec, $fe, $fb, $06, $15, $1d, $24, $2b, $2e, $1a, $f8, $e4
2052b     D5 DD EE FB 
2052f     0E 06 05 01 
20533     10 27 36 2F 
20537     1A FB EB CE | 	byte	$d5, $dd, $ee, $fb, $0e, $06, $05, $01, $10, $27, $36, $2f, $1a, $fb, $eb, $ce
2053b     C6 C5 DB E2 
2053f     F1 FA FA 0A 
20543     14 22 26 32 
20547     2D 14 F2 DC | 	byte	$c6, $c5, $db, $e2, $f1, $fa, $fa, $0a, $14, $22, $26, $32, $2d, $14, $f2, $dc
2054b     D5 E4 ED 06 
2054f     0C 00 FE 02 
20553     13 2E 35 2F 
20557     11 FB E3 CB | 	byte	$d5, $e4, $ed, $06, $0c, $00, $fe, $02, $13, $2e, $35, $2f, $11, $fb, $e3, $cb
2055b     C3 C9 E0 E7 
2055f     EF F8 02 06 
20563     1A 28 2F 30 
20567     29 0B F1 D8 | 	byte	$c3, $c9, $e0, $e7, $ef, $f8, $02, $06, $1a, $28, $2f, $30, $29, $0b, $f1, $d8
2056b     DC E5 F2 08 
2056f     0D FB F8 09 
20573     19 31 2E 2D 
20577     0E F3 DA CA | 	byte	$dc, $e5, $f2, $08, $0d, $fb, $f8, $09, $19, $31, $2e, $2d, $0e, $f3, $da, $ca
2057b     C1 CE DD EE 
2057f     F0 FA FF 0E 
20583     1D 29 38 33 
20587     22 06 EB D5 | 	byte	$c1, $ce, $dd, $ee, $f0, $fa, $ff, $0e, $1d, $29, $38, $33, $22, $06, $eb, $d5
2058b     DB EB F9 04 
2058f     07 F6 F9 0B 
20593     24 31 32 24 
20597     0F F0 D1 C9 | 	byte	$db, $eb, $f9, $04, $07, $f6, $f9, $0b, $24, $31, $32, $24, $0f, $f0, $d1, $c9
2059b     C9 D2 E2 EC 
2059f     F2 F6 00 12 
205a3     21 33 36 31 
205a7     19 05 E6 D5 | 	byte	$c9, $d2, $e2, $ec, $f2, $f6, $00, $12, $21, $33, $36, $31, $19, $05, $e6, $d5
205ab     DF F2 F9 02 
205af     00 F8 F7 12 
205b3     2C 2C 2A 21 
205b7     0A E5 CF CD | 	byte	$df, $f2, $f9, $02, $00, $f8, $f7, $12, $2c, $2c, $2a, $21, $0a, $e5, $cf, $cd
205bb     CD D1 E9 EE 
205bf     F4 F2 08 12 
205c3     28 3B 3B 2A 
205c7     12 FD E7 D3 | 	byte	$cd, $d1, $e9, $ee, $f4, $f2, $08, $12, $28, $3b, $3b, $2a, $12, $fd, $e7, $d3
205cb     E2 F6 FD FC 
205cf     F9 F5 FE 1A 
205d3     2C 2E 2B 1D 
205d7     FF E1 CA CC | 	byte	$e2, $f6, $fd, $fc, $f9, $f5, $fe, $1a, $2c, $2e, $2b, $1d, $ff, $e1, $ca, $cc
205db     D3 D6 E5 F3 
205df     F1 F0 07 1E 
205e3     30 3A 3B 28 
205e7     0D F6 E5 DC | 	byte	$d3, $d6, $e5, $f3, $f1, $f0, $07, $1e, $30, $3a, $3b, $28, $0d, $f6, $e5, $dc
205eb     E5 F7 FF F7 
205ef     F1 F6 06 1D 
205f3     28 2C 2C 1A 
205f7     F8 DA CE CA | 	byte	$e5, $f7, $ff, $f7, $f1, $f6, $06, $1d, $28, $2c, $2c, $1a, $f8, $da, $ce, $ca
205fb     D3 D8 EA F0 
205ff     ED F3 07 26 
20603     35 41 39 21 
20607     08 F1 E1 E1 | 	byte	$d3, $d8, $ea, $f0, $ed, $f3, $07, $26, $35, $41, $39, $21, $08, $f1, $e1, $e1
2060b     E7 F4 F9 F4 
2060f     F0 F5 0D 1F 
20613     28 2E 27 11 
20617     FB D7 CB CA | 	byte	$e7, $f4, $f9, $f4, $f0, $f5, $0d, $1f, $28, $2e, $27, $11, $fb, $d7, $cb, $ca
2061b     D8 DF E9 EF 
2061f     F0 F5 0B 2B 
20623     41 41 30 1C 
20627     FE ED E2 E9 | 	byte	$d8, $df, $e9, $ef, $f0, $f5, $0b, $2b, $41, $41, $30, $1c, $fe, $ed, $e2, $e9
2062b     E4 F4 FA ED 
2062f     EE FC 16 22 
20633     25 33 22 07 
20637     F1 D7 CB CF | 	byte	$e4, $f4, $fa, $ed, $ee, $fc, $16, $22, $25, $33, $22, $07, $f1, $d7, $cb, $cf
2063b     DE E3 E5 ED 
2063f     F3 F7 15 36 
20643     48 3B 2D 12 
20647     FB EC E3 E9 | 	byte	$de, $e3, $e5, $ed, $f3, $f7, $15, $36, $48, $3b, $2d, $12, $fb, $ec, $e3, $e9
2064b     EB F0 F2 EE 
2064f     EE 02 14 26 
20653     27 29 1C 05 
20657     E4 D2 CF D6 | 	byte	$eb, $f0, $f2, $ee, $ee, $02, $14, $26, $27, $29, $1c, $05, $e4, $d2, $cf, $d6
2065b     D9 EA EF EA 
2065f     E7 08 22 37 
20663     49 3F 24 06 
20667     FA EE E1 E7 | 	byte	$d9, $ea, $ef, $ea, $e7, $08, $22, $37, $49, $3f, $24, $06, $fa, $ee, $e1, $e7
2066b     F5 EE EE EC 
2066f     FB FC 17 2C 
20673     29 21 16 FF 
20677     E6 CC D6 DA | 	byte	$f5, $ee, $ee, $ec, $fb, $fc, $17, $2c, $29, $21, $16, $ff, $e6, $cc, $d6, $da
2067b     DC EA F0 E5 
2067f     E6 0F 30 3A 
20683     43 42 1D FF 
20687     F3 F3 E4 E5 | 	byte	$dc, $ea, $f0, $e5, $e6, $0f, $30, $3a, $43, $42, $1d, $ff, $f3, $f3, $e4, $e5
2068b     F2 F0 E9 EB 
2068f     FC 03 17 2B 
20693     2B 1A 0E FD 
20697     E6 C9 D3 E3 | 	byte	$f2, $f0, $e9, $eb, $fc, $03, $17, $2b, $2b, $1a, $0e, $fd, $e6, $c9, $d3, $e3
2069b     E3 E5 EE E6 
2069f     F4 15 33 43 
206a3     43 34 17 FE 
206a7     F2 EB E8 E7 | 	byte	$e3, $e5, $ee, $e6, $f4, $15, $33, $43, $43, $34, $17, $fe, $f2, $eb, $e8, $e7
206ab     EA F1 E8 EB 
206af     F8 0C 1F 28 
206b3     25 18 0B F9 
206b7     DD CE D7 E4 | 	byte	$ea, $f1, $e8, $eb, $f8, $0c, $1f, $28, $25, $18, $0b, $f9, $dd, $ce, $d7, $e4
206bb     E4 E6 E8 E7 
206bf     FF 1F 39 48 
206c3     3E 2E 10 FC 
206c7     F3 E8 E8 E9 | 	byte	$e4, $e6, $e8, $e7, $ff, $1f, $39, $48, $3e, $2e, $10, $fc, $f3, $e8, $e8, $e9
206cb     EB EC E4 F0 
206cf     FD 0E 25 27 
206d3     24 16 03 F2 
206d7     D7 D2 DF E3 | 	byte	$eb, $ec, $e4, $f0, $fd, $0e, $25, $27, $24, $16, $03, $f2, $d7, $d2, $df, $e3
206db     E2 E6 EC EB 
206df     03 2F 42 42 
206e3     3A 27 08 F9 
206e7     F1 EC E4 E8 | 	byte	$e2, $e6, $ec, $eb, $03, $2f, $42, $42, $3a, $27, $08, $f9, $f1, $ec, $e4, $e8
206eb     F2 E8 E4 F2 
206ef     04 11 21 2A 
206f3     23 10 FD F1 
206f7     D4 D6 E1 E7 | 	byte	$f2, $e8, $e4, $f2, $04, $11, $21, $2a, $23, $10, $fd, $f1, $d4, $d6, $e1, $e7
206fb     E3 E3 EE F1 
206ff     09 39 45 3E 
20703     2F 23 09 F0 
20707     EF EC E2 E7 | 	byte	$e3, $e3, $ee, $f1, $09, $39, $45, $3e, $2f, $23, $09, $f0, $ef, $ec, $e2, $e7
2070b     F0 EE E2 F6 
2070f     0C 11 1F 2B 
20713     21 07 F6 EF 
20717     D7 D5 E4 EB | 	byte	$f0, $ee, $e2, $f6, $0c, $11, $1f, $2b, $21, $07, $f6, $ef, $d7, $d5, $e4, $eb
2071b     E1 DF F2 FD 
2071f     18 3B 4A 39 
20723     2B 1B 06 F0 
20727     E7 E8 E5 E6 | 	byte	$e1, $df, $f2, $fd, $18, $3b, $4a, $39, $2b, $1b, $06, $f0, $e7, $e8, $e5, $e6
2072b     EF EA EB F6 
2072f     09 19 20 27 
20733     1B 06 F3 DF 
20737     E0 DB E0 EA | 	byte	$ef, $ea, $eb, $f6, $09, $19, $20, $27, $1b, $06, $f3, $df, $e0, $db, $e0, $ea
2073b     E0 E0 EF 0F 
2073f     26 3D 46 3B 
20743     23 10 05 F1 
20747     E1 E4 EA E7 | 	byte	$e0, $e0, $ef, $0f, $26, $3d, $46, $3b, $23, $10, $05, $f1, $e1, $e4, $ea, $e7
2074b     EA EE F3 F7 
2074f     0D 1B 1F 1E 
20753     14 02 EC E1 
20757     DC E2 E4 E5 | 	byte	$ea, $ee, $f3, $f7, $0d, $1b, $1f, $1e, $14, $02, $ec, $e1, $dc, $e2, $e4, $e5
2075b     DF E6 F7 17 
2075f     2F 40 40 34 
20763     20 0C 00 F1 
20767     E2 E6 EA EB | 	byte	$df, $e6, $f7, $17, $2f, $40, $40, $34, $20, $0c, $00, $f1, $e2, $e6, $ea, $eb
2076b     EE EC F5 FB 
2076f     0C 1B 21 1F 
20773     0D FB E9 DE 
20777     E2 E3 E3 E0 | 	byte	$ee, $ec, $f5, $fb, $0c, $1b, $21, $1f, $0d, $fb, $e9, $de, $e2, $e3, $e3, $e0
2077b     E4 EB 02 1D 
2077f     37 3E 3D 2D 
20783     1C 08 FE EB 
20787     DF E8 EA EC | 	byte	$e4, $eb, $02, $1d, $37, $3e, $3d, $2d, $1c, $08, $fe, $eb, $df, $e8, $ea, $ec
2078b     E9 F4 F4 02 
2078f     0D 1E 21 16 
20793     06 F9 E8 DF 
20797     E2 E5 E2 DD | 	byte	$e9, $f4, $f4, $02, $0d, $1e, $21, $16, $06, $f9, $e8, $df, $e2, $e5, $e2, $dd
2079b     E9 F4 08 28 
2079f     3E 3A 36 2A 
207a3     1C 04 F3 E9 
207a7     E5 E5 E8 EF | 	byte	$e9, $f4, $08, $28, $3e, $3a, $36, $2a, $1c, $04, $f3, $e9, $e5, $e5, $e8, $ef
207ab     EE F2 F6 02 
207af     0D 1D 1F 11 
207b3     00 F7 E9 E2 
207b7     E0 E3 E3 DD | 	byte	$ee, $f2, $f6, $02, $0d, $1d, $1f, $11, $00, $f7, $e9, $e2, $e0, $e3, $e3, $dd
207bb     E8 FC 18 30 
207bf     39 3C 37 25 
207c3     11 03 F0 E1 
207c7     E7 E7 E7 F0 | 	byte	$e8, $fc, $18, $30, $39, $3c, $37, $25, $11, $03, $f0, $e1, $e7, $e7, $e7, $f0
207cb     F5 F3 F3 04 
207cf     1A 19 17 0D 
207d3     FE F2 E5 E4 
207d7     E2 DF E0 E1 | 	byte	$f5, $f3, $f3, $04, $1a, $19, $17, $0d, $fe, $f2, $e5, $e4, $e2, $df, $e0, $e1
207db     ED 05 23 34 
207df     38 39 30 20 
207e3     0A FE EB E3 
207e7     E6 E6 EB F2 | 	byte	$ed, $05, $23, $34, $38, $39, $30, $20, $0a, $fe, $eb, $e3, $e6, $e6, $eb, $f2
207eb     F3 F3 F6 0C 
207ef     16 15 13 08 
207f3     FB EE E7 E7 
207f7     E3 DB E2 E7 | 	byte	$f3, $f3, $f6, $0c, $16, $15, $13, $08, $fb, $ee, $e7, $e7, $e3, $db, $e2, $e7
207fb     F8 0B 29 36 
207ff     38 38 2E 18 
20803     06 F6 E7 DE 
20807     E6 EC F1 F2 | 	byte	$f8, $0b, $29, $36, $38, $38, $2e, $18, $06, $f6, $e7, $de, $e6, $ec, $f1, $f2
2080b     F4 F2 FA 0C 
2080f     17 15 0A 08 
20813     F7 EB E6 E8 
20817     DE DD E4 F4 | 	byte	$f4, $f2, $fa, $0c, $17, $15, $0a, $08, $f7, $eb, $e6, $e8, $de, $dd, $e4, $f4
2081b     00 15 2D 36 
2081f     36 36 27 14 
20823     00 F3 E5 DC 
20827     E8 F3 F5 ED | 	byte	$00, $15, $2d, $36, $36, $36, $27, $14, $00, $f3, $e5, $dc, $e8, $f3, $f5, $ed
2082b     F3 F9 FF 06 
2082f     14 13 04 01 
20833     F9 EB E5 E6 
20837     E1 DB E8 02 | 	byte	$f3, $f9, $ff, $06, $14, $13, $04, $01, $f9, $eb, $e5, $e6, $e1, $db, $e8, $02
2083b     05 18 33 3A 
2083f     33 2E 25 0E 
20843     F9 F0 E1 DE 
20847     EA F7 F3 EE | 	byte	$05, $18, $33, $3a, $33, $2e, $25, $0e, $f9, $f0, $e1, $de, $ea, $f7, $f3, $ee
2084b     F0 00 FF 06 
2084f     17 0D 02 FA 
20853     F8 F0 E2 E5 
20857     E1 DA F3 06 | 	byte	$f0, $00, $ff, $06, $17, $0d, $02, $fa, $f8, $f0, $e2, $e5, $e1, $da, $f3, $06
2085b     0F 18 39 3C 
2085f     2E 26 24 0B 
20863     F4 E5 E2 E6 
20867     ED F7 F9 EC | 	byte	$0f, $18, $39, $3c, $2e, $26, $24, $0b, $f4, $e5, $e2, $e6, $ed, $f7, $f9, $ec
2086b     F1 00 00 0A 
2086f     0E 10 00 F9 
20873     F7 ED E2 DF 
20877     E0 E9 F8 0C | 	byte	$f1, $00, $00, $0a, $0e, $10, $00, $f9, $f7, $ed, $e2, $df, $e0, $e9, $f8, $0c
2087b     11 22 34 37 
2087f     2F 25 20 05 
20883     EC E4 E1 E5 
20887     F5 F7 F6 EC | 	byte	$11, $22, $34, $37, $2f, $25, $20, $05, $ec, $e4, $e1, $e5, $f5, $f7, $f6, $ec
2088b     F5 FD 03 0A 
2088f     10 04 04 FA 
20893     F4 E8 E0 E0 
20897     E0 EF 00 10 | 	byte	$f5, $fd, $03, $0a, $10, $04, $04, $fa, $f4, $e8, $e0, $e0, $e0, $ef, $00, $10
2089b     15 29 34 37 
2089f     2B 28 12 FC 
208a3     EA E5 DF EA 
208a7     F7 FC F0 F1 | 	byte	$15, $29, $34, $37, $2b, $28, $12, $fc, $ea, $e5, $df, $ea, $f7, $fc, $f0, $f1
208ab     F9 FE 04 07 
208af     0A 03 04 FA 
208b3     F0 E4 DF DC 
208b7     E8 F6 0A 13 | 	byte	$f9, $fe, $04, $07, $0a, $03, $04, $fa, $f0, $e4, $df, $dc, $e8, $f6, $0a, $13
208bb     17 28 35 2D 
208bf     2C 22 10 F8 
208c3     E6 E2 E5 ED 
208c7     F8 F7 F2 F4 | 	byte	$17, $28, $35, $2d, $2c, $22, $10, $f8, $e6, $e2, $e5, $ed, $f8, $f7, $f2, $f4
208cb     F8 01 02 05 
208cf     07 09 01 F5 
208d3     EA E5 D8 E1 
208d7     EE 04 0D 14 | 	byte	$f8, $01, $02, $05, $07, $09, $01, $f5, $ea, $e5, $d8, $e1, $ee, $04, $0d, $14
208db     1E 2A 31 2F 
208df     27 1A 08 F1 
208e3     E3 E0 E9 F2 
208e7     F8 F2 F5 F5 | 	byte	$1e, $2a, $31, $2f, $27, $1a, $08, $f1, $e3, $e0, $e9, $f2, $f8, $f2, $f5, $f5
208eb     FB FF 06 06 
208ef     05 07 FF F3 
208f3     E9 DB DB E7 
208f7     FA 09 13 13 | 	byte	$fb, $ff, $06, $06, $05, $07, $ff, $f3, $e9, $db, $db, $e7, $fa, $09, $13, $13
208fb     20 2C 2F 2D 
208ff     23 17 FF EC 
20903     E3 E6 EC F4 
20907     F9 F5 F4 F8 | 	byte	$20, $2c, $2f, $2d, $23, $17, $ff, $ec, $e3, $e6, $ec, $f4, $f9, $f5, $f4, $f8
2090b     FC FC 01 07 
2090f     07 03 FD F4 
20913     E1 D6 DE EE 
20917     01 0F 16 17 | 	byte	$fc, $fc, $01, $07, $07, $03, $fd, $f4, $e1, $d6, $de, $ee, $01, $0f, $16, $17
2091b     20 2B 2D 2A 
2091f     21 0F FA E7 
20923     E3 EC ED F4 
20927     F7 F6 F5 F8 | 	byte	$20, $2b, $2d, $2a, $21, $0f, $fa, $e7, $e3, $ec, $ed, $f4, $f7, $f6, $f5, $f8
2092b     FA FD FF 06 
2092f     07 05 FD EE 
20933     DC D7 E6 F4 
20937     0A 16 18 16 | 	byte	$fa, $fd, $ff, $06, $07, $05, $fd, $ee, $dc, $d7, $e6, $f4, $0a, $16, $18, $16
2093b     21 29 2C 2A 
2093f     1C 08 F5 E9 
20943     E6 EB F0 F6 
20947     F7 F7 F5 F9 | 	byte	$21, $29, $2c, $2a, $1c, $08, $f5, $e9, $e6, $eb, $f0, $f6, $f7, $f7, $f5, $f9
2094b     FC FC FD 06 
2094f     05 04 FA E8 
20953     D9 DA E9 FD 
20957     0E 1D 16 16 | 	byte	$fc, $fc, $fd, $06, $05, $04, $fa, $e8, $d9, $da, $e9, $fd, $0e, $1d, $16, $16
2095b     22 28 2D 22 
2095f     15 06 F3 E8 
20963     E9 ED F2 F3 
20967     F8 F4 F9 F9 | 	byte	$22, $28, $2d, $22, $15, $06, $f3, $e8, $e9, $ed, $f2, $f3, $f8, $f4, $f9, $f9
2096b     FD F9 FE 0A 
2096f     09 00 F5 E5 
20973     D7 DA ED 09 
20977     13 1E 13 18 | 	byte	$fd, $f9, $fe, $0a, $09, $00, $f5, $e5, $d7, $da, $ed, $09, $13, $1e, $13, $18
2097b     1E 2B 2B 1D 
2097f     0E 03 F1 E9 
20983     E9 F2 F1 F1 
20987     F8 F6 F7 FB | 	byte	$1e, $2b, $2b, $1d, $0e, $03, $f1, $e9, $e9, $f2, $f1, $f1, $f8, $f6, $f7, $fb
2098b     FC FB 01 0B 
2098f     0B F8 F5 E0 
20993     D4 DA F9 0F 
20997     1C 17 16 16 | 	byte	$fc, $fb, $01, $0b, $0b, $f8, $f5, $e0, $d4, $da, $f9, $0f, $1c, $17, $16, $16
2099b     20 28 27 19 
2099f     0C FD EE E9 
209a3     EC F3 F0 F6 
209a7     F7 FA F7 F9 | 	byte	$20, $28, $27, $19, $0c, $fd, $ee, $e9, $ec, $f3, $f0, $f6, $f7, $fa, $f7, $f9
209ab     F9 FE FF 0F 
209af     06 FA ED DA 
209b3     D3 E4 FD 19 
209b7     1B 16 17 17 | 	byte	$f9, $fe, $ff, $0f, $06, $fa, $ed, $da, $d3, $e4, $fd, $19, $1b, $16, $17, $17
209bb     22 22 26 12 
209bf     07 FA F1 E8 
209c3     F3 EE F1 F7 
209c7     FC F7 F3 F7 | 	byte	$22, $22, $26, $12, $07, $fa, $f1, $e8, $f3, $ee, $f1, $f7, $fc, $f7, $f3, $f7
209cb     FF FC 05 0E 
209cf     09 F8 E3 D7 
209d3     D3 EA 07 1A 
209d7     1B 1A 15 1B | 	byte	$ff, $fc, $05, $0e, $09, $f8, $e3, $d7, $d3, $ea, $07, $1a, $1b, $1a, $15, $1b
209db     1C 24 1F 0F 
209df     00 FA F0 EC 
209e3     F0 F3 F2 FA 
209e7     FD F5 F0 F7 | 	byte	$1c, $24, $1f, $0f, $00, $fa, $f0, $ec, $f0, $f3, $f2, $fa, $fd, $f5, $f0, $f7
209eb     FF FD 07 0D 
209ef     09 F2 E0 D4 
209f3     DB F4 0F 1B 
209f7     1D 1A 19 17 | 	byte	$ff, $fd, $07, $0d, $09, $f2, $e0, $d4, $db, $f4, $0f, $1b, $1d, $1a, $19, $17
209fb     1A 26 1B 08 
209ff     FC FA F1 EA 
20a03     F2 F7 F3 FC 
20a07     FB F3 EF F9 | 	byte	$1a, $26, $1b, $08, $fc, $fa, $f1, $ea, $f2, $f7, $f3, $fc, $fb, $f3, $ef, $f9
20a0b     FF 02 07 12 
20a0f     02 EA DA D9 
20a13     DF F9 15 20 
20a17     18 1A 1C 15 | 	byte	$ff, $02, $07, $12, $02, $ea, $da, $d9, $df, $f9, $15, $20, $18, $1a, $1c, $15
20a1b     1A 20 19 02 
20a1f     FA FC F2 E7 
20a23     F7 F7 F4 FB 
20a27     FD ED EB FB | 	byte	$1a, $20, $19, $02, $fa, $fc, $f2, $e7, $f7, $f7, $f4, $fb, $fd, $ed, $eb, $fb
20a2b     06 02 08 15 
20a2f     00 E1 D2 DF 
20a33     E6 FE 1B 21 
20a37     17 1B 1B 17 | 	byte	$06, $02, $08, $15, $00, $e1, $d2, $df, $e6, $fe, $1b, $21, $17, $1b, $1b, $17
20a3b     16 20 14 FE 
20a3f     F8 FC F1 EA 
20a43     F2 FD FA FA 
20a47     F7 EB ED FC | 	byte	$16, $20, $14, $fe, $f8, $fc, $f1, $ea, $f2, $fd, $fa, $fa, $f7, $eb, $ed, $fc
20a4b     06 08 0E 0C 
20a4f     FC DA D1 E0 
20a53     F5 02 18 21 
20a57     1F 15 17 19 | 	byte	$06, $08, $0e, $0c, $fc, $da, $d1, $e0, $f5, $02, $18, $21, $1f, $15, $17, $19
20a5b     1A 15 0D FE 
20a5f     F6 F7 F5 EE 
20a63     EF FD 01 F7 
20a67     EC EC F3 F7 | 	byte	$1a, $15, $0d, $fe, $f6, $f7, $f5, $ee, $ef, $fd, $01, $f7, $ec, $ec, $f3, $f7
20a6b     06 12 11 09 
20a6f     F0 DB D2 E3 
20a73     FD 0A 15 23 
20a77     1F 17 13 18 | 	byte	$06, $12, $11, $09, $f0, $db, $d2, $e3, $fd, $0a, $15, $23, $1f, $17, $13, $18
20a7b     19 0A 07 FF 
20a7f     FA F4 F1 F4 
20a83     F5 FB 03 F7 
20a87     EA E7 F6 FE | 	byte	$19, $0a, $07, $ff, $fa, $f4, $f1, $f4, $f5, $fb, $03, $f7, $ea, $e7, $f6, $fe
20a8b     06 15 16 01 
20a8f     E6 D6 DA EA 
20a93     FE 13 19 20 
20a97     1C 1A 13 14 | 	byte	$06, $15, $16, $01, $e6, $d6, $da, $ea, $fe, $13, $19, $20, $1c, $1a, $13, $14
20a9b     16 0C 00 FB 
20a9f     F9 F3 EF F6 
20aa3     FC FE 01 F5 
20aa7     E8 E6 F5 04 | 	byte	$16, $0c, $00, $fb, $f9, $f3, $ef, $f6, $fc, $fe, $01, $f5, $e8, $e6, $f5, $04
20aab     0E 16 11 F9 
20aaf     E3 D5 DE EF 
20ab3     05 15 1A 1E 
20ab7     1C 19 13 10 | 	byte	$0e, $16, $11, $f9, $e3, $d5, $de, $ef, $05, $15, $1a, $1e, $1c, $19, $13, $10
20abb     0F 08 FF F9 
20abf     F8 F4 F2 F8 
20ac3     FF 01 01 F4 
20ac7     E3 E5 F9 09 | 	byte	$0f, $08, $ff, $f9, $f8, $f4, $f2, $f8, $ff, $01, $01, $f4, $e3, $e5, $f9, $09
20acb     11 17 0E F4 
20acf     DC D7 E2 F6 
20ad3     0B 17 1B 1C 
20ad7     21 19 0C 0E | 	byte	$11, $17, $0e, $f4, $dc, $d7, $e2, $f6, $0b, $17, $1b, $1c, $21, $19, $0c, $0e
20adb     10 02 FA FA 
20adf     F9 EF F2 FD 
20ae3     FE 04 FE F2 
20ae7     DE E8 00 0F | 	byte	$10, $02, $fa, $fa, $f9, $ef, $f2, $fd, $fe, $04, $fe, $f2, $de, $e8, $00, $0f
20aeb     0F 14 0B EE 
20aef     D7 DA ED FA 
20af3     09 1C 1D 1B 
20af7     22 17 0D 07 | 	byte	$0f, $14, $0b, $ee, $d7, $da, $ed, $fa, $09, $1c, $1d, $1b, $22, $17, $0d, $07
20afb     0D 01 F5 F9 
20aff     FC F2 F4 FE 
20b03     08 01 F7 EE 
20b07     E0 E7 03 13 | 	byte	$0d, $01, $f5, $f9, $fc, $f2, $f4, $fe, $08, $01, $f7, $ee, $e0, $e7, $03, $13
20b0b     15 0E 05 E9 
20b0f     D3 DF F3 FF 
20b13     0C 1C 1F 1E 
20b17     1B 1A 0B 04 | 	byte	$15, $0e, $05, $e9, $d3, $df, $f3, $ff, $0c, $1c, $1f, $1e, $1b, $1a, $0b, $04
20b1b     06 FF F6 F5 
20b1f     F8 F7 F5 01 
20b23     0A 04 F3 E5 
20b27     E5 F0 04 14 | 	byte	$06, $ff, $f6, $f5, $f8, $f7, $f5, $01, $0a, $04, $f3, $e5, $e5, $f0, $04, $14
20b2b     19 0C F7 E6 
20b2f     DA E0 F4 05 
20b33     0F 17 22 1F 
20b37     1B 14 0B 05 | 	byte	$19, $0c, $f7, $e6, $da, $e0, $f4, $05, $0f, $17, $22, $1f, $1b, $14, $0b, $05
20b3b     FF FE F7 F3 
20b3f     F7 F7 FA 06 
20b43     0A 02 F0 E4 
20b47     E6 F5 0A 19 | 	byte	$ff, $fe, $f7, $f3, $f7, $f7, $fa, $06, $0a, $02, $f0, $e4, $e6, $f5, $0a, $19
20b4b     13 08 F5 E0 
20b4f     DD E4 FB 03 
20b53     11 1B 20 20 
20b57     1C 0F 07 02 | 	byte	$13, $08, $f5, $e0, $dd, $e4, $fb, $03, $11, $1b, $20, $20, $1c, $0f, $07, $02
20b5b     FE FB F3 F5 
20b5f     F3 F9 FF 07 
20b63     08 FF EC E1 
20b67     E7 00 0E 15 | 	byte	$fe, $fb, $f3, $f5, $f3, $f9, $ff, $07, $08, $ff, $ec, $e1, $e7, $00, $0e, $15
20b6b     14 06 EB DF 
20b6f     DE EE F9 0A 
20b73     14 1C 1E 21 
20b77     1A 0B 03 03 | 	byte	$14, $06, $eb, $df, $de, $ee, $f9, $0a, $14, $1c, $1e, $21, $1a, $0b, $03, $03
20b7b     FC F5 F5 F2 
20b7f     F4 F9 06 08 
20b83     06 F9 EF DD 
20b87     EE 05 11 12 | 	byte	$fc, $f5, $f5, $f2, $f4, $f9, $06, $08, $06, $f9, $ef, $dd, $ee, $05, $11, $12
20b8b     0F FF E8 DB 
20b8f     E4 F3 FB 0C 
20b93     18 1F 1B 24 
20b97     19 07 FF 02 | 	byte	$0f, $ff, $e8, $db, $e4, $f3, $fb, $0c, $18, $1f, $1b, $24, $19, $07, $ff, $02
20b9b     FC F0 F0 F9 
20b9f     F5 F9 0B 0E 
20ba3     FF F5 EA E5 
20ba7     F0 07 18 10 | 	byte	$fc, $f0, $f0, $f9, $f5, $f9, $0b, $0e, $ff, $f5, $ea, $e5, $f0, $07, $18, $10
20bab     09 F9 E7 DB 
20baf     E7 F9 02 06 
20bb3     1C 21 1E 1D 
20bb7     17 05 FB FD | 	byte	$09, $f9, $e7, $db, $e7, $f9, $02, $06, $1c, $21, $1e, $1d, $17, $05, $fb, $fd
20bbb     FB EF EC FA 
20bbf     F8 FC 0A 11 
20bc3     FF EE E8 EF 
20bc7     F6 09 15 13 | 	byte	$fb, $ef, $ec, $fa, $f8, $fc, $0a, $11, $ff, $ee, $e8, $ef, $f6, $09, $15, $13
20bcb     03 F2 E4 DF 
20bcf     ED FD 03 0A 
20bd3     1D 22 1D 1B 
20bd7     12 04 FD F5 | 	byte	$03, $f2, $e4, $df, $ed, $fd, $03, $0a, $1d, $22, $1d, $1b, $12, $04, $fd, $f5
20bdb     F5 ED F0 F6 
20bdf     FA 03 0D 0C 
20be3     FB EB EB EF 
20be7     FB 0B 16 12 | 	byte	$f5, $ed, $f0, $f6, $fa, $03, $0d, $0c, $fb, $eb, $eb, $ef, $fb, $0b, $16, $12
20beb     FC EE E4 E6 
20bef     EF FF 04 11 
20bf3     20 22 1C 1B 
20bf7     11 03 F6 F6 | 	byte	$fc, $ee, $e4, $e6, $ef, $ff, $04, $11, $20, $22, $1c, $1b, $11, $03, $f6, $f6
20bfb     F4 EB EE F5 
20bff     FF 05 0B 0A 
20c03     F8 EC EF F5 
20c07     FF 0C 19 0C | 	byte	$f4, $eb, $ee, $f5, $ff, $05, $0b, $0a, $f8, $ec, $ef, $f5, $ff, $0c, $19, $0c
20c0b     F5 E9 E8 E7 
20c0f     F3 FF 0C 16 
20c13     1C 21 1D 18 
20c17     0D 01 F7 F2 | 	byte	$f5, $e9, $e8, $e7, $f3, $ff, $0c, $16, $1c, $21, $1d, $18, $0d, $01, $f7, $f2
20c1b     EF EE EC F8 
20c1f     05 08 09 07 
20c23     F9 EE EC F9 
20c27     07 0C 16 08 | 	byte	$ef, $ee, $ec, $f8, $05, $08, $09, $07, $f9, $ee, $ec, $f9, $07, $0c, $16, $08
20c2b     F4 E7 E8 ED 
20c2f     F5 FE 12 13 
20c33     1D 1E 20 16 
20c37     06 FE F8 EC | 	byte	$f4, $e7, $e8, $ed, $f5, $fe, $12, $13, $1d, $1e, $20, $16, $06, $fe, $f8, $ec
20c3b     EA EE EE F9 
20c3f     03 0B 06 03 
20c43     FA EF EF 01 
20c47     09 10 0F 06 | 	byte	$ea, $ee, $ee, $f9, $03, $0b, $06, $03, $fa, $ef, $ef, $01, $09, $10, $0f, $06
20c4b     F3 E2 E7 F1 
20c4f     F8 05 0F 1A 
20c53     1C 1F 1E 13 
20c57     04 FD F5 E8 | 	byte	$f3, $e2, $e7, $f1, $f8, $05, $0f, $1a, $1c, $1f, $1e, $13, $04, $fd, $f5, $e8
20c5b     E6 EE F5 F7 
20c5f     07 0D 08 FD 
20c63     F8 F2 F6 FD 
20c67     0D 12 0A FF | 	byte	$e6, $ee, $f5, $f7, $07, $0d, $08, $fd, $f8, $f2, $f6, $fd, $0d, $12, $0a, $ff
20c6b     EF E4 E7 F5 
20c6f     FF 06 11 1E 
20c73     1C 1C 19 15 
20c77     04 F7 EE E9 | 	byte	$ef, $e4, $e7, $f5, $ff, $06, $11, $1e, $1c, $1c, $19, $15, $04, $f7, $ee, $e9
20c7b     E4 EE F4 FE 
20c7f     06 0B 07 FC 
20c83     F7 F6 F9 03 
20c87     0C 11 09 F9 | 	byte	$e4, $ee, $f4, $fe, $06, $0b, $07, $fc, $f7, $f6, $f9, $03, $0c, $11, $09, $f9
20c8b     EE E4 EC F5 
20c8f     01 06 17 1F 
20c93     1C 1A 1D 11 
20c97     00 F3 EE E5 | 	byte	$ee, $e4, $ec, $f5, $01, $06, $17, $1f, $1c, $1a, $1d, $11, $00, $f3, $ee, $e5
20c9b     E4 EF F7 00 
20c9f     07 09 06 FE 
20ca3     F7 FA FD 05 
20ca7     0D 0F 03 F3 | 	byte	$e4, $ef, $f7, $00, $07, $09, $06, $fe, $f7, $fa, $fd, $05, $0d, $0f, $03, $f3
20cab     EC EA E8 F8 
20caf     06 0E 17 1C 
20cb3     1F 1B 17 11 
20cb7     00 ED EB E1 | 	byte	$ec, $ea, $e8, $f8, $06, $0e, $17, $1c, $1f, $1b, $17, $11, $00, $ed, $eb, $e1
20cbb     E3 EF FC 00 
20cbf     05 0C 08 FB 
20cc3     F8 FE FE 05 
20cc7     0D 0D FD F3 | 	byte	$e3, $ef, $fc, $00, $05, $0c, $08, $fb, $f8, $fe, $fe, $05, $0d, $0d, $fd, $f3
20ccb     EF E8 EB 00 
20ccf     0A 0B 14 23 
20cd3     1D 17 15 11 
20cd7     FB EA E8 E3 | 	byte	$ef, $e8, $eb, $00, $0a, $0b, $14, $23, $1d, $17, $15, $11, $fb, $ea, $e8, $e3
20cdb     E4 EF 01 FF 
20cdf     03 0E 08 F8 
20ce3     FA 04 02 01 
20ce7     0F 0C FB EF | 	byte	$e4, $ef, $01, $ff, $03, $0e, $08, $f8, $fa, $04, $02, $01, $0f, $0c, $fb, $ef
20ceb     EE EB ED FF 
20cef     0D 0F 15 20 
20cf3     1E 13 14 0F 
20cf7     F8 E5 E4 E5 | 	byte	$ee, $eb, $ed, $ff, $0d, $0f, $15, $20, $1e, $13, $14, $0f, $f8, $e5, $e4, $e5
20cfb     E4 ED 00 04 
20cff     02 0A 09 FA 
20d03     FA 05 05 02 
20d07     09 0A F8 EC | 	byte	$e4, $ed, $00, $04, $02, $0a, $09, $fa, $fa, $05, $05, $02, $09, $0a, $f8, $ec
20d0b     ED F0 F3 01 
20d0f     0E 12 18 1C 
20d13     1E 16 11 0B 
20d17     F5 E3 E2 E4 | 	byte	$ed, $f0, $f3, $01, $0e, $12, $18, $1c, $1e, $16, $11, $0b, $f5, $e3, $e2, $e4
20d1b     E8 ED 00 05 
20d1f     05 07 05 00 
20d23     FE 03 07 06 
20d27     07 02 F8 EE | 	byte	$e8, $ed, $00, $05, $05, $07, $05, $00, $fe, $03, $07, $06, $07, $02, $f8, $ee
20d2b     ED F0 F6 05 
20d2f     0E 14 17 1C 
20d33     1C 18 0F 05 
20d37     F0 E4 DD E5 | 	byte	$ed, $f0, $f6, $05, $0e, $14, $17, $1c, $1c, $18, $0f, $05, $f0, $e4, $dd, $e5
20d3b     E9 EF 00 04 
20d3f     06 0A 06 01 
20d43     00 01 08 05 
20d47     04 FF F7 EF | 	byte	$e9, $ef, $00, $04, $06, $0a, $06, $01, $00, $01, $08, $05, $04, $ff, $f7, $ef
20d4b     EB F2 FD 04 
20d4f     11 15 19 1C 
20d53     1B 15 0D 00 
20d57     ED E0 DD E6 | 	byte	$eb, $f2, $fd, $04, $11, $15, $19, $1c, $1b, $15, $0d, $00, $ed, $e0, $dd, $e6
20d5b     EA F4 FF 06 
20d5f     08 09 05 04 
20d63     00 04 07 06 
20d67     02 FE F7 F1 | 	byte	$ea, $f4, $ff, $06, $08, $09, $05, $04, $00, $04, $07, $06, $02, $fe, $f7, $f1
20d6b     ED F4 00 06 
20d6f     11 15 1A 1A 
20d73     1B 16 09 FB 
20d77     F0 DC DD E4 | 	byte	$ed, $f4, $00, $06, $11, $15, $1a, $1a, $1b, $16, $09, $fb, $f0, $dc, $dd, $e4
20d7b     EB F3 FF 07 
20d7f     0B 08 08 04 
20d83     00 08 07 05 
20d87     FE FD F8 EE | 	byte	$eb, $f3, $ff, $07, $0b, $08, $08, $04, $00, $08, $07, $05, $fe, $fd, $f8, $ee
20d8b     ED FC 00 0A 
20d8f     11 16 1C 1C 
20d93     1A 13 06 FB 
20d97     E8 D9 DE E5 | 	byte	$ed, $fc, $00, $0a, $11, $16, $1c, $1c, $1a, $13, $06, $fb, $e8, $d9, $de, $e5
20d9b     ED F5 00 07 
20d9f     0B 0B 07 00 
20da3     04 09 06 FE 
20da7     00 FE F5 EC | 	byte	$ed, $f5, $00, $07, $0b, $0b, $07, $00, $04, $09, $06, $fe, $00, $fe, $f5, $ec
20dab     F4 FE 04 0A 
20daf     11 18 1A 1D 
20db3     14 11 06 F7 
20db7     E4 DD DD E8 | 	byte	$f4, $fe, $04, $0a, $11, $18, $1a, $1d, $14, $11, $06, $f7, $e4, $dd, $dd, $e8
20dbb     EA F6 00 09 
20dbf     0D 08 05 04 
20dc3     05 06 05 00 
20dc7     01 FC F4 EF | 	byte	$ea, $f6, $00, $09, $0d, $08, $05, $04, $05, $06, $05, $00, $01, $fc, $f4, $ef
20dcb     F8 FF 05 0A 
20dcf     16 17 19 1D 
20dd3     16 0E 03 F3 
20dd7     E3 D9 E2 E6 | 	byte	$f8, $ff, $05, $0a, $16, $17, $19, $1d, $16, $0e, $03, $f3, $e3, $d9, $e2, $e6
20ddb     E8 F8 03 09 
20ddf     0A 0B 07 03 
20de3     06 09 01 00 
20de7     01 FA F0 F2 | 	byte	$e8, $f8, $03, $09, $0a, $0b, $07, $03, $06, $09, $01, $00, $01, $fa, $f0, $f2
20deb     FC 01 01 11 
20def     17 14 18 1B 
20df3     16 07 FF F2 
20df7     E1 D9 E2 E3 | 	byte	$fc, $01, $01, $11, $17, $14, $18, $1b, $16, $07, $ff, $f2, $e1, $d9, $e2, $e3
20dfb     EB F7 07 09 
20dff     0A 0C 08 02 
20e03     05 09 03 FF 
20e07     FC FD F3 F2 | 	byte	$eb, $f7, $07, $09, $0a, $0c, $08, $02, $05, $09, $03, $ff, $fc, $fd, $f3, $f2
20e0b     FE 02 04 0F 
20e0f     17 18 13 1C 
20e13     15 05 FB F1 
20e17     E2 D9 DD E9 | 	byte	$fe, $02, $04, $0f, $17, $18, $13, $1c, $15, $05, $fb, $f1, $e2, $d9, $dd, $e9
20e1b     EB F5 09 0D 
20e1f     09 09 09 06 
20e23     03 09 07 FB 
20e27     FE FD F6 F1 | 	byte	$eb, $f5, $09, $0d, $09, $09, $09, $06, $03, $09, $07, $fb, $fe, $fd, $f6, $f1
20e2b     FE 07 06 0B 
20e2f     1B 17 15 17 
20e33     15 04 F7 F1 
20e37     E0 D7 DD E9 | 	byte	$fe, $07, $06, $0b, $1b, $17, $15, $17, $15, $04, $f7, $f1, $e0, $d7, $dd, $e9
20e3b     EC FA 09 11 
20e3f     09 08 09 07 
20e43     03 07 05 FF 
20e47     FA FD F7 F3 | 	byte	$ec, $fa, $09, $11, $09, $08, $09, $07, $03, $07, $05, $ff, $fa, $fd, $f7, $f3
20e4b     FF 08 06 11 
20e4f     1A 17 14 16 
20e53     12 00 F5 EE 
20e57     E1 D8 DD E7 | 	byte	$ff, $08, $06, $11, $1a, $17, $14, $16, $12, $00, $f5, $ee, $e1, $d8, $dd, $e7
20e5b     EF FA 0A 10 
20e5f     0A 09 09 06 
20e63     06 07 05 FE 
20e67     FD FD F5 F7 | 	byte	$ef, $fa, $0a, $10, $0a, $09, $09, $06, $06, $07, $05, $fe, $fd, $fd, $f5, $f7
20e6b     00 05 09 13 
20e6f     17 15 13 15 
20e73     0D FD F8 EE 
20e77     DC D6 DE E7 | 	byte	$00, $05, $09, $13, $17, $15, $13, $15, $0d, $fd, $f8, $ee, $dc, $d6, $de, $e7
20e7b     EE FC 0D 0E 
20e7f     0A 08 0A 07 
20e83     05 08 05 FE 
20e87     FF FD F5 F7 | 	byte	$ee, $fc, $0d, $0e, $0a, $08, $0a, $07, $05, $08, $05, $fe, $ff, $fd, $f5, $f7
20e8b     01 09 0C 12 
20e8f     19 15 13 11 
20e93     08 FE F6 EB 
20e97     DE D7 DD E9 | 	byte	$01, $09, $0c, $12, $19, $15, $13, $11, $08, $fe, $f6, $eb, $de, $d7, $dd, $e9
20e9b     F0 FF 11 0F 
20e9f     08 06 0B 08 
20ea3     03 08 06 01 
20ea7     FE FC F6 F9 | 	byte	$f0, $ff, $11, $0f, $08, $06, $0b, $08, $03, $08, $06, $01, $fe, $fc, $f6, $f9
20eab     02 0A 0D 13 
20eaf     19 15 0F 0D 
20eb3     0A FC F5 EA 
20eb7     DE D6 DC E8 | 	byte	$02, $0a, $0d, $13, $19, $15, $0f, $0d, $0a, $fc, $f5, $ea, $de, $d6, $dc, $e8
20ebb     F3 02 11 0E 
20ebf     06 06 0B 07 
20ec3     02 08 08 FF 
20ec7     FD F9 F7 FA | 	byte	$f3, $02, $11, $0e, $06, $06, $0b, $07, $02, $08, $08, $ff, $fd, $f9, $f7, $fa
20ecb     01 0A 0F 16 
20ecf     16 13 0E 0E 
20ed3     06 FE F3 E7 
20ed7     DC D6 DB E6 | 	byte	$01, $0a, $0f, $16, $16, $13, $0e, $0e, $06, $fe, $f3, $e7, $dc, $d6, $db, $e6
20edb     F9 06 0F 0C 
20edf     09 09 0A 06 
20ee3     05 0A 07 01 
20ee7     FA F9 FA FB | 	byte	$f9, $06, $0f, $0c, $09, $09, $0a, $06, $05, $0a, $07, $01, $fa, $f9, $fa, $fb
20eeb     01 0A 13 16 
20eef     10 12 0F 0A 
20ef3     05 FC F5 E7 
20ef7     D7 D7 DC EA | 	byte	$01, $0a, $13, $16, $10, $12, $0f, $0a, $05, $fc, $f5, $e7, $d7, $d7, $dc, $ea
20efb     FA 09 10 0A 
20eff     08 0A 07 06 
20f03     09 0C 05 FD 
20f07     FE F8 F7 FE | 	byte	$fa, $09, $10, $0a, $08, $0a, $07, $06, $09, $0c, $05, $fd, $fe, $f8, $f7, $fe
20f0b     08 0A 13 16 
20f0f     12 0E 0B 0C 
20f13     04 FA F5 E6 
20f17     D6 D6 DD EC | 	byte	$08, $0a, $13, $16, $12, $0e, $0b, $0c, $04, $fa, $f5, $e6, $d6, $d6, $dd, $ec
20f1b     FB 0B 10 0B 
20f1f     06 09 09 06 
20f23     08 0C 0A FC 
20f27     FA FA F8 FD | 	byte	$fb, $0b, $10, $0b, $06, $09, $09, $06, $08, $0c, $0a, $fc, $fa, $fa, $f8, $fd
20f2b     07 10 13 12 
20f2f     13 0E 08 0B 
20f33     07 F9 EF E5 
20f37     D6 D2 DE F2 | 	byte	$07, $10, $13, $12, $13, $0e, $08, $0b, $07, $f9, $ef, $e5, $d6, $d2, $de, $f2
20f3b     FD 0B 11 0A 
20f3f     04 0A 0B 05 
20f43     09 12 05 FC 
20f47     F8 FB F7 FE | 	byte	$fd, $0b, $11, $0a, $04, $0a, $0b, $05, $09, $12, $05, $fc, $f8, $fb, $f7, $fe
20f4b     0A 12 10 12 
20f4f     11 0C 08 0B 
20f53     07 F6 EF E2 
20f57     D6 D1 E1 F3 | 	byte	$0a, $12, $10, $12, $11, $0c, $08, $0b, $07, $f6, $ef, $e2, $d6, $d1, $e1, $f3
20f5b     03 0A 0E 08 
20f5f     09 06 07 09 
20f63     0F 10 06 F8 
20f67     F9 F9 FA FE | 	byte	$03, $0a, $0e, $08, $09, $06, $07, $09, $0f, $10, $06, $f8, $f9, $f9, $fa, $fe
20f6b     0A 15 12 0E 
20f6f     0F 0E 08 0A 
20f73     03 F9 EA E2 
20f77     D4 D3 E1 F9 | 	byte	$0a, $15, $12, $0e, $0f, $0e, $08, $0a, $03, $f9, $ea, $e2, $d4, $d3, $e1, $f9
20f7b     04 0A 0B 0B 
20f7f     07 04 09 0F 
20f83     0F 0D 05 F8 
20f87     F8 F8 FD 00 | 	byte	$04, $0a, $0b, $0b, $07, $04, $09, $0f, $0f, $0d, $05, $f8, $f8, $f8, $fd, $00
20f8b     0D 14 12 0A 
20f8f     0E 0D 08 07 
20f93     02 F7 E9 DB 
20f97     D2 D6 E6 FA | 	byte	$0d, $14, $12, $0a, $0e, $0d, $08, $07, $02, $f7, $e9, $db, $d2, $d6, $e6, $fa
20f9b     05 0B 0C 0A 
20f9f     05 04 0B 12 
20fa3     0F 0D 04 F8 
20fa7     F5 F9 FE 04 | 	byte	$05, $0b, $0c, $0a, $05, $04, $0b, $12, $0f, $0d, $04, $f8, $f5, $f9, $fe, $04
20fab     0F 15 0F 0C 
20faf     0D 0B 09 07 
20fb3     04 F4 E5 DA 
20fb7     D3 D8 E8 FB | 	byte	$0f, $15, $0f, $0c, $0d, $0b, $09, $07, $04, $f4, $e5, $da, $d3, $d8, $e8, $fb
20fbb     06 0A 0C 07 
20fbf     04 05 0F 13 
20fc3     10 0D 05 F5 
20fc7     F2 FC 00 05 | 	byte	$06, $0a, $0c, $07, $04, $05, $0f, $13, $10, $0d, $05, $f5, $f2, $fc, $00, $05
20fcb     0F 13 0C 0A 
20fcf     0D 0E 08 09 
20fd3     02 F2 E2 D6 
20fd7     D5 D9 EA FE | 	byte	$0f, $13, $0c, $0a, $0d, $0e, $08, $09, $02, $f2, $e2, $d6, $d5, $d9, $ea, $fe
20fdb     08 09 0A 06 
20fdf     06 05 11 15 
20fe3     11 0B 01 F3 
20fe7     F4 FB 03 08 | 	byte	$08, $09, $0a, $06, $06, $05, $11, $15, $11, $0b, $01, $f3, $f4, $fb, $03, $08
20feb     0E 12 0B 0A 
20fef     0C 0B 0D 07 
20ff3     FE F1 DF D6 
20ff7     D4 DE EC 00 | 	byte	$0e, $12, $0b, $0a, $0c, $0b, $0d, $07, $fe, $f1, $df, $d6, $d4, $de, $ec, $00
20ffb     0A 0A 06 07 
20fff     05 0A 12 16 
21003     15 0A FB F5 
21007     F5 FB 05 08 | 	byte	$0a, $0a, $06, $07, $05, $0a, $12, $16, $15, $0a, $fb, $f5, $f5, $fb, $05, $08
2100b     10 0E 0C 08 
2100f     0B 0E 0E 04 
21013     FC EC DF D3 
21017     D4 DF F3 02 | 	byte	$10, $0e, $0c, $08, $0b, $0e, $0e, $04, $fc, $ec, $df, $d3, $d4, $df, $f3, $02
2101b     07 08 07 08 
2101f     02 0B 16 1A 
21023     11 08 FA F4 
21027     F2 01 05 0A | 	byte	$07, $08, $07, $08, $02, $0b, $16, $1a, $11, $08, $fa, $f4, $f2, $01, $05, $0a
2102b     0E 11 07 07 
2102f     0C 11 0B 03 
21033     FC EB DA D2 
21037     D9 E1 F4 04 | 	byte	$0e, $11, $07, $07, $0c, $11, $0b, $03, $fc, $eb, $da, $d2, $d9, $e1, $f4, $04
2103b     09 04 07 04 
2103f     05 0C 1A 1B 
21043     0F 01 FB F3 
21047     F7 00 06 0A | 	byte	$09, $04, $07, $04, $05, $0c, $1a, $1b, $0f, $01, $fb, $f3, $f7, $00, $06, $0a
2104b     0D 0D 07 09 
2104f     0F 11 09 02 
21053     FA E9 D6 D4 
21057     DB E5 F5 07 | 	byte	$0d, $0d, $07, $09, $0f, $11, $09, $02, $fa, $e9, $d6, $d4, $db, $e5, $f5, $07
2105b     06 06 04 05 
2105f     07 0F 1E 1A 
21063     0B 01 F9 F3 
21067     F6 01 0A 07 | 	byte	$06, $06, $04, $05, $07, $0f, $1e, $1a, $0b, $01, $f9, $f3, $f6, $01, $0a, $07
2106b     0D 0C 09 06 
2106f     11 0F 0A FF 
21073     F7 E4 D5 D4 
21077     DE E7 F9 03 | 	byte	$0d, $0c, $09, $06, $11, $0f, $0a, $ff, $f7, $e4, $d5, $d4, $de, $e7, $f9, $03
2107b     07 03 01 06 
2107f     09 16 1C 19 
21083     0A FF F4 F6 
21087     F9 03 07 09 | 	byte	$07, $03, $01, $06, $09, $16, $1c, $19, $0a, $ff, $f4, $f6, $f9, $03, $07, $09
2108b     08 0B 07 0A 
2108f     10 12 08 FC 
21093     F2 E1 D6 D3 
21097     DE EE FB 02 | 	byte	$08, $0b, $07, $0a, $10, $12, $08, $fc, $f2, $e1, $d6, $d3, $de, $ee, $fb, $02
2109b     07 01 01 07 
2109f     10 16 1F 19 
210a3     08 FB F5 F5 
210a7     FB 03 07 0A | 	byte	$07, $01, $01, $07, $10, $16, $1f, $19, $08, $fb, $f5, $f5, $fb, $03, $07, $0a
210ab     09 0A 0C 0B 
210af     0F 12 06 F9 
210b3     EF E3 D3 D4 
210b7     E3 EF FB 05 | 	byte	$09, $0a, $0c, $0b, $0f, $12, $06, $f9, $ef, $e3, $d3, $d4, $e3, $ef, $fb, $05
210bb     06 00 FF 0A 
210bf     13 17 1F 18 
210c3     07 F7 F6 F7 
210c7     FC 01 0A 07 | 	byte	$06, $00, $ff, $0a, $13, $17, $1f, $18, $07, $f7, $f6, $f7, $fc, $01, $0a, $07
210cb     08 0A 0B 0D 
210cf     13 0F 04 F7 
210d3     EB E0 D4 D8 
210d7     E5 F3 FD 03 | 	byte	$08, $0a, $0b, $0d, $13, $0f, $04, $f7, $eb, $e0, $d4, $d8, $e5, $f3, $fd, $03
210db     03 00 00 0F 
210df     17 1C 1E 14 
210e3     02 F6 F5 F8 
210e7     FE 01 07 08 | 	byte	$03, $00, $00, $0f, $17, $1c, $1e, $14, $02, $f6, $f5, $f8, $fe, $01, $07, $08
210eb     07 09 0E 0F 
210ef     11 0E 04 F2 
210f3     E9 DF D5 D8 
210f7     EA F7 FB 02 | 	byte	$07, $09, $0e, $0f, $11, $0e, $04, $f2, $e9, $df, $d5, $d8, $ea, $f7, $fb, $02
210fb     02 FF 01 12 
210ff     1B 1D 1B 13 
21103     01 F5 F6 FA 
21107     FD 00 07 09 | 	byte	$02, $ff, $01, $12, $1b, $1d, $1b, $13, $01, $f5, $f6, $fa, $fd, $00, $07, $09
2110b     06 0B 11 10 
2110f     0F 0B 01 F0 
21113     E5 DF D7 DA 
21117     EB F8 FD FD | 	byte	$06, $0b, $11, $10, $0f, $0b, $01, $f0, $e5, $df, $d7, $da, $eb, $f8, $fd, $fd
2111b     01 00 06 13 
2111f     1E 1F 1A 0D 
21123     FF F4 F5 FC 
21127     FE 00 05 0A | 	byte	$01, $00, $06, $13, $1e, $1f, $1a, $0d, $ff, $f4, $f5, $fc, $fe, $00, $05, $0a
2112b     07 0A 10 14 
2112f     10 07 FC F0 
21133     E3 DD D9 DE 
21137     EE F9 FC FC | 	byte	$07, $0a, $10, $14, $10, $07, $fc, $f0, $e3, $dd, $d9, $de, $ee, $f9, $fc, $fc
2113b     FC 03 08 15 
2113f     20 21 1A 08 
21143     FD F6 F6 FB 
21147     FD 00 06 08 | 	byte	$fc, $03, $08, $15, $20, $21, $1a, $08, $fd, $f6, $f6, $fb, $fd, $00, $06, $08
2114b     07 0C 13 14 
2114f     0D 04 FB EE 
21153     E3 DB DC E3 
21157     F0 F8 FA FB | 	byte	$07, $0c, $13, $14, $0d, $04, $fb, $ee, $e3, $db, $dc, $e3, $f0, $f8, $fa, $fb
2115b     FD 04 0D 1A 
2115f     21 21 15 06 
21163     FB F7 F6 FA 
21167     FB 01 07 08 | 	byte	$fd, $04, $0d, $1a, $21, $21, $15, $06, $fb, $f7, $f6, $fa, $fb, $01, $07, $08
2116b     08 10 15 12 
2116f     09 02 F9 E9 
21173     DF DF DE E3 
21177     F2 FA F9 F7 | 	byte	$08, $10, $15, $12, $09, $02, $f9, $e9, $df, $df, $de, $e3, $f2, $fa, $f9, $f7
2117b     01 06 0E 1C 
2117f     26 1E 11 05 
21183     FD F4 F6 FB 
21187     FB 01 07 08 | 	byte	$01, $06, $0e, $1c, $26, $1e, $11, $05, $fd, $f4, $f6, $fb, $fb, $01, $07, $08
2118b     0A 12 14 12 
2118f     07 01 F5 E7 
21193     DF DF E1 E6 
21197     F1 F9 F6 F7 | 	byte	$0a, $12, $14, $12, $07, $01, $f5, $e7, $df, $df, $e1, $e6, $f1, $f9, $f6, $f7
2119b     FF 09 15 20 
2119f     25 1F 0F 02 
211a3     FC F5 F6 F9 
211a7     FE 01 06 07 | 	byte	$ff, $09, $15, $20, $25, $1f, $0f, $02, $fc, $f5, $f6, $f9, $fe, $01, $06, $07
211ab     0F 12 15 10 
211af     08 FC F3 E6 
211b3     E0 DF E4 EA 
211b7     F1 F7 F4 F8 | 	byte	$0f, $12, $15, $10, $08, $fc, $f3, $e6, $e0, $df, $e4, $ea, $f1, $f7, $f4, $f8
211bb     00 0E 19 23 
211bf     22 1C 0C 01 
211c3     F8 F7 F6 F9 
211c7     FC 03 07 08 | 	byte	$00, $0e, $19, $23, $22, $1c, $0c, $01, $f8, $f7, $f6, $f9, $fc, $03, $07, $08
211cb     0F 14 13 0D 
211cf     05 FA EE E4 
211d3     E2 E1 E6 EC 
211d7     F3 F5 F3 F8 | 	byte	$0f, $14, $13, $0d, $05, $fa, $ee, $e4, $e2, $e1, $e6, $ec, $f3, $f5, $f3, $f8
211db     03 10 1E 23 
211df     22 19 0B FD 
211e3     F7 F6 F8 F7 
211e7     FD 07 06 09 | 	byte	$03, $10, $1e, $23, $22, $19, $0b, $fd, $f7, $f6, $f8, $f7, $fd, $07, $06, $09
211eb     10 15 11 0C 
211ef     02 F9 EA E5 
211f3     E2 E5 E7 EE 
211f7     F2 F4 F0 FA | 	byte	$10, $15, $11, $0c, $02, $f9, $ea, $e5, $e2, $e5, $e7, $ee, $f2, $f4, $f0, $fa
211fb     09 14 1F 25 
211ff     21 17 08 FD 
21203     F8 F3 F7 F8 
21207     FF 03 09 0D | 	byte	$09, $14, $1f, $25, $21, $17, $08, $fd, $f8, $f3, $f7, $f8, $ff, $03, $09, $0d
2120b     0F 14 13 08 
2120f     FF F4 EA E3 
21213     E3 E8 E8 ED 
21217     F3 F2 ED FB | 	byte	$0f, $14, $13, $08, $ff, $f4, $ea, $e3, $e3, $e8, $e8, $ed, $f3, $f2, $ed, $fb
2121b     0D 1A 1D 27 
2121f     22 13 04 FF 
21223     F6 F2 F5 FC 
21227     FC 02 0B 0F | 	byte	$0d, $1a, $1d, $27, $22, $13, $04, $ff, $f6, $f2, $f5, $fc, $fc, $02, $0b, $0f
2122b     10 12 13 07 
2122f     FA F2 EB E3 
21233     E5 E7 EC EE 
21237     F1 EF F1 FC | 	byte	$10, $12, $13, $07, $fa, $f2, $eb, $e3, $e5, $e7, $ec, $ee, $f1, $ef, $f1, $fc
2123b     10 1B 22 25 
2123f     1F 12 01 FA 
21243     F8 F3 F3 FA 
21247     00 06 09 10 | 	byte	$10, $1b, $22, $25, $1f, $12, $01, $fa, $f8, $f3, $f3, $fa, $00, $06, $09, $10
2124b     11 13 10 04 
2124f     F7 F0 EA E4 
21253     E6 E9 EE EF 
21257     ED ED F3 02 | 	byte	$11, $13, $10, $04, $f7, $f0, $ea, $e4, $e6, $e9, $ee, $ef, $ed, $ed, $f3, $02
2125b     14 1D 24 24 
2125f     1E 0D 00 FA 
21263     F6 F2 F4 F9 
21267     01 06 0B 10 | 	byte	$14, $1d, $24, $24, $1e, $0d, $00, $fa, $f6, $f2, $f4, $f9, $01, $06, $0b, $10
2126b     13 12 0C 02 
2126f     F4 F1 E9 E5 
21273     E8 EE ED EC 
21277     ED ED F4 07 | 	byte	$13, $12, $0c, $02, $f4, $f1, $e9, $e5, $e8, $ee, $ed, $ec, $ed, $ed, $f4, $07
2127b     18 21 24 24 
2127f     1D 09 FE FB 
21283     F5 EE F4 FE 
21287     02 03 0D 13 | 	byte	$18, $21, $24, $24, $1d, $09, $fe, $fb, $f5, $ee, $f4, $fe, $02, $03, $0d, $13
2128b     11 0F 0B FF 
2128f     F4 EE EB E6 
21293     E8 F0 EC EB 
21297     EB EE F9 08 | 	byte	$11, $0f, $0b, $ff, $f4, $ee, $eb, $e6, $e8, $f0, $ec, $eb, $eb, $ee, $f9, $08
2129b     1A 25 24 22 
2129f     1A 08 FC F8 
212a3     F3 F0 F5 FE 
212a7     02 06 0F 14 | 	byte	$1a, $25, $24, $22, $1a, $08, $fc, $f8, $f3, $f0, $f5, $fe, $02, $06, $0f, $14
212ab     11 0D 09 FC 
212af     F1 EC EB E9 
212b3     EA F0 ED EB 
212b7     E9 EE FC 0C | 	byte	$11, $0d, $09, $fc, $f1, $ec, $eb, $e9, $ea, $f0, $ed, $eb, $e9, $ee, $fc, $0c
212bb     1D 27 23 1F 
212bf     15 09 FB F3 
212c3     F4 F3 F4 FD 
212c7     04 09 10 13 | 	byte	$1d, $27, $23, $1f, $15, $09, $fb, $f3, $f4, $f3, $f4, $fd, $04, $09, $10, $13
212cb     11 0C 04 FE 
212cf     EF ED ED EB 
212d3     EB ED EE EA 
212d7     E7 F1 01 0E | 	byte	$11, $0c, $04, $fe, $ef, $ed, $ed, $eb, $eb, $ed, $ee, $ea, $e7, $f1, $01, $0e
212db     21 27 23 1C 
212df     15 08 F6 F2 
212e3     F6 F2 F3 FE 
212e7     08 09 0E 16 | 	byte	$21, $27, $23, $1c, $15, $08, $f6, $f2, $f6, $f2, $f3, $fe, $08, $09, $0e, $16
212eb     11 07 02 FA 
212ef     F0 EA EE EE 
212f3     EA EE F0 E7 
212f7     E8 F2 05 14 | 	byte	$11, $07, $02, $fa, $f0, $ea, $ee, $ee, $ea, $ee, $f0, $e7, $e8, $f2, $05, $14
212fb     20 28 23 1A 
212ff     11 04 F8 F2 
21303     F3 F5 F4 FF 
21307     07 0C 10 13 | 	byte	$20, $28, $23, $1a, $11, $04, $f8, $f2, $f3, $f5, $f4, $ff, $07, $0c, $10, $13
2130b     10 07 FE F7 
2130f     F1 EC ED EE 
21313     EF EC ED E7 
21317     E9 F5 08 17 | 	byte	$10, $07, $fe, $f7, $f1, $ec, $ed, $ee, $ef, $ec, $ed, $e7, $e9, $f5, $08, $17
2131b     23 27 22 18 
2131f     0E 01 F6 F3 
21323     F1 F4 F7 00 
21327     07 0E 12 13 | 	byte	$23, $27, $22, $18, $0e, $01, $f6, $f3, $f1, $f4, $f7, $00, $07, $0e, $12, $13
2132b     0C 05 FD F3 
2132f     F1 EE ED ED 
21333     F0 EE E8 E6 
21337     ED F8 0A 1C | 	byte	$0c, $05, $fd, $f3, $f1, $ee, $ed, $ed, $f0, $ee, $e8, $e6, $ed, $f8, $0a, $1c
2133b     25 26 20 17 
2133f     0D FD F4 F4 
21343     F2 F3 F8 00 
21347     0A 0D 12 12 | 	byte	$25, $26, $20, $17, $0d, $fd, $f4, $f4, $f2, $f3, $f8, $00, $0a, $0d, $12, $12
2134b     0A 04 FB F4 
2134f     EF ED EF EF 
21353     EE EC EA E9 
21357     EB FC 11 1F | 	byte	$0a, $04, $fb, $f4, $ef, $ed, $ef, $ef, $ee, $ec, $ea, $e9, $eb, $fc, $11, $1f
2135b     25 25 20 14 
2135f     08 FB F4 F1 
21363     F4 F5 F7 02 
21367     0C 10 11 0E | 	byte	$25, $25, $20, $14, $08, $fb, $f4, $f1, $f4, $f5, $f7, $02, $0c, $10, $11, $0e
2136b     0B 00 F9 F2 
2136f     F0 EE F0 EF 
21373     ED EC E9 E8 
21377     EF 02 13 21 | 	byte	$0b, $00, $f9, $f2, $f0, $ee, $f0, $ef, $ed, $ec, $e9, $e8, $ef, $02, $13, $21
2137b     24 26 1B 14 
2137f     05 F9 F2 F5 
21383     F1 F4 FA 06 
21387     0D 0F 14 0E | 	byte	$24, $26, $1b, $14, $05, $f9, $f2, $f5, $f1, $f4, $fa, $06, $0d, $0f, $14, $0e
2138b     06 FF F9 F0 
2138f     F0 F0 F1 EC 
21393     EE EE E8 E7 
21397     F4 06 16 20 | 	byte	$06, $ff, $f9, $f0, $f0, $f0, $f1, $ec, $ee, $ee, $e8, $e7, $f4, $06, $16, $20
2139b     28 25 18 10 
2139f     04 F8 F1 F4 
213a3     F4 F3 FB 08 
213a7     0B 10 12 0E | 	byte	$28, $25, $18, $10, $04, $f8, $f1, $f4, $f4, $f3, $fb, $08, $0b, $10, $12, $0e
213ab     04 FC F7 F2 
213af     EE F0 F1 EF 
213b3     EE EC E7 E9 
213b7     F8 08 18 22 | 	byte	$04, $fc, $f7, $f2, $ee, $f0, $f1, $ef, $ee, $ec, $e7, $e9, $f8, $08, $18, $22
213bb     28 22 17 0A 
213bf     04 F5 F2 F4 
213c3     F4 F4 FE 08 
213c7     0F 0E 12 0D | 	byte	$28, $22, $17, $0a, $04, $f5, $f2, $f4, $f4, $f4, $fe, $08, $0f, $0e, $12, $0d
213cb     00 FA F7 F3 
213cf     ED F0 F2 F1 
213d3     EA EC E9 ED 
213d7     FA 0B 1A 24 | 	byte	$00, $fa, $f7, $f3, $ed, $f0, $f2, $f1, $ea, $ec, $e9, $ed, $fa, $0b, $1a, $24
213db     26 20 13 0B 
213df     00 F3 F3 F3 
213e3     F5 F6 FE 0A 
213e7     0E 11 0F 08 | 	byte	$26, $20, $13, $0b, $00, $f3, $f3, $f3, $f5, $f6, $fe, $0a, $0e, $11, $0f, $08
213eb     01 F8 F7 F1 
213ef     EE F2 F3 EF 
213f3     EC EA EC EF 
213f7     FA 10 1D 23 | 	byte	$01, $f8, $f7, $f1, $ee, $f2, $f3, $ef, $ec, $ea, $ec, $ef, $fa, $10, $1d, $23
213fb     24 1E 12 06 
213ff     FD F5 F1 F5 
21403     F5 F9 FF 0A 
21407     11 11 0A 09 | 	byte	$24, $1e, $12, $06, $fd, $f5, $f1, $f5, $f5, $f9, $ff, $0a, $11, $11, $0a, $09
2140b     FF F9 F3 F1 
2140f     EF F1 F2 EF 
21413     ED EC ED F1 
21417     00 12 20 23 | 	byte	$ff, $f9, $f3, $f1, $ef, $f1, $f2, $ef, $ed, $ec, $ed, $f1, $00, $12, $20, $23
2141b     23 1C 10 03 
2141f     FB F5 F2 F4 
21423     F7 FA 02 0C 
21427     10 0E 0C 05 | 	byte	$23, $1c, $10, $03, $fb, $f5, $f2, $f4, $f7, $fa, $02, $0c, $10, $0e, $0c, $05
2142b     FD F7 F4 F1 
2142f     F0 F2 F2 EF 
21433     ED ED ED F3 
21437     04 15 1F 24 | 	byte	$fd, $f7, $f4, $f1, $f0, $f2, $f2, $ef, $ed, $ed, $ed, $f3, $04, $15, $1f, $24
2143b     20 1B 0D 00 
2143f     F9 F6 F2 F4 
21443     F8 FC 04 0D 
21447     10 0C 0C 04 | 	byte	$20, $1b, $0d, $00, $f9, $f6, $f2, $f4, $f8, $fc, $04, $0d, $10, $0c, $0c, $04
2144b     FC F5 F4 F2 
2144f     F0 F0 F3 F1 
21453     ED EC EF F8 
21457     06 17 20 23 | 	byte	$fc, $f5, $f4, $f2, $f0, $f0, $f3, $f1, $ed, $ec, $ef, $f8, $06, $17, $20, $23
2145b     20 18 09 FD 
2145f     F8 F6 F2 F5 
21463     FA FF 03 0D 
21467     0F 0C 08 02 | 	byte	$20, $18, $09, $fd, $f8, $f6, $f2, $f5, $fa, $ff, $03, $0d, $0f, $0c, $08, $02
2146b     FB F4 F2 F3 
2146f     EF F1 F3 F1 
21473     EF ED F2 FB 
21477     08 17 21 23 | 	byte	$fb, $f4, $f2, $f3, $ef, $f1, $f3, $f1, $ef, $ed, $f2, $fb, $08, $17, $21, $23
2147b     1F 13 08 FB 
2147f     F8 F6 F4 F4 
21483     FD 00 04 0D 
21487     0F 0D 04 00 | 	byte	$1f, $13, $08, $fb, $f8, $f6, $f4, $f4, $fd, $00, $04, $0d, $0f, $0d, $04, $00
2148b     FB F4 F1 F2 
2148f     F2 F0 F0 F4 
21493     EF EC F4 FF 
21497     0C 18 22 22 | 	byte	$fb, $f4, $f1, $f2, $f2, $f0, $f0, $f4, $ef, $ec, $f4, $ff, $0c, $18, $22, $22
2149b     1B 11 06 F9 
2149f     F7 F5 F5 F6 
214a3     FD 03 07 0A 
214a7     0E 0C 04 FF | 	byte	$1b, $11, $06, $f9, $f7, $f5, $f5, $f6, $fd, $03, $07, $0a, $0e, $0c, $04, $ff
214ab     F9 F5 F1 F1 
214af     F1 F1 F2 F4 
214b3     F0 EF F6 02 
214b7     0E 18 21 23 | 	byte	$f9, $f5, $f1, $f1, $f1, $f1, $f2, $f4, $f0, $ef, $f6, $02, $0e, $18, $21, $23
214bb     19 0D 01 FA 
214bf     F7 F6 F6 F9 
214c3     FF 04 07 0A 
214c7     0C 0A 02 FC | 	byte	$19, $0d, $01, $fa, $f7, $f6, $f6, $f9, $ff, $04, $07, $0a, $0c, $0a, $02, $fc
214cb     FA F5 F1 EF 
214cf     F4 F3 F1 F3 
214d3     F2 EF F9 04 
214d7     0F 19 21 22 | 	byte	$fa, $f5, $f1, $ef, $f4, $f3, $f1, $f3, $f2, $ef, $f9, $04, $0f, $19, $21, $22
214db     16 09 01 FB 
214df     F4 F5 F8 FD 
214e3     FF 03 07 0B 
214e7     08 08 01 FC | 	byte	$16, $09, $01, $fb, $f4, $f5, $f8, $fd, $ff, $03, $07, $0b, $08, $08, $01, $fc
214eb     F9 F4 F0 EF 
214ef     F3 F3 F3 F3 
214f3     F2 F4 FC 03 
214f7     12 1B 21 1D | 	byte	$f9, $f4, $f0, $ef, $f3, $f3, $f3, $f3, $f2, $f4, $fc, $03, $12, $1b, $21, $1d
214fb     14 06 FE F7 
214ff     F6 F4 FB FF 
21503     01 02 07 0A 
21507     08 04 02 FC | 	byte	$14, $06, $fe, $f7, $f6, $f4, $fb, $ff, $01, $02, $07, $0a, $08, $04, $02, $fc
2150b     F6 F3 F1 F1 
2150f     F1 F5 F4 F5 
21513     F2 F7 FB 06 
21517     13 1D 1D 1C | 	byte	$f6, $f3, $f1, $f1, $f1, $f5, $f4, $f5, $f2, $f7, $fb, $06, $13, $1d, $1d, $1c
2151b     11 05 FB F8 
2151f     F6 F5 FD 01 
21523     02 01 08 0A 
21527     06 03 01 FB | 	byte	$11, $05, $fb, $f8, $f6, $f5, $fd, $01, $02, $01, $08, $0a, $06, $03, $01, $fb
2152b     F6 F1 F1 F1 
2152f     F1 F6 F6 F3 
21533     F6 FA FF 06 
21537     15 1E 1C 19 | 	byte	$f6, $f1, $f1, $f1, $f1, $f6, $f6, $f3, $f6, $fa, $ff, $06, $15, $1e, $1c, $19
2153b     0D 02 FA F8 
2153f     F7 F9 FD 04 
21543     01 02 07 09 
21547     05 02 01 FA | 	byte	$0d, $02, $fa, $f8, $f7, $f9, $fd, $04, $01, $02, $07, $09, $05, $02, $01, $fa
2154b     F3 F0 F2 EF 
2154f     F2 F7 F8 F5 
21553     F7 FC 01 08 
21557     17 1C 1B 14 | 	byte	$f3, $f0, $f2, $ef, $f2, $f7, $f8, $f5, $f7, $fc, $01, $08, $17, $1c, $1b, $14
2155b     0A 01 F9 F7 
2155f     F9 FB 00 04 
21563     02 03 05 06 
21567     05 01 FF F9 | 	byte	$0a, $01, $f9, $f7, $f9, $fb, $00, $04, $02, $03, $05, $06, $05, $01, $ff, $f9
2156b     F4 F0 F1 F1 
2156f     F3 F7 F8 F9 
21573     F7 FC 03 0C 
21577     13 1D 1C 13 | 	byte	$f4, $f0, $f1, $f1, $f3, $f7, $f8, $f9, $f7, $fc, $03, $0c, $13, $1d, $1c, $13
2157b     06 FD F9 F7 
2157f     F9 FD 03 04 
21583     02 02 05 04 
21587     06 01 FD F7 | 	byte	$06, $fd, $f9, $f7, $f9, $fd, $03, $04, $02, $02, $05, $04, $06, $01, $fd, $f7
2158b     F5 F1 EE F0 
2158f     F7 F8 F9 F9 
21593     F9 FE 05 0E 
21597     15 1B 1A 11 | 	byte	$f5, $f1, $ee, $f0, $f7, $f8, $f9, $f9, $f9, $fe, $05, $0e, $15, $1b, $1a, $11
2159b     02 FC F9 F8 
2159f     F8 00 06 05 
215a3     01 02 03 06 
215a7     03 01 FB F8 | 	byte	$02, $fc, $f9, $f8, $f8, $00, $06, $05, $01, $02, $03, $06, $03, $01, $fb, $f8
215ab     F3 F1 EE F2 
215af     F8 FB F9 F8 
215b3     FC 00 04 0C 
215b7     17 1C 16 0C | 	byte	$f3, $f1, $ee, $f2, $f8, $fb, $f9, $f8, $fc, $00, $04, $0c, $17, $1c, $16, $0c
215bb     01 FA FA F9 
215bf     FD 03 05 05 
215c3     00 FF 03 05 
215c7     01 FD FB F9 | 	byte	$01, $fa, $fa, $f9, $fd, $03, $05, $05, $00, $ff, $03, $05, $01, $fd, $fb, $f9
215cb     F1 F0 F0 F4 
215cf     F9 FB F9 FB 
215d3     FC 02 06 0D 
215d7     19 1A 11 08 | 	byte	$f1, $f0, $f0, $f4, $f9, $fb, $f9, $fb, $fc, $02, $06, $0d, $19, $1a, $11, $08
215db     FF FC FA FA 
215df     02 05 05 04 
215e3     FF FE 03 03 
215e7     00 FB FC F5 | 	byte	$ff, $fc, $fa, $fa, $02, $05, $05, $04, $ff, $fe, $03, $03, $00, $fb, $fc, $f5
215eb     F1 EF F3 F5 
215ef     FA FB FC FC 
215f3     FC 03 08 0F 
215f7     16 18 0E 05 | 	byte	$f1, $ef, $f3, $f5, $fa, $fb, $fc, $fc, $fc, $03, $08, $0f, $16, $18, $0e, $05
215fb     FD FC FB FE 
215ff     02 08 04 01 
21603     FF FE 00 01 
21607     00 FB F9 F5 | 	byte	$fd, $fc, $fb, $fe, $02, $08, $04, $01, $ff, $fe, $00, $01, $00, $fb, $f9, $f5
2160b     F3 F0 F3 F7 
2160f     FC FB FD FD 
21613     FE 02 0C 0E 
21617     16 15 0C 01 | 	byte	$f3, $f0, $f3, $f7, $fc, $fb, $fd, $fd, $fe, $02, $0c, $0e, $16, $15, $0c, $01
2161b     FC FE FE 01 
2161f     06 08 04 00 
21623     FC FE FF 02 
21627     FE FB F7 F5 | 	byte	$fc, $fe, $fe, $01, $06, $08, $04, $00, $fc, $fe, $ff, $02, $fe, $fb, $f7, $f5
2162b     F1 F3 F3 F8 
2162f     FD FE FD FD 
21633     FF 05 0A 10 
21637     16 0F 08 FF | 	byte	$f1, $f3, $f3, $f8, $fd, $fe, $fd, $fd, $ff, $05, $0a, $10, $16, $0f, $08, $ff
2163b     FD FB 00 05 
2163f     08 05 05 00 
21643     FD FE 00 00 
21647     FD F9 F7 F4 | 	byte	$fd, $fb, $00, $05, $08, $05, $05, $00, $fd, $fe, $00, $00, $fd, $f9, $f7, $f4
2164b     F2 F3 F4 F9 
2164f     FD FF FC FD 
21653     01 07 0C 13 
21657     13 0E 06 00 | 	byte	$f2, $f3, $f4, $f9, $fd, $ff, $fc, $fd, $01, $07, $0c, $13, $13, $0e, $06, $00
2165b     FB FD 02 07 
2165f     08 06 03 00 
21663     FD FC 01 FE 
21667     FC F8 F6 F5 | 	byte	$fb, $fd, $02, $07, $08, $06, $03, $00, $fd, $fc, $01, $fe, $fc, $f8, $f6, $f5
2166b     F2 F3 F7 F8 
2166f     FF FE FC FD 
21673     01 0B 0D 12 
21677     13 0D 04 FC | 	byte	$f2, $f3, $f7, $f8, $ff, $fe, $fc, $fd, $01, $0b, $0d, $12, $13, $0d, $04, $fc
2167b     FB 01 03 07 
2167f     07 06 02 FF 
21683     FD 00 00 FF 
21687     FA F6 F6 F4 | 	byte	$fb, $01, $03, $07, $07, $06, $02, $ff, $fd, $00, $00, $ff, $fa, $f6, $f6, $f4
2168b     F3 F2 F7 FB 
2168f     FD FD FD FD 
21693     04 0A 10 11 
21697     11 0C 01 FA | 	byte	$f3, $f2, $f7, $fb, $fd, $fd, $fd, $fd, $04, $0a, $10, $11, $11, $0c, $01, $fa
2169b     FE 02 03 05 
2169f     08 06 01 FE 
216a3     FF 01 FE FD 
216a7     FA F6 F5 F4 | 	byte	$fe, $02, $03, $05, $08, $06, $01, $fe, $ff, $01, $fe, $fd, $fa, $f6, $f5, $f4
216ab     F3 F2 F7 FD 
216af     FC FD FC 01 
216b3     05 0B 11 14 
216b7     0F 07 FF FD | 	byte	$f3, $f2, $f7, $fd, $fc, $fd, $fc, $01, $05, $0b, $11, $14, $0f, $07, $ff, $fd
216bb     FF 01 05 07 
216bf     07 04 01 FD 
216c3     FF 00 01 F9 
216c7     F9 F7 F5 F3 | 	byte	$ff, $01, $05, $07, $07, $04, $01, $fd, $ff, $00, $01, $f9, $f9, $f7, $f5, $f3
216cb     F4 F5 F9 FB 
216cf     FC FD FB 02 
216d3     07 0D 12 13 
216d7     0D 03 FE FF | 	byte	$f4, $f5, $f9, $fb, $fc, $fd, $fb, $02, $07, $0d, $12, $13, $0d, $03, $fe, $ff
216db     FE 01 06 09 
216df     07 01 01 FF 
216e3     FF 00 FE F9 
216e7     F7 F7 F4 F2 | 	byte	$fe, $01, $06, $09, $07, $01, $01, $ff, $ff, $00, $fe, $f9, $f7, $f7, $f4, $f2
216eb     F5 F6 F9 FB 
216ef     FC FC FD 02 
216f3     09 0F 13 11 
216f7     09 02 FD FE | 	byte	$f5, $f6, $f9, $fb, $fc, $fc, $fd, $02, $09, $0f, $13, $11, $09, $02, $fd, $fe
216fb     00 03 08 07 
216ff     05 03 00 FF 
21703     01 01 FC F7 
21707     F7 F7 F2 F4 | 	byte	$00, $03, $08, $07, $05, $03, $00, $ff, $01, $01, $fc, $f7, $f7, $f7, $f2, $f4
2170b     F5 F6 F9 FC 
2170f     FD FB FD 05 
21713     0B 10 13 0F 
21717     08 00 FE FE | 	byte	$f5, $f6, $f9, $fc, $fd, $fb, $fd, $05, $0b, $10, $13, $0f, $08, $00, $fe, $fe
2171b     00 04 08 05 
2171f     05 02 00 00 
21723     00 00 FB F7 
21727     F6 F5 F1 F5 | 	byte	$00, $04, $08, $05, $05, $02, $00, $00, $00, $00, $fb, $f7, $f6, $f5, $f1, $f5
2172b     F5 F7 FA FC 
2172f     FB FA 00 07 
21733     0B 11 13 0D 
21737     07 FE FF FF | 	byte	$f5, $f7, $fa, $fc, $fb, $fa, $00, $07, $0b, $11, $13, $0d, $07, $fe, $ff, $ff
2173b     01 05 07 07 
2173f     04 01 01 01 
21743     01 FF FA F6 
21747     F5 F4 F3 F3 | 	byte	$01, $05, $07, $07, $04, $01, $01, $01, $01, $ff, $fa, $f6, $f5, $f4, $f3, $f3
2174b     F6 F9 FA FB 
2174f     FC FD 01 06 
21753     0E 13 10 0C 
21757     04 FE FE 02 | 	byte	$f6, $f9, $fa, $fb, $fc, $fd, $01, $06, $0e, $13, $10, $0c, $04, $fe, $fe, $02
2175b     02 04 08 08 
2175f     01 01 02 02 
21763     00 FD FB F4 
21767     F5 F4 F2 F3 | 	byte	$02, $04, $08, $08, $01, $01, $02, $02, $00, $fd, $fb, $f4, $f5, $f4, $f2, $f3
2176b     F9 F9 F9 FB 
2176f     FD FC 01 09 
21773     11 12 11 09 
21777     02 FF 01 01 | 	byte	$f9, $f9, $f9, $fb, $fd, $fc, $01, $09, $11, $12, $11, $09, $02, $ff, $01, $01
2177b     03 06 07 04 
2177f     02 02 01 03 
21783     00 FD F8 F5 
21787     F5 F2 F2 F6 | 	byte	$03, $06, $07, $04, $02, $02, $01, $03, $00, $fd, $f8, $f5, $f5, $f2, $f2, $f6
2178b     F8 F8 FA FB 
2178f     FC FD 03 0B 
21793     12 11 0E 07 
21797     02 FF 00 01 | 	byte	$f8, $f8, $fa, $fb, $fc, $fd, $03, $0b, $12, $11, $0e, $07, $02, $ff, $00, $01
2179b     04 05 07 04 
2179f     02 03 03 02 
217a3     FE FD F8 F4 
217a7     F3 F4 F3 F6 | 	byte	$04, $05, $07, $04, $02, $03, $03, $02, $fe, $fd, $f8, $f4, $f3, $f4, $f3, $f6
217ab     F8 FA FA FB 
217af     FB FE 04 0E 
217b3     11 10 0D 08 
217b7     00 FE 02 03 | 	byte	$f8, $fa, $fa, $fb, $fb, $fe, $04, $0e, $11, $10, $0d, $08, $00, $fe, $02, $03
217bb     03 06 06 03 
217bf     02 04 03 FF 
217c3     FF FD F6 F4 
217c7     F4 F3 F3 F6 | 	byte	$03, $06, $06, $03, $02, $04, $03, $ff, $ff, $fd, $f6, $f4, $f4, $f3, $f3, $f6
217cb     FA FA F9 FA 
217cf     FC FF 06 10 
217d3     11 10 0C 07 
217d7     00 FF 02 04 | 	byte	$fa, $fa, $f9, $fa, $fc, $ff, $06, $10, $11, $10, $0c, $07, $00, $ff, $02, $04
217db     03 05 07 03 
217df     03 03 04 00 
217e3     FD FC F6 F2 
217e7     F3 F4 F6 F5 | 	byte	$03, $05, $07, $03, $03, $03, $04, $00, $fd, $fc, $f6, $f2, $f3, $f4, $f6, $f5
217eb     FA FD F9 F7 
217ef     FD 02 07 0F 
217f3     13 10 09 04 
217f7     00 FE 03 04 | 	byte	$fa, $fd, $f9, $f7, $fd, $02, $07, $0f, $13, $10, $09, $04, $00, $fe, $03, $04
217fb     04 04 06 05 
217ff     02 02 04 00 
21803     FC F8 F6 F3 
21807     F1 F4 F6 F8 | 	byte	$04, $04, $06, $05, $02, $02, $04, $00, $fc, $f8, $f6, $f3, $f1, $f4, $f6, $f8
2180b     FB FB F8 F7 
2180f     FE 04 08 10 
21813     14 0F 07 03 
21817     03 FF 02 04 | 	byte	$fb, $fb, $f8, $f7, $fe, $04, $08, $10, $14, $0f, $07, $03, $03, $ff, $02, $04
2181b     04 05 07 05 
2181f     02 02 04 00 
21823     F9 F8 F7 F3 
21827     F1 F4 F8 F9 | 	byte	$04, $05, $07, $05, $02, $02, $04, $00, $f9, $f8, $f7, $f3, $f1, $f4, $f8, $f9
2182b     FA FB F7 F9 
2182f     FF 03 0B 10 
21833     15 0D 04 03 
21837     02 00 01 05 | 	byte	$fa, $fb, $f7, $f9, $ff, $03, $0b, $10, $15, $0d, $04, $03, $02, $00, $01, $05
2183b     06 06 05 05 
2183f     02 04 02 FE 
21843     F9 F9 F6 F1 
21847     F0 F7 FA F9 | 	byte	$06, $06, $05, $05, $02, $04, $02, $fe, $f9, $f9, $f6, $f1, $f0, $f7, $fa, $f9
2184b     FA FB F8 F7 
2184f     FF 08 0C 11 
21853     13 0B 04 02 
21857     03 FF 01 05 | 	byte	$fa, $fb, $f8, $f7, $ff, $08, $0c, $11, $13, $0b, $04, $02, $03, $ff, $01, $05
2185b     07 04 05 06 
2185f     05 01 01 FD 
21863     F8 F5 F5 F2 
21867     F2 F7 FA FA | 	byte	$07, $04, $05, $06, $05, $01, $01, $fd, $f8, $f5, $f5, $f2, $f2, $f7, $fa, $fa
2186b     F8 FB F8 F8 
2186f     FD 0A 0D 11 
21873     10 0D 03 FF 
21877     02 02 01 05 | 	byte	$f8, $fb, $f8, $f8, $fd, $0a, $0d, $11, $10, $0d, $03, $ff, $02, $02, $01, $05
2187b     07 04 06 05 
2187f     05 00 01 FD 
21883     F6 F4 F5 F3 
21887     F2 F7 FD FB | 	byte	$07, $04, $06, $05, $05, $00, $01, $fd, $f6, $f4, $f5, $f3, $f2, $f7, $fd, $fb
2188b     F9 F9 F6 F8 
2188f     01 0B 0E 10 
21893     10 0B 01 FF 
21897     03 03 01 04 | 	byte	$f9, $f9, $f6, $f8, $01, $0b, $0e, $10, $10, $0b, $01, $ff, $03, $03, $01, $04
2189b     07 07 03 06 
2189f     04 02 FE FB 
218a3     F6 F4 F4 F3 
218a7     F3 F7 FE FC | 	byte	$07, $07, $03, $06, $04, $02, $fe, $fb, $f6, $f4, $f4, $f3, $f3, $f7, $fe, $fc
218ab     F8 F6 F8 FA 
218af     02 0A 11 0F 
218b3     0F 07 02 FF 
218b7     03 03 01 05 | 	byte	$f8, $f6, $f8, $fa, $02, $0a, $11, $0f, $0f, $07, $02, $ff, $03, $03, $01, $05
218bb     09 06 03 06 
218bf     05 01 FC FA 
218c3     F6 F4 F2 F4 
218c7     F5 F9 FD FC | 	byte	$09, $06, $03, $06, $05, $01, $fc, $fa, $f6, $f4, $f2, $f4, $f5, $f9, $fd, $fc
218cb     F7 F6 F8 FA 
218cf     03 0D 11 0F 
218d3     0C 07 02 FF 
218d7     02 03 03 06 | 	byte	$f7, $f6, $f8, $fa, $03, $0d, $11, $0f, $0c, $07, $02, $ff, $02, $03, $03, $06
218db     09 05 04 06 
218df     05 FE FC FA 
218e3     F4 F3 F3 F3 
218e7     F6 FC FE FB | 	byte	$09, $05, $04, $06, $05, $fe, $fc, $fa, $f4, $f3, $f3, $f3, $f6, $fc, $fe, $fb
218eb     F7 F7 F7 FC 
218ef     06 0F 0F 0E 
218f3     0C 06 00 00 
218f7     03 04 03 08 | 	byte	$f7, $f7, $f7, $fc, $06, $0f, $0f, $0e, $0c, $06, $00, $00, $03, $04, $03, $08
218fb     08 06 05 07 
218ff     03 FD FC F7 
21903     F4 F3 F3 F5 
21907     F9 FB FF FA | 	byte	$08, $06, $05, $07, $03, $fd, $fc, $f7, $f4, $f3, $f3, $f5, $f9, $fb, $ff, $fa
2190b     F7 F5 F8 FE 
2190f     08 0D 12 0E 
21913     0A 06 00 00 
21917     02 05 05 07 | 	byte	$f7, $f5, $f8, $fe, $08, $0d, $12, $0e, $0a, $06, $00, $00, $02, $05, $05, $07
2191b     09 07 04 06 
2191f     03 FD F8 F7 
21923     F5 F2 F3 F7 
21927     FA FC FE FB | 	byte	$09, $07, $04, $06, $03, $fd, $f8, $f7, $f5, $f2, $f3, $f7, $fa, $fc, $fe, $fb
2192b     F6 F4 F9 00 
2192f     08 0E 12 0D 
21933     08 04 02 FF 
21937     02 06 06 07 | 	byte	$f6, $f4, $f9, $00, $08, $0e, $12, $0d, $08, $04, $02, $ff, $02, $06, $06, $07
2193b     08 06 06 05 
2193f     02 FC F6 F6 
21943     F3 F2 F2 F9 
21947     FA FE FD FA | 	byte	$08, $06, $06, $05, $02, $fc, $f6, $f6, $f3, $f2, $f2, $f9, $fa, $fe, $fd, $fa
2194b     F4 F4 F9 02 
2194f     08 10 10 0C 
21953     07 03 01 FF 
21957     03 05 07 07 | 	byte	$f4, $f4, $f9, $02, $08, $10, $10, $0c, $07, $03, $01, $ff, $03, $05, $07, $07
2195b     08 06 07 03 
2195f     00 FB F7 F4 
21963     F4 F2 F4 F8 
21967     FD FF FE F9 | 	byte	$08, $06, $07, $03, $00, $fb, $f7, $f4, $f4, $f2, $f4, $f8, $fd, $ff, $fe, $f9
2196b     F4 F5 FA 03 
2196f     0B 10 0E 0D 
21973     05 03 00 01 
21977     03 07 08 08 | 	byte	$f4, $f5, $fa, $03, $0b, $10, $0e, $0d, $05, $03, $00, $01, $03, $07, $08, $08
2197b     06 08 06 04 
2197f     FF F9 F7 F3 
21983     F3 F2 F6 FA 
21987     FE 00 FD F6 | 	byte	$06, $08, $06, $04, $ff, $f9, $f7, $f3, $f3, $f2, $f6, $fa, $fe, $00, $fd, $f6
2198b     F5 F4 FD 04 
2198f     0D 10 0E 08 
21993     07 01 FF 01 
21997     05 07 08 09 | 	byte	$f5, $f4, $fd, $04, $0d, $10, $0e, $08, $07, $01, $ff, $01, $05, $07, $08, $09
2199b     06 07 06 03 
2199f     FB F8 F6 F4 
219a3     F1 F3 F6 FB 
219a7     FE 00 FC F7 | 	byte	$06, $07, $06, $03, $fb, $f8, $f6, $f4, $f1, $f3, $f6, $fb, $fe, $00, $fc, $f7
219ab     F3 F6 FD 07 
219af     0F 0F 0D 09 
219b3     05 00 FF 02 
219b7     07 07 08 07 | 	byte	$f3, $f6, $fd, $07, $0f, $0f, $0d, $09, $05, $00, $ff, $02, $07, $07, $08, $07
219bb     07 06 06 02 
219bf     FB F7 F6 F2 
219c3     F1 F4 F8 FD 
219c7     FF 00 FC F5 | 	byte	$07, $06, $06, $02, $fb, $f7, $f6, $f2, $f1, $f4, $f8, $fd, $ff, $00, $fc, $f5
219cb     F2 F7 FF 08 
219cf     0E 0E 0D 07 
219d3     04 00 FF 04 
219d7     08 08 08 08 | 	byte	$f2, $f7, $ff, $08, $0e, $0e, $0d, $07, $04, $00, $ff, $04, $08, $08, $08, $08
219db     07 07 04 01 
219df     FB F5 F5 F2 
219e3     F2 F5 FB FD 
219e7     FF 01 FC F3 | 	byte	$07, $07, $04, $01, $fb, $f5, $f5, $f2, $f2, $f5, $fb, $fd, $ff, $01, $fc, $f3
219eb     F2 F9 02 08 
219ef     0F 10 0A 06 
219f3     04 00 FF 05 
219f7     0A 09 05 09 | 	byte	$f2, $f9, $02, $08, $0f, $10, $0a, $06, $04, $00, $ff, $05, $0a, $09, $05, $09
219fb     09 04 02 01 
219ff     F9 F4 F4 F3 
21a03     F1 F4 FD FF 
21a07     00 01 FC F2 | 	byte	$09, $04, $02, $01, $f9, $f4, $f4, $f3, $f1, $f4, $fd, $ff, $00, $01, $fc, $f2
21a0b     F1 FC 03 08 
21a0f     0F 0F 09 03 
21a13     03 01 00 05 
21a17     0B 09 07 06 | 	byte	$f1, $fc, $03, $08, $0f, $0f, $09, $03, $03, $01, $00, $05, $0b, $09, $07, $06
21a1b     0A 04 00 00 
21a1f     FA F2 F2 F5 
21a23     F3 F4 FC 02 
21a27     01 FE FB F3 | 	byte	$0a, $04, $00, $00, $fa, $f2, $f2, $f5, $f3, $f4, $fc, $02, $01, $fe, $fb, $f3
21a2b     F0 FC 06 0A 
21a2f     0B 0F 0A 02 
21a33     00 03 01 04 
21a37     0B 0C 06 06 | 	byte	$f0, $fc, $06, $0a, $0b, $0f, $0a, $02, $00, $03, $01, $04, $0b, $0c, $06, $06
21a3b     09 04 FF FD 
21a3f     FA F2 F1 F4 
21a43     F4 F5 FD 04 
21a47     02 FD F8 F2 | 	byte	$09, $04, $ff, $fd, $fa, $f2, $f1, $f4, $f4, $f5, $fd, $04, $02, $fd, $f8, $f2
21a4b     F3 FB 07 0C 
21a4f     0C 0C 09 01 
21a53     00 02 05 05 
21a57     0A 0C 07 05 | 	byte	$f3, $fb, $07, $0c, $0c, $0c, $09, $01, $00, $02, $05, $05, $0a, $0c, $07, $05
21a5b     07 05 FE FB 
21a5f     F7 F3 F0 F3 
21a63     F5 F9 FE 05 
21a67     02 FC F6 F2 | 	byte	$07, $05, $fe, $fb, $f7, $f3, $f0, $f3, $f5, $f9, $fe, $05, $02, $fc, $f6, $f2
21a6b     F5 FD 08 0C 
21a6f     0C 0A 07 01 
21a73     01 02 04 07 
21a77     0B 0B 06 06 | 	byte	$f5, $fd, $08, $0c, $0c, $0a, $07, $01, $01, $02, $04, $07, $0b, $0b, $06, $06
21a7b     08 03 FD FA 
21a7f     F6 F2 F0 F4 
21a83     F5 FB 01 05 
21a87     01 FC F5 F2 | 	byte	$08, $03, $fd, $fa, $f6, $f2, $f0, $f4, $f5, $fb, $01, $05, $01, $fc, $f5, $f2
21a8b     F5 FF 09 0D 
21a8f     0B 09 05 01 
21a93     01 02 05 09 
21a97     0B 0A 06 06 | 	byte	$f5, $ff, $09, $0d, $0b, $09, $05, $01, $01, $02, $05, $09, $0b, $0a, $06, $06
21a9b     07 01 FD F9 
21a9f     F5 F1 F1 F3 
21aa3     F8 FC 03 05 
21aa7     03 F9 F3 F3 | 	byte	$07, $01, $fd, $f9, $f5, $f1, $f1, $f3, $f8, $fc, $03, $05, $03, $f9, $f3, $f3
21aab     F7 00 0B 0C 
21aaf     09 08 05 01 
21ab3     FE 05 08 08 
21ab7     0B 0A 06 06 | 	byte	$f7, $00, $0b, $0c, $09, $08, $05, $01, $fe, $05, $08, $08, $0b, $0a, $06, $06
21abb     05 02 FA F6 
21abf     F6 F0 F1 F5 
21ac3     FA FE 02 06 
21ac7     03 F6 F2 F4 | 	byte	$05, $02, $fa, $f6, $f6, $f0, $f1, $f5, $fa, $fe, $02, $06, $03, $f6, $f2, $f4
21acb     F9 03 0B 0C 
21acf     09 07 06 00 
21ad3     00 06 08 09 
21ad7     09 0A 07 04 | 	byte	$f9, $03, $0b, $0c, $09, $07, $06, $00, $00, $06, $08, $09, $09, $0a, $07, $04
21adb     04 02 F9 F7 
21adf     F4 F2 F0 F6 
21ae3     FB 00 02 07 
21ae7     FF F6 F1 F6 | 	byte	$04, $02, $f9, $f7, $f4, $f2, $f0, $f6, $fb, $00, $02, $07, $ff, $f6, $f1, $f6
21aeb     FB 04 0B 0B 
21aef     08 05 04 01 
21af3     01 06 09 09 
21af7     0B 09 06 04 | 	byte	$fb, $04, $0b, $0b, $08, $05, $04, $01, $01, $06, $09, $09, $0b, $09, $06, $04
21afb     03 FF F9 F5 
21aff     F3 F1 F3 F6 
21b03     FC 01 06 04 
21b07     FD F5 F2 F4 | 	byte	$03, $ff, $f9, $f5, $f3, $f1, $f3, $f6, $fc, $01, $06, $04, $fd, $f5, $f2, $f4
21b0b     FD 06 0B 0A 
21b0f     08 06 03 02 
21b13     03 07 08 0B 
21b17     0A 07 04 04 | 	byte	$fd, $06, $0b, $0a, $08, $06, $03, $02, $03, $07, $08, $0b, $0a, $07, $04, $04
21b1b     02 FE F8 F5 
21b1f     F3 F1 F4 F8 
21b23     FE 04 06 03 
21b27     FC F3 F2 F6 | 	byte	$02, $fe, $f8, $f5, $f3, $f1, $f4, $f8, $fe, $04, $06, $03, $fc, $f3, $f2, $f6
21b2b     FE 08 0A 0A 
21b2f     07 05 03 02 
21b33     04 07 09 0C 
21b37     09 06 06 04 | 	byte	$fe, $08, $0a, $0a, $07, $05, $03, $02, $04, $07, $09, $0c, $09, $06, $06, $04
21b3b     01 FB F8 F6 
21b3f     F2 F1 F4 FA 
21b43     00 03 06 03 
21b47     FA F2 F1 F8 | 	byte	$01, $fb, $f8, $f6, $f2, $f1, $f4, $fa, $00, $03, $06, $03, $fa, $f2, $f1, $f8
21b4b     01 07 0A 08 
21b4f     06 04 03 02 
21b53     05 08 0A 0A 
21b57     09 06 05 03 | 	byte	$01, $07, $0a, $08, $06, $04, $03, $02, $05, $08, $0a, $0a, $09, $06, $05, $03
21b5b     00 FB F7 F4 
21b5f     F1 F1 F6 FD 
21b63     00 04 07 02 
21b67     F6 F1 F4 FB | 	byte	$00, $fb, $f7, $f4, $f1, $f1, $f6, $fd, $00, $04, $07, $02, $f6, $f1, $f4, $fb
21b6b     01 09 09 07 
21b6f     06 04 02 02 
21b73     07 09 09 09 
21b77     0A 06 04 02 | 	byte	$01, $09, $09, $07, $06, $04, $02, $02, $07, $09, $09, $09, $0a, $06, $04, $02
21b7b     FF FB F6 F3 
21b7f     F1 F2 F8 FE 
21b83     01 06 06 00 
21b87     F4 F2 F5 FB | 	byte	$ff, $fb, $f6, $f3, $f1, $f2, $f8, $fe, $01, $06, $06, $00, $f4, $f2, $f5, $fb
21b8b     01 08 0A 08 
21b8f     04 03 03 03 
21b93     06 09 0A 0A 
21b97     08 06 03 01 | 	byte	$01, $08, $0a, $08, $04, $03, $03, $03, $06, $09, $0a, $0a, $08, $06, $03, $01
21b9b     00 FA F4 F2 
21b9f     F3 F3 F8 FF 
21ba3     05 06 05 FC 
21ba7     F4 F1 F8 FC | 	byte	$00, $fa, $f4, $f2, $f3, $f3, $f8, $ff, $05, $06, $05, $fc, $f4, $f1, $f8, $fc
21bab     03 08 0A 06 
21baf     03 04 04 03 
21bb3     06 0A 0A 0A 
21bb7     06 06 02 02 | 	byte	$03, $08, $0a, $06, $03, $04, $04, $03, $06, $0a, $0a, $0a, $06, $06, $02, $02
21bbb     FE F9 F3 F2 
21bbf     F2 F4 F9 01 
21bc3     06 05 03 FB 
21bc7     F4 F2 F7 FE | 	byte	$fe, $f9, $f3, $f2, $f2, $f4, $f9, $01, $06, $05, $03, $fb, $f4, $f2, $f7, $fe
21bcb     06 07 0A 05 
21bcf     04 03 04 04 
21bd3     06 0A 0B 08 
21bd7     06 05 04 FF | 	byte	$06, $07, $0a, $05, $04, $03, $04, $04, $06, $0a, $0b, $08, $06, $05, $04, $ff
21bdb     FC F9 F3 F1 
21bdf     F3 F5 FA 01 
21be3     07 06 FF FA 
21be7     F4 F3 F8 02 | 	byte	$fc, $f9, $f3, $f1, $f3, $f5, $fa, $01, $07, $06, $ff, $fa, $f4, $f3, $f8, $02
21beb     05 08 07 07 
21bef     03 03 03 05 
21bf3     08 09 0A 08 
21bf7     05 05 03 FE | 	byte	$05, $08, $07, $07, $03, $03, $03, $05, $08, $09, $0a, $08, $05, $05, $03, $fe
21bfb     FC F7 F4 EF 
21bff     F2 F8 FD 01 
21c03     06 06 FF F7 
21c07     F4 F5 FA 01 | 	byte	$fc, $f7, $f4, $ef, $f2, $f8, $fd, $01, $06, $06, $ff, $f7, $f4, $f5, $fa, $01
21c0b     06 07 06 07 
21c0f     03 02 03 07 
21c13     07 08 0A 09 
21c17     04 04 02 FF | 	byte	$06, $07, $06, $07, $03, $02, $03, $07, $07, $08, $0a, $09, $04, $04, $02, $ff
21c1b     FA F8 F3 F0 
21c1f     F2 FB FF 01 
21c23     07 06 FD F4 
21c27     F4 F8 FB 02 | 	byte	$fa, $f8, $f3, $f0, $f2, $fb, $ff, $01, $07, $06, $fd, $f4, $f4, $f8, $fb, $02
21c2b     07 06 06 05 
21c2f     03 01 05 07 
21c33     08 07 0B 09 
21c37     04 02 02 FF | 	byte	$07, $06, $06, $05, $03, $01, $05, $07, $08, $07, $0b, $09, $04, $02, $02, $ff
21c3b     F9 F5 F3 F1 
21c3f     F3 FB FF 04 
21c43     06 05 FB F4 
21c47     F5 FA FC 01 | 	byte	$f9, $f5, $f3, $f1, $f3, $fb, $ff, $04, $06, $05, $fb, $f4, $f5, $fa, $fc, $01
21c4b     08 08 05 04 
21c4f     03 03 04 07 
21c53     08 08 0A 08 
21c57     04 01 03 FF | 	byte	$08, $08, $05, $04, $03, $03, $04, $07, $08, $08, $0a, $08, $04, $01, $03, $ff
21c5b     F8 F4 F3 F2 
21c5f     F5 FB 02 03 
21c63     06 02 FA F4 
21c67     F7 FB FD 03 | 	byte	$f8, $f4, $f3, $f2, $f5, $fb, $02, $03, $06, $02, $fa, $f4, $f7, $fb, $fd, $03
21c6b     09 07 03 04 
21c6f     03 02 03 08 
21c73     09 09 09 08 
21c77     03 02 02 FC | 	byte	$09, $07, $03, $04, $03, $02, $03, $08, $09, $09, $09, $08, $03, $02, $02, $fc
21c7b     F7 F3 F2 F2 
21c7f     F6 FE 03 04 
21c83     06 01 FA F4 
21c87     F7 FB FF 03 | 	byte	$f7, $f3, $f2, $f2, $f6, $fe, $03, $04, $06, $01, $fa, $f4, $f7, $fb, $ff, $03
21c8b     07 05 05 04 
21c8f     02 03 04 09 
21c93     09 08 0A 08 
21c97     02 01 01 FD | 	byte	$07, $05, $05, $04, $02, $03, $04, $09, $09, $08, $0a, $08, $02, $01, $01, $fd
21c9b     F5 F2 F3 F4 
21c9f     F6 00 03 04 
21ca3     04 01 F9 F3 
21ca7     F9 FF FE 03 | 	byte	$f5, $f2, $f3, $f4, $f6, $00, $03, $04, $04, $01, $f9, $f3, $f9, $ff, $fe, $03
21cab     08 07 03 01 
21caf     04 03 05 08 
21cb3     09 08 0A 08 
21cb7     03 01 01 FC | 	byte	$08, $07, $03, $01, $04, $03, $05, $08, $09, $08, $0a, $08, $03, $01, $01, $fc
21cbb     F3 F0 F4 F5 
21cbf     F7 00 05 06 
21cc3     03 FF F8 F5 
21cc7     FB FF FE 03 | 	byte	$f3, $f0, $f4, $f5, $f7, $00, $05, $06, $03, $ff, $f8, $f5, $fb, $ff, $fe, $03
21ccb     08 06 01 02 
21ccf     05 04 04 09 
21cd3     0A 0A 09 06 
21cd7     03 00 FF F9 | 	byte	$08, $06, $01, $02, $05, $04, $04, $09, $0a, $0a, $09, $06, $03, $00, $ff, $f9
21cdb     F2 F1 F4 F5 
21cdf     F9 00 07 05 
21ce3     01 FD F8 F7 
21ce7     FC FD 00 04 | 	byte	$f2, $f1, $f4, $f5, $f9, $00, $07, $05, $01, $fd, $f8, $f7, $fc, $fd, $00, $04
21ceb     07 05 00 03 
21cef     05 04 05 09 
21cf3     0B 0A 08 07 
21cf7     01 01 FD F8 | 	byte	$07, $05, $00, $03, $05, $04, $05, $09, $0b, $0a, $08, $07, $01, $01, $fd, $f8
21cfb     F1 F2 F4 F6 
21cff     FA 03 06 04 
21d03     01 FD F9 F8 
21d07     FB FF 01 03 | 	byte	$f1, $f2, $f4, $f6, $fa, $03, $06, $04, $01, $fd, $f9, $f8, $fb, $ff, $01, $03
21d0b     07 03 01 02 
21d0f     04 04 06 0A 
21d13     0B 08 08 06 
21d17     02 FF FB F6 | 	byte	$07, $03, $01, $02, $04, $04, $06, $0a, $0b, $08, $08, $06, $02, $ff, $fb, $f6
21d1b     F1 F1 F4 F7 
21d1f     FC 04 06 03 
21d23     00 FD F9 F8 
21d27     FC 00 01 03 | 	byte	$f1, $f1, $f4, $f7, $fc, $04, $06, $03, $00, $fd, $f9, $f8, $fc, $00, $01, $03
21d2b     05 05 00 02 
21d2f     05 06 06 0A 
21d33     0B 09 08 05 
21d37     01 FC FB F5 | 	byte	$05, $05, $00, $02, $05, $06, $06, $0a, $0b, $09, $08, $05, $01, $fc, $fb, $f5
21d3b     F1 F0 F6 F9 
21d3f     FE 03 06 03 
21d43     FF FB FA F9 
21d47     FD 01 02 03 | 	byte	$f1, $f0, $f6, $f9, $fe, $03, $06, $03, $ff, $fb, $fa, $f9, $fd, $01, $02, $03
21d4b     05 04 00 02 
21d4f     04 07 07 0A 
21d53     0B 0A 06 04 
21d57     01 FD F9 F4 | 	byte	$05, $04, $00, $02, $04, $07, $07, $0a, $0b, $0a, $06, $04, $01, $fd, $f9, $f4
21d5b     F0 F2 F7 FB 
21d5f     FF 04 07 04 
21d63     FE FA FB FB 
21d67     FD FF 02 04 | 	byte	$f0, $f2, $f7, $fb, $ff, $04, $07, $04, $fe, $fa, $fb, $fb, $fd, $ff, $02, $04
21d6b     04 02 01 02 
21d6f     06 07 07 0A 
21d73     0C 09 06 03 
21d77     00 FC F7 F3 | 	byte	$04, $02, $01, $02, $06, $07, $07, $0a, $0c, $09, $06, $03, $00, $fc, $f7, $f3
21d7b     F1 F3 F7 FC 
21d7f     00 05 06 04 
21d83     FC FB FC FC 
21d87     FD 00 02 04 | 	byte	$f1, $f3, $f7, $fc, $00, $05, $06, $04, $fc, $fb, $fc, $fc, $fd, $00, $02, $04
21d8b     03 02 01 03 
21d8f     06 06 08 0A 
21d93     0C 08 05 02 
21d97     00 FA F6 F2 | 	byte	$03, $02, $01, $03, $06, $06, $08, $0a, $0c, $08, $05, $02, $00, $fa, $f6, $f2
21d9b     F1 F3 F8 FC 
21d9f     02 05 06 01 
21da3     FC FC FC FC 
21da7     FD 00 03 03 | 	byte	$f1, $f3, $f8, $fc, $02, $05, $06, $01, $fc, $fc, $fc, $fc, $fd, $00, $03, $03
21dab     03 02 01 03 
21daf     06 08 08 0B 
21db3     0B 09 04 02 
21db7     FE F9 F4 F2 | 	byte	$03, $02, $01, $03, $06, $08, $08, $0b, $0b, $09, $04, $02, $fe, $f9, $f4, $f2
21dbb     F2 F4 F9 FE 
21dbf     02 05 05 00 
21dc3     FC FC FC FB 
21dc7     FE 01 03 03 | 	byte	$f2, $f4, $f9, $fe, $02, $05, $05, $00, $fc, $fc, $fc, $fb, $fe, $01, $03, $03
21dcb     03 01 02 04 
21dcf     07 07 09 0B 
21dd3     0B 07 03 01 
21dd7     FE F7 F3 F2 | 	byte	$03, $01, $02, $04, $07, $07, $09, $0b, $0b, $07, $03, $01, $fe, $f7, $f3, $f2
21ddb     F2 F5 FA FF 
21ddf     03 06 04 00 
21de3     FB FC FC FD 
21de7     FD 01 03 03 | 	byte	$f2, $f5, $fa, $ff, $03, $06, $04, $00, $fb, $fc, $fc, $fd, $fd, $01, $03, $03
21deb     02 01 02 04 
21def     07 07 0A 0B 
21df3     0A 07 03 FF 
21df7     FD F7 F2 F2 | 	byte	$02, $01, $02, $04, $07, $07, $0a, $0b, $0a, $07, $03, $ff, $fd, $f7, $f2, $f2
21dfb     F3 F7 FA 00 
21dff     06 04 03 00 
21e03     FC FC FC FD 
21e07     FD 01 03 03 | 	byte	$f3, $f7, $fa, $00, $06, $04, $03, $00, $fc, $fc, $fc, $fd, $fd, $01, $03, $03
21e0b     01 02 03 05 
21e0f     06 0A 09 0A 
21e13     0A 06 01 FF 
21e17     FB F5 F3 F2 | 	byte	$01, $02, $03, $05, $06, $0a, $09, $0a, $0a, $06, $01, $ff, $fb, $f5, $f3, $f2
21e1b     F4 F6 FC 01 
21e1f     05 05 03 FE 
21e23     FC FC FD FC 
21e27     FF 03 04 01 | 	byte	$f4, $f6, $fc, $01, $05, $05, $03, $fe, $fc, $fc, $fd, $fc, $ff, $03, $04, $01
21e2b     02 02 03 05 
21e2f     07 09 0A 0B 
21e33     0A 05 01 FF 
21e37     F9 F5 F2 F4 | 	byte	$02, $02, $03, $05, $07, $09, $0a, $0b, $0a, $05, $01, $ff, $f9, $f5, $f2, $f4
21e3b     F4 F8 FE 02 
21e3f     05 05 02 FE 
21e43     FB FD FE FC 
21e47     FF 03 02 01 | 	byte	$f4, $f8, $fe, $02, $05, $05, $02, $fe, $fb, $fd, $fe, $fc, $ff, $03, $02, $01
21e4b     02 02 03 04 
21e4f     0A 09 0A 0B 
21e53     0A 04 FF FE 
21e57     F9 F3 F3 F4 | 	byte	$02, $02, $03, $04, $0a, $09, $0a, $0b, $0a, $04, $ff, $fe, $f9, $f3, $f3, $f4
21e5b     F5 F8 FF 04 
21e5f     04 04 02 FE 
21e63     FB FE FE FD 
21e67     FF 03 02 02 | 	byte	$f5, $f8, $ff, $04, $04, $04, $02, $fe, $fb, $fe, $fe, $fd, $ff, $03, $02, $02
21e6b     00 02 03 06 
21e6f     09 0A 0A 0A 
21e73     09 03 FE FC 
21e77     F9 F2 F2 F4 | 	byte	$00, $02, $03, $06, $09, $0a, $0a, $0a, $09, $03, $fe, $fc, $f9, $f2, $f2, $f4
21e7b     F6 F9 FF 04 
21e7f     04 03 02 FD 
21e83     FC FD FF FC 
21e87     FF 03 03 01 | 	byte	$f6, $f9, $ff, $04, $04, $03, $02, $fd, $fc, $fd, $ff, $fc, $ff, $03, $03, $01
21e8b     00 03 04 05 
21e8f     09 0A 0A 0A 
21e93     08 01 FE FC 
21e97     F8 F2 F2 F6 | 	byte	$00, $03, $04, $05, $09, $0a, $0a, $0a, $08, $01, $fe, $fc, $f8, $f2, $f2, $f6
21e9b     F7 FB 00 04 
21e9f     04 04 01 FD 
21ea3     FB FE FE FB 
21ea7     01 04 02 FF | 	byte	$f7, $fb, $00, $04, $04, $04, $01, $fd, $fb, $fe, $fe, $fb, $01, $04, $02, $ff
21eab     02 04 04 06 
21eaf     0A 0A 0A 09 
21eb3     07 00 FC FC 
21eb7     F6 F2 F3 F7 | 	byte	$02, $04, $04, $06, $0a, $0a, $0a, $09, $07, $00, $fc, $fc, $f6, $f2, $f3, $f7
21ebb     F7 FA 01 07 
21ebf     03 02 01 FE 
21ec3     FC FE FE FD 
21ec7     00 04 02 FE | 	byte	$f7, $fa, $01, $07, $03, $02, $01, $fe, $fc, $fe, $fe, $fd, $00, $04, $02, $fe
21ecb     02 04 04 05 
21ecf     0B 0C 09 08 
21ed3     08 FF FB FA 
21ed7     F6 F1 F3 F8 | 	byte	$02, $04, $04, $05, $0b, $0c, $09, $08, $08, $ff, $fb, $fa, $f6, $f1, $f3, $f8
21edb     F8 FA 03 07 
21edf     03 01 02 FE 
21ee3     FB FE FF FF 
21ee7     01 04 02 FF | 	byte	$f8, $fa, $03, $07, $03, $01, $02, $fe, $fb, $fe, $ff, $ff, $01, $04, $02, $ff
21eeb     01 05 05 06 
21eef     0B 0D 08 07 
21ef3     06 00 FB F8 
21ef7     F6 F3 F3 F6 | 	byte	$01, $05, $05, $06, $0b, $0d, $08, $07, $06, $00, $fb, $f8, $f6, $f3, $f3, $f6
21efb     FB FC 02 06 
21eff     03 00 00 FE 
21f03     FD FC FF 00 
21f07     01 02 02 FF | 	byte	$fb, $fc, $02, $06, $03, $00, $00, $fe, $fd, $fc, $ff, $00, $01, $02, $02, $ff
21f0b     01 04 07 08 
21f0f     0A 0D 08 06 
21f13     04 FF FA F7 
21f17     F5 F3 F3 F8 | 	byte	$01, $04, $07, $08, $0a, $0d, $08, $06, $04, $ff, $fa, $f7, $f5, $f3, $f3, $f8
21f1b     FB FD 04 06 
21f1f     03 00 00 FE 
21f23     FD FD 00 FF 
21f27     01 03 01 FF | 	byte	$fb, $fd, $04, $06, $03, $00, $00, $fe, $fd, $fd, $00, $ff, $01, $03, $01, $ff
21f2b     02 04 07 08 
21f2f     0B 0C 08 07 
21f33     03 FF FA F6 
21f37     F4 F4 F5 F8 | 	byte	$02, $04, $07, $08, $0b, $0c, $08, $07, $03, $ff, $fa, $f6, $f4, $f4, $f5, $f8
21f3b     FB 00 04 04 
21f3f     03 01 FF FD 
21f43     FE FE FF 01 
21f47     01 02 FF 00 | 	byte	$fb, $00, $04, $04, $03, $01, $ff, $fd, $fe, $fe, $ff, $01, $01, $02, $ff, $00
21f4b     03 03 07 0A 
21f4f     0B 0A 08 05 
21f53     02 FC F9 F5 
21f57     F4 F4 F5 F7 | 	byte	$03, $03, $07, $0a, $0b, $0a, $08, $05, $02, $fc, $f9, $f5, $f4, $f4, $f5, $f7
21f5b     FC 02 05 03 
21f5f     02 01 FE FD 
21f63     FD FE FF 01 
21f67     01 01 FE 01 | 	byte	$fc, $02, $05, $03, $02, $01, $fe, $fd, $fd, $fe, $ff, $01, $01, $01, $fe, $01
21f6b     02 05 07 0B 
21f6f     0B 09 07 06 
21f73     01 FB F8 F6 
21f77     F4 F4 F6 F9 | 	byte	$02, $05, $07, $0b, $0b, $09, $07, $06, $01, $fb, $f8, $f6, $f4, $f4, $f6, $f9
21f7b     FD 02 04 03 
21f7f     02 00 FE FC 
21f83     FE FF 00 00 
21f87     01 01 FF FF | 	byte	$fd, $02, $04, $03, $02, $00, $fe, $fc, $fe, $ff, $00, $00, $01, $01, $ff, $ff
21f8b     03 06 08 0B 
21f8f     0B 09 05 05 
21f93     00 F9 F7 F6 
21f97     F3 F3 F6 FB | 	byte	$03, $06, $08, $0b, $0b, $09, $05, $05, $00, $f9, $f7, $f6, $f3, $f3, $f6, $fb
21f9b     FE 02 04 04 
21f9f     01 FF FE FD 
21fa3     FE FF 01 00 
21fa7     01 00 FF 00 | 	byte	$fe, $02, $04, $04, $01, $ff, $fe, $fd, $fe, $ff, $01, $00, $01, $00, $ff, $00
21fab     04 06 09 0B 
21faf     0B 07 06 04 
21fb3     FF FA F7 F6 
21fb7     F3 F5 F7 FB | 	byte	$04, $06, $09, $0b, $0b, $07, $06, $04, $ff, $fa, $f7, $f6, $f3, $f5, $f7, $fb
21fbb     FE 03 05 03 
21fbf     00 FF FE FD 
21fc3     FD 00 01 01 
21fc7     00 00 FF 00 | 	byte	$fe, $03, $05, $03, $00, $ff, $fe, $fd, $fd, $00, $01, $01, $00, $00, $ff, $00
21fcb     05 08 09 0B 
21fcf     0B 08 05 02 
21fd3     FE FA F6 F5 
21fd7     F4 F5 F8 FC | 	byte	$05, $08, $09, $0b, $0b, $08, $05, $02, $fe, $fa, $f6, $f5, $f4, $f5, $f8, $fc
21fdb     00 02 05 00 
21fdf     00          | 	byte	$00, $02, $05, $00, $00
21fe0                 | 	alignl
21fe0                 | _hng030rm_spin2_dat_
21fe0     00 00 00 00 
21fe4     00 00 00 00 
21fe8     00 00 00 00 
21fec     00 00 00 00 
21ff0     00 00 00    | vga_font       file "vgafont.def"
21ff3     7E 81 A5 81 
21ff7     81 BD 99 81 
21ffb     81 7E 00 00 
21fff     00 00 00 00 | 	byte	$7e, $81, $a5, $81, $81, $bd, $99, $81, $81, $7e, $00, $00, $00, $00, $00, $00
22003     7E FF DB FF 
22007     FF C3 E7 FF 
2200b     FF 7E 00 00 
2200f     00 00 00 00 | 	byte	$7e, $ff, $db, $ff, $ff, $c3, $e7, $ff, $ff, $7e, $00, $00, $00, $00, $00, $00
22013     00 36 7F 7F 
22017     7F 7F 3E 1C 
2201b     08 00 00 00 
2201f     00 00 00 00 | 	byte	$00, $36, $7f, $7f, $7f, $7f, $3e, $1c, $08, $00, $00, $00, $00, $00, $00, $00
22023     00 08 1C 3E 
22027     7F 3E 1C 08 
2202b     00 00 00 00 
2202f     00 00 00 00 | 	byte	$00, $08, $1c, $3e, $7f, $3e, $1c, $08, $00, $00, $00, $00, $00, $00, $00, $00
22033     18 3C 3C E7 
22037     E7 E7 18 18 
2203b     3C 00 00 00 
2203f     00 00 00 00 | 	byte	$18, $3c, $3c, $e7, $e7, $e7, $18, $18, $3c, $00, $00, $00, $00, $00, $00, $00
22043     18 3C 7E FF 
22047     FF 7E 18 18 
2204b     3C 00 00 00 
2204f     00 00 00 00 | 	byte	$18, $3c, $7e, $ff, $ff, $7e, $18, $18, $3c, $00, $00, $00, $00, $00, $00, $00
22053     00 00 00 18 
22057     3C 3C 18 00 
2205b     00 00 00 00 
2205f     00 FF FF FF | 	byte	$00, $00, $00, $18, $3c, $3c, $18, $00, $00, $00, $00, $00, $00, $ff, $ff, $ff
22063     FF FF FF E7 
22067     C3 C3 E7 FF 
2206b     FF FF FF FF 
2206f     FF 00 00 00 | 	byte	$ff, $ff, $ff, $e7, $c3, $c3, $e7, $ff, $ff, $ff, $ff, $ff, $ff, $00, $00, $00
22073     00 00 3C 66 
22077     42 42 66 3C 
2207b     00 00 00 00 
2207f     00 FF FF FF | 	byte	$00, $00, $3c, $66, $42, $42, $66, $3c, $00, $00, $00, $00, $00, $ff, $ff, $ff
22083     FF FF C3 99 
22087     BD BD 99 C3 
2208b     FF FF FF FF 
2208f     FF 00 00 00 | 	byte	$ff, $ff, $c3, $99, $bd, $bd, $99, $c3, $ff, $ff, $ff, $ff, $ff, $00, $00, $00
22093     78 70 58 4C 
22097     1E 33 33 33 
2209b     33 1E 00 00 
2209f     00 00 00 00 | 	byte	$78, $70, $58, $4c, $1e, $33, $33, $33, $33, $1e, $00, $00, $00, $00, $00, $00
220a3     3C 66 66 66 
220a7     66 3C 18 7E 
220ab     18 18 00 00 
220af     00 00 00 00 | 	byte	$3c, $66, $66, $66, $66, $3c, $18, $7e, $18, $18, $00, $00, $00, $00, $00, $00
220b3     FC CC FC 0C 
220b7     0C 0C 0C 0E 
220bb     0F 07 00 00 
220bf     00 00 00 00 | 	byte	$fc, $cc, $fc, $0c, $0c, $0c, $0c, $0e, $0f, $07, $00, $00, $00, $00, $00, $00
220c3     FE C6 FE C6 
220c7     C6 C6 C6 E6 
220cb     E7 67 03 00 
220cf     00 00 00 00 | 	byte	$fe, $c6, $fe, $c6, $c6, $c6, $c6, $e6, $e7, $67, $03, $00, $00, $00, $00, $00
220d3     18 18 DB 3C 
220d7     E7 3C DB 18 
220db     18 00 00 00 
220df     00 00 00 01 | 	byte	$18, $18, $db, $3c, $e7, $3c, $db, $18, $18, $00, $00, $00, $00, $00, $00, $01
220e3     03 07 0F 1F 
220e7     7F 1F 0F 07 
220eb     03 01 00 00 
220ef     00 00 00 40 | 	byte	$03, $07, $0f, $1f, $7f, $1f, $0f, $07, $03, $01, $00, $00, $00, $00, $00, $40
220f3     60 70 78 7C 
220f7     7F 7C 78 70 
220fb     60 40 00 00 
220ff     00 00 00 00 | 	byte	$60, $70, $78, $7c, $7f, $7c, $78, $70, $60, $40, $00, $00, $00, $00, $00, $00
22103     18 3C 7E 18 
22107     18 18 7E 3C 
2210b     18 00 00 00 
2210f     00 00 00 00 | 	byte	$18, $3c, $7e, $18, $18, $18, $7e, $3c, $18, $00, $00, $00, $00, $00, $00, $00
22113     66 66 66 66 
22117     66 66 66    | 	byte	$66[7]
2211a     00 66 66 00 
2211e     00 00 00 00 
22122     00 FE DB DB 
22126     DB DE D8 D8 | 	byte	$00, $66, $66, $00, $00, $00, $00, $00, $00, $fe, $db, $db, $db, $de, $d8, $d8
2212a     D8 D8 D8 00 
2212e     00 00 00 3E 
22132     63 06 1C 36 
22136     63 63 36 1C | 	byte	$d8, $d8, $d8, $00, $00, $00, $00, $3e, $63, $06, $1c, $36, $63, $63, $36, $1c
2213a     30 63 3E 00 
2213e     00 00 00 00 
22142     00 00 00 00 
22146     00 00 00 7F | 	byte	$30, $63, $3e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7f
2214a     7F 7F 7F 00 
2214e     00 00 00 00 
22152     00 18 3C 7E 
22156     18 18 18 7E | 	byte	$7f, $7f, $7f, $00, $00, $00, $00, $00, $00, $18, $3c, $7e, $18, $18, $18, $7e
2215a     3C 18 7E 00 
2215e     00 00 00 00 
22162     00 18 3C 7E 
22166     18 18 18 18 | 	byte	$3c, $18, $7e, $00, $00, $00, $00, $00, $00, $18, $3c, $7e, $18, $18, $18, $18
2216a     18 18 18 00 
2216e     00 00 00 00 
22172     00 18 18 18 
22176     18 18 18 18 | 	byte	$18, $18, $18, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18
2217a     7E 3C 18 00 
2217e     00 00 00 00 
22182     00 00 00 18 
22186     30 7F 30 18 | 	byte	$7e, $3c, $18, $00, $00, $00, $00, $00, $00, $00, $00, $18, $30, $7f, $30, $18
2218a     00 00 00 00 
2218e     00 00 00 00 
22192     00 00 00    | 	byte	$00[11]
22195     0C 06 7F 06 
22199     0C 00 00 00 
2219d     00 00 00 00 
221a1     00 00 00 00 | 	byte	$0c, $06, $7f, $06, $0c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
221a5     00 03 03 03 
221a9     7F 00 00 00 
221ad     00 00 00 00 
221b1     00 00 00 00 | 	byte	$00, $03, $03, $03, $7f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
221b5     14 36 7F 36 
221b9     14 00 00 00 
221bd     00 00 00 00 
221c1     00 00 00 08 | 	byte	$14, $36, $7f, $36, $14, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $08
221c5     1C 1C 3E 3E 
221c9     7F 7F 00 00 
221cd     00 00 00 00 
221d1     00 00 00 7F | 	byte	$1c, $1c, $3e, $3e, $7f, $7f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7f
221d5     7F 3E 3E 1C 
221d9     1C 08 00 00 
221dd     00 00 00 00 
221e1     00 00 00 00 | 	byte	$7f, $3e, $3e, $1c, $1c, $08, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
221e5     00 00 00 00 
221e9     00 00 00 00 
221ed     00 00 00 00 
221f1     00 00       | 	byte	$00[14]
221f3     18 3C 3C 3C 
221f7     18 18 18 00 
221fb     18 18 00 00 
221ff     00 00 66 66 | 	byte	$18, $3c, $3c, $3c, $18, $18, $18, $00, $18, $18, $00, $00, $00, $00, $66, $66
22203     66 24 00 00 
22207     00 00 00 00 
2220b     00 00 00 00 
2220f     00 00 00 00 | 	byte	$66, $24, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
22213     00 36 36 7F 
22217     36 36 36 7F 
2221b     36 36 00 00 
2221f     00 00 18 18 | 	byte	$00, $36, $36, $7f, $36, $36, $36, $7f, $36, $36, $00, $00, $00, $00, $18, $18
22223     3E 63 43 03 
22227     3E 60 60 61 
2222b     63 3E 18 18 
2222f     00 00 00 00 | 	byte	$3e, $63, $43, $03, $3e, $60, $60, $61, $63, $3e, $18, $18, $00, $00, $00, $00
22233     00 00 43 63 
22237     30 18 0C 06 
2223b     63 61 00 00 
2223f     00 00 00 00 | 	byte	$00, $00, $43, $63, $30, $18, $0c, $06, $63, $61, $00, $00, $00, $00, $00, $00
22243     1C 36 36 1C 
22247     6E 3B 33 33 
2224b     33 6E 00 00 
2224f     00 00 00 00 | 	byte	$1c, $36, $36, $1c, $6e, $3b, $33, $33, $33, $6e, $00, $00, $00, $00, $00, $00
22253     0C 0C 0C 06 
22257     00 00 00 00 
2225b     00 00 00 00 
2225f     00 00 00 00 | 	byte	$0c, $0c, $0c, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
22263     30 18 0C 0C 
22267     0C 0C 0C 0C 
2226b     18 30 00 00 
2226f     00 00 00 00 | 	byte	$30, $18, $0c, $0c, $0c, $0c, $0c, $0c, $18, $30, $00, $00, $00, $00, $00, $00
22273     0C 18 30 30 
22277     30 30 30 30 
2227b     18 0C 00 00 
2227f     00 00 00 00 | 	byte	$0c, $18, $30, $30, $30, $30, $30, $30, $18, $0c, $00, $00, $00, $00, $00, $00
22283     00 00 00 66 
22287     3C FF 3C 66 
2228b     00 00 00 00 
2228f     00 00 00 00 | 	byte	$00, $00, $00, $66, $3c, $ff, $3c, $66, $00, $00, $00, $00, $00, $00, $00, $00
22293     00 00 00 18 
22297     18 7E 18 18 
2229b     00 00 00 00 
2229f     00 00 00 00 | 	byte	$00, $00, $00, $18, $18, $7e, $18, $18, $00, $00, $00, $00, $00, $00, $00, $00
222a3     00 00 00 00 
222a7     00 00 00 00 | 	byte	$00[8]
222ab     18 18 18 0C 
222af     00 00 00 00 
222b3     00 00 00 00 
222b7     00 7F 00 00 | 	byte	$18, $18, $18, $0c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7f, $00, $00
222bb     00 00 00 00 
222bf     00 00 00 00 
222c3     00 00 00 00 
222c7     00 00 00 00 | 	byte	$00[16]
222cb     18 18 00 00 
222cf     00 00 00 00 
222d3     00 00 40 60 
222d7     30 18 0C 06 | 	byte	$18, $18, $00, $00, $00, $00, $00, $00, $00, $00, $40, $60, $30, $18, $0c, $06
222db     03 01 00 00 
222df     00 00 00 00 
222e3     1C 36 63 63 
222e7     6B 6B 63 63 | 	byte	$03, $01, $00, $00, $00, $00, $00, $00, $1c, $36, $63, $63, $6b, $6b, $63, $63
222eb     36 1C 00 00 
222ef     00 00 00 00 
222f3     18 1C 1E 18 
222f7     18 18 18 18 | 	byte	$36, $1c, $00, $00, $00, $00, $00, $00, $18, $1c, $1e, $18, $18, $18, $18, $18
222fb     18 7E 00 00 
222ff     00 00 00 00 
22303     3E 63 60 30 
22307     18 0C 06 03 | 	byte	$18, $7e, $00, $00, $00, $00, $00, $00, $3e, $63, $60, $30, $18, $0c, $06, $03
2230b     63 7F 00 00 
2230f     00 00 00 00 
22313     3E 63 60 60 
22317     3C 60 60 60 | 	byte	$63, $7f, $00, $00, $00, $00, $00, $00, $3e, $63, $60, $60, $3c, $60, $60, $60
2231b     63 3E 00 00 
2231f     00 00 00 00 
22323     30 38 3C 36 
22327     33 7F 30 30 | 	byte	$63, $3e, $00, $00, $00, $00, $00, $00, $30, $38, $3c, $36, $33, $7f, $30, $30
2232b     30 78 00 00 
2232f     00 00 00 00 
22333     7F 03 03 03 
22337     3F 60 60 60 | 	byte	$30, $78, $00, $00, $00, $00, $00, $00, $7f, $03, $03, $03, $3f, $60, $60, $60
2233b     63 3E 00 00 
2233f     00 00 00 00 
22343     1C 06 03 03 
22347     3F 63 63 63 | 	byte	$63, $3e, $00, $00, $00, $00, $00, $00, $1c, $06, $03, $03, $3f, $63, $63, $63
2234b     63 3E 00 00 
2234f     00 00 00 00 
22353     7F 63 60 60 
22357     30 18 0C 0C | 	byte	$63, $3e, $00, $00, $00, $00, $00, $00, $7f, $63, $60, $60, $30, $18, $0c, $0c
2235b     0C 0C 00 00 
2235f     00 00 00 00 
22363     3E 63 63 63 
22367     3E 63 63 63 | 	byte	$0c, $0c, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $63, $3e, $63, $63, $63
2236b     63 3E 00 00 
2236f     00 00 00 00 
22373     3E 63 63 63 
22377     7E 60 60 60 | 	byte	$63, $3e, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $63, $7e, $60, $60, $60
2237b     30 1E 00 00 
2237f     00 00 00 00 
22383     00 00 00 18 
22387     18 00 00 00 | 	byte	$30, $1e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $18, $18, $00, $00, $00
2238b     18 18 00 00 
2238f     00 00 00 00 
22393     00 00 00 18 
22397     18 00 00 00 | 	byte	$18, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $18, $18, $00, $00, $00
2239b     18 18 0C 00 
2239f     00 00 00 00 
223a3     00 60 30 18 
223a7     0C 06 0C 18 | 	byte	$18, $18, $0c, $00, $00, $00, $00, $00, $00, $60, $30, $18, $0c, $06, $0c, $18
223ab     30 60 00 00 
223af     00 00 00 00 
223b3     00 00 00 7E 
223b7     00 00 7E 00 | 	byte	$30, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7e, $00, $00, $7e, $00
223bb     00 00 00 00 
223bf     00 00 00 00 
223c3     00          | 	byte	$00[9]
223c4     06 0C 18 30 
223c8     60 30 18 0C 
223cc     06 00 00 00 
223d0     00 00 00 3E | 	byte	$06, $0c, $18, $30, $60, $30, $18, $0c, $06, $00, $00, $00, $00, $00, $00, $3e
223d4     63 63 30 18 
223d8     18 18 00 18 
223dc     18 00 00 00 
223e0     00 00 00 00 | 	byte	$63, $63, $30, $18, $18, $18, $00, $18, $18, $00, $00, $00, $00, $00, $00, $00
223e4     3E 63 63 7B 
223e8     7B 7B 3B 03 
223ec     3E 00 00 00 
223f0     00 00 00 08 | 	byte	$3e, $63, $63, $7b, $7b, $7b, $3b, $03, $3e, $00, $00, $00, $00, $00, $00, $08
223f4     1C 36 63 63 
223f8     7F 63 63 63 
223fc     63 00 00 00 
22400     00 00 00 3F | 	byte	$1c, $36, $63, $63, $7f, $63, $63, $63, $63, $00, $00, $00, $00, $00, $00, $3f
22404     66 66 66 3E 
22408     66 66 66 66 
2240c     3F 00 00 00 
22410     00 00 00 3C | 	byte	$66, $66, $66, $3e, $66, $66, $66, $66, $3f, $00, $00, $00, $00, $00, $00, $3c
22414     66 43 03 03 
22418     03 03 43 66 
2241c     3C 00 00 00 
22420     00 00 00 1F | 	byte	$66, $43, $03, $03, $03, $03, $43, $66, $3c, $00, $00, $00, $00, $00, $00, $1f
22424     36 66 66 66 
22428     66 66 66 36 
2242c     1F 00 00 00 
22430     00 00 00 7F | 	byte	$36, $66, $66, $66, $66, $66, $66, $36, $1f, $00, $00, $00, $00, $00, $00, $7f
22434     66 46 16 1E 
22438     16 06 46 66 
2243c     7F 00 00 00 
22440     00 00 00 7F | 	byte	$66, $46, $16, $1e, $16, $06, $46, $66, $7f, $00, $00, $00, $00, $00, $00, $7f
22444     66 46 16 1E 
22448     16 06 06 06 
2244c     0F 00 00 00 
22450     00 00 00 3C | 	byte	$66, $46, $16, $1e, $16, $06, $06, $06, $0f, $00, $00, $00, $00, $00, $00, $3c
22454     66 43 03 03 
22458     7B 63 63 66 
2245c     5C 00 00 00 
22460     00 00 00 63 | 	byte	$66, $43, $03, $03, $7b, $63, $63, $66, $5c, $00, $00, $00, $00, $00, $00, $63
22464     63 63 63 7F 
22468     63 63 63 63 
2246c     63 00 00 00 
22470     00 00 00 3C | 	byte	$63, $63, $63, $7f, $63, $63, $63, $63, $63, $00, $00, $00, $00, $00, $00, $3c
22474     18 18 18 18 
22478     18 18 18 18 | 	byte	$18[8]
2247c     3C 00 00 00 
22480     00 00 00 78 
22484     30 30 30 30 
22488     30 33 33 33 | 	byte	$3c, $00, $00, $00, $00, $00, $00, $78, $30, $30, $30, $30, $30, $33, $33, $33
2248c     1E 00 00 00 
22490     00 00 00 67 
22494     66 66 36 1E 
22498     1E 36 66 66 | 	byte	$1e, $00, $00, $00, $00, $00, $00, $67, $66, $66, $36, $1e, $1e, $36, $66, $66
2249c     67 00 00 00 
224a0     00 00 00 0F 
224a4     06 06 06 06 
224a8     06 06 46 66 | 	byte	$67, $00, $00, $00, $00, $00, $00, $0f, $06, $06, $06, $06, $06, $06, $46, $66
224ac     7F 00 00 00 
224b0     00 00 00 63 
224b4     77 7F 7F 6B 
224b8     63 63 63 63 | 	byte	$7f, $00, $00, $00, $00, $00, $00, $63, $77, $7f, $7f, $6b, $63, $63, $63, $63
224bc     63 00 00 00 
224c0     00 00 00 63 
224c4     67 6F 7F 7B 
224c8     73 63 63 63 | 	byte	$63, $00, $00, $00, $00, $00, $00, $63, $67, $6f, $7f, $7b, $73, $63, $63, $63
224cc     63 00 00 00 
224d0     00 00 00 3E 
224d4     63 63 63 63 
224d8     63 63 63 63 | 	byte	$63, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $63, $63, $63, $63, $63, $63
224dc     3E 00 00 00 
224e0     00 00 00 3F 
224e4     66 66 66 3E 
224e8     06 06 06 06 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $3f, $66, $66, $66, $3e, $06, $06, $06, $06
224ec     0F 00 00 00 
224f0     00 00 00 3E 
224f4     63 63 63 63 
224f8     63 63 6B 7B | 	byte	$0f, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $63, $63, $63, $63, $6b, $7b
224fc     3E 30 70 00 
22500     00 00 00 3F 
22504     66 66 66 3E 
22508     36 66 66 66 | 	byte	$3e, $30, $70, $00, $00, $00, $00, $3f, $66, $66, $66, $3e, $36, $66, $66, $66
2250c     67 00 00 00 
22510     00 00 00 3E 
22514     63 63 06 1C 
22518     30 60 63 63 | 	byte	$67, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $06, $1c, $30, $60, $63, $63
2251c     3E 00 00 00 
22520     00 00 00 7E 
22524     7E 5A 18 18 
22528     18 18 18 18 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $7e, $7e, $5a, $18, $18, $18, $18, $18, $18
2252c     3C 00 00 00 
22530     00 00 00 63 
22534     63 63 63 63 
22538     63 63 63 63 | 	byte	$3c, $00, $00, $00, $00, $00, $00, $63, $63, $63, $63, $63, $63, $63, $63, $63
2253c     3E 00 00 00 
22540     00 00 00 63 
22544     63 63 63 63 
22548     63 63 36 1C | 	byte	$3e, $00, $00, $00, $00, $00, $00, $63, $63, $63, $63, $63, $63, $63, $36, $1c
2254c     08 00 00 00 
22550     00 00 00 63 
22554     63 63 63 6B 
22558     6B 6B 7F 77 | 	byte	$08, $00, $00, $00, $00, $00, $00, $63, $63, $63, $63, $6b, $6b, $6b, $7f, $77
2255c     36 00 00 00 
22560     00 00 00 63 
22564     63 36 3E 1C 
22568     1C 3E 36 63 | 	byte	$36, $00, $00, $00, $00, $00, $00, $63, $63, $36, $3e, $1c, $1c, $3e, $36, $63
2256c     63 00 00 00 
22570     00 00 00 66 
22574     66 66 66 3C 
22578     18 18 18 18 | 	byte	$63, $00, $00, $00, $00, $00, $00, $66, $66, $66, $66, $3c, $18, $18, $18, $18
2257c     3C 00 00 00 
22580     00 00 00 7F 
22584     63 61 30 18 
22588     0C 06 43 63 | 	byte	$3c, $00, $00, $00, $00, $00, $00, $7f, $63, $61, $30, $18, $0c, $06, $43, $63
2258c     7F 00 00 00 
22590     00 00 00 3C 
22594     0C 0C 0C 0C 
22598     0C 0C 0C 0C | 	byte	$7f, $00, $00, $00, $00, $00, $00, $3c, $0c, $0c, $0c, $0c, $0c, $0c, $0c, $0c
2259c     3C 00 00 00 
225a0     00 00 00 00 
225a4     01 03 07 0E 
225a8     1C 38 70 60 | 	byte	$3c, $00, $00, $00, $00, $00, $00, $00, $01, $03, $07, $0e, $1c, $38, $70, $60
225ac     40 00 00 00 
225b0     00 00 00 3C 
225b4     30 30 30 30 
225b8     30 30 30 30 | 	byte	$40, $00, $00, $00, $00, $00, $00, $3c, $30, $30, $30, $30, $30, $30, $30, $30
225bc     3C 00 00 00 
225c0     1C 36 00 00 
225c4     00 00 00 00 
225c8     00 00 00 00 | 	byte	$3c, $00, $00, $00, $1c, $36, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
225cc     00 00 00 00 
225d0     00 00 00 00 
225d4     00 00 00 00 
225d8     00 00 00 00 
225dc     00          | 	byte	$00[17]
225dd     FF 00 00 0C 
225e1     18 00 00 00 
225e5     00 00 00 00 
225e9     00 00 00 00 | 	byte	$ff, $00, $00, $0c, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
225ed     00 00 00 00 
225f1     00 00 00 00 
225f5     00          | 	byte	$00[9]
225f6     1E 30 3E 33 
225fa     33 33 6E 00 
225fe     00 00 00 00 
22602     00 07 06 06 | 	byte	$1e, $30, $3e, $33, $33, $33, $6e, $00, $00, $00, $00, $00, $00, $07, $06, $06
22606     1E 36 66 66 
2260a     66 66 3E 00 
2260e     00 00 00 00 
22612     00 00 00 00 | 	byte	$1e, $36, $66, $66, $66, $66, $3e, $00, $00, $00, $00, $00, $00, $00, $00, $00
22616     3E 63 03 03 
2261a     03 63 3E 00 
2261e     00 00 00 00 
22622     00 38 30 30 | 	byte	$3e, $63, $03, $03, $03, $63, $3e, $00, $00, $00, $00, $00, $00, $38, $30, $30
22626     3C 36 33 33 
2262a     33 33 6E 00 
2262e     00 00 00 00 
22632     00 00 00 00 | 	byte	$3c, $36, $33, $33, $33, $33, $6e, $00, $00, $00, $00, $00, $00, $00, $00, $00
22636     3E 63 7F 03 
2263a     03 63 3E 00 
2263e     00 00 00 00 
22642     00 38 6C 4C | 	byte	$3e, $63, $7f, $03, $03, $63, $3e, $00, $00, $00, $00, $00, $00, $38, $6c, $4c
22646     0C 1E 0C 0C 
2264a     0C 0C 1E 00 
2264e     00 00 00 00 
22652     00 00 00 00 | 	byte	$0c, $1e, $0c, $0c, $0c, $0c, $1e, $00, $00, $00, $00, $00, $00, $00, $00, $00
22656     6E 33 33 33 
2265a     33 33 3E 30 
2265e     33 1E 00 00 
22662     00 07 06 06 | 	byte	$6e, $33, $33, $33, $33, $33, $3e, $30, $33, $1e, $00, $00, $00, $07, $06, $06
22666     36 6E 66 66 
2266a     66 66 67 00 
2266e     00 00 00 00 
22672     00 18 18 00 | 	byte	$36, $6e, $66, $66, $66, $66, $67, $00, $00, $00, $00, $00, $00, $18, $18, $00
22676     1C 18 18 18 
2267a     18 18 3C 00 
2267e     00 00 00 00 
22682     00 60 60 00 | 	byte	$1c, $18, $18, $18, $18, $18, $3c, $00, $00, $00, $00, $00, $00, $60, $60, $00
22686     70 60 60 60 
2268a     60 60 60 66 
2268e     66 3C 00 00 
22692     00 07 06 06 | 	byte	$70, $60, $60, $60, $60, $60, $60, $66, $66, $3c, $00, $00, $00, $07, $06, $06
22696     66 36 1E 1E 
2269a     36 66 67 00 
2269e     00 00 00 00 
226a2     00 1C 18 18 | 	byte	$66, $36, $1e, $1e, $36, $66, $67, $00, $00, $00, $00, $00, $00, $1c, $18, $18
226a6     18 18 18 18 
226aa     18 18       | 	byte	$18[6]
226ac     3C 00 00 00 
226b0     00 00 00 00 
226b4     00 00 37 7F 
226b8     6B 6B 6B 6B | 	byte	$3c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $37, $7f, $6b, $6b, $6b, $6b
226bc     63 00 00 00 
226c0     00 00 00 00 
226c4     00 00 3B 66 
226c8     66 66 66 66 | 	byte	$63, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $66, $66, $66, $66, $66
226cc     66 00 00 00 
226d0     00 00 00 00 
226d4     00 00 3E 63 
226d8     63 63 63 63 | 	byte	$66, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $63, $63, $63
226dc     3E 00 00 00 
226e0     00 00 00 00 
226e4     00 00 3B 66 
226e8     66 66 66 66 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $66, $66, $66, $66, $66
226ec     3E 06 06 0F 
226f0     00 00 00 00 
226f4     00 00 6E 33 
226f8     33 33 33 33 | 	byte	$3e, $06, $06, $0f, $00, $00, $00, $00, $00, $00, $6e, $33, $33, $33, $33, $33
226fc     3E 30 30 78 
22700     00 00 00 00 
22704     00 00 3B 6E 
22708     66 06 06 06 | 	byte	$3e, $30, $30, $78, $00, $00, $00, $00, $00, $00, $3b, $6e, $66, $06, $06, $06
2270c     0F 00 00 00 
22710     00 00 00 00 
22714     00 00 3E 63 
22718     06 1C 30 63 | 	byte	$0f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3e, $63, $06, $1c, $30, $63
2271c     3E 00 00 00 
22720     00 00 00 08 
22724     0C 0C 3F 0C 
22728     0C 0C 0C 6C | 	byte	$3e, $00, $00, $00, $00, $00, $00, $08, $0c, $0c, $3f, $0c, $0c, $0c, $0c, $6c
2272c     38 00 00 00 
22730     00 00 00 00 
22734     00 00 33 33 
22738     33 33 33 33 | 	byte	$38, $00, $00, $00, $00, $00, $00, $00, $00, $00, $33, $33, $33, $33, $33, $33
2273c     6E 00 00 00 
22740     00 00 00 00 
22744     00 00 63 63 
22748     63 63 63 36 | 	byte	$6e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $63, $63, $63, $63, $63, $36
2274c     1C 00 00 00 
22750     00 00 00 00 
22754     00 00 63 63 
22758     6B 6B 6B 7F | 	byte	$1c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $63, $63, $6b, $6b, $6b, $7f
2275c     36 00 00 00 
22760     00 00 00 00 
22764     00 00 63 36 
22768     1C 1C 1C 36 | 	byte	$36, $00, $00, $00, $00, $00, $00, $00, $00, $00, $63, $36, $1c, $1c, $1c, $36
2276c     63 00 00 00 
22770     00 00 00 00 
22774     00 00 63 63 
22778     63 63 63 63 | 	byte	$63, $00, $00, $00, $00, $00, $00, $00, $00, $00, $63, $63, $63, $63, $63, $63
2277c     7E 60 30 1F 
22780     00 00 00 00 
22784     00 00 7F 33 
22788     18 0C 06 63 | 	byte	$7e, $60, $30, $1f, $00, $00, $00, $00, $00, $00, $7f, $33, $18, $0c, $06, $63
2278c     7F 00 00 00 
22790     00 00 00 70 
22794     18 18 18 0E 
22798     18 18 18 18 | 	byte	$7f, $00, $00, $00, $00, $00, $00, $70, $18, $18, $18, $0e, $18, $18, $18, $18
2279c     70 00 00 00 
227a0     00 00 00 18 
227a4     18 18 18 18 
227a8     18 18 18 18 | 	byte	$70, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18, $18, $18
227ac     18 00 00 00 
227b0     00 00 00 0E 
227b4     18 18 18 70 
227b8     18 18 18 18 | 	byte	$18, $00, $00, $00, $00, $00, $00, $0e, $18, $18, $18, $70, $18, $18, $18, $18
227bc     0E 00 00 00 
227c0     6E 3B 00 00 
227c4     00 00 00 00 
227c8     00 00 00 00 | 	byte	$0e, $00, $00, $00, $6e, $3b, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
227cc     00 00 00 00 
227d0     00 00 00 00 
227d4     00 00       | 	byte	$00[10]
227d6     08 1C 36 63 
227da     63 63 7F 00 
227de     00 00 00 00 
227e2     00 3C 66 43 | 	byte	$08, $1c, $36, $63, $63, $63, $7f, $00, $00, $00, $00, $00, $00, $3c, $66, $43
227e6     03 03 03 03 
227ea     43 66 3C 18 
227ee     30 1E 00 00 
227f2     00 00 33 00 | 	byte	$03, $03, $03, $03, $43, $66, $3c, $18, $30, $1e, $00, $00, $00, $00, $33, $00
227f6     33 33 33 33 
227fa     33 33       | 	byte	$33[6]
227fc     6E 00 00 00 
22800     00 00 60 30 
22804     18 00 3E 63 
22808     7F 03 03 63 | 	byte	$6e, $00, $00, $00, $00, $00, $60, $30, $18, $00, $3e, $63, $7f, $03, $03, $63
2280c     3E 00 00 00 
22810     00 00 08 1C 
22814     36 00 1E 30 
22818     3E 33 33 33 | 	byte	$3e, $00, $00, $00, $00, $00, $08, $1c, $36, $00, $1e, $30, $3e, $33, $33, $33
2281c     6E 00 00 00 
22820     00 00 00 00 
22824     33 00 1E 30 
22828     3E 33 33 33 | 	byte	$6e, $00, $00, $00, $00, $00, $00, $00, $33, $00, $1e, $30, $3e, $33, $33, $33
2282c     6E 00 00 00 
22830     00 00 1C 36 
22834     1C 00 33 33 
22838     33 33 33 33 | 	byte	$6e, $00, $00, $00, $00, $00, $1c, $36, $1c, $00, $33, $33, $33, $33, $33, $33
2283c     6E 00 00 00 
22840     00 00 60 30 
22844     18 00 3E 63 
22848     03 03 03 63 | 	byte	$6e, $00, $00, $00, $00, $00, $60, $30, $18, $00, $3e, $63, $03, $03, $03, $63
2284c     3E 00 00 00 
22850     00 00 00 00 
22854     00 00 3E 63 
22858     03 03 03 63 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3e, $63, $03, $03, $03, $63
2285c     3E 18 30 1E 
22860     00 00 00 1C 
22864     58 78 38 18 
22868     1C 1E 1A 18 | 	byte	$3e, $18, $30, $1e, $00, $00, $00, $1c, $58, $78, $38, $18, $1c, $1e, $1a, $18
2286c     3C 00 00 00 
22870     00 00 00 00 
22874     63 00 3E 63 
22878     7F 03 03 63 | 	byte	$3c, $00, $00, $00, $00, $00, $00, $00, $63, $00, $3e, $63, $7f, $03, $03, $63
2287c     3E 00 00 00 
22880     66 33 00 3E 
22884     63 63 63 63 
22888     63 63 63 63 | 	byte	$3e, $00, $00, $00, $66, $33, $00, $3e, $63, $63, $63, $63, $63, $63, $63, $63
2288c     3E 00 00 00 
22890     00 00 CC 66 
22894     33 00 3E 63 
22898     63 63 63 63 | 	byte	$3e, $00, $00, $00, $00, $00, $cc, $66, $33, $00, $3e, $63, $63, $63, $63, $63
2289c     3E 00 00 00 
228a0     00 00 18 3C 
228a4     66 00 1C 18 
228a8     18 18 18 18 | 	byte	$3e, $00, $00, $00, $00, $00, $18, $3c, $66, $00, $1c, $18, $18, $18, $18, $18
228ac     3C 00 00 00 
228b0     30 18 00 7F 
228b4     63 61 30 18 
228b8     0C 06 43 63 | 	byte	$3c, $00, $00, $00, $30, $18, $00, $7f, $63, $61, $30, $18, $0c, $06, $43, $63
228bc     7F 00 00 00 
228c0     00 63 00 08 
228c4     1C 36 63 63 
228c8     7F 63 63 63 | 	byte	$7f, $00, $00, $00, $00, $63, $00, $08, $1c, $36, $63, $63, $7f, $63, $63, $63
228cc     63 00 00 00 
228d0     30 18 00 3C 
228d4     66 43 03 03 
228d8     03 03 43 66 | 	byte	$63, $00, $00, $00, $30, $18, $00, $3c, $66, $43, $03, $03, $03, $03, $43, $66
228dc     3C 00 00 00 
228e0     30 18 00 7F 
228e4     66 46 16 1E 
228e8     16 06 46 66 | 	byte	$3c, $00, $00, $00, $30, $18, $00, $7f, $66, $46, $16, $1e, $16, $06, $46, $66
228ec     7F 00 00 00 
228f0     0C 06 00 0F 
228f4     06 06 06 06 
228f8     06 06 46 66 | 	byte	$7f, $00, $00, $00, $0c, $06, $00, $0f, $06, $06, $06, $06, $06, $06, $46, $66
228fc     7F 00 00 00 
22900     30 18 00 1C 
22904     18 18 18 18 
22908     18 18 18 18 | 	byte	$7f, $00, $00, $00, $30, $18, $00, $1c, $18, $18, $18, $18, $18, $18, $18, $18
2290c     3C 00 00 00 
22910     00 00 08 1C 
22914     36 00 3E 63 
22918     63 63 63 63 | 	byte	$3c, $00, $00, $00, $00, $00, $08, $1c, $36, $00, $3e, $63, $63, $63, $63, $63
2291c     3E 00 00 00 
22920     00 00 00 00 
22924     63 00 3E 63 
22928     63 63 63 63 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $00, $63, $00, $3e, $63, $63, $63, $63, $63
2292c     3E 00 00 00 
22930     00 00 00 6F 
22934     46 26 06 06 
22938     06 06 46 66 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $6f, $46, $26, $06, $06, $06, $06, $46, $66
2293c     7F 00 00 00 
22940     00 00 00 6E 
22944     4C 2C 0C 0C 
22948     0C 0C 0C 0C | 	byte	$7f, $00, $00, $00, $00, $00, $00, $6e, $4c, $2c, $0c, $0c, $0c, $0c, $0c, $0c
2294c     1E 00 00 00 
22950     30 18 00 3E 
22954     63 63 06 1C 
22958     30 60 63 63 | 	byte	$1e, $00, $00, $00, $30, $18, $00, $3e, $63, $63, $06, $1c, $30, $60, $63, $63
2295c     3E 00 00 00 
22960     00 00 60 30 
22964     18 00 3E 63 
22968     06 1C 30 63 | 	byte	$3e, $00, $00, $00, $00, $00, $60, $30, $18, $00, $3e, $63, $06, $1c, $30, $63
2296c     3E 00 00 00 
22970     00 63 00 3E 
22974     63 63 63 63 
22978     63 63 63 63 | 	byte	$3e, $00, $00, $00, $00, $63, $00, $3e, $63, $63, $63, $63, $63, $63, $63, $63
2297c     3E 00 00 00 
22980     00 63 00 63 
22984     63 63 63 63 
22988     63 63 63 63 | 	byte	$3e, $00, $00, $00, $00, $63, $00, $63, $63, $63, $63, $63, $63, $63, $63, $63
2298c     3E 00 00 00 
22990     6C 38 00 7E 
22994     7E 5A 18 18 
22998     18 18 18 18 | 	byte	$3e, $00, $00, $00, $6c, $38, $00, $7e, $7e, $5a, $18, $18, $18, $18, $18, $18
2299c     3C 00 00 00 
229a0     00 00 60 48 
229a4     2C 0C 3F 0C 
229a8     0C 0C 0C 6C | 	byte	$3c, $00, $00, $00, $00, $00, $60, $48, $2c, $0c, $3f, $0c, $0c, $0c, $0c, $6c
229ac     38 00 00 00 
229b0     00 00 00 0F 
229b4     26 36 1E 0E 
229b8     07 07 46 66 | 	byte	$38, $00, $00, $00, $00, $00, $00, $0f, $26, $36, $1e, $0e, $07, $07, $46, $66
229bc     7F 00 00 00 
229c0     00 00 00 00 
229c4     00 63 36 1C 
229c8     1C 36 63 00 | 	byte	$7f, $00, $00, $00, $00, $00, $00, $00, $00, $63, $36, $1c, $1c, $36, $63, $00
229cc     00 00 00 00 
229d0     00 00       | 	byte	$00[6]
229d2     36 1C 08 00 
229d6     3E 63 03 03 
229da     03 63 3E 00 
229de     00 00 00 00 | 	byte	$36, $1c, $08, $00, $3e, $63, $03, $03, $03, $63, $3e, $00, $00, $00, $00, $00
229e2     30 18 0C 00 
229e6     1E 30 3E 33 
229ea     33 33 6E 00 
229ee     00 00 00 00 | 	byte	$30, $18, $0c, $00, $1e, $30, $3e, $33, $33, $33, $6e, $00, $00, $00, $00, $00
229f2     60 30 18 00 
229f6     1C 18 18 18 
229fa     18 18 3C 00 
229fe     00 00 00 00 | 	byte	$60, $30, $18, $00, $1c, $18, $18, $18, $18, $18, $3c, $00, $00, $00, $00, $00
22a02     60 30 18 00 
22a06     3E 63 63 63 
22a0a     63 63 3E 00 
22a0e     00 00 00 00 | 	byte	$60, $30, $18, $00, $3e, $63, $63, $63, $63, $63, $3e, $00, $00, $00, $00, $00
22a12     30 18 0C 00 
22a16     33 33 33 33 
22a1a     33 33 6E 00 
22a1e     00 00 00 00 | 	byte	$30, $18, $0c, $00, $33, $33, $33, $33, $33, $33, $6e, $00, $00, $00, $00, $00
22a22     00 08 1C 36 
22a26     63 63 7F 63 
22a2a     63 63 63 18 
22a2e     0C 78 00 00 | 	byte	$00, $08, $1c, $36, $63, $63, $7f, $63, $63, $63, $63, $18, $0c, $78, $00, $00
22a32     00 00 00 00 
22a36     1E 30 3E 33 
22a3a     33 33 6E 18 
22a3e     0C 78 36 1C | 	byte	$00, $00, $00, $00, $1e, $30, $3e, $33, $33, $33, $6e, $18, $0c, $78, $36, $1c
22a42     00 7F 63 61 
22a46     30 18 0C 06 
22a4a     43 63 7F 00 
22a4e     00 00 00 00 | 	byte	$00, $7f, $63, $61, $30, $18, $0c, $06, $43, $63, $7f, $00, $00, $00, $00, $00
22a52     36 1C 08 00 
22a56     7F 33 18 0C 
22a5a     06 63 7F 00 
22a5e     00 00 00 00 | 	byte	$36, $1c, $08, $00, $7f, $33, $18, $0c, $06, $63, $7f, $00, $00, $00, $00, $00
22a62     00 7F 66 46 
22a66     16 1E 16 06 
22a6a     46 66 7F 18 
22a6e     0C 78 00 00 | 	byte	$00, $7f, $66, $46, $16, $1e, $16, $06, $46, $66, $7f, $18, $0c, $78, $00, $00
22a72     00 00 00 00 
22a76     3E 63 7F 03 
22a7a     03 63 3E 18 
22a7e     0C 78 00 00 | 	byte	$00, $00, $00, $00, $3e, $63, $7f, $03, $03, $63, $3e, $18, $0c, $78, $00, $00
22a82     00 3C 66 03 
22a86     1F 03 0F 03 
22a8a     03 66 3C 00 
22a8e     00 00 00 00 | 	byte	$00, $3c, $66, $03, $1f, $03, $0f, $03, $03, $66, $3c, $00, $00, $00, $00, $00
22a92     60 30 18 00 
22a96     7F 33 18 0C 
22a9a     06 63 7F 00 
22a9e     00 00 6C 38 | 	byte	$60, $30, $18, $00, $7f, $33, $18, $0c, $06, $63, $7f, $00, $00, $00, $6c, $38
22aa2     00 3C 66 43 
22aa6     03 03 03 03 
22aaa     43 66 3C 00 
22aae     00 00 00 00 | 	byte	$00, $3c, $66, $43, $03, $03, $03, $03, $43, $66, $3c, $00, $00, $00, $00, $00
22ab2     00 00 00 00 
22ab6     3E 63 06 1C 
22aba     30 63 3E 18 
22abe     30 1E 00 00 | 	byte	$00, $00, $00, $00, $3e, $63, $06, $1c, $30, $63, $3e, $18, $30, $1e, $00, $00
22ac2     00 00 00 00 
22ac6     00 00       | 	byte	$00[6]
22ac8     6C 36 1B 36 
22acc     6C 00 00 00 
22ad0     00 00 00 00 
22ad4     00 00 00 00 | 	byte	$6c, $36, $1b, $36, $6c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
22ad8     1B 36 6C 36 
22adc     1B 00 00 00 
22ae0     88 22 88 22 
22ae4     88 22 88 22 | 	byte	$1b, $36, $6c, $36, $1b, $00, $00, $00, $88, $22, $88, $22, $88, $22, $88, $22
22ae8     88 22 88 22 
22aec     88 22 88 22 
22af0     AA 55 AA 55 
22af4     AA 55 AA 55 | 	byte	$88, $22, $88, $22, $88, $22, $88, $22, $aa, $55, $aa, $55, $aa, $55, $aa, $55
22af8     AA 55 AA 55 
22afc     AA 55 AA 55 
22b00     BB EE BB EE 
22b04     BB EE BB EE | 	byte	$aa, $55, $aa, $55, $aa, $55, $aa, $55, $bb, $ee, $bb, $ee, $bb, $ee, $bb, $ee
22b08     BB EE BB EE 
22b0c     BB EE BB EE 
22b10     18 18 18 18 
22b14     18 18 18 18 | 	byte	$bb, $ee, $bb, $ee, $bb, $ee, $bb, $ee, $18, $18, $18, $18, $18, $18, $18, $18
22b18     18 18 18 18 
22b1c     18 18 18 18 
22b20     18 18 18 18 
22b24     18 18 18    | 	byte	$18[15]
22b27     1F 18 18 18 
22b2b     18 18 18 18 
22b2f     18 30 18 00 
22b33     08 1C 36 63 | 	byte	$1f, $18, $18, $18, $18, $18, $18, $18, $18, $30, $18, $00, $08, $1c, $36, $63
22b37     63 7F 63 63 
22b3b     63 63 00 00 
22b3f     00 1C 36 00 
22b43     08 1C 36 63 | 	byte	$63, $7f, $63, $63, $63, $63, $00, $00, $00, $1c, $36, $00, $08, $1c, $36, $63
22b47     63 7F 63 63 
22b4b     63 63 00 00 
22b4f     00 36 1C 00 
22b53     7F 66 46 16 | 	byte	$63, $7f, $63, $63, $63, $63, $00, $00, $00, $36, $1c, $00, $7f, $66, $46, $16
22b57     1E 16 06 46 
22b5b     66 7F 00 00 
22b5f     00 00 00 00 
22b63     3E 63 63 06 | 	byte	$1e, $16, $06, $46, $66, $7f, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $06
22b67     1C 30 60 63 
22b6b     63 3E 18 30 
22b6f     1E 6C 6C 6C 
22b73     6C 6C 6F 60 | 	byte	$1c, $30, $60, $63, $63, $3e, $18, $30, $1e, $6c, $6c, $6c, $6c, $6c, $6f, $60
22b77     6F 6C 6C 6C 
22b7b     6C 6C 6C 6C 
22b7f     6C 6C 6C 6C 
22b83     6C 6C 6C 6C | 	byte	$6f, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c
22b87     6C 6C 6C 6C 
22b8b     6C 6C 6C 6C 
22b8f     6C          | 	byte	$6c[9]
22b90     00 00 00 00 
22b94     00          | 	byte	$00[5]
22b95     7F 60 6F 6C 
22b99     6C 6C 6C 6C 
22b9d     6C 6C 6C 6C 
22ba1     6C 6C 6C 6C | 	byte	$7f, $60, $6f, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c
22ba5     6F 60 7F 00 
22ba9     00 00 00 00 
22bad     00 00 00 18 
22bb1     18 00 7F 63 | 	byte	$6f, $60, $7f, $00, $00, $00, $00, $00, $00, $00, $00, $18, $18, $00, $7f, $63
22bb5     61 30 18 0C 
22bb9     06 43 63 7F 
22bbd     00 00 00 00 
22bc1     00 00 18 18 | 	byte	$61, $30, $18, $0c, $06, $43, $63, $7f, $00, $00, $00, $00, $00, $00, $18, $18
22bc5     00 7F 33 18 
22bc9     0C 06 63 7F 
22bcd     00 00 00 00 
22bd1     00 00 00 00 | 	byte	$00, $7f, $33, $18, $0c, $06, $63, $7f, $00, $00, $00, $00, $00, $00, $00, $00
22bd5     00 00 1F 18 
22bd9     18 18 18 18 
22bdd     18 18 18 18 
22be1     18 18 18 18 | 	byte	$00, $00, $1f, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
22be5     18 18 F8 00 
22be9     00 00 00 00 
22bed     00 00 00 18 
22bf1     18 18 18 18 | 	byte	$18, $18, $f8, $00, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18
22bf5     18 18 FF 00 
22bf9     00 00 00 00 
22bfd     00 00 00 00 
22c01     00 00 00 00 | 	byte	$18, $18, $ff, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
22c05     00 00 FF 18 
22c09     18 18 18 18 
22c0d     18 18 18 18 
22c11     18 18 18 18 | 	byte	$00, $00, $ff, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
22c15     18 18 F8 18 
22c19     18 18 18 18 
22c1d     18 18 18 00 
22c21     00 00 00 00 | 	byte	$18, $18, $f8, $18, $18, $18, $18, $18, $18, $18, $18, $00, $00, $00, $00, $00
22c25     00 00 FF 00 
22c29     00 00 00 00 
22c2d     00 00 00 18 
22c31     18 18 18 18 | 	byte	$00, $00, $ff, $00, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18
22c35     18 18 FF 18 
22c39     18 18 18 18 
22c3d     18 18 18 63 
22c41     3E 00 08 1C | 	byte	$18, $18, $ff, $18, $18, $18, $18, $18, $18, $18, $18, $63, $3e, $00, $08, $1c
22c45     36 63 63 7F 
22c49     63 63 63 63 
22c4d     00 00 00 00 
22c51     00 00 63 3E | 	byte	$36, $63, $63, $7f, $63, $63, $63, $63, $00, $00, $00, $00, $00, $00, $63, $3e
22c55     00 1E 30 3E 
22c59     33 33 33 6E 
22c5d     00 00 00 6C 
22c61     6C 6C 6C 6C | 	byte	$00, $1e, $30, $3e, $33, $33, $33, $6e, $00, $00, $00, $6c, $6c, $6c, $6c, $6c
22c65     EC 0C FC 00 
22c69     00 00 00 00 
22c6d     00 00 00 00 
22c71     00 00 00 00 | 	byte	$ec, $0c, $fc, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
22c75     FC 0C EC 6C 
22c79     6C 6C 6C 6C 
22c7d     6C 6C 6C 6C 
22c81     6C 6C 6C 6C | 	byte	$fc, $0c, $ec, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c
22c85     EF 00 FF 00 
22c89     00 00 00 00 
22c8d     00 00 00 00 
22c91     00 00 00 00 | 	byte	$ef, $00, $ff, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
22c95     FF 00 EF 6C 
22c99     6C 6C 6C 6C 
22c9d     6C 6C 6C 6C 
22ca1     6C 6C 6C 6C | 	byte	$ff, $00, $ef, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c
22ca5     EC 0C EC 6C 
22ca9     6C 6C 6C 6C 
22cad     6C 6C 6C 00 
22cb1     00 00 00 00 | 	byte	$ec, $0c, $ec, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $00, $00, $00, $00, $00
22cb5     FF 00 FF 00 
22cb9     00 00 00 00 
22cbd     00 00 00 6C 
22cc1     6C 6C 6C 6C | 	byte	$ff, $00, $ff, $00, $00, $00, $00, $00, $00, $00, $00, $6c, $6c, $6c, $6c, $6c
22cc5     EF 00 EF 6C 
22cc9     6C 6C 6C 6C 
22ccd     6C 6C 6C 00 
22cd1     00 00 00 00 | 	byte	$ef, $00, $ef, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $00, $00, $00, $00, $00
22cd5     63 3E 63 63 
22cd9     63 63 3E 63 
22cdd     00 00 00 00 
22ce1     00 00 30 7E | 	byte	$63, $3e, $63, $63, $63, $63, $3e, $63, $00, $00, $00, $00, $00, $00, $30, $7e
22ce5     30 3C 36 33 
22ce9     33 33 33 6E 
22ced     00 00 00 00 
22cf1     00 00 1F 36 | 	byte	$30, $3c, $36, $33, $33, $33, $33, $6e, $00, $00, $00, $00, $00, $00, $1f, $36
22cf5     66 66 6F 66 
22cf9     66 66 36 1F 
22cfd     00 00 00 36 
22d01     1C 00 1F 36 | 	byte	$66, $66, $6f, $66, $66, $66, $36, $1f, $00, $00, $00, $36, $1c, $00, $1f, $36
22d05     66 66 66 66 
22d09     66 66       | 	byte	$66[6]
22d0b     36 1F 00 00 
22d0f     00 00 63 00 
22d13     7F 66 46 16 
22d17     1E 16 06 46 | 	byte	$36, $1f, $00, $00, $00, $00, $63, $00, $7f, $66, $46, $16, $1e, $16, $06, $46
22d1b     66 7F 00 00 
22d1f     00 6C 38 00 
22d23     38 30 30 3C 
22d27     36 33 33 33 | 	byte	$66, $7f, $00, $00, $00, $6c, $38, $00, $38, $30, $30, $3c, $36, $33, $33, $33
22d2b     33 6E 00 00 
22d2f     00 36 1C 00 
22d33     63 67 6F 7F 
22d37     7B 73 63 63 | 	byte	$33, $6e, $00, $00, $00, $36, $1c, $00, $63, $67, $6f, $7f, $7b, $73, $63, $63
22d3b     63 63 00 00 
22d3f     00 30 18 00 
22d43     3C 18 18 18 
22d47     18 18 18 18 | 	byte	$63, $63, $00, $00, $00, $30, $18, $00, $3c, $18, $18, $18, $18, $18, $18, $18
22d4b     18 3C 00 00 
22d4f     00 3C 66 00 
22d53     3C 18 18 18 
22d57     18 18 18 18 | 	byte	$18, $3c, $00, $00, $00, $3c, $66, $00, $3c, $18, $18, $18, $18, $18, $18, $18
22d5b     18 3C 00 00 
22d5f     00 00 00 36 
22d63     1C 08 00 3E 
22d67     63 7F 03 03 | 	byte	$18, $3c, $00, $00, $00, $00, $00, $36, $1c, $08, $00, $3e, $63, $7f, $03, $03
22d6b     63 3E 00 00 
22d6f     00 18 18 18 
22d73     18 18 18 18 
22d77     1F 00 00 00 | 	byte	$63, $3e, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18, $1f, $00, $00, $00
22d7b     00 00 00 00 
22d7f     00 00 00 00 
22d83     00 00 00 00 | 	byte	$00[12]
22d87     F8 18 18 18 
22d8b     18 18 18 18 
22d8f     18 FF FF FF 
22d93     FF FF FF FF | 	byte	$f8, $18, $18, $18, $18, $18, $18, $18, $18, $ff, $ff, $ff, $ff, $ff, $ff, $ff
22d97     FF FF FF FF 
22d9b     FF FF FF FF 
22d9f     FF          | 	byte	$ff[9]
22da0     00 00 00 00 
22da4     00 00 00    | 	byte	$00[7]
22da7     FF FF FF FF 
22dab     FF FF FF FF 
22daf     FF          | 	byte	$ff[9]
22db0     00 00 00 7E 
22db4     7E 5A 18 18 
22db8     18 18 18 18 
22dbc     3C 18 30 1E | 	byte	$00, $00, $00, $7e, $7e, $5a, $18, $18, $18, $18, $18, $18, $3c, $18, $30, $1e
22dc0     1C 36 1C 63 
22dc4     63 63 63 63 
22dc8     63 63 63 63 
22dcc     3E 00 00 00 | 	byte	$1c, $36, $1c, $63, $63, $63, $63, $63, $63, $63, $63, $63, $3e, $00, $00, $00
22dd0     FF FF FF FF 
22dd4     FF FF FF    | 	byte	$ff[7]
22dd7     00 00 00 00 
22ddb     00 00 00 00 
22ddf     00          | 	byte	$00[9]
22de0     30 18 00 3E 
22de4     63 63 63 63 
22de8     63 63 63 63 
22dec     3E 00 00 00 | 	byte	$30, $18, $00, $3e, $63, $63, $63, $63, $63, $63, $63, $63, $3e, $00, $00, $00
22df0     00 00 00 1E 
22df4     33 33 33 1B 
22df8     33 63 63 63 
22dfc     33 00 00 00 | 	byte	$00, $00, $00, $1e, $33, $33, $33, $1b, $33, $63, $63, $63, $33, $00, $00, $00
22e00     1C 36 00 3E 
22e04     63 63 63 63 
22e08     63 63 63 63 
22e0c     3E 00 00 00 | 	byte	$1c, $36, $00, $3e, $63, $63, $63, $63, $63, $63, $63, $63, $3e, $00, $00, $00
22e10     30 18 00 63 
22e14     67 6F 7F 7B 
22e18     73 63 63 63 
22e1c     63 00 00 00 | 	byte	$30, $18, $00, $63, $67, $6f, $7f, $7b, $73, $63, $63, $63, $63, $00, $00, $00
22e20     00 00 60 30 
22e24     18 00 3B 66 
22e28     66 66 66 66 
22e2c     66 00 00 00 | 	byte	$00, $00, $60, $30, $18, $00, $3b, $66, $66, $66, $66, $66, $66, $00, $00, $00
22e30     00 00 36 1C 
22e34     08 00 3B 66 
22e38     66 66 66 66 
22e3c     66 00 00 00 | 	byte	$00, $00, $36, $1c, $08, $00, $3b, $66, $66, $66, $66, $66, $66, $00, $00, $00
22e40     36 1C 00 3E 
22e44     63 63 06 1C 
22e48     30 60 63 63 
22e4c     3E 00 00 00 | 	byte	$36, $1c, $00, $3e, $63, $63, $06, $1c, $30, $60, $63, $63, $3e, $00, $00, $00
22e50     00 00 36 1C 
22e54     08 00 3E 63 
22e58     06 1C 30 63 
22e5c     3E 00 00 00 | 	byte	$00, $00, $36, $1c, $08, $00, $3e, $63, $06, $1c, $30, $63, $3e, $00, $00, $00
22e60     30 18 00 3F 
22e64     66 66 66 3E 
22e68     36 66 66 66 
22e6c     6F 00 00 00 | 	byte	$30, $18, $00, $3f, $66, $66, $66, $3e, $36, $66, $66, $66, $6f, $00, $00, $00
22e70     30 18 00 63 
22e74     63 63 63 63 
22e78     63 63 63 63 
22e7c     3E 00 00 00 | 	byte	$30, $18, $00, $63, $63, $63, $63, $63, $63, $63, $63, $63, $3e, $00, $00, $00
22e80     00 00 60 30 
22e84     18 00 3B 6E 
22e88     66 06 06 06 
22e8c     0F 00 00 00 | 	byte	$00, $00, $60, $30, $18, $00, $3b, $6e, $66, $06, $06, $06, $0f, $00, $00, $00
22e90     66 33 00 63 
22e94     63 63 63 63 
22e98     63 63 63 63 
22e9c     3E 00 00 00 | 	byte	$66, $33, $00, $63, $63, $63, $63, $63, $63, $63, $63, $63, $3e, $00, $00, $00
22ea0     00 00 60 30 
22ea4     18 00 63 63 
22ea8     63 63 63 63 
22eac     7E 60 30 1F | 	byte	$00, $00, $60, $30, $18, $00, $63, $63, $63, $63, $63, $63, $7e, $60, $30, $1f
22eb0     30 18 00 66 
22eb4     66 66 66 3C 
22eb8     18 18 18 18 
22ebc     3C 00 00 00 | 	byte	$30, $18, $00, $66, $66, $66, $66, $3c, $18, $18, $18, $18, $3c, $00, $00, $00
22ec0     00 00 00 08 
22ec4     0C 0C 3F 0C 
22ec8     0C 0C 0C 6C 
22ecc     38 18 30 1E | 	byte	$00, $00, $00, $08, $0c, $0c, $3f, $0c, $0c, $0c, $0c, $6c, $38, $18, $30, $1e
22ed0     30 18 00 00 
22ed4     00 00 00 00 
22ed8     00 00 00 00 
22edc     00 00 00 00 | 	byte	$30, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
22ee0     00 00 00 00 
22ee4     00 00 00 00 | 	byte	$00[8]
22ee8     7F 00 00 00 
22eec     00 00 00 00 
22ef0     66 33 00 00 
22ef4     00 00 00 00 | 	byte	$7f, $00, $00, $00, $00, $00, $00, $00, $66, $33, $00, $00, $00, $00, $00, $00
22ef8     00 00 00 00 
22efc     00 00 00 00 
22f00     00 00 00 00 
22f04     00 00 00 00 
22f08     00 00 00 00 
22f0c     00          | 	byte	$00[21]
22f0d     0C 06 3C 36 
22f11     1C 00 00 00 
22f15     00 00 00 00 
22f19     00 00 00 00 | 	byte	$0c, $06, $3c, $36, $1c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
22f1d     00 00 00 63 
22f21     3E 00 00 00 
22f25     00 00 00 00 
22f29     00 00 00 00 | 	byte	$00, $00, $00, $63, $3e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
22f2d     00 00 00 00 
22f31     3E 63 06 1C 
22f35     36 63 63 36 
22f39     1C 30 63 3E | 	byte	$00, $00, $00, $00, $3e, $63, $06, $1c, $36, $63, $63, $36, $1c, $30, $63, $3e
22f3d     00 00 00 00 
22f41     00 00 00 00 | 	byte	$00[8]
22f45     18 00 7E 00 
22f49     18 00 00 00 
22f4d     00 00 00 00 
22f51     00 00 00 00 | 	byte	$18, $00, $7e, $00, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
22f55     00 00 00 00 
22f59     00 00 00 00 | 	byte	$00[8]
22f5d     18 30 1E 00 
22f61     00 00 1C 36 
22f65     36 1C 00 00 
22f69     00 00 00 00 | 	byte	$18, $30, $1e, $00, $00, $00, $1c, $36, $36, $1c, $00, $00, $00, $00, $00, $00
22f6d     00 00 00 00 
22f71     63 00 00 00 
22f75     00 00 00 00 
22f79     00 00 00 00 | 	byte	$00, $00, $00, $00, $63, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
22f7d     00 00 00 18 
22f81     18 00 00 00 
22f85     00 00 00 00 
22f89     00 00 00 00 | 	byte	$00, $00, $00, $18, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
22f8d     00 00 00 00 
22f91     00          | 	byte	$00[5]
22f92     CC 66 33 00 
22f96     33 33 33 33 
22f9a     33 33 6E 00 
22f9e     00 00 36 1C | 	byte	$cc, $66, $33, $00, $33, $33, $33, $33, $33, $33, $6e, $00, $00, $00, $36, $1c
22fa2     00 3F 66 66 
22fa6     66 3E 36 66 
22faa     66 66 6F 00 
22fae     00 00 00 00 | 	byte	$00, $3f, $66, $66, $66, $3e, $36, $66, $66, $66, $6f, $00, $00, $00, $00, $00
22fb2     36 1C 08 00 
22fb6     3B 6E 66 06 
22fba     06 06 0F 00 
22fbe     00 00 00 00 | 	byte	$36, $1c, $08, $00, $3b, $6e, $66, $06, $06, $06, $0f, $00, $00, $00, $00, $00
22fc2     00 00 00 7E 
22fc6     7E 7E 7E 7E 
22fca     7E 7E 00 00 
22fce     00 00 00 00 | 	byte	$00, $00, $00, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $00, $00, $00, $00, $00, $00
22fd2     00 00 00 00 
22fd6     00 00 00 00 
22fda     00 00 00 00 
22fde     00 00       | 	byte	$00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
22fe0     00 00 00 00 
      ...             
23010     00 00 00 00 
23014     00 00 00    | st_font        file "st4font.def"
23017     FF FF 00 00 
2301b     00 00 00 00 
2301f     00 18 18 18 
23023     18 18 18 18 | 	byte	$ff, $ff, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18
23027     18 18 18 18 
2302b     18 18 18 18 
2302f     18          | 	byte	$18[9]
23030     00 00 00 00 
23034     00 00 00    | 	byte	$00[7]
23037     FF FF 18 18 
2303b     18 18 18 18 
2303f     18 18 18 18 
23043     18 18 18 18 | 	byte	$ff, $ff, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
23047     FF FF 00 00 
2304b     00 00 00 00 
2304f     00 18 18 18 
23053     18 18 18 18 | 	byte	$ff, $ff, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18
23057     1F 1F 18 18 
2305b     18 18 18 18 
2305f     18 18 18 18 
23063     18 18 18 18 | 	byte	$1f, $1f, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
23067     F8 F8 18 18 
2306b     18 18 18 18 
2306f     18 00 00 00 
23073     00 00 00 00 | 	byte	$f8, $f8, $18, $18, $18, $18, $18, $18, $18, $00, $00, $00, $00, $00, $00, $00
23077     1F 1F 18 18 
2307b     18 18 18 18 
2307f     18 00 00 00 
23083     00 00 00 00 | 	byte	$1f, $1f, $18, $18, $18, $18, $18, $18, $18, $00, $00, $00, $00, $00, $00, $00
23087     F8 F8 18 18 
2308b     18 18 18 18 
2308f     18 18 18 18 
23093     18 18 18 18 | 	byte	$f8, $f8, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
23097     1F 1F 00 00 
2309b     00 00 00 00 
2309f     00 18 18 18 
230a3     18 18 18 18 | 	byte	$1f, $1f, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18
230a7     F8 F8 00 00 
230ab     00 00 00 00 
230af     00 18 18 18 
230b3     18 18 18 18 | 	byte	$f8, $f8, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18
230b7     FF FF 18 18 
230bb     18 18 18 18 
230bf     18 00 00 18 
230c3     3C 7E 66 66 | 	byte	$ff, $ff, $18, $18, $18, $18, $18, $18, $18, $00, $00, $18, $3c, $7e, $66, $66
230c7     66 7E 7E 66 
230cb     66 66 66 30 
230cf     18 00 00 7E 
230d3     7E 06 06 3E | 	byte	$66, $7e, $7e, $66, $66, $66, $66, $30, $18, $00, $00, $7e, $7e, $06, $06, $3e
230d7     3E 06 06 06 
230db     06 7E 7E 18 
230df     0C 30 18 3C 
230e3     7E 66 66 06 | 	byte	$3e, $06, $06, $06, $06, $7e, $7e, $18, $0c, $30, $18, $3c, $7e, $66, $66, $06
230e7     06 06 06 66 
230eb     66 7E 3C 00 
230ef     00 30 18 66 
230f3     66 66 6E 6E | 	byte	$06, $06, $06, $66, $66, $7e, $3c, $00, $00, $30, $18, $66, $66, $66, $6e, $6e
230f7     7E 7E 76 76 
230fb     66 66 66 00 
230ff     00 30 18 7C 
23103     7E 06 06 0E | 	byte	$7e, $7e, $76, $76, $66, $66, $66, $00, $00, $30, $18, $7c, $7e, $06, $06, $0e
23107     1C 38 70 60 
2310b     60 7E 3E 00 
2310f     00 30 18 7E 
23113     7E 30 30 18 | 	byte	$1c, $38, $70, $60, $60, $7e, $3e, $00, $00, $30, $18, $7e, $7e, $30, $30, $18
23117     18 0C 0C 06 
2311b     06 7E 7E 00 
2311f     00 18 18 00 
23123     7E 7E 30 30 | 	byte	$18, $0c, $0c, $06, $06, $7e, $7e, $00, $00, $18, $18, $00, $7e, $7e, $30, $30
23127     18 18 0C 0C 
2312b     06 7E 7E 00 
2312f     00 30 18 3C 
23133     7E 66 66 66 | 	byte	$18, $18, $0c, $0c, $06, $7e, $7e, $00, $00, $30, $18, $3c, $7e, $66, $66, $66
23137     66 66 66 66 
2313b     66          | 	byte	$66[5]
2313c     7E 3C 00 00 
23140     00 00 06 06 
23144     06 06 16 1E 
23148     0E 06 06 06 | 	byte	$7e, $3c, $00, $00, $00, $00, $06, $06, $06, $06, $16, $1e, $0e, $06, $06, $06
2314c     7E 7E 00 00 
23150     00 00 00 00 
23154     00 3C 7C 60 
23158     7C 7E 66 66 | 	byte	$7e, $7e, $00, $00, $00, $00, $00, $00, $00, $3c, $7c, $60, $7c, $7e, $66, $66
2315c     7E 7C 30 18 
23160     00 00 00 00 
23164     00 3C 7E 66 
23168     66 7E 06 06 | 	byte	$7e, $7c, $30, $18, $00, $00, $00, $00, $00, $3c, $7e, $66, $66, $7e, $06, $06
2316c     7E 7C 18 0C 
23170     00 00 30 18 
23174     00 3C 3E 06 
23178     06 06 06 06 | 	byte	$7e, $7c, $18, $0c, $00, $00, $30, $18, $00, $3c, $3e, $06, $06, $06, $06, $06
2317c     7E 7C 00 00 
23180     00 00 30 18 
23184     00 3E 7E 66 
23188     66 66 66 66 | 	byte	$7e, $7c, $00, $00, $00, $00, $30, $18, $00, $3e, $7e, $66, $66, $66, $66, $66
2318c     66 66 00 00 
23190     00 00 30 18 
23194     00 7C 7E 06 
23198     0E 3C 70 60 | 	byte	$66, $66, $00, $00, $00, $00, $30, $18, $00, $7c, $7e, $06, $0e, $3c, $70, $60
2319c     7E 3E 00 00 
231a0     00 00 30 18 
231a4     00 7E 7E 30 
231a8     18 18 0C 0C | 	byte	$7e, $3e, $00, $00, $00, $00, $30, $18, $00, $7e, $7e, $30, $18, $18, $0c, $0c
231ac     7E 7E 00 00 
231b0     00 00 18 18 
231b4     00 7E 7E 30 
231b8     18 18 0C 0C | 	byte	$7e, $7e, $00, $00, $00, $00, $18, $18, $00, $7e, $7e, $30, $18, $18, $0c, $0c
231bc     7E 7E 00 00 
231c0     00 00 30 18 
231c4     00 3C 7E 66 
231c8     66 66 66 66 | 	byte	$7e, $7e, $00, $00, $00, $00, $30, $18, $00, $3c, $7e, $66, $66, $66, $66, $66
231cc     7E 3C 00 00 
231d0     00 00 1C 1C 
231d4     18 18 38 3C 
231d8     1C 18 18 18 | 	byte	$7e, $3c, $00, $00, $00, $00, $1c, $1c, $18, $18, $38, $3c, $1c, $18, $18, $18
231dc     3C 3C 00 00 
231e0     00 00 00 00 
231e4     00 00 00 00 
231e8     00 00 00 00 | 	byte	$3c, $3c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
231ec     00 00 00 00 
231f0     00 00       | 	byte	$00[6]
231f2     18 18 18 18 
231f6     18 18 18 18 | 	byte	$18[8]
231fa     00 00 18 18 
231fe     00 00 00 00 
23202     66 66 66 66 
23206     00 00 00 00 | 	byte	$00, $00, $18, $18, $00, $00, $00, $00, $66, $66, $66, $66, $00, $00, $00, $00
2320a     00 00 00 00 
2320e     00 00 00 00 
23212     00          | 	byte	$00[9]
23213     66 66 FF FF 
23217     66 66 FF FF 
2321b     66 66 00 00 
2321f     00 00 18 18 | 	byte	$66, $66, $ff, $ff, $66, $66, $ff, $ff, $66, $66, $00, $00, $00, $00, $18, $18
23223     7C 7E 06 06 
23227     3E 7C 60 60 
2322b     7E 3E 18 18 
2322f     00 00 00 66 | 	byte	$7c, $7e, $06, $06, $3e, $7c, $60, $60, $7e, $3e, $18, $18, $00, $00, $00, $66
23233     66 30 30 18 
23237     18 0C 0C 66 
2323b     66 00 00 00 
2323f     00 00 3C 7E | 	byte	$66, $30, $30, $18, $18, $0c, $0c, $66, $66, $00, $00, $00, $00, $00, $3c, $7e
23243     66 66 3C 1C 
23247     1C FC FE 66 
2324b     66 FE FC 00 
2324f     00 00 00 18 | 	byte	$66, $66, $3c, $1c, $1c, $fc, $fe, $66, $66, $fe, $fc, $00, $00, $00, $00, $18
23253     18 18 18 18 
23257     00 00 00 00 
2325b     00 00 00 00 
2325f     00 00 00 30 | 	byte	$18, $18, $18, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $30
23263     18 1C 0C 0C 
23267     0C 0C 0C 0C 
2326b     1C 18 30 00 
2326f     00 00 00 0C | 	byte	$18, $1c, $0c, $0c, $0c, $0c, $0c, $0c, $1c, $18, $30, $00, $00, $00, $00, $0c
23273     18 38 30 30 
23277     30 30 30 30 
2327b     38 18 0C 00 
2327f     00 00 00 00 | 	byte	$18, $38, $30, $30, $30, $30, $30, $30, $38, $18, $0c, $00, $00, $00, $00, $00
23283     66 66 3C 3C 
23287     FF FF 3C 3C 
2328b     66 66 00 00 
2328f     00 00 00 00 | 	byte	$66, $66, $3c, $3c, $ff, $ff, $3c, $3c, $66, $66, $00, $00, $00, $00, $00, $00
23293     00 18 18 18 
23297     7E 7E 18 18 
2329b     18 00 00 00 
2329f     00 00 00 00 | 	byte	$00, $18, $18, $18, $7e, $7e, $18, $18, $18, $00, $00, $00, $00, $00, $00, $00
232a3     00 00 00 00 
232a7     00 00       | 	byte	$00[6]
232a9     18 18 18 18 
232ad     18          | 	byte	$18[5]
232ae     0C 04 00 00 
232b2     00 00 00 00 
232b6     7E 7E 00 00 
232ba     00 00 00 00 | 	byte	$0c, $04, $00, $00, $00, $00, $00, $00, $7e, $7e, $00, $00, $00, $00, $00, $00
232be     00 00 00 00 
232c2     00 00 00 00 
232c6     00 00 00 00 
232ca     00          | 	byte	$00[13]
232cb     18 18 18 00 
232cf     00 00 00 60 
232d3     60 60 30 30 
232d7     18 18 0C 0C | 	byte	$18, $18, $18, $00, $00, $00, $00, $60, $60, $60, $30, $30, $18, $18, $0c, $0c
232db     06 06 06 00 
232df     00 00 00 3C 
232e3     7E 66 66 66 
232e7     76 6E 66 66 | 	byte	$06, $06, $06, $00, $00, $00, $00, $3c, $7e, $66, $66, $66, $76, $6e, $66, $66
232eb     66 7E 3C 00 
232ef     00 00 00 18 
232f3     18 1C 1C 18 
232f7     18 18 18 18 | 	byte	$66, $7e, $3c, $00, $00, $00, $00, $18, $18, $1c, $1c, $18, $18, $18, $18, $18
232fb     18 7E 7E 00 
232ff     00 00 00 3C 
23303     7E 66 66 30 
23307     30 18 18 0C | 	byte	$18, $7e, $7e, $00, $00, $00, $00, $3c, $7e, $66, $66, $30, $30, $18, $18, $0c
2330b     0C 7E 7E 00 
2330f     00 00 00 7E 
23313     7E 30 30 18 
23317     18 30 30 66 | 	byte	$0c, $7e, $7e, $00, $00, $00, $00, $7e, $7e, $30, $30, $18, $18, $30, $30, $66
2331b     66 7E 3C 00 
2331f     00 00 00 30 
23323     30 38 38 3C 
23327     3C 36 36 7E | 	byte	$66, $7e, $3c, $00, $00, $00, $00, $30, $30, $38, $38, $3c, $3c, $36, $36, $7e
2332b     7E 30 30 00 
2332f     00 00 00 7E 
23333     7E 06 06 3E 
23337     7E 60 60 60 | 	byte	$7e, $30, $30, $00, $00, $00, $00, $7e, $7e, $06, $06, $3e, $7e, $60, $60, $60
2333b     66 7E 3C 00 
2333f     00 00 00 38 
23343     3C 0E 06 06 
23347     3E 7E 66 66 | 	byte	$66, $7e, $3c, $00, $00, $00, $00, $38, $3c, $0e, $06, $06, $3e, $7e, $66, $66
2334b     66 7E 3C 00 
2334f     00 00 00 7E 
23353     7E 60 60 30 
23357     30 18 18 0C | 	byte	$66, $7e, $3c, $00, $00, $00, $00, $7e, $7e, $60, $60, $30, $30, $18, $18, $0c
2335b     0C 0C 0C 00 
2335f     00 00 00 3C 
23363     7E 66 66 3C 
23367     3C 66 66 66 | 	byte	$0c, $0c, $0c, $00, $00, $00, $00, $3c, $7e, $66, $66, $3c, $3c, $66, $66, $66
2336b     66 7E 3C 00 
2336f     00 00 00 3C 
23373     7E 66 66 7E 
23377     7C 60 60 60 | 	byte	$66, $7e, $3c, $00, $00, $00, $00, $3c, $7e, $66, $66, $7e, $7c, $60, $60, $60
2337b     70 3C 1C 00 
2337f     00 00 00 00 
23383     00 00 18 18 
23387     18 00 00 00 | 	byte	$70, $3c, $1c, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $00, $00, $00
2338b     18 18 18 00 
2338f     00 00 00 00 
23393     00 00 18 18 
23397     18 00 00 18 | 	byte	$18, $18, $18, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $00, $00, $18
2339b     18 18 18 0C 
2339f     04 00 00 00 
233a3     70 38 1C 0E 
233a7     07 0E 1C 38 | 	byte	$18, $18, $18, $0c, $04, $00, $00, $00, $70, $38, $1c, $0e, $07, $0e, $1c, $38
233ab     70 00 00 00 
233af     00 00 00 00 
233b3     00 00 7E 7E 
233b7     00 00 7E 7E | 	byte	$70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7e, $7e, $00, $00, $7e, $7e
233bb     00 00 00 00 
233bf     00 00 00 00 | 	byte	$00[8]
233c3     0E 1C 38 70 
233c7     E0 70 38 1C 
233cb     0E 00 00 00 
233cf     00 00 00 3C | 	byte	$0e, $1c, $38, $70, $e0, $70, $38, $1c, $0e, $00, $00, $00, $00, $00, $00, $3c
233d3     7E 66 66 30 
233d7     30 18 18 18 
233db     00 18 18 00 
233df     00 00 00 3C | 	byte	$7e, $66, $66, $30, $30, $18, $18, $18, $00, $18, $18, $00, $00, $00, $00, $3c
233e3     7E 66 66 66 
233e7     66 36 06 66 
233eb     66 7E 3C 00 
233ef     00 00 00 18 | 	byte	$7e, $66, $66, $66, $66, $36, $06, $66, $66, $7e, $3c, $00, $00, $00, $00, $18
233f3     3C 7E 66 66 
233f7     66 7E 7E 66 
233fb     66 66 66 00 
233ff     00 00 00 3E | 	byte	$3c, $7e, $66, $66, $66, $7e, $7e, $66, $66, $66, $66, $00, $00, $00, $00, $3e
23403     7E 66 66 7E 
23407     3E 66 66 66 
2340b     66 7E 3E 00 
2340f     00 00 00 3C | 	byte	$7e, $66, $66, $7e, $3e, $66, $66, $66, $66, $7e, $3e, $00, $00, $00, $00, $3c
23413     7E 66 66 06 
23417     06 06 06 66 
2341b     66 7E 3C 00 
2341f     00 00 00 3E | 	byte	$7e, $66, $66, $06, $06, $06, $06, $66, $66, $7e, $3c, $00, $00, $00, $00, $3e
23423     7E 66 66 66 
23427     66 66 66 66 
2342b     66 7E 3E 00 
2342f     00 00 00 7E | 	byte	$7e, $66, $66, $66, $66, $66, $66, $66, $66, $7e, $3e, $00, $00, $00, $00, $7e
23433     7E 06 06 3E 
23437     3E 06 06 06 
2343b     06 7E 7E 00 
2343f     00 00 00 7E | 	byte	$7e, $06, $06, $3e, $3e, $06, $06, $06, $06, $7e, $7e, $00, $00, $00, $00, $7e
23443     7E 06 06 3E 
23447     3E 06 06 06 
2344b     06 06 06 00 
2344f     00 00 00 7C | 	byte	$7e, $06, $06, $3e, $3e, $06, $06, $06, $06, $06, $06, $00, $00, $00, $00, $7c
23453     7E 06 06 76 
23457     76 66 66 66 
2345b     66 7E 3C 00 
2345f     00 00 00 66 | 	byte	$7e, $06, $06, $76, $76, $66, $66, $66, $66, $7e, $3c, $00, $00, $00, $00, $66
23463     66 66 66 7E 
23467     7E 66 66 66 
2346b     66 66 66 00 
2346f     00 00 00 7E | 	byte	$66, $66, $66, $7e, $7e, $66, $66, $66, $66, $66, $66, $00, $00, $00, $00, $7e
23473     7E 18 18 18 
23477     18 18 18 18 
2347b     18 7E 7E 00 
2347f     00 00 00 60 | 	byte	$7e, $18, $18, $18, $18, $18, $18, $18, $18, $7e, $7e, $00, $00, $00, $00, $60
23483     60 60 60 60 
23487     60 60 60    | 	byte	$60[7]
2348a     66 66 7E 3C 
2348e     00 00 00 00 
23492     66 66 36 36 
23496     1E 1E 36 36 | 	byte	$66, $66, $7e, $3c, $00, $00, $00, $00, $66, $66, $36, $36, $1e, $1e, $36, $36
2349a     66 66 C6 C6 
2349e     00 00 00 00 
234a2     06 06 06 06 
234a6     06 06 06 06 | 	byte	$66, $66, $c6, $c6, $00, $00, $00, $00, $06, $06, $06, $06, $06, $06, $06, $06
234aa     06 06 7E 7E 
234ae     00 00 00 00 
234b2     C6 C6 EE EE 
234b6     FE D6 D6 C6 | 	byte	$06, $06, $7e, $7e, $00, $00, $00, $00, $c6, $c6, $ee, $ee, $fe, $d6, $d6, $c6
234ba     C6 C6 C6 C6 
234be     00 00 00 00 
234c2     66 66 66 6E 
234c6     6E 7E 7E 76 | 	byte	$c6, $c6, $c6, $c6, $00, $00, $00, $00, $66, $66, $66, $6e, $6e, $7e, $7e, $76
234ca     76 66 66 66 
234ce     00 00 00 00 
234d2     3C 7E 66 66 
234d6     66 66 66 66 | 	byte	$76, $66, $66, $66, $00, $00, $00, $00, $3c, $7e, $66, $66, $66, $66, $66, $66
234da     66 66 7E 3C 
234de     00 00 00 00 
234e2     3E 7E 66 66 
234e6     66 66 7E 3E | 	byte	$66, $66, $7e, $3c, $00, $00, $00, $00, $3e, $7e, $66, $66, $66, $66, $7e, $3e
234ea     06 06 06 06 
234ee     00 00 00 00 
234f2     3C 7E 66 66 
234f6     66 66 66 66 | 	byte	$06, $06, $06, $06, $00, $00, $00, $00, $3c, $7e, $66, $66, $66, $66, $66, $66
234fa     66 56 3E 6C 
234fe     00 00 00 00 
23502     3E 7E 66 66 
23506     66 7E 3E 36 | 	byte	$66, $56, $3e, $6c, $00, $00, $00, $00, $3e, $7e, $66, $66, $66, $7e, $3e, $36
2350a     66 66 C6 C6 
2350e     00 00 00 00 
23512     7C 7E 06 06 
23516     0E 1C 38 70 | 	byte	$66, $66, $c6, $c6, $00, $00, $00, $00, $7c, $7e, $06, $06, $0e, $1c, $38, $70
2351a     60 60 7E 3E 
2351e     00 00 00 00 
23522     7E 7E 18 18 
23526     18 18 18 18 | 	byte	$60, $60, $7e, $3e, $00, $00, $00, $00, $7e, $7e, $18, $18, $18, $18, $18, $18
2352a     18 18 18 18 
2352e     00 00 00 00 
23532     66 66 66 66 
23536     66 66 66 66 | 	byte	$18, $18, $18, $18, $00, $00, $00, $00, $66, $66, $66, $66, $66, $66, $66, $66
2353a     66 66 7E 3C 
2353e     00 00 00 00 
23542     66 66 66 66 
23546     66 66 66 66 | 	byte	$66, $66, $7e, $3c, $00, $00, $00, $00, $66, $66, $66, $66, $66, $66, $66, $66
2354a     3C 3C 18 18 
2354e     00 00 00 00 
23552     C6 C6 C6 C6 
23556     C6 D6 D6 FE | 	byte	$3c, $3c, $18, $18, $00, $00, $00, $00, $c6, $c6, $c6, $c6, $c6, $d6, $d6, $fe
2355a     FE EE C6 82 
2355e     00 00 00 00 
23562     66 66 66 3C 
23566     3C 18 18 3C | 	byte	$fe, $ee, $c6, $82, $00, $00, $00, $00, $66, $66, $66, $3c, $3c, $18, $18, $3c
2356a     3C 66 66 66 
2356e     00 00 00 00 
23572     66 66 66 66 
23576     66 3C 3C 18 | 	byte	$3c, $66, $66, $66, $00, $00, $00, $00, $66, $66, $66, $66, $66, $3c, $3c, $18
2357a     18 18 18 18 
2357e     00 00 00 00 
23582     7E 7E 30 30 
23586     18 18 0C 0C | 	byte	$18, $18, $18, $18, $00, $00, $00, $00, $7e, $7e, $30, $30, $18, $18, $0c, $0c
2358a     06 06 7E 7E 
2358e     00 00 00 00 
23592     3C 3C 0C 0C 
23596     0C 0C 0C 0C | 	byte	$06, $06, $7e, $7e, $00, $00, $00, $00, $3c, $3c, $0c, $0c, $0c, $0c, $0c, $0c
2359a     0C 0C 3C 3C 
2359e     00 00 00 00 
235a2     06 06 0C 0C 
235a6     18 18 30 30 | 	byte	$0c, $0c, $3c, $3c, $00, $00, $00, $00, $06, $06, $0c, $0c, $18, $18, $30, $30
235aa     60 60 C0 C0 
235ae     00 00 00 00 
235b2     3C 3C 30 30 
235b6     30 30 30 30 | 	byte	$60, $60, $c0, $c0, $00, $00, $00, $00, $3c, $3c, $30, $30, $30, $30, $30, $30
235ba     30 30 3C 3C 
235be     00 00 00 00 
235c2     18 18 3C 3C 
235c6     66 66 00 00 | 	byte	$30, $30, $3c, $3c, $00, $00, $00, $00, $18, $18, $3c, $3c, $66, $66, $00, $00
235ca     00 00 00 00 
235ce     00 00 00 00 
235d2     00 00 00 00 
235d6     00 00 00 00 
235da     00 00       | 	byte	$00[18]
235dc     FE FE 00 00 
235e0     00 00 0C 0C 
235e4     18 18 00 00 
235e8     00 00 00 00 | 	byte	$fe, $fe, $00, $00, $00, $00, $0c, $0c, $18, $18, $00, $00, $00, $00, $00, $00
235ec     00 00 00 00 
235f0     00 00 00 00 
235f4     00          | 	byte	$00[9]
235f5     3C 7C 60 7C 
235f9     7E 66 66 7E 
235fd     7C 00 00 00 
23601     00 06 06 06 | 	byte	$3c, $7c, $60, $7c, $7e, $66, $66, $7e, $7c, $00, $00, $00, $00, $06, $06, $06
23605     3E 7E 66 66 
23609     66 66 66 7E 
2360d     3E 00 00 00 
23611     00 00 00 00 | 	byte	$3e, $7e, $66, $66, $66, $66, $66, $7e, $3e, $00, $00, $00, $00, $00, $00, $00
23615     3C 3E 06 06 
23619     06 06 06 7E 
2361d     7C 00 00 00 
23621     00 60 60 60 | 	byte	$3c, $3e, $06, $06, $06, $06, $06, $7e, $7c, $00, $00, $00, $00, $60, $60, $60
23625     7C 7E 66 66 
23629     66 66 66 7E 
2362d     7C 00 00 00 
23631     00 00 00 00 | 	byte	$7c, $7e, $66, $66, $66, $66, $66, $7e, $7c, $00, $00, $00, $00, $00, $00, $00
23635     3C 7E 66 66 
23639     7E 06 06 7E 
2363d     7C 00 00 00 
23641     00 70 78 18 | 	byte	$3c, $7e, $66, $66, $7e, $06, $06, $7e, $7c, $00, $00, $00, $00, $70, $78, $18
23645     18 7E 7E 18 
23649     18 18 18 18 
2364d     18 00 00 00 
23651     00 00 00 00 | 	byte	$18, $7e, $7e, $18, $18, $18, $18, $18, $18, $00, $00, $00, $00, $00, $00, $00
23655     7C 7E 66 66 
23659     66 66 7E 7C 
2365d     60 7E 3E 00 
23661     00 06 06 06 | 	byte	$7c, $7e, $66, $66, $66, $66, $7e, $7c, $60, $7e, $3e, $00, $00, $06, $06, $06
23665     3E 7E 66 66 
23669     66 66 66 66 
2366d     66 00 00 00 
23671     00 18 18 00 | 	byte	$3e, $7e, $66, $66, $66, $66, $66, $66, $66, $00, $00, $00, $00, $18, $18, $00
23675     1C 1C 18 18 
23679     18 18 18 3C 
2367d     3C 00 00 00 
23681     00 30 30 00 | 	byte	$1c, $1c, $18, $18, $18, $18, $18, $3c, $3c, $00, $00, $00, $00, $30, $30, $00
23685     30 30 30 30 
23689     30 30 30 30 
2368d     30          | 	byte	$30[9]
2368e     3E 1E 00 00 
23692     06 06 06 36 
23696     36 1E 1E 1E 
2369a     36 36 66 66 | 	byte	$3e, $1e, $00, $00, $06, $06, $06, $36, $36, $1e, $1e, $1e, $36, $36, $66, $66
2369e     00 00 00 00 
236a2     1C 1C 18 18 
236a6     18 18 18 18 
236aa     18 18 3C 3C | 	byte	$00, $00, $00, $00, $1c, $1c, $18, $18, $18, $18, $18, $18, $18, $18, $3c, $3c
236ae     00 00 00 00 
236b2     00 00 00    | 	byte	$00[7]
236b5     6C FE FE D6 
236b9     D6 C6 C6 C6 
236bd     C6 00 00 00 
236c1     00 00 00 00 | 	byte	$6c, $fe, $fe, $d6, $d6, $c6, $c6, $c6, $c6, $00, $00, $00, $00, $00, $00, $00
236c5     3E 7E 66 66 
236c9     66 66 66 66 
236cd     66 00 00 00 
236d1     00 00 00 00 | 	byte	$3e, $7e, $66, $66, $66, $66, $66, $66, $66, $00, $00, $00, $00, $00, $00, $00
236d5     3C 7E 66 66 
236d9     66 66 66 7E 
236dd     3C 00 00 00 
236e1     00 00 00 00 | 	byte	$3c, $7e, $66, $66, $66, $66, $66, $7e, $3c, $00, $00, $00, $00, $00, $00, $00
236e5     3E 7E 66 66 
236e9     66 66 66 7E 
236ed     3E 06 06 00 
236f1     00 00 00 00 | 	byte	$3e, $7e, $66, $66, $66, $66, $66, $7e, $3e, $06, $06, $00, $00, $00, $00, $00
236f5     7C 7E 66 66 
236f9     66 66 66 7E 
236fd     7C 60 60 00 
23701     00 00 00 00 | 	byte	$7c, $7e, $66, $66, $66, $66, $66, $7e, $7c, $60, $60, $00, $00, $00, $00, $00
23705     3E 7E 66 06 
23709     06 06 06 06 
2370d     06 00 00 00 
23711     00 00 00 00 | 	byte	$3e, $7e, $66, $06, $06, $06, $06, $06, $06, $00, $00, $00, $00, $00, $00, $00
23715     7C 7E 06 0E 
23719     3C 70 60 7E 
2371d     3E 00 00 00 
23721     00 00 18 18 | 	byte	$7c, $7e, $06, $0e, $3c, $70, $60, $7e, $3e, $00, $00, $00, $00, $00, $18, $18
23725     7E 7E 18 18 
23729     18 18 18 78 
2372d     70 00 00 00 
23731     00 00 00 00 | 	byte	$7e, $7e, $18, $18, $18, $18, $18, $78, $70, $00, $00, $00, $00, $00, $00, $00
23735     66 66 66 66 
23739     66 66 66    | 	byte	$66[7]
2373c     7E 7C 00 00 
23740     00 00 00 00 
23744     00 66 66 66 
23748     66 66 3C 3C | 	byte	$7e, $7c, $00, $00, $00, $00, $00, $00, $00, $66, $66, $66, $66, $66, $3c, $3c
2374c     18 18 00 00 
23750     00 00 00 00 
23754     00 C6 C6 D6 
23758     D6 FE FE EE | 	byte	$18, $18, $00, $00, $00, $00, $00, $00, $00, $c6, $c6, $d6, $d6, $fe, $fe, $ee
2375c     C6 82 00 00 
23760     00 00 00 00 
23764     00 66 66 3C 
23768     3C 18 3C 3C | 	byte	$c6, $82, $00, $00, $00, $00, $00, $00, $00, $66, $66, $3c, $3c, $18, $3c, $3c
2376c     66 66 00 00 
23770     00 00 00 00 
23774     00 66 66 66 
23778     66 66 66 7E | 	byte	$66, $66, $00, $00, $00, $00, $00, $00, $00, $66, $66, $66, $66, $66, $66, $7e
2377c     7C 60 7E 3E 
23780     00 00 00 00 
23784     00 7E 7E 30 
23788     18 18 0C 0C | 	byte	$7c, $60, $7e, $3e, $00, $00, $00, $00, $00, $7e, $7e, $30, $18, $18, $0c, $0c
2378c     7E 7E 00 00 
23790     00 00 30 18 
23794     18 18 18 0C 
23798     0C 18 18 18 | 	byte	$7e, $7e, $00, $00, $00, $00, $30, $18, $18, $18, $18, $0c, $0c, $18, $18, $18
2379c     18 30 00 00 
237a0     00 00 18 18 
237a4     18 18 18 18 
237a8     18 18 18 18 | 	byte	$18, $30, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
237ac     18 18 00 00 
237b0     00 00 0C 18 
237b4     18 18 18 30 
237b8     30 18 18 18 | 	byte	$18, $18, $00, $00, $00, $00, $0c, $18, $18, $18, $18, $30, $30, $18, $18, $18
237bc     18 0C 00 00 
237c0     00 00 6C 7E 
237c4     36 00 00 00 
237c8     00 00 00 00 | 	byte	$18, $0c, $00, $00, $00, $00, $6c, $7e, $36, $00, $00, $00, $00, $00, $00, $00
237cc     00 00 00 00 
237d0     00 00 00 00 
237d4     00          | 	byte	$00[9]
237d5     18 18 18 18 
237d9     18 18 00 00 
237dd     00 00 00    | 	byte	$18, $18, $18, $18, $18, $18, $00, $00, $00, $00, $00
237e0     00 00 00 00 
237e4     00 FF FF FF | twocolors      long  $00000000,$FFFFFF00
237e8     00 00 00 00 
237ec     00 80 80 80 
237f0     00 00 00 FF 
237f4     00 FF FF FF | fourcolors     long  $00000000,$80808000,$FF000000,$FFFFFF00 'black,red,gray,white
237f8     00 00 00 00 
237fc     00          | vga16          long  $00000000,$00008000,$00800000,$00808000,$80000000,$80008000,$80400000,$AAAAAA00,$55555500,$0000FF00,$00FF0000,$00FFFF00,$FF000000,$FF00FF00,$FFFF0000,$FFFFFF00
237fd     80 00 00 00 
23801     00 80 00 00 
23805     80 80 00 00 
23809     00 00 80 00 | 	byte	$80, $00, $00, $00, $00, $80, $00, $00, $80, $80, $00, $00, $00, $00, $80, $00
2380d     80 00 80 00 
23811     00 40 80 00 
23815     AA AA AA 00 
23819     55 55 55 00 | 	byte	$80, $00, $80, $00, $00, $40, $80, $00, $aa, $aa, $aa, $00, $55, $55, $55, $00
2381d     FF 00 00 00 
23821     00 FF 00 00 
23825     FF FF 00 00 
23829     00 00 FF 00 | 	byte	$ff, $00, $00, $00, $00, $ff, $00, $00, $ff, $ff, $00, $00, $00, $00, $ff, $00
2382d     FF 00 FF 00 
23831     00 FF FF 00 
23835     FF FF FF    | 	byte	$ff, $00, $ff, $00, $00, $ff, $ff, $00, $ff, $ff, $ff
23838     00 00 00 00 
2383c     00          | ataripalette   file "ataripalettep2.def"
2383d     11 11 11 00 
23841     22 22 22 00 
23845     33 33 33 00 
23849     44 44 44 00 | 	byte	$11, $11, $11, $00, $22, $22, $22, $00, $33, $33, $33, $00, $44, $44, $44, $00
2384d     55 55 55 00 
23851     66 66 66 00 
23855     77 77 77 00 
23859     88 88 88 00 | 	byte	$55, $55, $55, $00, $66, $66, $66, $00, $77, $77, $77, $00, $88, $88, $88, $00
2385d     99 99 99 00 
23861     AA AA AA 00 
23865     BB BB BB 00 
23869     CC CC CC 00 | 	byte	$99, $99, $99, $00, $aa, $aa, $aa, $00, $bb, $bb, $bb, $00, $cc, $cc, $cc, $00
2386d     DD DD DD 00 
23871     EE EE EE 00 
23875     FF FF FF 00 
23879     00 0A 20 00 | 	byte	$dd, $dd, $dd, $00, $ee, $ee, $ee, $00, $ff, $ff, $ff, $00, $00, $0a, $20, $00
2387d     00 14 40 00 
23881     00 1E 60 00 
23885     00 28 80 00 
23889     00 32 9F 00 | 	byte	$00, $14, $40, $00, $00, $1e, $60, $00, $00, $28, $80, $00, $00, $32, $9f, $00
2388d     00 3C BF 00 
23891     00 46 DF 00 
23895     00 50 FF 00 
23899     1C 63 FF 00 | 	byte	$00, $3c, $bf, $00, $00, $46, $df, $00, $00, $50, $ff, $00, $1c, $63, $ff, $00
2389d     39 77 FF 00 
238a1     55 8A FF 00 
238a5     71 9E FF 00 
238a9     8E B1 FF 00 | 	byte	$39, $77, $ff, $00, $55, $8a, $ff, $00, $71, $9e, $ff, $00, $8e, $b1, $ff, $00
238ad     AA C5 FF 00 
238b1     C6 D8 FF 00 
238b5     E3 EC FF 00 
238b9     00 00 20 00 | 	byte	$aa, $c5, $ff, $00, $c6, $d8, $ff, $00, $e3, $ec, $ff, $00, $00, $00, $20, $00
238bd     00 00 40 00 
238c1     00 00 60 00 
238c5     00 00 80 00 
238c9     00 00 9F 00 | 	byte	$00, $00, $40, $00, $00, $00, $60, $00, $00, $00, $80, $00, $00, $00, $9f, $00
238cd     00 00 BF 00 
238d1     00 00 DF 00 
238d5     00 00 FF 00 
238d9     1C 1C FF 00 | 	byte	$00, $00, $bf, $00, $00, $00, $df, $00, $00, $00, $ff, $00, $1c, $1c, $ff, $00
238dd     39 39 FF 00 
238e1     55 55 FF 00 
238e5     71 71 FF 00 
238e9     8E 8E FF 00 | 	byte	$39, $39, $ff, $00, $55, $55, $ff, $00, $71, $71, $ff, $00, $8e, $8e, $ff, $00
238ed     AA AA FF 00 
238f1     C6 C6 FF 00 
238f5     E3 E3 FF 00 
238f9     10 00 20 00 | 	byte	$aa, $aa, $ff, $00, $c6, $c6, $ff, $00, $e3, $e3, $ff, $00, $10, $00, $20, $00
238fd     20 00 40 00 
23901     30 00 60 00 
23905     40 00 80 00 
23909     50 00 9F 00 | 	byte	$20, $00, $40, $00, $30, $00, $60, $00, $40, $00, $80, $00, $50, $00, $9f, $00
2390d     60 00 BF 00 
23911     70 00 DF 00 
23915     80 00 FF 00 
23919     8E 1C FF 00 | 	byte	$60, $00, $bf, $00, $70, $00, $df, $00, $80, $00, $ff, $00, $8e, $1c, $ff, $00
2391d     9C 39 FF 00 
23921     AA 55 FF 00 
23925     B8 71 FF 00 
23929     C7 8E FF 00 | 	byte	$9c, $39, $ff, $00, $aa, $55, $ff, $00, $b8, $71, $ff, $00, $c7, $8e, $ff, $00
2392d     D5 AA FF 00 
23931     E3 C6 FF 00 
23935     F1 E3 FF 00 
23939     20 00 20 00 | 	byte	$d5, $aa, $ff, $00, $e3, $c6, $ff, $00, $f1, $e3, $ff, $00, $20, $00, $20, $00
2393d     40 00 40 00 
23941     60 00 60 00 
23945     80 00 80 00 
23949     9F 00 9F 00 | 	byte	$40, $00, $40, $00, $60, $00, $60, $00, $80, $00, $80, $00, $9f, $00, $9f, $00
2394d     BF 00 BF 00 
23951     DF 00 DF 00 
23955     FF 00 FF 00 
23959     FF 1C FF 00 | 	byte	$bf, $00, $bf, $00, $df, $00, $df, $00, $ff, $00, $ff, $00, $ff, $1c, $ff, $00
2395d     FF 39 FF 00 
23961     FF 55 FF 00 
23965     FF 71 FF 00 
23969     FF 8E FF 00 | 	byte	$ff, $39, $ff, $00, $ff, $55, $ff, $00, $ff, $71, $ff, $00, $ff, $8e, $ff, $00
2396d     FF AA FF 00 
23971     FF C6 FF 00 
23975     FF E3 FF 00 
23979     20 00 10 00 | 	byte	$ff, $aa, $ff, $00, $ff, $c6, $ff, $00, $ff, $e3, $ff, $00, $20, $00, $10, $00
2397d     40 00 20 00 
23981     60 00 30 00 
23985     80 00 40 00 
23989     9F 00 50 00 | 	byte	$40, $00, $20, $00, $60, $00, $30, $00, $80, $00, $40, $00, $9f, $00, $50, $00
2398d     BF 00 60 00 
23991     DF 00 70 00 
23995     FF 00 80 00 
23999     FF 1C 8E 00 | 	byte	$bf, $00, $60, $00, $df, $00, $70, $00, $ff, $00, $80, $00, $ff, $1c, $8e, $00
2399d     FF 39 9C 00 
239a1     FF 55 AA 00 
239a5     FF 71 B8 00 
239a9     FF 8E C7 00 | 	byte	$ff, $39, $9c, $00, $ff, $55, $aa, $00, $ff, $71, $b8, $00, $ff, $8e, $c7, $00
239ad     FF AA D5 00 
239b1     FF C6 E3 00 
239b5     FF E3 F1 00 
239b9     20 00 00 00 | 	byte	$ff, $aa, $d5, $00, $ff, $c6, $e3, $00, $ff, $e3, $f1, $00, $20, $00, $00, $00
239bd     40 00 00 00 
239c1     60 00 00 00 
239c5     80 00 00 00 
239c9     9F 00 00 00 | 	byte	$40, $00, $00, $00, $60, $00, $00, $00, $80, $00, $00, $00, $9f, $00, $00, $00
239cd     BF 00 00 00 
239d1     DF 00 00 00 
239d5     FF 00 00 00 
239d9     FF 1C 1C 00 | 	byte	$bf, $00, $00, $00, $df, $00, $00, $00, $ff, $00, $00, $00, $ff, $1c, $1c, $00
239dd     FF 39 39 00 
239e1     FF 55 55 00 
239e5     FF 71 71 00 
239e9     FF 8E 8E 00 | 	byte	$ff, $39, $39, $00, $ff, $55, $55, $00, $ff, $71, $71, $00, $ff, $8e, $8e, $00
239ed     FF AA AA 00 
239f1     FF C6 C6 00 
239f5     FF E3 E3 00 
239f9     20 08 00 00 | 	byte	$ff, $aa, $aa, $00, $ff, $c6, $c6, $00, $ff, $e3, $e3, $00, $20, $08, $00, $00
239fd     40 10 00 00 
23a01     60 18 00 00 
23a05     80 20 00 00 
23a09     9F 28 00 00 | 	byte	$40, $10, $00, $00, $60, $18, $00, $00, $80, $20, $00, $00, $9f, $28, $00, $00
23a0d     BF 30 00 00 
23a11     DF 38 00 00 
23a15     FF 40 00 00 
23a19     FF 55 1C 00 | 	byte	$bf, $30, $00, $00, $df, $38, $00, $00, $ff, $40, $00, $00, $ff, $55, $1c, $00
23a1d     FF 6A 39 00 
23a21     FF 80 55 00 
23a25     FF 95 71 00 
23a29     FF AA 8E 00 | 	byte	$ff, $6a, $39, $00, $ff, $80, $55, $00, $ff, $95, $71, $00, $ff, $aa, $8e, $00
23a2d     FF BF AA 00 
23a31     FF D5 C6 00 
23a35     FF EA E3 00 
23a39     20 10 00 00 | 	byte	$ff, $bf, $aa, $00, $ff, $d5, $c6, $00, $ff, $ea, $e3, $00, $20, $10, $00, $00
23a3d     40 20 00 00 
23a41     60 30 00 00 
23a45     80 40 00 00 
23a49     9F 50 00 00 | 	byte	$40, $20, $00, $00, $60, $30, $00, $00, $80, $40, $00, $00, $9f, $50, $00, $00
23a4d     BF 60 00 00 
23a51     DF 70 00 00 
23a55     FF 80 00 00 
23a59     FF 8E 1C 00 | 	byte	$bf, $60, $00, $00, $df, $70, $00, $00, $ff, $80, $00, $00, $ff, $8e, $1c, $00
23a5d     FF 9C 39 00 
23a61     FF AA 55 00 
23a65     FF B8 71 00 
23a69     FF C7 8E 00 | 	byte	$ff, $9c, $39, $00, $ff, $aa, $55, $00, $ff, $b8, $71, $00, $ff, $c7, $8e, $00
23a6d     FF D5 AA 00 
23a71     FF E3 C6 00 
23a75     FF F1 E3 00 
23a79     20 18 00 00 | 	byte	$ff, $d5, $aa, $00, $ff, $e3, $c6, $00, $ff, $f1, $e3, $00, $20, $18, $00, $00
23a7d     40 30 00 00 
23a81     60 48 00 00 
23a85     80 60 00 00 
23a89     9F 78 00 00 | 	byte	$40, $30, $00, $00, $60, $48, $00, $00, $80, $60, $00, $00, $9f, $78, $00, $00
23a8d     BF 90 00 00 
23a91     DF A8 00 00 
23a95     FF C0 00 00 
23a99     FF C7 1C 00 | 	byte	$bf, $90, $00, $00, $df, $a8, $00, $00, $ff, $c0, $00, $00, $ff, $c7, $1c, $00
23a9d     FF CE 39 00 
23aa1     FF D5 55 00 
23aa5     FF DC 71 00 
23aa9     FF E3 8E 00 | 	byte	$ff, $ce, $39, $00, $ff, $d5, $55, $00, $ff, $dc, $71, $00, $ff, $e3, $8e, $00
23aad     FF EA AA 00 
23ab1     FF F1 C6 00 
23ab5     FF F8 E3 00 
23ab9     18 20 00 00 | 	byte	$ff, $ea, $aa, $00, $ff, $f1, $c6, $00, $ff, $f8, $e3, $00, $18, $20, $00, $00
23abd     30 40 00 00 
23ac1     48 60 00 00 
23ac5     60 80 00 00 
23ac9     78 9F 00 00 | 	byte	$30, $40, $00, $00, $48, $60, $00, $00, $60, $80, $00, $00, $78, $9f, $00, $00
23acd     90 BF 00 00 
23ad1     A8 DF 00 00 
23ad5     C0 FF 00 00 
23ad9     C7 FF 1C 00 | 	byte	$90, $bf, $00, $00, $a8, $df, $00, $00, $c0, $ff, $00, $00, $c7, $ff, $1c, $00
23add     CE FF 39 00 
23ae1     D5 FF 55 00 
23ae5     DC FF 71 00 
23ae9     E3 FF 8E 00 | 	byte	$ce, $ff, $39, $00, $d5, $ff, $55, $00, $dc, $ff, $71, $00, $e3, $ff, $8e, $00
23aed     EA FF AA 00 
23af1     F1 FF C6 00 
23af5     F8 FF E3 00 
23af9     00 20 00 00 | 	byte	$ea, $ff, $aa, $00, $f1, $ff, $c6, $00, $f8, $ff, $e3, $00, $00, $20, $00, $00
23afd     00 40 00 00 
23b01     00 60 00 00 
23b05     00 80 00 00 
23b09     00 9F 00 00 | 	byte	$00, $40, $00, $00, $00, $60, $00, $00, $00, $80, $00, $00, $00, $9f, $00, $00
23b0d     00 BF 00 00 
23b11     00 DF 00 00 
23b15     00 FF 00 00 
23b19     1C FF 1C 00 | 	byte	$00, $bf, $00, $00, $00, $df, $00, $00, $00, $ff, $00, $00, $1c, $ff, $1c, $00
23b1d     39 FF 39 00 
23b21     55 FF 55 00 
23b25     71 FF 71 00 
23b29     8E FF 8E 00 | 	byte	$39, $ff, $39, $00, $55, $ff, $55, $00, $71, $ff, $71, $00, $8e, $ff, $8e, $00
23b2d     AA FF AA 00 
23b31     C6 FF C6 00 
23b35     E3 FF E3 00 
23b39     00 20 0A 00 | 	byte	$aa, $ff, $aa, $00, $c6, $ff, $c6, $00, $e3, $ff, $e3, $00, $00, $20, $0a, $00
23b3d     00 40 14 00 
23b41     00 60 1E 00 
23b45     00 80 28 00 
23b49     00 9F 32 00 | 	byte	$00, $40, $14, $00, $00, $60, $1e, $00, $00, $80, $28, $00, $00, $9f, $32, $00
23b4d     00 BF 3C 00 
23b51     00 DF 46 00 
23b55     00 FF 50 00 
23b59     1C FF 63 00 | 	byte	$00, $bf, $3c, $00, $00, $df, $46, $00, $00, $ff, $50, $00, $1c, $ff, $63, $00
23b5d     39 FF 77 00 
23b61     55 FF 8A 00 
23b65     71 FF 9E 00 
23b69     8E FF B1 00 | 	byte	$39, $ff, $77, $00, $55, $ff, $8a, $00, $71, $ff, $9e, $00, $8e, $ff, $b1, $00
23b6d     AA FF C5 00 
23b71     C6 FF D8 00 
23b75     E3 FF EC 00 
23b79     00 20 14 00 | 	byte	$aa, $ff, $c5, $00, $c6, $ff, $d8, $00, $e3, $ff, $ec, $00, $00, $20, $14, $00
23b7d     00 40 28 00 
23b81     00 60 3C 00 
23b85     00 80 50 00 
23b89     00 9F 64 00 | 	byte	$00, $40, $28, $00, $00, $60, $3c, $00, $00, $80, $50, $00, $00, $9f, $64, $00
23b8d     00 BF 78 00 
23b91     00 DF 8C 00 
23b95     00 FF A0 00 
23b99     1C FF AB 00 | 	byte	$00, $bf, $78, $00, $00, $df, $8c, $00, $00, $ff, $a0, $00, $1c, $ff, $ab, $00
23b9d     39 FF B5 00 
23ba1     55 FF C0 00 
23ba5     71 FF CA 00 
23ba9     8E FF D5 00 | 	byte	$39, $ff, $b5, $00, $55, $ff, $c0, $00, $71, $ff, $ca, $00, $8e, $ff, $d5, $00
23bad     AA FF DF 00 
23bb1     C6 FF EA 00 
23bb5     E3 FF F4 00 
23bb9     00 20 20 00 | 	byte	$aa, $ff, $df, $00, $c6, $ff, $ea, $00, $e3, $ff, $f4, $00, $00, $20, $20, $00
23bbd     00 40 40 00 
23bc1     00 60 60 00 
23bc5     00 80 80 00 
23bc9     00 9F 9F 00 | 	byte	$00, $40, $40, $00, $00, $60, $60, $00, $00, $80, $80, $00, $00, $9f, $9f, $00
23bcd     00 BF BF 00 
23bd1     00 DF DF 00 
23bd5     00 FF FF 00 
23bd9     1C FF FF 00 | 	byte	$00, $bf, $bf, $00, $00, $df, $df, $00, $00, $ff, $ff, $00, $1c, $ff, $ff, $00
23bdd     39 FF FF 00 
23be1     55 FF FF 00 
23be5     71 FF FF 00 
23be9     8E FF FF 00 | 	byte	$39, $ff, $ff, $00, $55, $ff, $ff, $00, $71, $ff, $ff, $00, $8e, $ff, $ff, $00
23bed     AA FF FF 00 
23bf1     C6 FF FF 00 
23bf5     E3 FF FF 00 
23bf9     00 14 20 00 | 	byte	$aa, $ff, $ff, $00, $c6, $ff, $ff, $00, $e3, $ff, $ff, $00, $00, $14, $20, $00
23bfd     00 28 40 00 
23c01     00 3C 60 00 
23c05     00 50 80 00 
23c09     00 64 9F 00 | 	byte	$00, $28, $40, $00, $00, $3c, $60, $00, $00, $50, $80, $00, $00, $64, $9f, $00
23c0d     00 78 BF 00 
23c11     00 8C DF 00 
23c15     00 A0 FF 00 
23c19     1C AB FF 00 | 	byte	$00, $78, $bf, $00, $00, $8c, $df, $00, $00, $a0, $ff, $00, $1c, $ab, $ff, $00
23c1d     39 B5 FF 00 
23c21     55 C0 FF 00 
23c25     71 CA FF 00 
23c29     8E D5 FF 00 | 	byte	$39, $b5, $ff, $00, $55, $c0, $ff, $00, $71, $ca, $ff, $00, $8e, $d5, $ff, $00
23c2d     AA DF FF 00 
23c31     C6 EA FF 00 
23c35     E3 F4 FF    | 	byte	$aa, $df, $ff, $00, $c6, $ea, $ff, $00, $e3, $f4, $ff
23c38                 | '**********************************************************************************
23c38                 | '
23c38                 | '        Timings and colors definitions
23c38                 | '
23c38                 | '**********************************************************************************
23c38                 | 
23c38                 |    'streamer sets for text mode, to add to timings[0..5]
23c38                 | ' todo for the retromachine: 768x576
23c38                 | 
23c38                 | '                     bf.hs, hs,  bf.vis  visible, lr bord, pixel, ud bord,  up p., vsync, down p., mode, cpl, scanlines,  clock,                  hubset                  total vis lines
23c38     10 00 00 00 
23c3c     50 00 00 00 
23c40     14 00 00 00 
23c44     00 04 00 00 | timings000      long   16,   80,    20,    1024,    112,     8,     48,      16,      16,    16,      0,  100,   480,     354693878,   %1_110000__11_0110_1100__1111_1011,   576
23c48     70 00 00 00 
23c4c     08 00 00 00 
23c50     30 00 00 00 
23c54     10 00 00 00 | 	byte	$70, $00, $00, $00, $08, $00, $00, $00, $30, $00, $00, $00, $10, $00, $00, $00
23c58     10 00 00 00 
23c5c     10 00 00 00 
23c60     00 00 00 00 
23c64     64 00 00 00 | 	byte	$10, $00, $00, $00, $10, $00, $00, $00, $00, $00, $00, $00, $64, $00, $00, $00
23c68     E0 01 00 00 
23c6c     F6 32 24 15 
23c70     FB 6C C3 01 
23c74     40 02 00 00 | 	byte	$e0, $01, $00, $00, $f6, $32, $24, $15, $fb, $6c, $c3, $01, $40, $02, $00, $00
23c78                 | 'timings064      long   18,   48,    16,     944,     24,     8,     24,      24,      32,    24,     64,  112,   496,     319215686,   %1_110010__11_0010_1101__1111_1011,   544
23c78     12 00 00 00 
23c7c     30 00 00 00 
23c80     10 00 00 00 
23c84     B0 03 00 00 | timings064      long   18,   48,    16,     944,     24,     8,     24,      24,      32,    24,     64,  112,   496,     320000000,   %1_0000_00__00_0000_1111__1111_1011,   544
23c88     18 00 00 00 
23c8c     08 00 00 00 
23c90     18 00 00 00 
23c94     18 00 00 00 | 	byte	$18, $00, $00, $00, $08, $00, $00, $00, $18, $00, $00, $00, $18, $00, $00, $00
23c98     20 00 00 00 
23c9c     18 00 00 00 
23ca0     40 00 00 00 
23ca4     70 00 00 00 | 	byte	$20, $00, $00, $00, $18, $00, $00, $00, $40, $00, $00, $00, $70, $00, $00, $00
23ca8     F0 01 00 00 
23cac     00 D0 12 13 
23cb0     FB 0F 00 01 
23cb4     20 02 00 00 | 	byte	$f0, $01, $00, $00, $00, $d0, $12, $13, $fb, $0f, $00, $01, $20, $02, $00, $00
23cb8     10 00 00 00 
23cbc     40 00 00 00 
23cc0     10 00 00 00 
23cc4     30 03 00 00 | timings128      long   16,   64,    16,     816,      8,     8,     8,       32,      64,    32,    128,  100,   480,     283750000,   %1_111111__11_1000_1011__1111_1011,   496
23cc8     08 00 00 00 
23ccc     08 00 00 00 
23cd0     08 00 00 00 
23cd4     20 00 00 00 | 	byte	$08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00, $20, $00, $00, $00
23cd8     40 00 00 00 
23cdc     20 00 00 00 
23ce0     80 00 00 00 
23ce4     64 00 00 00 | 	byte	$40, $00, $00, $00, $20, $00, $00, $00, $80, $00, $00, $00, $64, $00, $00, $00
23ce8     E0 01 00 00 
23cec     70 AE E9 10 
23cf0     FB 8B FF 01 
23cf4     F0 01 00 00 | 	byte	$e0, $01, $00, $00, $70, $ae, $e9, $10, $fb, $8b, $ff, $01, $f0, $01, $00, $00
23cf8     10 00 00 00 
23cfc     50 00 00 00 
23d00     14 00 00 00 
23d04     00 04 00 00 | timings192      long   16,   80,    20,    1024,      0,     8,     0,       16,      16,    16,    192,  128,   576,     354693878,   %1_110000__11_0110_1100__1111_1011,   576
23d08     00 00 00 00 
23d0c     08 00 00 00 
23d10     00 00 00 00 
23d14     10 00 00 00 | 	byte	$00, $00, $00, $00, $08, $00, $00, $00, $00, $00, $00, $00, $10, $00, $00, $00
23d18     10 00 00 00 
23d1c     10 00 00 00 
23d20     C0 00 00 00 
23d24     80 00 00 00 | 	byte	$10, $00, $00, $00, $10, $00, $00, $00, $c0, $00, $00, $00, $80, $00, $00, $00
23d28     40 02 00 00 
23d2c     F6 32 24 15 
23d30     FB 6C C3 01 
23d34     40 02 00 00 | 	byte	$40, $02, $00, $00, $f6, $32, $24, $15, $fb, $6c, $c3, $01, $40, $02, $00, $00
23d38     50 00 00 00 
23d3c     A0 00 00 00 
23d40     54 00 00 00 
23d44     30 03 00 00 | timings256      long   80,  160,    84,     816,      8,     8,     8,        8,      12,     8,    256,  100,   480,     357959184,   %1_110000__11_0110_0100__1111_1011,   496
23d48     08 00 00 00 
23d4c     08 00 00 00 
23d50     08 00 00 00 
23d54     08 00 00 00 | 	byte	$08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00
23d58     0C 00 00 00 
23d5c     08 00 00 00 
23d60     00 01 00 00 
23d64     64 00 00 00 | 	byte	$0c, $00, $00, $00, $08, $00, $00, $00, $00, $01, $00, $00, $64, $00, $00, $00
23d68     E0 01 00 00 
23d6c     10 06 56 15 
23d70     FB 64 C3 01 
23d74     F0 01 00 00 | 	byte	$e0, $01, $00, $00, $10, $06, $56, $15, $fb, $64, $c3, $01, $f0, $01, $00, $00
23d78     50 00 00 00 
23d7c     32 00 00 00 
23d80     50 00 00 00 
23d84     30 03 00 00 | timings320      long   80,   50,    80,     816,      8,     8,     8,        8,      12,     8,    320,  100,   480,     322162162,   %1_100100__10_0101_0011__1111_1011,   496
23d88     08 00 00 00 
23d8c     08 00 00 00 
23d90     08 00 00 00 
23d94     08 00 00 00 | 	byte	$08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00
23d98     0C 00 00 00 
23d9c     08 00 00 00 
23da0     40 01 00 00 
23da4     64 00 00 00 | 	byte	$0c, $00, $00, $00, $08, $00, $00, $00, $40, $01, $00, $00, $64, $00, $00, $00
23da8     E0 01 00 00 
23dac     F2 CD 33 13 
23db0     FB 53 92 01 
23db4     F0 01 00 00 | 	byte	$e0, $01, $00, $00, $f2, $cd, $33, $13, $fb, $53, $92, $01, $f0, $01, $00, $00
23db8     18 00 00 00 
23dbc     30 00 00 00 
23dc0     18 00 00 00 
23dc4     30 03 00 00 | timings384      long   24,   48,    24,     816,      8,     8,     8,        8,      12,     8,    384,  100,   480,     286363636,   %1_010101__01_0011_1010__1111_1011,   496
23dc8     08 00 00 00 
23dcc     08 00 00 00 
23dd0     08 00 00 00 
23dd4     08 00 00 00 | 	byte	$08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00
23dd8     0C 00 00 00 
23ddc     08 00 00 00 
23de0     80 01 00 00 
23de4     64 00 00 00 | 	byte	$0c, $00, $00, $00, $08, $00, $00, $00, $80, $01, $00, $00, $64, $00, $00, $00
23de8     E0 01 00 00 
23dec     F4 8F 11 11 
23df0     FB 3A 55 01 
23df4     F0 01 00 00 | 	byte	$e0, $01, $00, $00, $f4, $8f, $11, $11, $fb, $3a, $55, $01, $f0, $01, $00, $00
23df8     20 00 00 00 
23dfc     40 00 00 00 
23e00     22 00 00 00 
23e04     80 03 00 00 | timings448      long   32,   64,    34,     896,      0,     8,     0,        8,      12,     8,    448,  112,   496,     322162162,   %1_100100__10_0101_0011__1111_1011,   496
23e08     00 00 00 00 
23e0c     08 00 00 00 
23e10     00 00 00 00 
23e14     08 00 00 00 | 	byte	$00, $00, $00, $00, $08, $00, $00, $00, $00, $00, $00, $00, $08, $00, $00, $00
23e18     0C 00 00 00 
23e1c     08 00 00 00 
23e20     C0 01 00 00 
23e24     70 00 00 00 | 	byte	$0c, $00, $00, $00, $08, $00, $00, $00, $c0, $01, $00, $00, $70, $00, $00, $00
23e28     F0 01 00 00 
23e2c     F2 CD 33 13 
23e30     FB 53 92 01 
23e34     F0 01 00 00 | 	byte	$f0, $01, $00, $00, $f2, $cd, $33, $13, $fb, $53, $92, $01, $f0, $01, $00, $00
23e38                 | 'timings999      long    0,    0,     0,       0,      0,     0,     0,        0,       0,     0,      0,    0,     0,             0,                                    0,     0
23e38     00 75 C7 97 
23e3c     27 47 F6 0A 
23e40     05 79 CB 9B 
23e44     2B 4B EA 0F | vgacolors       byte   0, 117, 199, 151, 39, 71, 246, 10, 5, 121, 203, 155, 43, 75, 234, 15
23e48                 | 
23e48     28 12 64 FD | hdmi            setq    #9
23e4c     00 DF 06 FB |                 rdlong  framebuf,  ptra                  'read pointers
23e50                 |            '     setq2   #255
23e50                 |             '    rdlong  $100, paletteptr 
23e50     00 26 6F FC |                 wrlong  #aend,#0                         'write driver length to hub#0: DEBUG/demo
23e54     3C 00 66 FD |                 setcmod #$100                            'enable HDMI mode
23e58     C0 F9 06 F6 |                 mov     ii,#448                          '7 << 6          
23e5c     78 F9 02 F1 |                 add     ii,hbase
23e60     58 F8 62 FD |                 drvl    ii                                 '#7<<6 + hdmi_base      ' enable HDMI pins
23e64     7B 0B 80 FF 
23e68     7C 01 0B FC |                 wrpin   ##%10110_1111_0111_10_00000_0, ii  '#7<<6 + hdmi_base      ' a '123 ohm BITDAC for pins
23e6c                 | 
23e6c     66 66 86 FF 
23e70     1D 9A 65 FD |                 setxfrq ##$0CCCCCCC+1                   'set streamer freq to 1/10th clk
23e74                 | 
23e74                 | 
23e74                 | ''--------  frame rendering main loop  ---------------------------------------------------
23e74                 | 
23e74                 | p101
23e74     28 14 64 FD |                 setq    #10
23e78     00 DF 06 FB |                 rdlong  framebuf,  ptra
23e7c     28 1E 64 FD |                 setq    #15
23e80     74 9B 02 FB |                 rdlong  m_bs,modeptr                     ' read timings
23e84     71 99 02 FB |                 rdlong  border,borderptr
23e88                 | 
23e88     01 C4 06 F1 |                 add     frames,#1
23e8c     76 F5 02 F6 |                 mov     dlptr2,dlptr
23e90                 | 
23e90     73 C7 02 FB |                 rdlong  cursorx, cursorptr               ' read cursor position
23e94     63 C9 EA F8 |                 getbyte cursory, cursorx,#1              ' y position at byte #1
23e98     63 C3 F2 F8 |                 getbyte cursorsh,cursorx,#2              ' shape at byte #2
23e9c     FF C6 06 F5 |                 and     cursorx,#255                     ' clear the cursor x varioble from y and shape
23ea0                 |  '' up porch
23ea0                 | 
23ea0     48 FD 02 F6 |                 mov     hsync0,sync_000                  '
23ea4     49 FF 02 F6 |                 mov     hsync1,sync_001
23ea8     37 A8 46 FB |                 callpa  i_upporch ,#blank
23eac     72 01 68 FC |                 wrlong  #0,vblankptr
23eb0                 |                 
23eb0     1F EA 16 F4 |                 testb   paletteptr,#31 wc
23eb4     29 FE 65 3D |          if_nc  setq2   #255
23eb8     75 01 00 3B |          if_nc  rdlong  $000, paletteptr                'read palette
23ebc                 | 
23ebc                 | '' cursor blinking
23ebc                 | 
23ebc     04 C4 0E F4 |                 testb   frames,#4 wz                     ' cursor blinks at framerate/16, todo: define
23ec0     81 C6 06 A6 |          if_z   mov     cursorx,#129                     ' to switch the cursor off, move it out of the screen
23ec4                 | 
23ec4                 | '' main screen
23ec4                 | 
23ec4     00 BE 06 F6 |                 mov linenum,#0
23ec8     00 18 07 F6 |                 mov rcnt,#0
23ecc     00 1C 07 F6 |                 mov rcnt2a,#0
23ed0                 | 
23ed0                 | 
23ed0     00 18 0F F2 | p301            cmp rcnt,#0 wz
23ed4     18 00 90 AD |         if_z    jmp #p306
23ed8     01 18 87 F1 |                 sub rcnt,#1
23edc     90 F7 02 F6 |                 mov dl,rdl
23ee0     8D 1D 0B F7 |                incmod rcnt2a,rcnt2 wz
23ee4     8F F7 02 A1 |    if_z        add dl,roffset  
23ee8     7B 21 03 F6 |                 mov rdl,dl
23eec     04 00 90 FD |                 jmp #p307          
23ef0                 |           
23ef0                 |                 
23ef0     7A F7 02 FB | p306            rdlong  dl,dlptr2
23ef4     7B FB 1A F6 | p307            mov     framebuf2,dl wcz                  'read a line start in the framebuffer from DL entry
23ef8     6A FA 7A FD |                 rczr    framebuf2 wcz                     'but only if not %11 at lowest bits which means special DL entry
23efc     34 00 90 7D |    if_nz_or_nc  jmp     #p303                        
23f00                 | 
23f00                 | '' Special entry:
23f00                 | '' - repeat                 %nnnn_nnnn_nnnn_qqqq_mmmm_mmmm_mmmm_0111    repeat the next dl line n times, after q lines add offset m
23f00                 | '' - reload palette         %mmmm_mmmm_nnnn_nnnn_qqqq_qqqq_qqqq_1011    reload n palette entries from m color from palette_ptr+q
23f00                 | '' - set border color       %rrrr_rrrr_gggg_gggg_bbbb_bbbb_0001_0011    set border to rgb
23f00                 | '' - set border color       %0000_0000_0000_0000_pppp_pppp_0001_1011    set border color to palette entry #p
23f00                 | '' todo: set horizontal scroll (if needed)
23f00                 | 
23f00     02 FA 66 F0 |                 shl framebuf2,#2
23f04     7D 23 43 F8 |                 getnib dlc,framebuf2,#0
23f08     04 22 0F F2 |                 cmp dlc,#%100 wz
23f0c                 |   
23f0c                 |                 
23f0c     04 F4 06 F1 |                 add dlptr2,#4
23f10     BC FF 9F 5D |                              if_nz  jmp #p301  '' now ignore unknown instruction 
23f14     7A 21 03 FB |                  rdlong rdl,dlptr2
23f18     7D 19 3B F9 |                  getword rcnt,framebuf2,#1 
23f1c     04 18 47 F0 |                  shr rcnt,#4
23f20                 |              
23f20     7D 1B 63 F8 |                  getnib rcnt2,framebuf2,#4
23f24     7D 1F 33 F9 |                  getword roffset,framebuf2,#0
23f28                 |                 
23f28     04 1E 47 F0 |                  shr roffset,#4
23f2c     0C 1E 67 F0 |                  shl roffset,#12
23f30                 |   
23f30     9C FF 9F FD |                  jmp #p301
23f34                 |                  
23f34                 |                  
23f34                 | p303           ' mov     framebuf2,dl                    ' read a line start in the framebuffer from DL entry
23f34     0C FA 46 F0 |                 shr     framebuf2,#12
23f38     02 FA 66 F0 |                 shl     framebuf2,#2
23f3c                 | 
23f3c     7B 03 E3 F8 |                 getbyte t1,dl,#0
23f40     00 02 0F F2 |                 cmp     t1,#0 wz
23f44     34 00 90 AD |     if_z        jmp     #borderline
23f48                 | 
23f48     00 F6 16 F4 |                  testb   dl,#0  wc     ' bit 0 set = text OR extended:TODO
23f4c     50 00 90 CD |           if_c   jmp     #textline
23f50     50 02 90 3D |           if_nc  jmp     #graphline
23f54                 | '
23f54     01 BE 06 F1 | p302            add     linenum,#1
23f58     04 F4 06 F1 |                 add     dlptr2,#4
23f5c     5C BF 0A F2 |                 cmp     linenum,i_totalvis  wz
23f60     6C FF 9F 5D |          if_nz  jmp     #p301
23f64                 | 
23f64     72 03 68 FC | p112            wrlong  #1,vblankptr
23f68     07 AC 46 FB |                 callpa  i_downporch ,#blank             'bottom blanks
23f6c                 | 
23f6c     4A FD 02 F6 |                 mov     hsync0,sync_222                 'vsync on
23f70     4B FF 02 F6 |                 mov     hsync1,sync_223
23f74     04 AA 46 FB |                 callpa  i_vsync,#blank                  'vertical sync blanks
23f78     F8 FE 9F FD |                 jmp     #p101
23f7c                 | 
23f7c                 | '' ---------------  END of frame rendering loop -------------------------------------------
23f7c                 | 
23f7c                 | 
23f7c     14 00 B0 FD | borderline      call    #hsync                      ' make a border
23f80     4C A1 C2 FC |                 xcont   m_vi,border
23f84     CC FF 9F FD |                 jmp     #p302
23f88                 | 
23f88                 | 
23f88     08 00 B0 FD | blank           call    #hsync                          'blank lines
23f8c     7E A1 C2 FC |                 xcont   m_vi,hsync0
23f90     FD ED 6F 0B |         _ret_   djnz    pa,#blank
23f94                 | 
23f94     7E 9B C2 FC | hsync           xcont   m_bs,hsync0                     'horizontal sync
23f98     7F 9D B2 FC |                 xzero   m_sn,hsync1
23f9c     7E 9F C2 0C |         _ret_   xcont   m_bv,hsync0
23fa0                 | 
23fa0                 | 
23fa0                 | 
23fa0                 | ''--%aaaa_aaaa_aaaa_aaaa_aazz_nnnn_llll_ll_01 - txt
23fa0                 |   '' aaaa_aaaa_aaaa_aaaa_aazz_rrrr_rrrr_cc_10 - graph
23fa0                 |   '' aaaa_aaaa_aaaa-aaaa_aarr_rrrr_rrrr_rr_11 - extended, next long to read
23fa0                 | 
23fa0                 | '' Display a text line DL[31..12]=addr, nibble #1=textline, zoom: todo
23fa0                 | 
23fa0     63 CD 02 F6 | textline        mov     cursorpos2,cursorx              ' we need another var for cursor as this code will repeat 16x for every char line
23fa4                 | 
23fa4     7B 01 53 F8 |                 getnib  fontline,dl,#2                 ' fontline is 0 to 15, a line in font def
23fa8     7B 17 5B F8 |                 getnib  zoom, dl,#3
23fac     03 16 07 F5 |                 and             zoom, #3
23fb0                 | 
23fb0                 | 
23fb0                 | 
23fb0     7B BD 02 F6 |                 mov     linestart,dl                    ' linestart will be used for checking cursor y and compute line start addr in the buffer
23fb4     02 BC 46 F0 |                 shr     linestart,#2                    ' scanline to char line
23fb8     3F BC 06 F5 |                 and     linestart,#63
23fbc     64 BD 0A F2 |                 cmp     linestart,cursory wz            ' if the cursor is not here
23fc0     81 CC 06 56 |           if_nz mov     cursorpos2,#129                 ' move it out of the screen
23fc4                 | 
23fc4     CC FF BF FD |                 call    #hsync                          ' now call hsync to gain some time between xconts
23fc8                 | 
23fc8                 |                        ' if fontline =0, get a border color
23fc8                 | 
23fc8     51 03 33 F9 | p102            getword t1,m_border,#0
23fcc     00 02 0F F2 |                 cmp     t1, #0 wz
23fd0     4C A3 C2 5C |           if_nz xcont   m_border,border                 ' display a left border if exists
23fd4                 | 
23fd4     61 01 1B F2 |                 cmp     fontline,cursorsh wcz           ' if the cursor have to be not displayed due to its shape
23fd8     81 CA 06 C6 |           if_c  mov     cursorpos,#129                  ' move it out of the screen
23fdc     66 CB 02 36 |          if_nc  mov     cursorpos,cursorpos2
23fe0     01 CA 06 F1 |                 add     cursorpos,#1                    ' we will substract #1 below so compensate this here
23fe4     70 05 03 F6 |                 mov     t2,fontbuf                      ' font definition pointer
23fe8     80 05 03 F1 |                 add     t2,fontline                     ' add a current font line
23fec     52 BB 02 F6 |                 mov m_lut2, m_lut1
23ff0     6A BB 02 F1 |                 add m_lut2, lutt1
23ff4     58 0F 03 F6 |                 mov cpl2,i_cpl
23ff8                 | 
23ff8     02 16 0F F2 |                cmp zoom,#2 wz
23ffc     E4 00 90 AD |           if_z jmp #p420
24000     01 16 0F F2 |                cmp zoom,#1 wz
24004     64 00 90 AD |           if_z jmp #p410
24008     00 16 0F F2 |                 cmp zoom,#0 wz
2400c     04 00 90 AD |           if_z jmp #p400
24010     50 01 90 FD |                jmp #p430
24014                 | 
24014                 |                    '
24014                 |  ''---------------------------------------------------------------------------------------------------------
24014     7D 11 03 FB |  p400                   rdlong  char,framebuf2          ' read a long char                          '1
24018     88 13 F3 F8 |                         getbyte backcolor,char,#2       ' byte #2 - background color                '2
2401c     88 15 FB F8 |                         getbyte charcolor,char,#3       ' byte #3 - foreground color                '3
24020     88 11 E3 F8 |                         getbyte char,char, #0           ' word #0 - char code                       '4
24024     04 FA 06 F1 |                         add     framebuf2,#4            ' point to the next long                    '5
24028     04 10 67 F0 |                         shl     char,#4                 ' 1 char=16 bytes in font def               '6
2402c     82 11 03 F1 |                         add     char,t2                 ' add this to font/line pointer             '7
24030     88 03 C3 FA |                         rdbyte  t1,char                 ' and get 8 pixels prom there               '8
24034     01 CA 8E F1 |                         sub     cursorpos,#1 wz         ' if there is a cursor                      '9
24038     FF 02 67 A5 |                   if_z  xor     t1, #$FF                ' reverse the colors                        '10
2403c                 | 
2403c     81 BB C2 FC |                         xcont m_lut2,t1
24040                 | 
24040     89 0B A3 FA |                         rdlut   t5,backcolor            ' read a background color from palette      '13
24044     60 0B 33 FC |                         wrlut   t5,lutaddr              ' and write it to LUT #0 or #32             '14
24048     01 C0 06 F1 |                         add     lutaddr,#1                                                          '15
2404c     8A 0B A3 FA |                         rdlut   t5,charcolor            ' the same for the foreground               '16
24050     60 0B 33 FC |                         wrlut   t5,lutaddr                                                          '17
24054     01 C0 86 F1 |                         sub     lutaddr,#1
24058                 | 
24058     10 BA E6 F4 |                         bitnot  m_lut2,#16                                                          '19
2405c     10 A4 E6 F4 |                         bitnot  m_lut1,#16                                                          '19
24060     20 C0 66 F5 |                         xor     lutaddr,#32             ' use LUT #0-1 and 32-33                    '20
24064                 | 
24064     EB 0F 6F FB |                         djnz   cpl2,#p400
24068     28 01 90 FD |  p401                   jmp    #p103
2406c                 | 
2406c                 | ''------------------------------------------------------------------------------------------------------------
2406c                 | 
2406c     01 0E 47 F0 |  p410                   shr cpl2,#1
24070                 | 
24070                 | ''---------------------------------------------------------------------------------------------------------
24070     7D 11 03 FB |  p412                   rdlong  char,framebuf2          ' read a long char                          '1
24074     88 13 F3 F8 |                         getbyte backcolor,char,#2       ' byte #2 - background color                '2
24078     88 15 FB F8 |                         getbyte charcolor,char,#3       ' byte #3 - foreground color                '3
2407c     88 11 E3 F8 |                         getbyte char,char, #0           ' word #0 - char code                       '4
24080     04 FA 06 F1 |                         add     framebuf2,#4            ' point to the next long                    '5
24084     04 10 67 F0 |                         shl     char,#4                 ' 1 char=16 bytes in font def               '6
24088     82 11 03 F1 |                         add     char,t2                 ' add this to font/line pointer             '7
2408c     88 03 C3 FA |                         rdbyte  t1,char                 ' and get 8 pixels prom there               '8
24090     01 CA 8E F1 |                         sub     cursorpos,#1 wz         ' if there is a cursor                      '9
24094     FF 02 67 A5 |                   if_z  xor     t1, #$FF                ' reverse the colors                        '10
24098                 | 
24098                 | 
24098     81 07 4B F8 |                         getnib t3,t1,#1                   ' 4 pixels to t3                                              '1  - +
2409c     81 03 43 F8 |                         getnib t1,t1,#0                   ' 4 pixels to t1                                                      '2  - +
240a0     63 02 63 FD |                         mergew t1                         ' make 01010101 from 1111                                     '3  - +
240a4     03 02 07 FA |                         mul t1,#3
240a8     81 BB C2 FC |                         xcont m_lut2,t1
240ac     89 0B A3 FA |                         rdlut   t5,backcolor            ' read a background color from palette      '13
240b0     60 0B 33 FC |                         wrlut   t5,lutaddr              ' and write it to LUT #0 or #32             '14
240b4     01 C0 06 F1 |                         add     lutaddr,#1                                                          '15
240b8     8A 0B A3 FA |                         rdlut   t5,charcolor            ' the same for the foreground               '16
240bc     60 0B 33 FC |                         wrlut   t5,lutaddr                                                          '17
240c0     01 C0 86 F1 |                         sub     lutaddr,#1
240c4     63 06 63 FD |                         mergew t3
240c8     03 06 07 FA |                         mul t3,#3
240cc     83 BB C2 FC |                         xcont m_lut2,t3
240d0                 | 
240d0     10 BA E6 F4 |                         bitnot  m_lut2,#16                                                          '19
240d4     10 A4 E6 F4 |                         bitnot  m_lut1,#16                                                          '19
240d8                 | 
240d8     20 C0 66 F5 |                         xor     lutaddr,#32             ' use LUT #0-1 and 32-33                    '20
240dc                 | 
240dc     E4 0F 6F FB |                         djnz   cpl2,#p412
240e0     B0 00 90 FD |  p411                   jmp    #p103
240e4                 | 
240e4                 | ''------------------------------------------------------------------------------------------------------------
240e4                 | 
240e4     02 0E 47 F0 |  p420                   shr cpl2,#2
240e8                 | 
240e8                 | ''---------------------------------------------------------------------------------------
240e8     7D 11 03 FB |  p422                   rdlong  char,framebuf2          ' read a long char                          '1
240ec     88 13 F3 F8 |                         getbyte backcolor,char,#2       ' byte #2 - background color                '2
240f0     88 15 FB F8 |                         getbyte charcolor,char,#3       ' byte #3 - foreground color                '3
240f4     88 11 E3 F8 |                         getbyte char,char, #0           ' word #0 - char code                       '4
240f8     04 FA 06 F1 |                         add     framebuf2,#4            ' point to the next long                    '5
240fc     04 10 67 F0 |                         shl     char,#4                 ' 1 char=16 bytes in font def               '6
24100     82 11 03 F1 |                         add     char,t2                 ' add this to font/line pointer             '7
24104     88 03 C3 FA |                         rdbyte  t1,char                 ' and get 8 pixels prom there               '8
24108     01 CA 8E F1 |                         sub     cursorpos,#1 wz         ' if there is a cursor                      '9
2410c     FF 02 67 A5 |                   if_z  xor     t1, #$FF                ' reverse the colors                        '10
24110                 | 
24110     61 02 63 FD |                         mergeb t1
24114     81 07 3B F9 |                         getword t3,t1,#1
24118     0F 02 07 FA |                         mul t1,#15
2411c     81 BB C2 FC |                         xcont m_lut2,t1
24120                 | 
24120     89 0B A3 FA |                         rdlut   t5,backcolor            ' read a background color from palette      '13
24124     60 0B 33 FC |                         wrlut   t5,lutaddr              ' and write it to LUT #0 or #32             '14
24128     01 C0 06 F1 |                         add     lutaddr,#1                                                          '15
2412c     8A 0B A3 FA |                         rdlut   t5,charcolor            ' the same for the foreground               '16
24130     60 0B 33 FC |                         wrlut   t5,lutaddr                                                          '17
24134     01 C0 86 F1 |                         sub     lutaddr,#1
24138                 | 
24138     81 09 EB F8 |                         getbyte t4,t1,#1        '
2413c     84 BB C2 FC |                         xcont m_lut2,t4                                                                                                           '
24140                 | 
24140     0F 06 07 FA |                         mul t3,#15
24144     83 BB C2 FC |                         xcont m_lut2,t3
24148                 | 
24148     83 0B EB F8 |                         getbyte t5,t3,#1
2414c     85 BB C2 FC |                         xcont m_lut2, t5
24150     10 BA E6 F4 |                         bitnot  m_lut2,#16                                                          '19
24154     10 A4 E6 F4 |                         bitnot  m_lut1,#16                                                          '19
24158                 | 
24158     20 C0 66 F5 |                         xor     lutaddr,#32             ' use LUT #0-1 and 32-33                    '20
2415c                 | 
2415c     E2 0F 6F FB |                         djnz   cpl2,#p422
24160     30 00 90 FD |  p421                   jmp    #p103
24164                 | 
24164                 | '--------------------------------------------------------------------------------------------------------------
24164                 | 
24164     7D 11 03 FB |  p430                   rdlong  char,framebuf2          ' read a long char                          '1
24168     88 13 F3 F8 |                         getbyte backcolor,char,#2       ' byte #2 - background color                '2
2416c     88 15 FB F8 |                         getbyte charcolor,char,#3       ' byte #3 - foreground color                '3
24170                 | 
24170     00 BA C6 FC |                         xcont m_lut2,#0
24174                 | 
24174     89 0B A3 FA |                         rdlut   t5,backcolor            ' read a background color from palette      '13
24178     60 0B 33 FC |                         wrlut   t5,lutaddr              ' and write it to LUT #0 or #32             '14
2417c     01 C0 06 F1 |                         add     lutaddr,#1                                                          '15
24180     8A 0B A3 FA |                         rdlut   t5,charcolor            ' the same for the foreground               '16
24184     60 0B 33 FC |                         wrlut   t5,lutaddr                                                          '17
24188     01 C0 86 F1 |                         sub     lutaddr,#1
2418c                 | 
2418c     F5 0F 6F FB |                         djnz   cpl2,#p430
24190     00 00 90 FD |  p431                   jmp    #p103
24194                 | 
24194                 | ''------------------------------------------------------------------------------------------------------------
24194                 | 
24194                 | 
24194                 | 
24194     51 25 33 F9 | p103            getword  mb2,m_border,#0
24198     00 24 0F F2 |                 cmp      mb2, #0 wz
2419c     4C A3 C2 5C |                 if_nz    xcont   m_border,border            'display a right border if exists
241a0                 | 
241a0     B0 FD 9F FD |                 jmp #p302
241a4                 | 
241a4                 | '' -------------------------------------- END of text line ---------------------------------
241a4                 | 
241a4                 |   '' aaaa_aaaa_aaaa_aaaa_aazz_rrrr_rrrr_cc_10 - graph - display a graphics line
241a4                 | 
241a4     EC FD BF FD | graphline       call    #hsync                          ' now call hsync to gain some time between xconts
241a8                 | 
241a8                 | 
241a8     51 25 33 F9 | p202            getword mb2,m_border,#0
241ac     00 24 0F F2 |                 cmp     mb2, #0 wz
241b0     4C A3 C2 5C |           if_nz xcont   m_border,border                 ' display a left border if exists
241b4                 | 
241b4                 | '----------------------------------------- display pixels
241b4                 | 
241b4     52 BB 02 F6 |                 mov     m_lut2,m_lut1                   ' m_lut1 loaded from hub timing block, pixel per long
241b8     58 0F 03 F6 |                 mov     cpl2,i_cpl                      ' i_cpl in graphic modes is longs per line
241bc                 | 
241bc     7B 17 5B F8 |                 getnib  zoom, dl,#3
241c0     03 16 07 F5 |                 and             zoom, #3                        ' get a horizontal zoom for the line
241c4                 | 
241c4     7B BD 02 F6 |                 mov     colordepth,dl                   ' get a color depth, reuse linestart var f         '
241c8     0C BC 06 F5 |                 and     colordepth,#12
241cc                 | 
241cc     00 BC 0E F2 |                 cmp     colordepth,#%0000 wz            ' 1 bpp modes
241d0     6B BB 02 A1 |           if_z  add     m_lut2,lutg1
241d4     64 00 90 AD |           if_z  jmp     #p240
241d8                 | 
241d8     04 BC 0E F2 |                 cmp     colordepth,#%0100 wz            ' 2 bpp modes
241dc     6C BB 02 A1 |           if_z  add     m_lut2,lutg2
241e0     98 00 90 AD |           if_z  jmp     #p250
241e4                 | 
241e4     08 BC 0E F2 |                 cmp     colordepth,#%1000 wz            ' 4 bpp modes
241e8     6D BB 02 A1 |           if_z  add     m_lut2,lutg4
241ec     FC 00 90 AD |           if_z  jmp     #p260
241f0                 | 
241f0     6E BB 02 F1 |                 add m_lut2,lutg8                        ' 8 bpp modes
241f4                 | 
241f4                 | '' --- 8 bit color modes
241f4                 | 
241f4     00 16 0F F2 |                 cmp zoom, #%00 wz   '256 colors, zoom x1
241f8     50 01 90 AD |                 if_z jmp #p251      'there is an universal loop for 1x zoom at p251, saves one long of skip pattern
241fc                 | 
241fc     01 16 0F F2 |                 cmp zoom, #%01 wz   '256 colors, zoom x2
24200     2A 0C 07 A6 |                 if_z mov skippattern,#%101010
24204                 |        
24204                 |  '  
24204     02 16 0F F2 |                 cmp zoom, #%10 wz   '256 colors, zoom x4
24208     25 0C 07 A6 |                 if_z mov skippattern,#%100101
2420c                 |     
2420c                 |  
2420c     05 0C 07 56 |                 if_nz mov skippattern,#%000101
24210     01 0E 47 50 |                 if_nz shr cpl2,#1         ' if 8x zoom, 2 xconts used in one loop, so divide loop count by 2
24214                 |         
24214                 | 
24214                 |         
24214     7D 11 03 FB | p235               rdlong  char,framebuf2
24218     32 0C 63 FD |                    skipf skippattern
2421c     02 FA 06 F1 |                    add     framebuf2,#2             '0 1 1
24220     01 FA 06 F1 |                    add     framebuf2,#1             '1 0 0
24224     50 10 FF F9 |                    movbyts char,#%01010000          '0 1 1
24228     00 10 FF F9 |                    movbyts char,#%00000000          '1 0 0
2422c     88 BB C2 FC |                    xcont   m_lut2,char              '0 0 0
24230     88 BB C2 FC |                    xcont   m_lut2,char              '1 1 0
24234     F7 0F 6F FB |                    djnz    cpl2,#p235
24238                 | 
24238     20 01 90 FD |                jmp    #p203
2423c                 |                   
2423c                 | 
2423c                 | 
2423c                 | '' --- 1 bit color modes
2423c                 | 
2423c     00 16 0F F2 | p240          cmp zoom, #%00 wz     '2 colors, zoom x1
24240     08 01 90 AD |        if_z   jmp #p251              'there is an universal loop for 1x zoom at p251, saves one long of skip pattern
24244                 | 
24244     01 16 0F F2 |               cmp zoom, #%01 wz     '2 colors, zoom x2
24248     13 0C 07 A6 |        if_z   mov skippattern,#%10011
2424c     08 0C 07 56 |        if_nz  mov skippattern,#%01000
24250                 | 
24250                 | 
24250     7D 11 E3 FA | p241               rdword  char,framebuf2
24254     44 10 FF F9 |                    movbyts char,#%01000100
24258     63 10 63 FD |                    mergew  char
2425c     32 0C 63 FD |                    skipf skippattern
24260     44 10 FF F9 |                    movbyts char,#%01000100         ' 1 0
24264     63 10 63 FD |                    mergew  char                    ' 1 0
24268     88 BB C2 FC |                    xcont   m_lut2,char             ' 0 0
2426c     02 FA 06 F1 |                    add     framebuf2,#2                    ' 0 1
24270     01 FA 06 F1 |                    add     framebuf2,#1                ' 1 0
24274     F6 0F 6F FB |                    djnz   cpl2,#p241
24278                 | 
24278                 | 
24278     E0 00 90 FD |                jmp    #p203
2427c                 | 
2427c                 | '' --- 2 bit color modes
2427c                 | 
2427c     00 16 0F F2 | p250          cmp zoom, #%00 wz     '4 colors, zoom x1
24280     C8 00 90 AD |        if_z   jmp #p251
24284                 | 
24284     01 16 0F F2 |               cmp zoom, #%01 wz     '4 colors, zoom x2
24288     30 00 90 AD |        if_z   jmp #p252
2428c                 | 
2428c                 | 
2428c     7D 11 C3 FA | p254               rdbyte char,framebuf2
24290     04 0A 07 F6 |                    mov  t5,#4
24294     02 10 67 F0 | p255               shl  char,#2
24298     88 03 53 F8 |                    getnib  t1,char,#2
2429c     03 02 07 F5 |                    and     t1,#3
242a0     55 02 07 FA |                    mul     t1,#$55
242a4     81 05 03 F9 |                    rolbyte  t2,t1,#0
242a8     FA 0B 6F FB |                    djnz    t5,#p255
242ac     82 BB C2 FC |                    xcont   m_lut2,t2
242b0     01 FA 06 F1 |                    add     framebuf2,#1
242b4     F5 0F 6F FB |                    djnz    cpl2,#p254
242b8     A0 00 90 FD |                    jmp     #p203
242bc                 | 
242bc     7D 11 E3 FA | p252               rdword char,framebuf2
242c0     08 0A 07 F6 |                    mov  t5,#8
242c4     02 10 67 F0 | p253               shl  char,#2
242c8     88 03 63 F8 |                    getnib  t1,char,#4
242cc     03 02 07 F5 |                    and     t1,#3
242d0     05 02 07 FA |                    mul     t1,#5
242d4     81 05 83 F8 |                    rolnib  t2,t1,#0
242d8     FA 0B 6F FB |                    djnz    t5,#p253
242dc     82 BB C2 FC |                    xcont   m_lut2,t2
242e0     02 FA 06 F1 |                    add     framebuf2,#2
242e4     F5 0F 6F FB |                    djnz    cpl2,#p252
242e8     70 00 90 FD |                    jmp     #p203
242ec                 | 
242ec                 | '' ------ 4 bit color modes
242ec                 | 
242ec     00 16 0F F2 | p260          cmp zoom, #%00 wz     '4 colors, zoom x1, the same loop as 2bpp
242f0     58 00 90 AD |        if_z   jmp #p251
242f4                 | 
242f4     01 16 0F F2 |               cmp zoom, #%01 wz     '4 colors, zoom x2
242f8     2C 00 90 AD |        if_z   jmp #p262
242fc                 | 
242fc                 | 
242fc     7D 11 C3 FA | p263               rdbyte char,framebuf2
24300     02 0A DC FC |                            rep #5,#2
24304     88 05 8B F8 |                              rolnib t2,char,#1
24308     88 05 8B F8 |                                  rolnib t2,char,#1
2430c     88 05 8B F8 |                              rolnib t2,char,#1
24310     88 05 8B F8 |                                  rolnib t2,char,#1
24314     04 10 67 F0 |                              shl char,#4
24318     82 BB C2 FC |                    xcont   m_lut2,t2
2431c     01 FA 06 F1 |                    add     framebuf2,#1
24320     F6 0F 6F FB |                    djnz    cpl2,#p263
24324     34 00 90 FD |                    jmp     #p203
24328                 | 
24328     7D 11 E3 FA | p262               rdword  char,framebuf2
2432c     04 06 DC FC |                            rep #3,#4
24330     88 05 9B F8 |                              rolnib t2,char,#3
24334     88 05 9B F8 |                                  rolnib t2,char,#3
24338     04 10 67 F0 |                              shl char,#4
2433c     82 BB C2 FC |                    xcont   m_lut2,t2
24340     02 FA 06 F1 |                    add     framebuf2,#2
24344     F8 0F 6F FB |                    djnz    cpl2,#p262
24348     10 00 90 FD |                    jmp     #p203
2434c                 | 
2434c                 | ''---------- all color modes without zoom
2434c                 | 
2434c     87 07 D8 FC | p251               rep  #3,cpl2
24350     7D 11 03 FB |                    rdlong  char,framebuf2
24354     04 FA 06 F1 |                    add     framebuf2,#4
24358     88 BB C2 FC |                    xcont   m_lut2,char
2435c                 |           
2435c                 |  ''-----------------------------------------------------------------------------------------
2435c                 | p203           ' getword  mb2,m_border,#0
2435c     00 24 0F F2 |                 cmp      mb2, #0 wz
24360     4C A3 C2 5C |                 if_nz    xcont   m_border,border            'display a right border if exists
24364                 | 
24364     EC FB 9F FD |                 jmp #p302
24368                 | 
24368                 | '' -------------------------------------- END of graph  line ---------------------------------
24368                 | 
24368                 | '' consts and vars
24368                 | 
24368     52 4D 35 D5 | sync_000        long    %1101010100_1101010100_1101010100_10    '
2436c     AE 42 35 D5 | sync_001        long    %1101010100_1101010100_0010101011_10    '        hsync
24370     52 45 15 55 | sync_222        long    %0101010100_0101010100_0101010100_10    'vsync
24374     AE 4A 15 55 | sync_223        long    %0101010100_0101010100_1010101011_10    'vsync + hsync
24378                 | 
24378     00 2C 1A 00 | border          long    %00000000_00011010_00101100_00000000
2437c                 | 
2437c                 | '------ these longs will be set by setmode function
2437c                 | 
2437c     00 00 00 00 | m_bs            long    0        'blanks before sync
24380     00 00 00 00 | m_sn            long    0        'sync
24384     00 00 00 00 | m_bv            long    0        'blanks before visible
24388     00 00 00 00 | m_vi            long    0        'visible pixels #
2438c     00 00 00 00 | m_border        long    0        'left/right borders
24390     00 00 00 00 | m_lut1          long    0        'characters
24394     00 00 00 00 | i_vborder       long    0        'up/down borders
24398     00 00 00 00 | i_upporch       long    0        'up porch lines
2439c     00 00 00 00 | i_vsync         long    0        'vsync lines
243a0     00 00 00 00 | i_downporch     long    0        'down porch lines
243a4     00 00 00 00 | i_modenum       long    0        'mode #
243a8     00 00 00 00 | i_cpl           long    0        'chars/longs per line
243ac     00 00 00 00 | i_lines         long    0        'scanlines #
243b0     00 00 00 00 | i_clock         long    0
243b4     00 00 00 00 | i_hubset        long    0
243b8     00 00 00 00 | i_totalvis      long    0
243bc                 | 
243bc                 | '-------------------------------------
243bc                 | 
243bc     00 00 00 00 | m_lut2          long    0
243c0                 | 
243c0                 | colordepth
243c0     00 00 00 00 | linestart       long    0
243c4     00 00 00 00 | linenum         long    0
243c8     00 01 00 00 | lutaddr         long    256
243cc                 | 
243cc     0E 00 00 00 | cursorsh        long    14
243d0     00 00 00 00 | frames          long    0
243d4     00 00 00 00 | cursorx         long    0
243d8     00 00 00 00 | cursory         long    0
243dc     00 00 00 00 | cursorpos       long    0
243e0     00 00 00 00 | cursorpos2      long    0
243e4     00 00 00 00 | fontstart       long    0
243e8     00 00 00 00 | border2         long 0
243ec     00 00 81 70 | lutiv           long $70810000
243f0     00 00 88 00 | lutt1           long $00880000
243f4     00 00 80 00 | lutg1           long $00800000
243f8     00 00 80 10 | lutg2           long $10800000
243fc     00 00 80 20 | lutg4           long $20800000
24400     00 00 80 30 | lutg8           long $30800000
24404     00 00 00 00 | framebuf        long 0
24408     00 00 00 00 | fontbuf         long 0
2440c     00 00 00 00 | borderptr       long 0
24410     00 00 00 00 | vblankptr       long 0
24414     00 00 00 00 | cursorptr       long 0
24418     00 00 00 00 | modeptr         long 0
2441c     00 00 00 00 | paletteptr      long 0
24420     00 00 00 00 | dlptr           long 0
24424                 | fontnumptr      res     1
24424                 | fontnumptr      res     1
24424                 | hbase           res     1
24424                 | hbase           res     1
24424                 | borderptr2      res     1
24424                 | borderptr2      res     1
24424                 | dlptr2 res 1
24424                 | dlptr2 res 1
24424                 | dl              res 1
24424                 | dl              res 1
24424                 | ii              res     1
24424                 | ii              res     1
24424                 | framebuf2       res     1
24424                 | framebuf2       res     1
24424                 | hsync0          res     1
24424                 | hsync0          res     1
24424                 | hsync1          res     1
24424                 | hsync1          res     1
24424                 | fontline        res     1
24424                 | fontline        res     1
24424                 | t1              res     1
24424                 | t1              res     1
24424                 | t2              res     1
24424                 | t2              res     1
24424                 | t3 res 1
24424                 | t3 res 1
24424                 | t4 res 1
24424                 | t4 res 1
24424                 | t5 res 1
24424                 | t5 res 1
24424                 | skippattern res 1
24424                 | skippattern res 1
24424                 | cpl2 res 1
24424                 | cpl2 res 1
24424                 | char            res     1
24424                 | char            res     1
24424                 | backcolor       res     1
24424                 | backcolor       res     1
24424                 | charcolor       res     1
24424                 | charcolor       res     1
24424                 | zoom res 1
24424                 | zoom res 1
24424     00 00 00 00 | rcnt long 0 'dl repeat count
24428     00 00 00 00 | rcnt2 long 0
2442c     00 00 00 00 | rcnt2a long 0
24430     00 00 00 00 | roffset long 0
24434     00 00 00 00 | rdl long 0  'dl repeat line
24438     00 00 00 00 | dlc long 0 'dl command
2443c     00 00 00 00 | mb2 long 0
24440     00 00 00 00 | aend             long 0
24444                 |                 fit     496                     '
24444                 | _trackerplayer_spin2_dat_
24444                 | 
24444     00 00 00 00 | null             long  0
24448     46 52 45 51 
2444c     46 52 45 51 
24450     46 52 45 51 
24454     46 52 45 51 | frequencyLut     long  $51_45_52_46[VALUES_IN_PERIOD_TABLE] ' This table is runtime calculated to match any possible sys clock and mixing frequency combination [1024]
24458     46 52 45 51 
2445c     46 52 45 51 
24460     46 52 45 51 
24464     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24468     46 52 45 51 
2446c     46 52 45 51 
24470     46 52 45 51 
24474     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24478     46 52 45 51 
2447c     46 52 45 51 
24480     46 52 45 51 
24484     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24488     46 52 45 51 
2448c     46 52 45 51 
24490     46 52 45 51 
24494     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24498     46 52 45 51 
2449c     46 52 45 51 
244a0     46 52 45 51 
244a4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
244a8     46 52 45 51 
244ac     46 52 45 51 
244b0     46 52 45 51 
244b4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
244b8     46 52 45 51 
244bc     46 52 45 51 
244c0     46 52 45 51 
244c4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
244c8     46 52 45 51 
244cc     46 52 45 51 
244d0     46 52 45 51 
244d4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
244d8     46 52 45 51 
244dc     46 52 45 51 
244e0     46 52 45 51 
244e4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
244e8     46 52 45 51 
244ec     46 52 45 51 
244f0     46 52 45 51 
244f4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
244f8     46 52 45 51 
244fc     46 52 45 51 
24500     46 52 45 51 
24504     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24508     46 52 45 51 
2450c     46 52 45 51 
24510     46 52 45 51 
24514     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24518     46 52 45 51 
2451c     46 52 45 51 
24520     46 52 45 51 
24524     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24528     46 52 45 51 
2452c     46 52 45 51 
24530     46 52 45 51 
24534     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24538     46 52 45 51 
2453c     46 52 45 51 
24540     46 52 45 51 
24544     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24548     46 52 45 51 
2454c     46 52 45 51 
24550     46 52 45 51 
24554     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24558     46 52 45 51 
2455c     46 52 45 51 
24560     46 52 45 51 
24564     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24568     46 52 45 51 
2456c     46 52 45 51 
24570     46 52 45 51 
24574     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24578     46 52 45 51 
2457c     46 52 45 51 
24580     46 52 45 51 
24584     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24588     46 52 45 51 
2458c     46 52 45 51 
24590     46 52 45 51 
24594     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24598     46 52 45 51 
2459c     46 52 45 51 
245a0     46 52 45 51 
245a4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
245a8     46 52 45 51 
245ac     46 52 45 51 
245b0     46 52 45 51 
245b4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
245b8     46 52 45 51 
245bc     46 52 45 51 
245c0     46 52 45 51 
245c4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
245c8     46 52 45 51 
245cc     46 52 45 51 
245d0     46 52 45 51 
245d4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
245d8     46 52 45 51 
245dc     46 52 45 51 
245e0     46 52 45 51 
245e4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
245e8     46 52 45 51 
245ec     46 52 45 51 
245f0     46 52 45 51 
245f4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
245f8     46 52 45 51 
245fc     46 52 45 51 
24600     46 52 45 51 
24604     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24608     46 52 45 51 
2460c     46 52 45 51 
24610     46 52 45 51 
24614     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24618     46 52 45 51 
2461c     46 52 45 51 
24620     46 52 45 51 
24624     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24628     46 52 45 51 
2462c     46 52 45 51 
24630     46 52 45 51 
24634     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24638     46 52 45 51 
2463c     46 52 45 51 
24640     46 52 45 51 
24644     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24648     46 52 45 51 
2464c     46 52 45 51 
24650     46 52 45 51 
24654     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24658     46 52 45 51 
2465c     46 52 45 51 
24660     46 52 45 51 
24664     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24668     46 52 45 51 
2466c     46 52 45 51 
24670     46 52 45 51 
24674     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24678     46 52 45 51 
2467c     46 52 45 51 
24680     46 52 45 51 
24684     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24688     46 52 45 51 
2468c     46 52 45 51 
24690     46 52 45 51 
24694     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24698     46 52 45 51 
2469c     46 52 45 51 
246a0     46 52 45 51 
246a4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
246a8     46 52 45 51 
246ac     46 52 45 51 
246b0     46 52 45 51 
246b4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
246b8     46 52 45 51 
246bc     46 52 45 51 
246c0     46 52 45 51 
246c4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
246c8     46 52 45 51 
246cc     46 52 45 51 
246d0     46 52 45 51 
246d4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
246d8     46 52 45 51 
246dc     46 52 45 51 
246e0     46 52 45 51 
246e4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
246e8     46 52 45 51 
246ec     46 52 45 51 
246f0     46 52 45 51 
246f4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
246f8     46 52 45 51 
246fc     46 52 45 51 
24700     46 52 45 51 
24704     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24708     46 52 45 51 
2470c     46 52 45 51 
24710     46 52 45 51 
24714     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24718     46 52 45 51 
2471c     46 52 45 51 
24720     46 52 45 51 
24724     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24728     46 52 45 51 
2472c     46 52 45 51 
24730     46 52 45 51 
24734     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24738     46 52 45 51 
2473c     46 52 45 51 
24740     46 52 45 51 
24744     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24748     46 52 45 51 
2474c     46 52 45 51 
24750     46 52 45 51 
24754     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24758     46 52 45 51 
2475c     46 52 45 51 
24760     46 52 45 51 
24764     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24768     46 52 45 51 
2476c     46 52 45 51 
24770     46 52 45 51 
24774     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24778     46 52 45 51 
2477c     46 52 45 51 
24780     46 52 45 51 
24784     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24788     46 52 45 51 
2478c     46 52 45 51 
24790     46 52 45 51 
24794     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24798     46 52 45 51 
2479c     46 52 45 51 
247a0     46 52 45 51 
247a4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
247a8     46 52 45 51 
247ac     46 52 45 51 
247b0     46 52 45 51 
247b4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
247b8     46 52 45 51 
247bc     46 52 45 51 
247c0     46 52 45 51 
247c4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
247c8     46 52 45 51 
247cc     46 52 45 51 
247d0     46 52 45 51 
247d4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
247d8     46 52 45 51 
247dc     46 52 45 51 
247e0     46 52 45 51 
247e4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
247e8     46 52 45 51 
247ec     46 52 45 51 
247f0     46 52 45 51 
247f4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
247f8     46 52 45 51 
247fc     46 52 45 51 
24800     46 52 45 51 
24804     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24808     46 52 45 51 
2480c     46 52 45 51 
24810     46 52 45 51 
24814     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24818     46 52 45 51 
2481c     46 52 45 51 
24820     46 52 45 51 
24824     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24828     46 52 45 51 
2482c     46 52 45 51 
24830     46 52 45 51 
24834     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24838     46 52 45 51 
2483c     46 52 45 51 
24840     46 52 45 51 
24844     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24848     46 52 45 51 
2484c     46 52 45 51 
24850     46 52 45 51 
24854     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24858     46 52 45 51 
2485c     46 52 45 51 
24860     46 52 45 51 
24864     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24868     46 52 45 51 
2486c     46 52 45 51 
24870     46 52 45 51 
24874     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24878     46 52 45 51 
2487c     46 52 45 51 
24880     46 52 45 51 
24884     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24888     46 52 45 51 
2488c     46 52 45 51 
24890     46 52 45 51 
24894     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24898     46 52 45 51 
2489c     46 52 45 51 
248a0     46 52 45 51 
248a4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
248a8     46 52 45 51 
248ac     46 52 45 51 
248b0     46 52 45 51 
248b4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
248b8     46 52 45 51 
248bc     46 52 45 51 
248c0     46 52 45 51 
248c4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
248c8     46 52 45 51 
248cc     46 52 45 51 
248d0     46 52 45 51 
248d4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
248d8     46 52 45 51 
248dc     46 52 45 51 
248e0     46 52 45 51 
248e4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
248e8     46 52 45 51 
248ec     46 52 45 51 
248f0     46 52 45 51 
248f4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
248f8     46 52 45 51 
248fc     46 52 45 51 
24900     46 52 45 51 
24904     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24908     46 52 45 51 
2490c     46 52 45 51 
24910     46 52 45 51 
24914     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24918     46 52 45 51 
2491c     46 52 45 51 
24920     46 52 45 51 
24924     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24928     46 52 45 51 
2492c     46 52 45 51 
24930     46 52 45 51 
24934     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24938     46 52 45 51 
2493c     46 52 45 51 
24940     46 52 45 51 
24944     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24948     46 52 45 51 
2494c     46 52 45 51 
24950     46 52 45 51 
24954     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24958     46 52 45 51 
2495c     46 52 45 51 
24960     46 52 45 51 
24964     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24968     46 52 45 51 
2496c     46 52 45 51 
24970     46 52 45 51 
24974     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24978     46 52 45 51 
2497c     46 52 45 51 
24980     46 52 45 51 
24984     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24988     46 52 45 51 
2498c     46 52 45 51 
24990     46 52 45 51 
24994     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24998     46 52 45 51 
2499c     46 52 45 51 
249a0     46 52 45 51 
249a4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
249a8     46 52 45 51 
249ac     46 52 45 51 
249b0     46 52 45 51 
249b4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
249b8     46 52 45 51 
249bc     46 52 45 51 
249c0     46 52 45 51 
249c4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
249c8     46 52 45 51 
249cc     46 52 45 51 
249d0     46 52 45 51 
249d4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
249d8     46 52 45 51 
249dc     46 52 45 51 
249e0     46 52 45 51 
249e4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
249e8     46 52 45 51 
249ec     46 52 45 51 
249f0     46 52 45 51 
249f4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
249f8     46 52 45 51 
249fc     46 52 45 51 
24a00     46 52 45 51 
24a04     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24a08     46 52 45 51 
24a0c     46 52 45 51 
24a10     46 52 45 51 
24a14     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24a18     46 52 45 51 
24a1c     46 52 45 51 
24a20     46 52 45 51 
24a24     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24a28     46 52 45 51 
24a2c     46 52 45 51 
24a30     46 52 45 51 
24a34     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24a38     46 52 45 51 
24a3c     46 52 45 51 
24a40     46 52 45 51 
24a44     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24a48     46 52 45 51 
24a4c     46 52 45 51 
24a50     46 52 45 51 
24a54     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24a58     46 52 45 51 
24a5c     46 52 45 51 
24a60     46 52 45 51 
24a64     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24a68     46 52 45 51 
24a6c     46 52 45 51 
24a70     46 52 45 51 
24a74     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24a78     46 52 45 51 
24a7c     46 52 45 51 
24a80     46 52 45 51 
24a84     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24a88     46 52 45 51 
24a8c     46 52 45 51 
24a90     46 52 45 51 
24a94     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24a98     46 52 45 51 
24a9c     46 52 45 51 
24aa0     46 52 45 51 
24aa4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24aa8     46 52 45 51 
24aac     46 52 45 51 
24ab0     46 52 45 51 
24ab4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24ab8     46 52 45 51 
24abc     46 52 45 51 
24ac0     46 52 45 51 
24ac4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24ac8     46 52 45 51 
24acc     46 52 45 51 
24ad0     46 52 45 51 
24ad4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24ad8     46 52 45 51 
24adc     46 52 45 51 
24ae0     46 52 45 51 
24ae4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24ae8     46 52 45 51 
24aec     46 52 45 51 
24af0     46 52 45 51 
24af4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24af8     46 52 45 51 
24afc     46 52 45 51 
24b00     46 52 45 51 
24b04     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24b08     46 52 45 51 
24b0c     46 52 45 51 
24b10     46 52 45 51 
24b14     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24b18     46 52 45 51 
24b1c     46 52 45 51 
24b20     46 52 45 51 
24b24     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24b28     46 52 45 51 
24b2c     46 52 45 51 
24b30     46 52 45 51 
24b34     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24b38     46 52 45 51 
24b3c     46 52 45 51 
24b40     46 52 45 51 
24b44     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24b48     46 52 45 51 
24b4c     46 52 45 51 
24b50     46 52 45 51 
24b54     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24b58     46 52 45 51 
24b5c     46 52 45 51 
24b60     46 52 45 51 
24b64     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24b68     46 52 45 51 
24b6c     46 52 45 51 
24b70     46 52 45 51 
24b74     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24b78     46 52 45 51 
24b7c     46 52 45 51 
24b80     46 52 45 51 
24b84     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24b88     46 52 45 51 
24b8c     46 52 45 51 
24b90     46 52 45 51 
24b94     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24b98     46 52 45 51 
24b9c     46 52 45 51 
24ba0     46 52 45 51 
24ba4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24ba8     46 52 45 51 
24bac     46 52 45 51 
24bb0     46 52 45 51 
24bb4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24bb8     46 52 45 51 
24bbc     46 52 45 51 
24bc0     46 52 45 51 
24bc4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24bc8     46 52 45 51 
24bcc     46 52 45 51 
24bd0     46 52 45 51 
24bd4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24bd8     46 52 45 51 
24bdc     46 52 45 51 
24be0     46 52 45 51 
24be4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24be8     46 52 45 51 
24bec     46 52 45 51 
24bf0     46 52 45 51 
24bf4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24bf8     46 52 45 51 
24bfc     46 52 45 51 
24c00     46 52 45 51 
24c04     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24c08     46 52 45 51 
24c0c     46 52 45 51 
24c10     46 52 45 51 
24c14     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24c18     46 52 45 51 
24c1c     46 52 45 51 
24c20     46 52 45 51 
24c24     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24c28     46 52 45 51 
24c2c     46 52 45 51 
24c30     46 52 45 51 
24c34     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24c38     46 52 45 51 
24c3c     46 52 45 51 
24c40     46 52 45 51 
24c44     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24c48     46 52 45 51 
24c4c     46 52 45 51 
24c50     46 52 45 51 
24c54     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24c58     46 52 45 51 
24c5c     46 52 45 51 
24c60     46 52 45 51 
24c64     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24c68     46 52 45 51 
24c6c     46 52 45 51 
24c70     46 52 45 51 
24c74     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24c78     46 52 45 51 
24c7c     46 52 45 51 
24c80     46 52 45 51 
24c84     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24c88     46 52 45 51 
24c8c     46 52 45 51 
24c90     46 52 45 51 
24c94     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24c98     46 52 45 51 
24c9c     46 52 45 51 
24ca0     46 52 45 51 
24ca4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24ca8     46 52 45 51 
24cac     46 52 45 51 
24cb0     46 52 45 51 
24cb4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24cb8     46 52 45 51 
24cbc     46 52 45 51 
24cc0     46 52 45 51 
24cc4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24cc8     46 52 45 51 
24ccc     46 52 45 51 
24cd0     46 52 45 51 
24cd4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24cd8     46 52 45 51 
24cdc     46 52 45 51 
24ce0     46 52 45 51 
24ce4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24ce8     46 52 45 51 
24cec     46 52 45 51 
24cf0     46 52 45 51 
24cf4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24cf8     46 52 45 51 
24cfc     46 52 45 51 
24d00     46 52 45 51 
24d04     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24d08     46 52 45 51 
24d0c     46 52 45 51 
24d10     46 52 45 51 
24d14     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24d18     46 52 45 51 
24d1c     46 52 45 51 
24d20     46 52 45 51 
24d24     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24d28     46 52 45 51 
24d2c     46 52 45 51 
24d30     46 52 45 51 
24d34     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24d38     46 52 45 51 
24d3c     46 52 45 51 
24d40     46 52 45 51 
24d44     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24d48     46 52 45 51 
24d4c     46 52 45 51 
24d50     46 52 45 51 
24d54     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24d58     46 52 45 51 
24d5c     46 52 45 51 
24d60     46 52 45 51 
24d64     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24d68     46 52 45 51 
24d6c     46 52 45 51 
24d70     46 52 45 51 
24d74     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24d78     46 52 45 51 
24d7c     46 52 45 51 
24d80     46 52 45 51 
24d84     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24d88     46 52 45 51 
24d8c     46 52 45 51 
24d90     46 52 45 51 
24d94     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24d98     46 52 45 51 
24d9c     46 52 45 51 
24da0     46 52 45 51 
24da4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24da8     46 52 45 51 
24dac     46 52 45 51 
24db0     46 52 45 51 
24db4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24db8     46 52 45 51 
24dbc     46 52 45 51 
24dc0     46 52 45 51 
24dc4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24dc8     46 52 45 51 
24dcc     46 52 45 51 
24dd0     46 52 45 51 
24dd4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24dd8     46 52 45 51 
24ddc     46 52 45 51 
24de0     46 52 45 51 
24de4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24de8     46 52 45 51 
24dec     46 52 45 51 
24df0     46 52 45 51 
24df4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24df8     46 52 45 51 
24dfc     46 52 45 51 
24e00     46 52 45 51 
24e04     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24e08     46 52 45 51 
24e0c     46 52 45 51 
24e10     46 52 45 51 
24e14     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24e18     46 52 45 51 
24e1c     46 52 45 51 
24e20     46 52 45 51 
24e24     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24e28     46 52 45 51 
24e2c     46 52 45 51 
24e30     46 52 45 51 
24e34     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24e38     46 52 45 51 
24e3c     46 52 45 51 
24e40     46 52 45 51 
24e44     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24e48     46 52 45 51 
24e4c     46 52 45 51 
24e50     46 52 45 51 
24e54     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24e58     46 52 45 51 
24e5c     46 52 45 51 
24e60     46 52 45 51 
24e64     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24e68     46 52 45 51 
24e6c     46 52 45 51 
24e70     46 52 45 51 
24e74     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24e78     46 52 45 51 
24e7c     46 52 45 51 
24e80     46 52 45 51 
24e84     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24e88     46 52 45 51 
24e8c     46 52 45 51 
24e90     46 52 45 51 
24e94     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24e98     46 52 45 51 
24e9c     46 52 45 51 
24ea0     46 52 45 51 
24ea4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24ea8     46 52 45 51 
24eac     46 52 45 51 
24eb0     46 52 45 51 
24eb4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24eb8     46 52 45 51 
24ebc     46 52 45 51 
24ec0     46 52 45 51 
24ec4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24ec8     46 52 45 51 
24ecc     46 52 45 51 
24ed0     46 52 45 51 
24ed4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24ed8     46 52 45 51 
24edc     46 52 45 51 
24ee0     46 52 45 51 
24ee4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24ee8     46 52 45 51 
24eec     46 52 45 51 
24ef0     46 52 45 51 
24ef4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24ef8     46 52 45 51 
24efc     46 52 45 51 
24f00     46 52 45 51 
24f04     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24f08     46 52 45 51 
24f0c     46 52 45 51 
24f10     46 52 45 51 
24f14     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24f18     46 52 45 51 
24f1c     46 52 45 51 
24f20     46 52 45 51 
24f24     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24f28     46 52 45 51 
24f2c     46 52 45 51 
24f30     46 52 45 51 
24f34     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24f38     46 52 45 51 
24f3c     46 52 45 51 
24f40     46 52 45 51 
24f44     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24f48     46 52 45 51 
24f4c     46 52 45 51 
24f50     46 52 45 51 
24f54     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24f58     46 52 45 51 
24f5c     46 52 45 51 
24f60     46 52 45 51 
24f64     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24f68     46 52 45 51 
24f6c     46 52 45 51 
24f70     46 52 45 51 
24f74     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24f78     46 52 45 51 
24f7c     46 52 45 51 
24f80     46 52 45 51 
24f84     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24f88     46 52 45 51 
24f8c     46 52 45 51 
24f90     46 52 45 51 
24f94     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24f98     46 52 45 51 
24f9c     46 52 45 51 
24fa0     46 52 45 51 
24fa4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24fa8     46 52 45 51 
24fac     46 52 45 51 
24fb0     46 52 45 51 
24fb4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24fb8     46 52 45 51 
24fbc     46 52 45 51 
24fc0     46 52 45 51 
24fc4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24fc8     46 52 45 51 
24fcc     46 52 45 51 
24fd0     46 52 45 51 
24fd4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24fd8     46 52 45 51 
24fdc     46 52 45 51 
24fe0     46 52 45 51 
24fe4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24fe8     00 00 00 00 
24fec     00 00 00 00 | panningLut       word  0[NR_CHANNELS]
24ff0                 | 
24ff0                 | 'instrPanningLut  word  32768[NR_SAMPLES]
24ff0                 | 
24ff0     00 00 00 00 
24ff4     18 00 00 00 
24ff8     31 00 00 00 
24ffc     4A 00 00 00 | vibratoWaveform  long  0,    24,   49,   74,   97,   120,  141,  161
25000     61 00 00 00 
25004     78 00 00 00 
25008     8D 00 00 00 
2500c     A1 00 00 00 | 	byte	$61, $00, $00, $00, $78, $00, $00, $00, $8d, $00, $00, $00, $a1, $00, $00, $00
25010     B4 00 00 00 
25014     C5 00 00 00 
25018     D4 00 00 00 
2501c     E0 00 00 00 |                  long  180,  197,  212,  224,  235,  244,  250,  253
25020     EB 00 00 00 
25024     F4 00 00 00 
25028     FA 00 00 00 
2502c     FD 00 00 00 | 	byte	$eb, $00, $00, $00, $f4, $00, $00, $00, $fa, $00, $00, $00, $fd, $00, $00, $00
25030     FF 00 00 00 
25034     FD 00 00 00 
25038     FA 00 00 00 
2503c     F4 00 00 00 |                  long  255,  253,  250,  244,  235,  224,  212,  197
25040     EB 00 00 00 
25044     E0 00 00 00 
25048     D4 00 00 00 
2504c     C5 00 00 00 | 	byte	$eb, $00, $00, $00, $e0, $00, $00, $00, $d4, $00, $00, $00, $c5, $00, $00, $00
25050     B4 00 00 00 
25054     A1 00 00 00 
25058     8D 00 00 00 
2505c     78 00 00 00 |                  long  180,  161,  141,  120,  97,   74,   49,   24
25060     61 00 00 00 
25064     4A 00 00 00 
25068     31 00 00 00 
2506c     18 00 00 00 | 	byte	$61, $00, $00, $00, $4a, $00, $00, $00, $31, $00, $00, $00, $18, $00, $00, $00
25070     00 00 00 00 
25074     E8 FF FF FF 
25078     CF FF FF FF 
2507c     B6 FF FF FF |                  long  0,   -24,  -49,  -74,  -97,  -120, -141, -161
25080     9F FF FF FF 
25084     88 FF FF FF 
25088     73 FF FF FF 
2508c     5F FF FF FF | 	byte	$9f, $ff, $ff, $ff, $88, $ff, $ff, $ff, $73, $ff, $ff, $ff, $5f, $ff, $ff, $ff
25090     4C FF FF FF 
25094     3B FF FF FF 
25098     2C FF FF FF 
2509c     20 FF FF FF |                  long -180, -197, -212, -224, -235, -244, -250, -253
250a0     15 FF FF FF 
250a4     0C FF FF FF 
250a8     06 FF FF FF 
250ac     03 FF FF FF | 	byte	$15, $ff, $ff, $ff, $0c, $ff, $ff, $ff, $06, $ff, $ff, $ff, $03, $ff, $ff, $ff
250b0     01 FF FF FF 
250b4     03 FF FF FF 
250b8     06 FF FF FF 
250bc     0C FF FF FF |                  long -255, -253, -250, -244, -235, -224, -212, -197
250c0     15 FF FF FF 
250c4     20 FF FF FF 
250c8     2C FF FF FF 
250cc     3B FF FF FF | 	byte	$15, $ff, $ff, $ff, $20, $ff, $ff, $ff, $2c, $ff, $ff, $ff, $3b, $ff, $ff, $ff
250d0     4C FF FF FF 
250d4     5F FF FF FF 
250d8     73 FF FF FF 
250dc     88 FF FF FF |                  long -180, -161, -141, -120, -97,  -74,  -49,  -24
250e0     9F FF FF FF 
250e4     B6 FF FF FF 
250e8     CF FF FF FF 
250ec     E8 FF FF FF | 	byte	$9f, $ff, $ff, $ff, $b6, $ff, $ff, $ff, $cf, $ff, $ff, $ff, $e8, $ff, $ff, $ff
250f0                 | 
250f0     58 03 28 03 
250f4     FA 02 D0 02 
250f8     A6 02 80 02 
250fc     5C 02 3A 02 | periodTable      word  856 , 808 , 762 , 720 , 678 , 640 , 604 , 570 , 538 , 508 , 480 , 453 ' C1
25100     1A 02 FC 01 
25104     E0 01 C5 01 | 	byte	$1a, $02, $fc, $01, $e0, $01, $c5, $01
25108     AC 01 94 01 
2510c     7D 01 68 01 
25110     53 01 40 01 
25114     2E 01 1D 01 |                  word  428 , 404 , 381 , 360 , 339 , 320 , 302 , 285 , 269 , 254 , 240 , 226 ' C2
25118     0D 01 FE 00 
2511c     F0 00 E2 00 | 	byte	$0d, $01, $fe, $00, $f0, $00, $e2, $00
25120     D6 00 CA 00 
25124     BE 00 B4 00 
25128     AA 00 A0 00 
2512c     97 00 8F 00 |                  word  214 , 202 , 190 , 180 , 170 , 160 , 151 , 143 , 135 , 127 , 120 , 113 ' C3
25130     87 00 7F 00 
25134     78 00 71 00 | 	byte	$87, $00, $7f, $00, $78, $00, $71, $00
25138     52 03 22 03 
2513c     F5 02 CB 02 
25140     A2 02 7D 02 
25144     59 02 37 02 |                  word  850 , 802 , 757 , 715 , 674 , 637 , 601 , 567 , 535 , 505 , 477 , 450
25148     17 02 F9 01 
2514c     DD 01 C2 01 | 	byte	$17, $02, $f9, $01, $dd, $01, $c2, $01
25150     A9 01 91 01 
25154     7B 01 65 01 
25158     51 01 3E 01 
2515c     2C 01 1C 01 |                  word  425 , 401 , 379 , 357 , 337 , 318 , 300 , 284 , 268 , 253 , 239 , 225
25160     0C 01 FD 00 
25164     EF 00 E1 00 | 	byte	$0c, $01, $fd, $00, $ef, $00, $e1, $00
25168     D5 00 C9 00 
2516c     BD 00 B3 00 
25170     A9 00 9F 00 
25174     96 00 8E 00 |                  word  213 , 201 , 189 , 179 , 169 , 159 , 150 , 142 , 134 , 126 , 119 , 113
25178     86 00 7E 00 
2517c     77 00 71 00 | 	byte	$86, $00, $7e, $00, $77, $00, $71, $00
25180     4C 03 1C 03 
25184     F0 02 C5 02 
25188     9E 02 78 02 
2518c     55 02 33 02 |                  word  844 , 796 , 752 , 709 , 670 , 632 , 597 , 563 , 532 , 502 , 474 , 447
25190     14 02 F6 01 
25194     DA 01 BF 01 | 	byte	$14, $02, $f6, $01, $da, $01, $bf, $01
25198     A6 01 8E 01 
2519c     78 01 63 01 
251a0     4F 01 3C 01 
251a4     2A 01 1A 01 |                  word  422 , 398 , 376 , 355 , 335 , 316 , 298 , 282 , 266 , 251 , 237 , 224
251a8     0A 01 FB 00 
251ac     ED 00 E0 00 | 	byte	$0a, $01, $fb, $00, $ed, $00, $e0, $00
251b0     D3 00 C7 00 
251b4     BC 00 B1 00 
251b8     A7 00 9E 00 
251bc     95 00 8D 00 |                  word  211 , 199 , 188 , 177 , 167 , 158 , 149 , 141 , 133 , 125 , 118 , 112
251c0     85 00 7D 00 
251c4     76 00 70 00 | 	byte	$85, $00, $7d, $00, $76, $00, $70, $00
251c8     46 03 17 03 
251cc     EA 02 C0 02 
251d0     99 02 74 02 
251d4     50 02 2F 02 |                  word  838 , 791 , 746 , 704 , 665 , 628 , 592 , 559 , 528 , 498 , 470 , 444
251d8     10 02 F2 01 
251dc     D6 01 BC 01 | 	byte	$10, $02, $f2, $01, $d6, $01, $bc, $01
251e0     A3 01 8B 01 
251e4     75 01 60 01 
251e8     4C 01 3A 01 
251ec     28 01 18 01 |                  word  419 , 395 , 373 , 352 , 332 , 314 , 296 , 280 , 264 , 249 , 235 , 222
251f0     08 01 F9 00 
251f4     EB 00 DE 00 | 	byte	$08, $01, $f9, $00, $eb, $00, $de, $00
251f8     D1 00 C6 00 
251fc     BB 00 B0 00 
25200     A6 00 9D 00 
25204     94 00 8C 00 |                  word  209 , 198 , 187 , 176 , 166 , 157 , 148 , 140 , 132 , 125 , 118 , 111
25208     84 00 7D 00 
2520c     76 00 6F 00 | 	byte	$84, $00, $7d, $00, $76, $00, $6f, $00
25210     40 03 11 03 
25214     E5 02 BB 02 
25218     94 02 6F 02 
2521c     4C 02 2B 02 |                  word  832 , 785 , 741 , 699 , 660 , 623 , 588 , 555 , 524 , 495 , 467 , 441
25220     0C 02 EF 01 
25224     D3 01 B9 01 | 	byte	$0c, $02, $ef, $01, $d3, $01, $b9, $01
25228     A0 01 88 01 
2522c     72 01 5E 01 
25230     4A 01 38 01 
25234     26 01 16 01 |                  word  416 , 392 , 370 , 350 , 330 , 312 , 294 , 278 , 262 , 247 , 233 , 220
25238     06 01 F7 00 
2523c     E9 00 DC 00 | 	byte	$06, $01, $f7, $00, $e9, $00, $dc, $00
25240     D0 00 C4 00 
25244     B9 00 AF 00 
25248     A5 00 9C 00 
2524c     93 00 8B 00 |                  word  208 , 196 , 185 , 175 , 165 , 156 , 147 , 139 , 131 , 124 , 117 , 110
25250     83 00 7C 00 
25254     75 00 6E 00 | 	byte	$83, $00, $7c, $00, $75, $00, $6e, $00
25258     3A 03 0B 03 
2525c     E0 02 B6 02 
25260     8F 02 6B 02 
25264     48 02 27 02 |                  word  826 , 779 , 736 , 694 , 655 , 619 , 584 , 551 , 520 , 491 , 463 , 437
25268     08 02 EB 01 
2526c     CF 01 B5 01 | 	byte	$08, $02, $eb, $01, $cf, $01, $b5, $01
25270     9D 01 86 01 
25274     70 01 5B 01 
25278     48 01 35 01 
2527c     24 01 14 01 |                  word  413 , 390 , 368 , 347 , 328 , 309 , 292 , 276 , 260 , 245 , 232 , 219
25280     04 01 F5 00 
25284     E8 00 DB 00 | 	byte	$04, $01, $f5, $00, $e8, $00, $db, $00
25288     CE 00 C3 00 
2528c     B8 00 AE 00 
25290     A4 00 9B 00 
25294     92 00 8A 00 |                  word  206 , 195 , 184 , 174 , 164 , 155 , 146 , 138 , 130 , 123 , 116 , 109
25298     82 00 7B 00 
2529c     74 00 6D 00 | 	byte	$82, $00, $7b, $00, $74, $00, $6d, $00
252a0     34 03 06 03 
252a4     DA 02 B1 02 
252a8     8B 02 66 02 
252ac     44 02 23 02 |                  word  820 , 774 , 730 , 689 , 651 , 614 , 580 , 547 , 516 , 487 , 460 , 434
252b0     04 02 E7 01 
252b4     CC 01 B2 01 | 	byte	$04, $02, $e7, $01, $cc, $01, $b2, $01
252b8     9A 01 83 01 
252bc     6D 01 59 01 
252c0     45 01 33 01 
252c4     22 01 12 01 |                  word  410 , 387 , 365 , 345 , 325 , 307 , 290 , 274 , 258 , 244 , 230 , 217
252c8     02 01 F4 00 
252cc     E6 00 D9 00 | 	byte	$02, $01, $f4, $00, $e6, $00, $d9, $00
252d0     CD 00 C1 00 
252d4     B7 00 AC 00 
252d8     A3 00 9A 00 
252dc     91 00 89 00 |                  word  205 , 193 , 183 , 172 , 163 , 154 , 145 , 137 , 129 , 122 , 115 , 109
252e0     81 00 7A 00 
252e4     73 00 6D 00 | 	byte	$81, $00, $7a, $00, $73, $00, $6d, $00
252e8     2E 03 00 03 
252ec     D5 02 AC 02 
252f0     86 02 62 02 
252f4     3F 02 1F 02 |                  word  814 , 768 , 725 , 684 , 646 , 610 , 575 , 543 , 513 , 484 , 457 , 431
252f8     01 02 E4 01 
252fc     C9 01 AF 01 | 	byte	$01, $02, $e4, $01, $c9, $01, $af, $01
25300     97 01 80 01 
25304     6B 01 56 01 
25308     43 01 31 01 
2530c     20 01 10 01 |                  word  407 , 384 , 363 , 342 , 323 , 305 , 288 , 272 , 256 , 242 , 228 , 216
25310     00 01 F2 00 
25314     E4 00 D8 00 | 	byte	$00, $01, $f2, $00, $e4, $00, $d8, $00
25318     CC 00 C0 00 
2531c     B5 00 AB 00 
25320     A1 00 98 00 
25324     90 00 88 00 |                  word  204 , 192 , 181 , 171 , 161 , 152 , 144 , 136 , 128 , 121 , 114 , 108
25328     80 00 79 00 
2532c     72 00 6C 00 | 	byte	$80, $00, $79, $00, $72, $00, $6c, $00
25330     8B 03 58 03 
25334     28 03 FA 02 
25338     D0 02 A6 02 
2533c     80 02 5C 02 |                  word  907 , 856 , 808 , 762 , 720 , 678 , 640 , 604 , 570 , 538 , 508 , 480
25340     3A 02 1A 02 
25344     FC 01 E0 01 | 	byte	$3a, $02, $1a, $02, $fc, $01, $e0, $01
25348     C5 01 AC 01 
2534c     94 01 7D 01 
25350     68 01 53 01 
25354     40 01 2E 01 |                  word  453 , 428 , 404 , 381 , 360 , 339 , 320 , 302 , 285 , 269 , 254 , 240
25358     1D 01 0D 01 
2535c     FE 00 F0 00 | 	byte	$1d, $01, $0d, $01, $fe, $00, $f0, $00
25360     E2 00 D6 00 
25364     CA 00 BE 00 
25368     B4 00 AA 00 
2536c     A0 00 97 00 |                  word  226 , 214 , 202 , 190 , 180 , 170 , 160 , 151 , 143 , 135 , 127 , 120
25370     8F 00 87 00 
25374     7F 00 78 00 | 	byte	$8f, $00, $87, $00, $7f, $00, $78, $00
25378     84 03 52 03 
2537c     22 03 F5 02 
25380     CB 02 A3 02 
25384     7C 02 59 02 |                  word  900 , 850 , 802 , 757 , 715 , 675 , 636 , 601 , 567 , 535 , 505 , 477
25388     37 02 17 02 
2538c     F9 01 DD 01 | 	byte	$37, $02, $17, $02, $f9, $01, $dd, $01
25390     C2 01 A9 01 
25394     91 01 7B 01 
25398     65 01 51 01 
2539c     3E 01 2C 01 |                  word  450 , 425 , 401 , 379 , 357 , 337 , 318 , 300 , 284 , 268 , 253 , 238
253a0     1C 01 0C 01 
253a4     FD 00 EE 00 | 	byte	$1c, $01, $0c, $01, $fd, $00, $ee, $00
253a8     E1 00 D4 00 
253ac     C8 00 BD 00 
253b0     B3 00 A9 00 
253b4     9F 00 96 00 |                  word  225 , 212 , 200 , 189 , 179 , 169 , 159 , 150 , 142 , 134 , 126 , 119
253b8     8E 00 86 00 
253bc     7E 00 77 00 | 	byte	$8e, $00, $86, $00, $7e, $00, $77, $00
253c0     7E 03 4C 03 
253c4     1C 03 F0 02 
253c8     C5 02 9E 02 
253cc     78 02 55 02 |                  word  894 , 844 , 796 , 752 , 709 , 670 , 632 , 597 , 563 , 532 , 502 , 474
253d0     33 02 14 02 
253d4     F6 01 DA 01 | 	byte	$33, $02, $14, $02, $f6, $01, $da, $01
253d8     BF 01 A6 01 
253dc     8E 01 78 01 
253e0     63 01 4F 01 
253e4     3C 01 2A 01 |                  word  447 , 422 , 398 , 376 , 355 , 335 , 316 , 298 , 282 , 266 , 251 , 237
253e8     1A 01 0A 01 
253ec     FB 00 ED 00 | 	byte	$1a, $01, $0a, $01, $fb, $00, $ed, $00
253f0     DF 00 D3 00 
253f4     C7 00 BC 00 
253f8     B1 00 A7 00 
253fc     9E 00 95 00 |                  word  223 , 211 , 199 , 188 , 177 , 167 , 158 , 149 , 141 , 133 , 125 , 118
25400     8D 00 85 00 
25404     7D 00 76 00 | 	byte	$8d, $00, $85, $00, $7d, $00, $76, $00
25408     77 03 46 03 
2540c     17 03 EA 02 
25410     C0 02 99 02 
25414     74 02 50 02 |                  word  887 , 838 , 791 , 746 , 704 , 665 , 628 , 592 , 559 , 528 , 498 , 470
25418     2F 02 10 02 
2541c     F2 01 D6 01 | 	byte	$2f, $02, $10, $02, $f2, $01, $d6, $01
25420     BC 01 A3 01 
25424     8B 01 75 01 
25428     60 01 4C 01 
2542c     3A 01 28 01 |                  word  444 , 419 , 395 , 373 , 352 , 332 , 314 , 296 , 280 , 264 , 249 , 235
25430     18 01 08 01 
25434     F9 00 EB 00 | 	byte	$18, $01, $08, $01, $f9, $00, $eb, $00
25438     DE 00 D1 00 
2543c     C6 00 BB 00 
25440     B0 00 A6 00 
25444     9D 00 94 00 |                  word  222 , 209 , 198 , 187 , 176 , 166 , 157 , 148 , 140 , 132 , 125 , 118
25448     8C 00 84 00 
2544c     7D 00 76 00 | 	byte	$8c, $00, $84, $00, $7d, $00, $76, $00
25450     71 03 40 03 
25454     11 03 E5 02 
25458     BB 02 94 02 
2545c     6F 02 4C 02 |                  word  881 , 832 , 785 , 741 , 699 , 660 , 623 , 588 , 555 , 524 , 494 , 467
25460     2B 02 0C 02 
25464     EE 01 D3 01 | 	byte	$2b, $02, $0c, $02, $ee, $01, $d3, $01
25468     B9 01 A0 01 
2546c     88 01 72 01 
25470     5E 01 4A 01 
25474     38 01 26 01 |                  word  441 , 416 , 392 , 370 , 350 , 330 , 312 , 294 , 278 , 262 , 247 , 233
25478     16 01 06 01 
2547c     F7 00 E9 00 | 	byte	$16, $01, $06, $01, $f7, $00, $e9, $00
25480     DC 00 D0 00 
25484     C4 00 B9 00 
25488     AF 00 A5 00 
2548c     9C 00 93 00 |                  word  220 , 208 , 196 , 185 , 175 , 165 , 156 , 147 , 139 , 131 , 123 , 117
25490     8B 00 83 00 
25494     7B 00 75 00 | 	byte	$8b, $00, $83, $00, $7b, $00, $75, $00
25498     6B 03 3A 03 
2549c     0B 03 E0 02 
254a0     B6 02 8F 02 
254a4     6B 02 48 02 |                  word  875 , 826 , 779 , 736 , 694 , 655 , 619 , 584 , 551 , 520 , 491 , 463
254a8     27 02 08 02 
254ac     EB 01 CF 01 | 	byte	$27, $02, $08, $02, $eb, $01, $cf, $01
254b0     B5 01 9D 01 
254b4     86 01 70 01 
254b8     5B 01 48 01 
254bc     35 01 24 01 |                  word  437 , 413 , 390 , 368 , 347 , 328 , 309 , 292 , 276 , 260 , 245 , 232
254c0     14 01 04 01 
254c4     F5 00 E8 00 | 	byte	$14, $01, $04, $01, $f5, $00, $e8, $00
254c8     DB 00 CE 00 
254cc     C3 00 B8 00 
254d0     AE 00 A4 00 
254d4     9B 00 92 00 |                  word  219 , 206 , 195 , 184 , 174 , 164 , 155 , 146 , 138 , 130 , 123 , 116
254d8     8A 00 82 00 
254dc     7B 00 74 00 | 	byte	$8a, $00, $82, $00, $7b, $00, $74, $00
254e0     64 03 34 03 
254e4     06 03 DA 02 
254e8     B1 02 8B 02 
254ec     66 02 44 02 |                  word  868 , 820 , 774 , 730 , 689 , 651 , 614 , 580 , 547 , 516 , 487 , 460
254f0     23 02 04 02 
254f4     E7 01 CC 01 | 	byte	$23, $02, $04, $02, $e7, $01, $cc, $01
254f8     B2 01 9A 01 
254fc     83 01 6D 01 
25500     59 01 45 01 
25504     33 01 22 01 |                  word  434 , 410 , 387 , 365 , 345 , 325 , 307 , 290 , 274 , 258 , 244 , 230
25508     12 01 02 01 
2550c     F4 00 E6 00 | 	byte	$12, $01, $02, $01, $f4, $00, $e6, $00
25510     D9 00 CD 00 
25514     C1 00 B7 00 
25518     AC 00 A3 00 
2551c     9A 00 91 00 |                  word  217 , 205 , 193 , 183 , 172 , 163 , 154 , 145 , 137 , 129 , 122 , 115
25520     89 00 81 00 
25524     7A 00 73 00 | 	byte	$89, $00, $81, $00, $7a, $00, $73, $00
25528     5E 03 2E 03 
2552c     00 03 D5 02 
25530     AC 02 86 02 
25534     62 02 3F 02 |                  word  862 , 814 , 768 , 725 , 684 , 646 , 610 , 575 , 543 , 513 , 484 , 457
25538     1F 02 01 02 
2553c     E4 01 C9 01 | 	byte	$1f, $02, $01, $02, $e4, $01, $c9, $01
25540     AF 01 97 01 
25544     80 01 6B 01 
25548     56 01 43 01 
2554c     31 01 20 01 |                  word  431 , 407 , 384 , 363 , 342 , 323 , 305 , 288 , 272 , 256 , 242 , 228
25550     10 01 00 01 
25554     F2 00 E4 00 | 	byte	$10, $01, $00, $01, $f2, $00, $e4, $00
25558     D8 00 CB 00 
2555c     C0 00 B5 00 
25560     AB 00 A1 00 
25564     98 00 90 00 |                  word  216 , 203 , 192 , 181 , 171 , 161 , 152 , 144 , 136 , 128 , 121 , 114
25568     88 00 80 00 
2556c     79 00 72 00 | 	byte	$88, $00, $80, $00, $79, $00, $72, $00
25570                 | 	alignl
25570                 | _audio008_spin2_dat_
25570                 | 
25570                 | audio       org
25570                 |   
25570     28 34 64 FD |             setq    #26             ' Init cog channel variables from the hub, channel#*9 longs
25574     00 97 06 FB |             rdlong  sstart1,ptra
25578                 |         
25578     0E 64 07 FC |             wrpin   dac,#left       ' Noise dither DACs at clk/90
2557c     0E B4 1C FC |             wxpin   #90,#left
25580                 | 
25580     0F 64 07 FC |             wrpin   dac,#right
25584     0F B4 1C FC |             wxpin   #90,#right
25588                 | 
25588     41 9C 64 FD |             dirh    #left addpins 1
2558c                 | 
2558c     20 9C 64 FD |             setse1  #%001<<6 + left ' Set the event - DAC empty
25590     28 E9 07 F6 |             mov     ijmp1,#isr1     ' Init the interrupt
25594     25 08 64 FD |             setint1 #4              ' Interrupt from DAC empty event
25598                 |             
25598                 | '---------------------------------------------------------------------------------        
25598                 | '----------------- The main loop -------------------------------------------------
25598                 | '---------------------------------------------------------------------------------
25598                 | 
25598     28 10 64 FD | loop        setq    #8              ' Read channel regs from the hub
2559c     61 97 06 FB |             rdlong  sstart1,ptra++
255a0     28 10 64 FD |             setq    #8              ' Cannot do one big setq+rdlong as it interferes with interrupts
255a4     61 A9 06 FB |             rdlong  sstart2,ptra++
255a8     28 10 64 FD |             setq    #8
255ac     61 BB 06 FB |             rdlong  sstart3,ptra++
255b0     28 10 64 FD |             setq    #8
255b4     61 CD 06 FB |             rdlong  sstart4,ptra++
255b8     28 10 64 FD |             setq    #8
255bc     61 DF 06 FB |             rdlong  sstart5,ptra++
255c0     28 10 64 FD |             setq    #8
255c4     61 F1 06 FB |             rdlong  sstart6,ptra++
255c8     28 10 64 FD |             setq    #8
255cc     61 03 07 FB |             rdlong  sstart7,ptra++
255d0     28 10 64 FD |             setq    #8
255d4     61 15 07 FB |             rdlong  sstart8,ptra++
255d8                 | 
255d8     20 F1 87 F1 |             sub ptra,#9*4*8    
255dc                 |     
255dc     00 A6 0E F2 |             cmp     acmd1,#0 wz     ' if cmd=0, zero the phase accumulator
255e0     00 72 06 A6 |     if_e    mov     p1,#0
255e4     00 B8 0E F2 |             cmp     acmd2,#0 wz
255e8     00 74 06 A6 |     if_e    mov     p2,#0
255ec     00 CA 0E F2 |             cmp     acmd3,#0 wz
255f0     00 76 06 A6 |     if_e    mov     p3,#0
255f4     00 DC 0E F2 |             cmp     acmd4,#0 wz
255f8     00 78 06 A6 |     if_e    mov     p4,#0
255fc     00 EE 0E F2 |             cmp     acmd5,#0 wz
25600     00 7A 06 A6 |     if_e    mov     p5,#0
25604     00 00 0F F2 |             cmp     acmd6,#0 wz
25608     00 7C 06 A6 |     if_e    mov     p6,#0
2560c     00 12 0F F2 |             cmp     acmd7,#0 wz
25610     00 7E 06 A6 |     if_e    mov     p7,#0
25614     00 24 0F F2 |             cmp     acmd8,#0 wz
25618     00 80 06 A6 |     if_e    mov     p8,#0
2561c                 |           
2561c     44 83 02 F6 |             mov     qq,tail         ' Check if the buffer is full	
25620     02 82 86 F1 |             sub     qq,#2
25624     FF 83 06 F5 |             and     qq,#511
25628     43 83 1A F2 |             cmp     qq,front wcz
2562c     68 FF 9F AD |     if_e    jmp     #loop           ' If the buffer is full, do nothing               
25630                 |       
25630     00 3A 07 F6 |             mov     cn,#0           ' Find the channel to compute
25634     94 3D 03 F6 |             mov     ct,time1        ' with the lowest next sample time
25638     95 3D 3B F3 |             fle     ct,time2 wcz    ' TODO: THIS WILL FAIL AFTER 1210 (or 605? )seconds when overflow
2563c     01 3A 07 C6 |     if_c    mov     cn,#1   
25640     96 3D 3B F3 |             fle     ct,time3 wcz
25644     02 3A 07 C6 |     if_c    mov     cn,#2        
25648     97 3D 3B F3 |             fle     ct,time4 wcz
2564c     03 3A 07 C6 |     if_c    mov     cn,#3 
25650     98 3D 3B F3 |             fle     ct,time5 wcz
25654     04 3A 07 C6 |     if_c    mov     cn,#4 
25658     99 3D 3B F3 |             fle     ct,time6 wcz
2565c     05 3A 07 C6 |     if_c    mov     cn,#5 
25660     9A 3D 3B F3 |             fle     ct,time7 wcz
25664     06 3A 07 C6 |     if_c    mov     cn,#6 
25668     9B 3D 3B F3 |             fle     ct,time8 wcz
2566c     07 3A 07 C6 |     if_c    mov     cn,#7 
25670                 |  
25670     00 3A 0F F2 |             cmp     cn,#0 wz'
25674     38 00 90 AD |     if_z    jmp     #p201       
25678     01 3A 0F F2 |             cmp     cn,#1 wz
2567c     8C 00 90 AD |     if_z    jmp     #p202       
25680     02 3A 0F F2 |             cmp     cn,#2 wz
25684     E0 00 90 AD |     if_z    jmp     #p203       
25688     03 3A 0F F2 |             cmp     cn,#3 wz
2568c     34 01 90 AD |     if_z    jmp     #p204       
25690     04 3A 0F F2 |             cmp     cn,#4 wz
25694     88 01 90 AD |     if_z    jmp     #p205       
25698     05 3A 0F F2 |             cmp     cn,#5 wz
2569c     DC 01 90 AD |     if_z    jmp     #p206       
256a0     06 3A 0F F2 |             cmp     cn,#6 wz
256a4     30 02 90 AD |     if_z    jmp     #p207       
256a8     07 3A 0F F2 |             cmp     cn,#7 wz
256ac     84 02 90 AD |     if_z    jmp     #p208       
256b0                 |            
256b0                 | '----------------------------------------------------------------------------------
256b0                 | '------------- Compute channel samples --------------------------------------------
256b0                 | '----------------------------------------------------------------------------------
256b0                 | 	
256b0                 | ' ------------  Channel 1
256b0                 |  
256b0     94 3F 03 F6 | p201        mov     dt0,time1      ' compute the delta to add to the global time
256b4     93 3F 83 F1 |             sub     dt0,time0
256b8     51 29 03 F1 |             add     time1,freq1    ' compute the next channel time	
256bc                 | 	        
256bc     52 73 02 F1 |             add     p1,askip1      ' update the phase accumulator
256c0     4E 73 1A F2 |             cmp     p1,lend1 wcz   ' substract the loop length if over the loop end
256c4     4E 73 82 31 |     if_ge   sub     p1,lend1	        
256c8     4D 73 02 31 |     if_ge   add     p1,lstart1       
256cc     39 83 02 F6 |             mov     qq,p1          ' compute the pointer to the next sample
256d0     4B 83 02 F1 |             add     qq,sstart1
256d4                 |             
256d4     00 98 0E F2 |             cmp     type1,#0 wz    ' check the sample type
256d8     41 85 C2 5A |     if_nz   rdbyte  spl,qq         ' not zero=8 bit
256dc     08 84 66 50 |     if_nz   shl     spl,#8
256e0     41 85 E2 AA |     if_z    rdword  spl,qq         ' zero=16 bit. TODO: more types? signed/unsigned, etc... 
256e4                 | 
256e4     4F 85 32 FA |             scas    spl,vol1       ' apply the volume
256e8     00 84 02 F6 |             mov     spl,0-0
256ec                 | 
256ec     50 85 32 FA |             scas    spl,apan1      ' apply the pan
256f0     00 44 03 F6 |             mov     ls1,0-0
256f4     20 00 00 FF 
256f8     00 82 06 F6 |             mov     qq,##16384
256fc     50 83 82 F1 |             sub     qq,apan1
25700     41 85 32 FA |             scas    spl,qq
25704     00 46 03 F6 |             mov     rs1,0-0
25708                 |             
25708     84 02 90 FD |             jmp     #p101              
2570c                 | 	    	
2570c                 | ' ------------  Channel 2
2570c                 |  
2570c     95 3F 03 F6 | p202        mov     dt0,time2
25710     93 3F 83 F1 |             sub     dt0,time0
25714     5A 2B 03 F1 |             add     time2,freq2  	
25718                 | 	        
25718     5B 75 02 F1 |             add     p2,askip2
2571c     57 75 1A F2 |             cmp     p2,lend2 wcz
25720     57 75 82 31 |     if_ge   sub     p2,lend2	        
25724     56 75 02 31 |     if_ge   add     p2,lstart2       
25728     3A 83 02 F6 |             mov     qq,p2
2572c     54 83 02 F1 |             add     qq,sstart2
25730                 | 
25730     00 AA 0E F2 |             cmp     type2,#0 wz
25734     41 85 C2 5A |     if_nz   rdbyte  spl,qq
25738     08 84 66 50 |     if_nz   shl     spl,#8
2573c     41 85 E2 AA |     if_z    rdword  spl,qq
25740                 | 
25740     58 85 32 FA |             scas    spl,vol2
25744     00 84 02 F6 |             mov     spl,0-0
25748                 |             
25748     59 85 32 FA |             scas    spl,apan2
2574c     00 48 03 F6 |             mov     ls2,0-0
25750     20 00 00 FF 
25754     00 82 06 F6 |             mov     qq,##16384
25758     59 83 82 F1 |             sub     qq,apan2
2575c     41 85 32 FA |             scas    spl,qq
25760     00 4A 03 F6 |             mov     rs2,0-0
25764                 |             
25764     28 02 90 FD |             jmp     #p101
25768                 | 
25768                 | ' ------------  Channel 3
25768                 |  
25768     96 3F 03 F6 | p203        mov     dt0,time3
2576c     93 3F 83 F1 |             sub     dt0,time0
25770     63 2D 03 F1 |             add     time3,freq3  	
25774                 | 	        
25774     64 77 02 F1 |             add     p3,askip3
25778     60 77 1A F2 |             cmp     p3,lend3 wcz
2577c     60 77 82 31 |     if_ge   sub     p3,lend3	        
25780     5F 77 02 31 |     if_ge   add     p3,lstart3       
25784     3B 83 02 F6 |             mov     qq,p3
25788     5D 83 02 F1 |             add     qq,sstart3
2578c                 |             
2578c     00 BC 0E F2 |             cmp     type3,#0 wz
25790     41 85 C2 5A |     if_nz   rdbyte  spl,qq
25794     08 84 66 50 |     if_nz   shl     spl,#8
25798     41 85 E2 AA |     if_z    rdword  spl,qq
2579c                 | 
2579c     61 85 32 FA |             scas    spl,vol3
257a0     00 84 02 F6 |             mov     spl,0-0
257a4                 |     	
257a4     62 85 32 FA |             scas    spl,apan3
257a8     00 4C 03 F6 |             mov     ls3,0-0
257ac                 |             
257ac     20 00 00 FF 
257b0     00 82 06 F6 |             mov     qq,##16384
257b4     62 83 82 F1 |             sub     qq,apan3
257b8     41 85 32 FA |             scas    spl,qq
257bc     00 4E 03 F6 |             mov     rs3,0-0
257c0                 | 
257c0     CC 01 90 FD |             jmp     #p101
257c4                 |             
257c4                 | ' ------------  Channel 4
257c4                 |  
257c4     97 3F 03 F6 | p204        mov     dt0,time4
257c8     93 3F 83 F1 |             sub     dt0,time0
257cc     6C 2F 03 F1 |             add     time4,freq4  	
257d0                 | 
257d0                 | 	        
257d0     6D 79 02 F1 |             add     p4,askip4
257d4     69 79 1A F2 |             cmp     p4,lend4 wcz
257d8     69 79 82 31 |     if_ge   sub     p4,lend4	        
257dc     68 79 02 31 |     if_ge   add     p4,lstart4       
257e0     3C 83 02 F6 |             mov     qq,p4
257e4     66 83 02 F1 |             add     qq,sstart4
257e8                 |             
257e8     00 CE 0E F2 |             cmp     type4,#0 wz
257ec     41 85 C2 5A |     if_nz   rdbyte  spl,qq
257f0     08 84 66 50 |     if_nz   shl     spl,#8
257f4     41 85 E2 AA |     if_z    rdword  spl,qq
257f8                 | 
257f8     6A 85 32 FA |             scas    spl,vol4
257fc     00 84 02 F6 |             mov     spl,0-0
25800                 |     	
25800     6B 85 32 FA |             scas    spl,apan4
25804     00 52 03 F6 |             mov     ls4,0-0
25808                 |             
25808     20 00 00 FF 
2580c     00 82 06 F6 |             mov     qq,##16384
25810     6B 83 82 F1 |             sub     qq,apan4
25814     41 85 32 FA |             scas    spl,qq
25818     00 50 03 F6 |             mov     rs4,0-0
2581c                 | 
2581c     70 01 90 FD |             jmp     #p101
25820                 |             
25820                 | ' ------------  Channel 5
25820                 |  
25820     98 3F 03 F6 | p205        mov     dt0,time5
25824     93 3F 83 F1 |             sub     dt0,time0
25828     75 31 03 F1 |             add     time5,freq5  	
2582c                 | 
2582c                 | 	        
2582c     76 7B 02 F1 |             add     p5,askip5
25830     72 7B 1A F2 |             cmp     p5,lend5 wcz
25834     72 7B 82 31 |     if_ge   sub     p5,lend5	        
25838     71 7B 02 31 |     if_ge   add     p5,lstart5       
2583c     3D 83 02 F6 |             mov     qq,p5
25840     6F 83 02 F1 |             add     qq,sstart5
25844                 |             
25844     00 E0 0E F2 |             cmp     type5,#0 wz
25848     41 85 C2 5A |     if_nz   rdbyte  spl,qq
2584c     08 84 66 50 |     if_nz   shl     spl,#8
25850     41 85 E2 AA |     if_z    rdword  spl,qq
25854                 | 
25854     73 85 32 FA |             scas    spl,vol5
25858     00 84 02 F6 |             mov     spl,0-0
2585c                 |     	
2585c     74 85 32 FA |             scas    spl,apan5
25860     00 56 03 F6 |             mov     ls5,0-0
25864                 |             
25864     20 00 00 FF 
25868     00 82 06 F6 |             mov     qq,##16384
2586c     74 83 82 F1 |             sub     qq,apan5
25870     41 85 32 FA |             scas    spl,qq
25874     00 54 03 F6 |             mov     rs5,0-0
25878                 | 
25878     14 01 90 FD |             jmp     #p101
2587c                 |   
2587c                 | ' ------------  Channel 6
2587c                 |  
2587c     99 3F 03 F6 | p206        mov     dt0,time6
25880     93 3F 83 F1 |             sub     dt0,time0
25884     7E 33 03 F1 |             add     time6,freq6  	
25888                 | 
25888                 | 	        
25888     7F 7D 02 F1 |             add     p6,askip6
2588c     7B 7D 1A F2 |             cmp     p6,lend6 wcz
25890     7B 7D 82 31 |     if_ge   sub     p6,lend6	        
25894     7A 7D 02 31 |     if_ge   add     p6,lstart6       
25898     3E 83 02 F6 |             mov     qq,p6
2589c     78 83 02 F1 |             add     qq,sstart6
258a0                 |             
258a0     00 F2 0E F2 |             cmp     type6,#0 wz
258a4     41 85 C2 5A |     if_nz   rdbyte  spl,qq
258a8     08 84 66 50 |     if_nz   shl     spl,#8
258ac     41 85 E2 AA |     if_z    rdword  spl,qq
258b0                 | 
258b0     7C 85 32 FA |             scas    spl,vol6
258b4     00 84 02 F6 |             mov     spl,0-0
258b8                 |     	
258b8     7D 85 32 FA |             scas    spl,apan6
258bc     00 5A 03 F6 |             mov     ls6,0-0
258c0                 |             
258c0     20 00 00 FF 
258c4     00 82 06 F6 |             mov     qq,##16384
258c8     7D 83 82 F1 |             sub     qq,apan6
258cc     41 85 32 FA |             scas    spl,qq
258d0     00 58 03 F6 |             mov     rs6,0-0
258d4                 | 
258d4     B8 00 90 FD |             jmp     #p101
258d8                 |             
258d8                 | ' ------------  Channel 7
258d8                 |  
258d8     9A 3F 03 F6 | p207        mov     dt0,time7
258dc     93 3F 83 F1 |             sub     dt0,time0
258e0     87 35 03 F1 |             add     time7,freq7  	
258e4                 | 
258e4                 | 	        
258e4     88 7F 02 F1 |             add     p7,askip7
258e8     84 7F 1A F2 |             cmp     p7,lend7 wcz
258ec     84 7F 82 31 |     if_ge   sub     p7,lend7	        
258f0     83 7F 02 31 |     if_ge   add     p7,lstart7       
258f4     3F 83 02 F6 |             mov     qq,p7
258f8     81 83 02 F1 |             add     qq,sstart7
258fc                 |             
258fc     00 04 0F F2 |             cmp     type7,#0 wz
25900     41 85 C2 5A |     if_nz   rdbyte  spl,qq
25904     08 84 66 50 |     if_nz   shl     spl,#8
25908     41 85 E2 AA |     if_z    rdword  spl,qq
2590c                 | 
2590c     85 85 32 FA |             scas    spl,vol7
25910     00 84 02 F6 |             mov     spl,0-0
25914                 |     	
25914     86 85 32 FA |             scas    spl,apan7
25918     00 5E 03 F6 |             mov     ls7,0-0
2591c                 |             
2591c     20 00 00 FF 
25920     00 82 06 F6 |             mov     qq,##16384
25924     86 83 82 F1 |             sub     qq,apan7
25928     41 85 32 FA |             scas    spl,qq
2592c     00 5C 03 F6 |             mov     rs7,0-0
25930                 | 
25930     5C 00 90 FD |             jmp     #p101     
25934                 |                    
25934                 | ' ------------  Channel 8
25934                 |  
25934     9B 3F 03 F6 | p208        mov     dt0,time8
25938     93 3F 83 F1 |             sub     dt0,time0
2593c     90 37 03 F1 |             add     time8,freq8  	
25940                 | 
25940                 | 	        
25940     91 81 02 F1 |             add     p8,askip8
25944     8D 81 1A F2 |             cmp     p8,lend8 wcz
25948     8D 81 82 31 |     if_ge   sub     p8,lend8	        
2594c     8C 81 02 31 |     if_ge   add     p8,lstart8       
25950     40 83 02 F6 |             mov     qq,p8
25954     8A 83 02 F1 |             add     qq,sstart8
25958                 |             
25958     00 16 0F F2 |             cmp     type8,#0 wz
2595c     41 85 C2 5A |     if_nz   rdbyte  spl,qq
25960     08 84 66 50 |     if_nz   shl     spl,#8
25964     41 85 E2 AA |     if_z    rdword  spl,qq
25968                 | 
25968     8E 85 32 FA |             scas    spl,vol8
2596c     00 84 02 F6 |             mov     spl,0-0
25970                 |     	
25970     8F 85 32 FA |             scas    spl,apan8
25974     00 62 03 F6 |             mov     ls8,0-0
25978                 |             
25978     20 00 00 FF 
2597c     00 82 06 F6 |             mov     qq,##16384
25980     8F 83 82 F1 |             sub     qq,apan8
25984     41 85 32 FA |             scas    spl,qq
25988     00 60 03 F6 |             mov     rs8,0-0
2598c                 | 
2598c     00 00 90 FD |             jmp     #p101            
25990                 |             
25990                 | '------------------------ Channels end here --------------------       
25990                 | 
25990                 | ' Now add all channels and put the sample to the buffer    
25990                 | 
25990                 | 
25990     93 39 0B F2 | p101        cmp     oldt0,time0 wz   ' There must not be 2 entries with the same time
25994     02 86 86 A1 |     if_z    sub     front,#2         ' 
25998     FF 87 06 A5 |     if_z    and     front,#511     
2599c                 |   
2599c     00 42 07 F6 |             mov     rs,#0            ' Mix all channels to rs and ls
259a0     00 40 07 F6 |             mov     ls,#0
259a4     A3 43 03 F1 |             add     rs,rs1
259a8     A5 43 03 F1 |             add     rs,rs2
259ac     A7 43 03 F1 |             add     rs,rs3
259b0     A8 43 03 F1 |             add     rs,rs4
259b4     AA 43 03 F1 |             add     rs,rs5
259b8     AC 43 03 F1 |             add     rs,rs6
259bc     AE 43 03 F1 |             add     rs,rs7
259c0     B0 43 03 F1 |             add     rs,rs8
259c4                 |             
259c4     A2 41 03 F1 |             add     ls,ls1
259c8     A4 41 03 F1 |             add     ls,ls2
259cc     A6 41 03 F1 |             add     ls,ls3
259d0     A9 41 03 F1 |             add     ls,ls4
259d4     AB 41 03 F1 |             add     ls,ls5
259d8     AD 41 03 F1 |             add     ls,ls6
259dc     AF 41 03 F1 |             add     ls,ls7
259e0     B1 41 03 F1 |             add     ls,ls8
259e4                 |  		
259e4     0F 40 E7 F4 |             bitnot  ls,#15            ' convert to unsigned. TODO: compute and apply the gain for samples to not exceed 16 bit range
259e8     0F 42 E7 F4 |             bitnot  rs,#15		
259ec                 | 		
259ec     A0 43 2B F9 |             setword rs,ls,#1         ' Pack L and R to one long    		
259f0     43 43 33 FC |             wrlut   rs,front         ' and write it to LUT
259f4     01 86 06 F1 |             add     front,#1         ' Write the sample time
259f8     43 27 33 FC |             wrlut   time0,front
259fc                 | 
259fc     01 86 06 F1 |             add     front,#1         ' move the front pointer
25a00     FF 87 06 F5 |             and     front,#511       ' and loop at #512
25a04     93 39 03 F6 |             mov     oldt0,time0      ' update global time
25a08     9F 27 03 F1 |             add     time0,dt0        
25a0c     88 FB 9F FD |             jmp     #loop            'loop
25a10                 | 
25a10                 | '-------------------------------------------------------------------------
25a10                 | '------------------ This is the end of the main loop ---------------------
25a10                 | '-------------------------------------------------------------------------
25a10                 | 
25a10                 | '--------------------------------------------------------------------------
25a10                 | '------ Interrupt service -------------------------------------------------
25a10                 | '------ Output the sample, get the next one if exists ---------------------
25a10                 | '--------------------------------------------------------------------------
25a10                 | 
25a10     0E 8C 26 FC | isr1        wypin   lsample,#left        '2     The sample has to be outputted every 90 cycles     
25a14     0F 8E 26 FC |             wypin   rsample,#right       '4
25a18                 | 
25a18     01 8A 06 F1 |             add     counter,#1           '6     Increment the counter
25a1c     4A 8B 1A F2 |             cmp     counter,irqtime wcz  '8     Check if it is time for the next sample
25a20     F5 FF 3B 5B |     if_ne   reti1                        '10/12 If not, do nothing
25a24                 | 		
25a24     48 8D 02 F6 |             mov     lsample,lsnext       '12    Prepare the next sample to output
25a28     49 8F 02 F6 |             mov     rsample,rsnext       '14
25a2c                 | 		        
25a2c     43 89 1A F2 |             cmp     tail,front wcz       '16    If the buffer is empty, do nothing 
25a30     F5 FF 3B AB |             if_e    reti1                '18/20 
25a34                 | 
25a34     44 91 A2 FA |             rdlut   lsnext,tail          '21    else read the sample and its time from LUT
25a38     48 93 3A F9 |             getword rsnext,lsnext,#1     '23    Split for left and right
25a3c     48 91 32 F9 |             getword lsnext,lsnext,#0     '25
25a40     01 88 06 F1 |             add    tail, #1              '27
25a44     44 95 A2 FA |             rdlut  irqtime,tail          '30    Read the time for this sample
25a48     01 88 06 F1 |             add    tail,#1               '32    Go to the next entry
25a4c     FF 89 06 F5 |             and    tail,#511             '34
25a50     F5 FF 3B FB |             reti1                        '38
25a54                 | 
25a54                 | '---------------------------------------------------------------------------
25a54                 | '-------- End of interrupt -------------------------------------------------
25a54                 | '---------------------------------------------------------------------------    
25a54                 | 
25a54                 | '---------------------------------------------------------------------------
25a54                 | '------- Variables ---------------------------------------------------------
25a54                 | '---------------------------------------------------------------------------
25a54                 | 
25a54                 | ' phase accumulators
25a54                 | 
25a54     00 00 00 00 | p1          long 0
25a58     00 00 00 00 | p2          long 0
25a5c     00 00 00 00 | p3          long 0
25a60     00 00 00 00 | p4          long 0
25a64     00 00 00 00 | p5          long 0
25a68     00 00 00 00 | p6          long 0
25a6c     00 00 00 00 | p7          long 0
25a70     00 00 00 00 | p8          long 0
25a74                 | 
25a74                 | ' temporary variables 
25a74                 | 
25a74     00 00 00 00 | qq          long 0
25a78     00 00 00 00 | spl         long 0
25a7c                 | 
25a7c                 | ' circular buffer in LUT
25a7c                 | 
25a7c     00 00 00 00 | front       long 0
25a80     00 00 00 00 | tail        long 0
25a84                 | 
25a84                 | ' Interrupt ISR variables
25a84                 | 
25a84     00 F8 FF FF | counter     long $FFFFF800 ' this counter will overflow after 1210 seconds
25a88     00 00 00 00 | lsample     long 0
25a8c     00 00 00 00 | rsample     long 0
25a90     00 00 00 00 | lsnext      long 0
25a94     00 00 00 00 | rsnext      long 0 
25a98     00 00 00 00 | irqtime     long 0
25a9c                 | 
25a9c                 | ' Channel 1 registers. TODO - optimize the memory usage
25a9c                 | 
25a9c     00 00 00 00 | sstart1     long 0       ' Sample start pointer
25aa0     00 00 00 00 | type1       long 0       ' type 0 16 bit, 1 8 bit
25aa4     00 00 00 00 | lstart1     long 0       ' Loop start
25aa8     02 00 00 00 | lend1       long 2       ' Loop end
25aac     00 00 00 00 | vol1        long 0       ' volume, 0..16384
25ab0     00 00 00 00 | apan1       long 0       ' pan, 0..16384
25ab4     65 00 00 00 | freq1       long 101     ' frequency divider
25ab8     02 00 00 00 | askip1      long 2       ' skip between samples, 1 for 8 bit, 2 for 16 bit (or more for special effects)
25abc     00 00 00 00 | acmd1       long 0       ' command, 0 = reset the phase accumulator
25ac0                 | 
25ac0                 | ' Channel 2 registers
25ac0                 | 
25ac0     00 00 00 00 | sstart2     long 0
25ac4     00 00 00 00 | type2       long 0
25ac8     00 00 00 00 | lstart2     long 0
25acc     02 00 00 00 | lend2       long 2        		
25ad0     00 00 00 00 | vol2        long 0
25ad4     00 00 00 00 | apan2       long 0
25ad8     67 00 00 00 | freq2       long 103
25adc     02 00 00 00 | askip2      long 2
25ae0     00 00 00 00 | acmd2       long 0
25ae4                 | 
25ae4                 | ' Channel 3 registers
25ae4                 | 
25ae4     00 00 00 00 | sstart3     long 0
25ae8     00 00 00 00 | type3       long 0
25aec     00 00 00 00 | lstart3     long 0
25af0     02 00 00 00 | lend3       long 2       		'
25af4     00 00 00 00 | vol3        long 0
25af8     00 00 00 00 | apan3       long 0
25afc     6B 00 00 00 | freq3       long 107 '109 113 127 131 137 ...
25b00     02 00 00 00 | askip3      long 2
25b04     00 00 00 00 | acmd3       long 0
25b08                 | 
25b08                 | ' Channel 4 registers
25b08                 | 
25b08     00 00 00 00 | sstart4     long 0
25b0c     00 00 00 00 | type4       long 0
25b10     00 00 00 00 | lstart4     long 0
25b14     02 00 00 00 | lend4       long 2       		'
25b18     00 00 00 00 | vol4        long 0
25b1c     00 00 00 00 | apan4       long 0
25b20     6D 00 00 00 | freq4       long 109 '109 113 127 131 137 ...
25b24     02 00 00 00 | askip4      long 2
25b28     00 00 00 00 | acmd4       long 0
25b2c                 | 
25b2c                 | ' Channel 5 registers
25b2c                 | 
25b2c     00 00 00 00 | sstart5     long 0
25b30     00 00 00 00 | type5       long 0
25b34     00 00 00 00 | lstart5     long 0
25b38     02 00 00 00 | lend5       long 2       		'
25b3c     00 00 00 00 | vol5        long 0
25b40     00 00 00 00 | apan5       long 0
25b44     71 00 00 00 | freq5       long 113 '109 113 127 131 137 ...
25b48     02 00 00 00 | askip5      long 2
25b4c     00 00 00 00 | acmd5       long 0
25b50                 | 
25b50                 | ' Channel 6 registers
25b50                 | 
25b50     00 00 00 00 | sstart6     long 0
25b54     00 00 00 00 | type6       long 0
25b58     00 00 00 00 | lstart6     long 0
25b5c     02 00 00 00 | lend6       long 2       		'
25b60     00 00 00 00 | vol6        long 0
25b64     00 00 00 00 | apan6       long 0
25b68     7F 00 00 00 | freq6       long 127 '109 113 127 131 137 ...
25b6c     02 00 00 00 | askip6      long 2
25b70     00 00 00 00 | acmd6       long 0
25b74                 | 
25b74                 | ' Channel 7 registers
25b74                 | 
25b74     00 00 00 00 | sstart7     long 0
25b78     00 00 00 00 | type7       long 0
25b7c     00 00 00 00 | lstart7     long 0
25b80     02 00 00 00 | lend7       long 2       		'
25b84     00 00 00 00 | vol7        long 0
25b88     00 00 00 00 | apan7       long 0
25b8c     83 00 00 00 | freq7       long 131 '109 113 127 131 137 ...
25b90     02 00 00 00 | askip7      long 2
25b94     00 00 00 00 | acmd7       long 0
25b98                 | 
25b98                 | ' Channel 8 registers
25b98                 | 
25b98     00 00 00 00 | sstart8     long 0
25b9c     00 00 00 00 | type8       long 0
25ba0     00 00 00 00 | lstart8     long 0
25ba4     02 00 00 00 | lend8       long 2       		'
25ba8     00 00 00 00 | vol8        long 0
25bac     00 00 00 00 | apan8       long 0
25bb0     83 00 00 00 | freq8       long 131 '109 113 127 131 137 ...
25bb4     02 00 00 00 | askip8      long 2
25bb8     00 00 00 00 | acmd8       long 0
25bbc                 | 
25bbc                 | ' Time variables
25bbc                 | 
25bbc     00 00 00 00 | time0       long 0    ' Global sample computing time
25bc0     01 00 00 00 | time1       long 1    ' Local channels time
25bc4     02 00 00 00 | time2       long 2
25bc8     03 00 00 00 | time3       long 3
25bcc     04 00 00 00 | time4       long 4
25bd0     05 00 00 00 | time5       long 5
25bd4     06 00 00 00 | time6       long 6
25bd8     07 00 00 00 | time7       long 7
25bdc     08 00 00 00 | time8       long 8
25be0                 | 
25be0     00 00 00 00 | oldt0       long 0    'Temporary time variables
25be4     00 00 00 00 | cn          long 0
25be8     00 00 00 00 | ct          long 0
25bec     00 00 00 00 | dt0         long 0
25bf0                 | 
25bf0                 | ' Samples
25bf0                 | 
25bf0     00 00 00 00 | ls          long 0    ' Global sample variable
25bf4     00 00 00 00 | rs          long 0
25bf8                 | 
25bf8     00 00 00 00 | ls1         long 0    ' Channel samples
25bfc     00 00 00 00 | rs1         long 0
25c00     00 00 00 00 | ls2         long 0
25c04     00 00 00 00 | rs2         long 0
25c08     00 00 00 00 | ls3         long 0
25c0c     00 00 00 00 | rs3         long 0
25c10     00 00 00 00 | rs4         long 0
25c14     00 00 00 00 | ls4         long 0
25c18     00 00 00 00 | rs5         long 0
25c1c     00 00 00 00 | ls5         long 0
25c20     00 00 00 00 | rs6         long 0
25c24     00 00 00 00 | ls6         long 0
25c28     00 00 00 00 | rs7         long 0
25c2c     00 00 00 00 | ls7         long 0
25c30     00 00 00 00 | rs8         long 0
25c34     00 00 00 00 | ls8         long 0
25c38                 | 
25c38     44 00 17 00 | dac         long %10111_00000000_01_00010_0     'random dither, as 90 cycles period needed
25c3c                 | 
25c3c     00 00 00 00 
25c40     00 00 00 00 | null  			long 	0,0           ' for channel reset
25c44     73 32 00 04 
25c48     00 00 10 00 
25c4c     00 00 00 00 
25c50     00 00 00 00 | sinewave 		file 	"sinus.s2"    ' for testing
25c54     00 00 C9 00 
25c58     92 01 5B 02 
25c5c     24 03 ED 03 
25c60     B6 04 7F 05 | 	byte	$00, $00, $c9, $00, $92, $01, $5b, $02, $24, $03, $ed, $03, $b6, $04, $7f, $05
25c64     48 06 11 07 
25c68     D9 07 A2 08 
25c6c     6A 09 33 0A 
25c70     FB 0A C4 0B | 	byte	$48, $06, $11, $07, $d9, $07, $a2, $08, $6a, $09, $33, $0a, $fb, $0a, $c4, $0b
25c74     8C 0C 54 0D 
25c78     1C 0E E3 0E 
25c7c     AB 0F 72 10 
25c80     3A 11 01 12 | 	byte	$8c, $0c, $54, $0d, $1c, $0e, $e3, $0e, $ab, $0f, $72, $10, $3a, $11, $01, $12
25c84     C8 12 8F 13 
25c88     55 14 1C 15 
25c8c     E2 15 A8 16 
25c90     6E 17 33 18 | 	byte	$c8, $12, $8f, $13, $55, $14, $1c, $15, $e2, $15, $a8, $16, $6e, $17, $33, $18
25c94     F9 18 BE 19 
25c98     82 1A 47 1B 
25c9c     0B 1C CF 1C 
25ca0     93 1D 57 1E | 	byte	$f9, $18, $be, $19, $82, $1a, $47, $1b, $0b, $1c, $cf, $1c, $93, $1d, $57, $1e
25ca4     1A 1F DD 1F 
25ca8     9F 20 61 21 
25cac     23 22 E5 22 
25cb0     A6 23 67 24 | 	byte	$1a, $1f, $dd, $1f, $9f, $20, $61, $21, $23, $22, $e5, $22, $a6, $23, $67, $24
25cb4     28 25 E8 25 
25cb8     A8 26 67 27 
25cbc     26 28 E5 28 
25cc0     A3 29 61 2A | 	byte	$28, $25, $e8, $25, $a8, $26, $67, $27, $26, $28, $e5, $28, $a3, $29, $61, $2a
25cc4     1F 2B DC 2B 
25cc8     99 2C 55 2D 
25ccc     11 2E CC 2E 
25cd0     87 2F 41 30 | 	byte	$1f, $2b, $dc, $2b, $99, $2c, $55, $2d, $11, $2e, $cc, $2e, $87, $2f, $41, $30
25cd4     FB 30 B5 31 
25cd8     6E 32 26 33 
25cdc     DF 33 96 34 
25ce0     4D 35 04 36 | 	byte	$fb, $30, $b5, $31, $6e, $32, $26, $33, $df, $33, $96, $34, $4d, $35, $04, $36
25ce4     BA 36 6F 37 
25ce8     24 38 D9 38 
25cec     8C 39 40 3A 
25cf0     F2 3A A5 3B | 	byte	$ba, $36, $6f, $37, $24, $38, $d9, $38, $8c, $39, $40, $3a, $f2, $3a, $a5, $3b
25cf4     56 3C 07 3D 
25cf8     B8 3D 68 3E 
25cfc     17 3F C5 3F 
25d00     73 40 21 41 | 	byte	$56, $3c, $07, $3d, $b8, $3d, $68, $3e, $17, $3f, $c5, $3f, $73, $40, $21, $41
25d04     CE 41 7A 42 
25d08     25 43 D0 43 
25d0c     7A 44 24 45 
25d10     CD 45 75 46 | 	byte	$ce, $41, $7a, $42, $25, $43, $d0, $43, $7a, $44, $24, $45, $cd, $45, $75, $46
25d14     1C 47 C3 47 
25d18     69 48 0F 49 
25d1c     B4 49 58 4A 
25d20     FB 4A 9D 4B | 	byte	$1c, $47, $c3, $47, $69, $48, $0f, $49, $b4, $49, $58, $4a, $fb, $4a, $9d, $4b
25d24     3F 4C E0 4C 
25d28     81 4D 20 4E 
25d2c     BF 4E 5D 4F 
25d30     FB 4F 97 50 | 	byte	$3f, $4c, $e0, $4c, $81, $4d, $20, $4e, $bf, $4e, $5d, $4f, $fb, $4f, $97, $50
25d34     33 51 CE 51 
25d38     68 52 02 53 
25d3c     9B 53 32 54 
25d40     C9 54 60 55 | 	byte	$33, $51, $ce, $51, $68, $52, $02, $53, $9b, $53, $32, $54, $c9, $54, $60, $55
25d44     F5 55 8A 56 
25d48     1D 57 B0 57 
25d4c     42 58 D3 58 
25d50     64 59 F3 59 | 	byte	$f5, $55, $8a, $56, $1d, $57, $b0, $57, $42, $58, $d3, $58, $64, $59, $f3, $59
25d54     82 5A 0F 5B 
25d58     9C 5B 28 5C 
25d5c     B3 5C 3E 5D 
25d60     C7 5D 4F 5E | 	byte	$82, $5a, $0f, $5b, $9c, $5b, $28, $5c, $b3, $5c, $3e, $5d, $c7, $5d, $4f, $5e
25d64     D7 5E 5D 5F 
25d68     E3 5F 68 60 
25d6c     EB 60 6E 61 
25d70     F0 61 71 62 | 	byte	$d7, $5e, $5d, $5f, $e3, $5f, $68, $60, $eb, $60, $6e, $61, $f0, $61, $71, $62
25d74     F1 62 70 63 
25d78     EE 63 6C 64 
25d7c     E8 64 63 65 
25d80     DD 65 56 66 | 	byte	$f1, $62, $70, $63, $ee, $63, $6c, $64, $e8, $64, $63, $65, $dd, $65, $56, $66
25d84     CF 66 46 67 
25d88     BC 67 32 68 
25d8c     A6 68 19 69 
25d90     8B 69 FD 69 | 	byte	$cf, $66, $46, $67, $bc, $67, $32, $68, $a6, $68, $19, $69, $8b, $69, $fd, $69
25d94     6D 6A DC 6A 
25d98     4A 6B B7 6B 
25d9c     23 6C 8E 6C 
25da0     F8 6C 61 6D | 	byte	$6d, $6a, $dc, $6a, $4a, $6b, $b7, $6b, $23, $6c, $8e, $6c, $f8, $6c, $61, $6d
25da4     C9 6D 30 6E 
25da8     96 6E FB 6E 
25dac     5E 6F C1 6F 
25db0     22 70 83 70 | 	byte	$c9, $6d, $30, $6e, $96, $6e, $fb, $6e, $5e, $6f, $c1, $6f, $22, $70, $83, $70
25db4     E2 70 40 71 
25db8     9D 71 F9 71 
25dbc     54 72 AE 72 
25dc0     07 73 5E 73 | 	byte	$e2, $70, $40, $71, $9d, $71, $f9, $71, $54, $72, $ae, $72, $07, $73, $5e, $73
25dc4     B5 73 0A 74 
25dc8     5F 74 B2 74 
25dcc     04 75 55 75 
25dd0     A5 75 F3 75 | 	byte	$b5, $73, $0a, $74, $5f, $74, $b2, $74, $04, $75, $55, $75, $a5, $75, $f3, $75
25dd4     41 76 8D 76 
25dd8     D8 76 22 77 
25ddc     6B 77 B3 77 
25de0     FA 77 3F 78 | 	byte	$41, $76, $8d, $76, $d8, $76, $22, $77, $6b, $77, $b3, $77, $fa, $77, $3f, $78
25de4     84 78 C7 78 
25de8     09 79 4A 79 
25dec     89 79 C8 79 
25df0     05 7A 41 7A | 	byte	$84, $78, $c7, $78, $09, $79, $4a, $79, $89, $79, $c8, $79, $05, $7a, $41, $7a
25df4     7C 7A B6 7A 
25df8     EE 7A 26 7B 
25dfc     5C 7B 91 7B 
25e00     C5 7B F8 7B | 	byte	$7c, $7a, $b6, $7a, $ee, $7a, $26, $7b, $5c, $7b, $91, $7b, $c5, $7b, $f8, $7b
25e04     29 7C 59 7C 
25e08     88 7C B6 7C 
25e0c     E3 7C 0E 7D 
25e10     39 7D 62 7D | 	byte	$29, $7c, $59, $7c, $88, $7c, $b6, $7c, $e3, $7c, $0e, $7d, $39, $7d, $62, $7d
25e14     89 7D B0 7D 
25e18     D5 7D FA 7D 
25e1c     1D 7E 3E 7E 
25e20     5F 7E 7E 7E | 	byte	$89, $7d, $b0, $7d, $d5, $7d, $fa, $7d, $1d, $7e, $3e, $7e, $5f, $7e, $7e, $7e
25e24     9C 7E B9 7E 
25e28     D5 7E EF 7E 
25e2c     09 7F 21 7F 
25e30     37 7F 4D 7F | 	byte	$9c, $7e, $b9, $7e, $d5, $7e, $ef, $7e, $09, $7f, $21, $7f, $37, $7f, $4d, $7f
25e34     61 7F 74 7F 
25e38     86 7F 97 7F 
25e3c     A6 7F B4 7F 
25e40     C1 7F CD 7F | 	byte	$61, $7f, $74, $7f, $86, $7f, $97, $7f, $a6, $7f, $b4, $7f, $c1, $7f, $cd, $7f
25e44     D8 7F E1 7F 
25e48     E9 7F F0 7F 
25e4c     F5 7F F9 7F 
25e50     FD 7F FE 7F | 	byte	$d8, $7f, $e1, $7f, $e9, $7f, $f0, $7f, $f5, $7f, $f9, $7f, $fd, $7f, $fe, $7f
25e54     FF 7F FE 7F 
25e58     FD 7F F9 7F 
25e5c     F5 7F F0 7F 
25e60     E9 7F E1 7F | 	byte	$ff, $7f, $fe, $7f, $fd, $7f, $f9, $7f, $f5, $7f, $f0, $7f, $e9, $7f, $e1, $7f
25e64     D8 7F CD 7F 
25e68     C1 7F B4 7F 
25e6c     A6 7F 97 7F 
25e70     86 7F 74 7F | 	byte	$d8, $7f, $cd, $7f, $c1, $7f, $b4, $7f, $a6, $7f, $97, $7f, $86, $7f, $74, $7f
25e74     61 7F 4D 7F 
25e78     37 7F 21 7F 
25e7c     09 7F EF 7E 
25e80     D5 7E B9 7E | 	byte	$61, $7f, $4d, $7f, $37, $7f, $21, $7f, $09, $7f, $ef, $7e, $d5, $7e, $b9, $7e
25e84     9C 7E 7E 7E 
25e88     5F 7E 3E 7E 
25e8c     1D 7E FA 7D 
25e90     D5 7D B0 7D | 	byte	$9c, $7e, $7e, $7e, $5f, $7e, $3e, $7e, $1d, $7e, $fa, $7d, $d5, $7d, $b0, $7d
25e94     89 7D 62 7D 
25e98     39 7D 0E 7D 
25e9c     E3 7C B6 7C 
25ea0     88 7C 59 7C | 	byte	$89, $7d, $62, $7d, $39, $7d, $0e, $7d, $e3, $7c, $b6, $7c, $88, $7c, $59, $7c
25ea4     29 7C F8 7B 
25ea8     C5 7B 91 7B 
25eac     5C 7B 26 7B 
25eb0     EE 7A B6 7A | 	byte	$29, $7c, $f8, $7b, $c5, $7b, $91, $7b, $5c, $7b, $26, $7b, $ee, $7a, $b6, $7a
25eb4     7C 7A 41 7A 
25eb8     05 7A C8 79 
25ebc     89 79 4A 79 
25ec0     09 79 C7 78 | 	byte	$7c, $7a, $41, $7a, $05, $7a, $c8, $79, $89, $79, $4a, $79, $09, $79, $c7, $78
25ec4     84 78 3F 78 
25ec8     FA 77 B3 77 
25ecc     6B 77 22 77 
25ed0     D8 76 8D 76 | 	byte	$84, $78, $3f, $78, $fa, $77, $b3, $77, $6b, $77, $22, $77, $d8, $76, $8d, $76
25ed4     41 76 F3 75 
25ed8     A5 75 55 75 
25edc     04 75 B2 74 
25ee0     5F 74 0A 74 | 	byte	$41, $76, $f3, $75, $a5, $75, $55, $75, $04, $75, $b2, $74, $5f, $74, $0a, $74
25ee4     B5 73 5E 73 
25ee8     07 73 AE 72 
25eec     54 72 F9 71 
25ef0     9D 71 40 71 | 	byte	$b5, $73, $5e, $73, $07, $73, $ae, $72, $54, $72, $f9, $71, $9d, $71, $40, $71
25ef4     E2 70 83 70 
25ef8     22 70 C1 6F 
25efc     5E 6F FB 6E 
25f00     96 6E 30 6E | 	byte	$e2, $70, $83, $70, $22, $70, $c1, $6f, $5e, $6f, $fb, $6e, $96, $6e, $30, $6e
25f04     C9 6D 61 6D 
25f08     F8 6C 8E 6C 
25f0c     23 6C B7 6B 
25f10     4A 6B DC 6A | 	byte	$c9, $6d, $61, $6d, $f8, $6c, $8e, $6c, $23, $6c, $b7, $6b, $4a, $6b, $dc, $6a
25f14     6D 6A FD 69 
25f18     8B 69 19 69 
25f1c     A6 68 32 68 
25f20     BC 67 46 67 | 	byte	$6d, $6a, $fd, $69, $8b, $69, $19, $69, $a6, $68, $32, $68, $bc, $67, $46, $67
25f24     CF 66 56 66 
25f28     DD 65 63 65 
25f2c     E8 64 6C 64 
25f30     EE 63 70 63 | 	byte	$cf, $66, $56, $66, $dd, $65, $63, $65, $e8, $64, $6c, $64, $ee, $63, $70, $63
25f34     F1 62 71 62 
25f38     F0 61 6E 61 
25f3c     EB 60 68 60 
25f40     E3 5F 5D 5F | 	byte	$f1, $62, $71, $62, $f0, $61, $6e, $61, $eb, $60, $68, $60, $e3, $5f, $5d, $5f
25f44     D7 5E 4F 5E 
25f48     C7 5D 3E 5D 
25f4c     B3 5C 28 5C 
25f50     9C 5B 0F 5B | 	byte	$d7, $5e, $4f, $5e, $c7, $5d, $3e, $5d, $b3, $5c, $28, $5c, $9c, $5b, $0f, $5b
25f54     82 5A F3 59 
25f58     64 59 D3 58 
25f5c     42 58 B0 57 
25f60     1D 57 8A 56 | 	byte	$82, $5a, $f3, $59, $64, $59, $d3, $58, $42, $58, $b0, $57, $1d, $57, $8a, $56
25f64     F5 55 60 55 
25f68     C9 54 32 54 
25f6c     9B 53 02 53 
25f70     68 52 CE 51 | 	byte	$f5, $55, $60, $55, $c9, $54, $32, $54, $9b, $53, $02, $53, $68, $52, $ce, $51
25f74     33 51 97 50 
25f78     FB 4F 5D 4F 
25f7c     BF 4E 20 4E 
25f80     81 4D E0 4C | 	byte	$33, $51, $97, $50, $fb, $4f, $5d, $4f, $bf, $4e, $20, $4e, $81, $4d, $e0, $4c
25f84     3F 4C 9D 4B 
25f88     FB 4A 58 4A 
25f8c     B4 49 0F 49 
25f90     69 48 C3 47 | 	byte	$3f, $4c, $9d, $4b, $fb, $4a, $58, $4a, $b4, $49, $0f, $49, $69, $48, $c3, $47
25f94     1C 47 75 46 
25f98     CD 45 24 45 
25f9c     7A 44 D0 43 
25fa0     25 43 7A 42 | 	byte	$1c, $47, $75, $46, $cd, $45, $24, $45, $7a, $44, $d0, $43, $25, $43, $7a, $42
25fa4     CE 41 21 41 
25fa8     73 40 C5 3F 
25fac     17 3F 68 3E 
25fb0     B8 3D 07 3D | 	byte	$ce, $41, $21, $41, $73, $40, $c5, $3f, $17, $3f, $68, $3e, $b8, $3d, $07, $3d
25fb4     56 3C A5 3B 
25fb8     F2 3A 40 3A 
25fbc     8C 39 D9 38 
25fc0     24 38 6F 37 | 	byte	$56, $3c, $a5, $3b, $f2, $3a, $40, $3a, $8c, $39, $d9, $38, $24, $38, $6f, $37
25fc4     BA 36 04 36 
25fc8     4D 35 96 34 
25fcc     DF 33 26 33 
25fd0     6E 32 B5 31 | 	byte	$ba, $36, $04, $36, $4d, $35, $96, $34, $df, $33, $26, $33, $6e, $32, $b5, $31
25fd4     FB 30 41 30 
25fd8     87 2F CC 2E 
25fdc     11 2E 55 2D 
25fe0     99 2C DC 2B | 	byte	$fb, $30, $41, $30, $87, $2f, $cc, $2e, $11, $2e, $55, $2d, $99, $2c, $dc, $2b
25fe4     1F 2B 61 2A 
25fe8     A3 29 E5 28 
25fec     26 28 67 27 
25ff0     A8 26 E8 25 | 	byte	$1f, $2b, $61, $2a, $a3, $29, $e5, $28, $26, $28, $67, $27, $a8, $26, $e8, $25
25ff4     28 25 67 24 
25ff8     A6 23 E5 22 
25ffc     23 22 61 21 
26000     9F 20 DD 1F | 	byte	$28, $25, $67, $24, $a6, $23, $e5, $22, $23, $22, $61, $21, $9f, $20, $dd, $1f
26004     1A 1F 57 1E 
26008     93 1D CF 1C 
2600c     0B 1C 47 1B 
26010     82 1A BE 19 | 	byte	$1a, $1f, $57, $1e, $93, $1d, $cf, $1c, $0b, $1c, $47, $1b, $82, $1a, $be, $19
26014     F9 18 33 18 
26018     6E 17 A8 16 
2601c     E2 15 1C 15 
26020     55 14 8F 13 | 	byte	$f9, $18, $33, $18, $6e, $17, $a8, $16, $e2, $15, $1c, $15, $55, $14, $8f, $13
26024     C8 12 01 12 
26028     3A 11 72 10 
2602c     AB 0F E3 0E 
26030     1C 0E 54 0D | 	byte	$c8, $12, $01, $12, $3a, $11, $72, $10, $ab, $0f, $e3, $0e, $1c, $0e, $54, $0d
26034     8C 0C C4 0B 
26038     FB 0A 33 0A 
2603c     6A 09 A2 08 
26040     D9 07 11 07 | 	byte	$8c, $0c, $c4, $0b, $fb, $0a, $33, $0a, $6a, $09, $a2, $08, $d9, $07, $11, $07
26044     48 06 7F 05 
26048     B6 04 ED 03 
2604c     24 03 5B 02 
26050     92 01 C9 00 | 	byte	$48, $06, $7f, $05, $b6, $04, $ed, $03, $24, $03, $5b, $02, $92, $01, $c9, $00
26054     00 00 37 FF 
26058     6E FE A5 FD 
2605c     DC FC 13 FC 
26060     4A FB 81 FA | 	byte	$00, $00, $37, $ff, $6e, $fe, $a5, $fd, $dc, $fc, $13, $fc, $4a, $fb, $81, $fa
26064     B8 F9 EF F8 
26068     27 F8 5E F7 
2606c     96 F6 CD F5 
26070     05 F5 3C F4 | 	byte	$b8, $f9, $ef, $f8, $27, $f8, $5e, $f7, $96, $f6, $cd, $f5, $05, $f5, $3c, $f4
26074     74 F3 AC F2 
26078     E4 F1 1D F1 
2607c     55 F0 8E EF 
26080     C6 EE FF ED | 	byte	$74, $f3, $ac, $f2, $e4, $f1, $1d, $f1, $55, $f0, $8e, $ef, $c6, $ee, $ff, $ed
26084     38 ED 71 EC 
26088     AB EB E4 EA 
2608c     1E EA 58 E9 
26090     92 E8 CD E7 | 	byte	$38, $ed, $71, $ec, $ab, $eb, $e4, $ea, $1e, $ea, $58, $e9, $92, $e8, $cd, $e7
26094     07 E7 42 E6 
26098     7E E5 B9 E4 
2609c     F5 E3 31 E3 
260a0     6D E2 A9 E1 | 	byte	$07, $e7, $42, $e6, $7e, $e5, $b9, $e4, $f5, $e3, $31, $e3, $6d, $e2, $a9, $e1
260a4     E6 E0 23 E0 
260a8     61 DF 9F DE 
260ac     DD DD 1B DD 
260b0     5A DC 99 DB | 	byte	$e6, $e0, $23, $e0, $61, $df, $9f, $de, $dd, $dd, $1b, $dd, $5a, $dc, $99, $db
260b4     D8 DA 18 DA 
260b8     58 D9 99 D8 
260bc     DA D7 1B D7 
260c0     5D D6 9F D5 | 	byte	$d8, $da, $18, $da, $58, $d9, $99, $d8, $da, $d7, $1b, $d7, $5d, $d6, $9f, $d5
260c4     E1 D4 24 D4 
260c8     67 D3 AB D2 
260cc     EF D1 34 D1 
260d0     79 D0 BF CF | 	byte	$e1, $d4, $24, $d4, $67, $d3, $ab, $d2, $ef, $d1, $34, $d1, $79, $d0, $bf, $cf
260d4     05 CF 4B CE 
260d8     92 CD DA CC 
260dc     21 CC 6A CB 
260e0     B3 CA FC C9 | 	byte	$05, $cf, $4b, $ce, $92, $cd, $da, $cc, $21, $cc, $6a, $cb, $b3, $ca, $fc, $c9
260e4     46 C9 91 C8 
260e8     DC C7 27 C7 
260ec     74 C6 C0 C5 
260f0     0E C5 5B C4 | 	byte	$46, $c9, $91, $c8, $dc, $c7, $27, $c7, $74, $c6, $c0, $c5, $0e, $c5, $5b, $c4
260f4     AA C3 F9 C2 
260f8     48 C2 98 C1 
260fc     E9 C0 3B C0 
26100     8D BF DF BE | 	byte	$aa, $c3, $f9, $c2, $48, $c2, $98, $c1, $e9, $c0, $3b, $c0, $8d, $bf, $df, $be
26104     32 BE 86 BD 
26108     DB BC 30 BC 
2610c     86 BB DC BA 
26110     33 BA 8B B9 | 	byte	$32, $be, $86, $bd, $db, $bc, $30, $bc, $86, $bb, $dc, $ba, $33, $ba, $8b, $b9
26114     E4 B8 3D B8 
26118     97 B7 F1 B6 
2611c     4C B6 A8 B5 
26120     05 B5 63 B4 | 	byte	$e4, $b8, $3d, $b8, $97, $b7, $f1, $b6, $4c, $b6, $a8, $b5, $05, $b5, $63, $b4
26124     C1 B3 20 B3 
26128     7F B2 E0 B1 
2612c     41 B1 A3 B0 
26130     05 B0 69 AF | 	byte	$c1, $b3, $20, $b3, $7f, $b2, $e0, $b1, $41, $b1, $a3, $b0, $05, $b0, $69, $af
26134     CD AE 32 AE 
26138     98 AD FE AC 
2613c     65 AC CE AB 
26140     37 AB A0 AA | 	byte	$cd, $ae, $32, $ae, $98, $ad, $fe, $ac, $65, $ac, $ce, $ab, $37, $ab, $a0, $aa
26144     0B AA 76 A9 
26148     E3 A8 50 A8 
2614c     BE A7 2D A7 
26150     9C A6 0D A6 | 	byte	$0b, $aa, $76, $a9, $e3, $a8, $50, $a8, $be, $a7, $2d, $a7, $9c, $a6, $0d, $a6
26154     7E A5 F1 A4 
26158     64 A4 D8 A3 
2615c     4D A3 C2 A2 
26160     39 A2 B1 A1 | 	byte	$7e, $a5, $f1, $a4, $64, $a4, $d8, $a3, $4d, $a3, $c2, $a2, $39, $a2, $b1, $a1
26164     29 A1 A3 A0 
26168     1D A0 98 9F 
2616c     15 9F 92 9E 
26170     10 9E 8F 9D | 	byte	$29, $a1, $a3, $a0, $1d, $a0, $98, $9f, $15, $9f, $92, $9e, $10, $9e, $8f, $9d
26174     0F 9D 90 9C 
26178     12 9C 94 9B 
2617c     18 9B 9D 9A 
26180     23 9A AA 99 | 	byte	$0f, $9d, $90, $9c, $12, $9c, $94, $9b, $18, $9b, $9d, $9a, $23, $9a, $aa, $99
26184     31 99 BA 98 
26188     44 98 CE 97 
2618c     5A 97 E7 96 
26190     75 96 03 96 | 	byte	$31, $99, $ba, $98, $44, $98, $ce, $97, $5a, $97, $e7, $96, $75, $96, $03, $96
26194     93 95 24 95 
26198     B6 94 49 94 
2619c     DD 93 72 93 
261a0     08 93 9F 92 | 	byte	$93, $95, $24, $95, $b6, $94, $49, $94, $dd, $93, $72, $93, $08, $93, $9f, $92
261a4     37 92 D0 91 
261a8     6A 91 05 91 
261ac     A2 90 3F 90 
261b0     DE 8F 7D 8F | 	byte	$37, $92, $d0, $91, $6a, $91, $05, $91, $a2, $90, $3f, $90, $de, $8f, $7d, $8f
261b4     1E 8F C0 8E 
261b8     63 8E 07 8E 
261bc     AC 8D 52 8D 
261c0     F9 8C A2 8C | 	byte	$1e, $8f, $c0, $8e, $63, $8e, $07, $8e, $ac, $8d, $52, $8d, $f9, $8c, $a2, $8c
261c4     4B 8C F6 8B 
261c8     A1 8B 4E 8B 
261cc     FC 8A AB 8A 
261d0     5B 8A 0D 8A | 	byte	$4b, $8c, $f6, $8b, $a1, $8b, $4e, $8b, $fc, $8a, $ab, $8a, $5b, $8a, $0d, $8a
261d4     BF 89 73 89 
261d8     28 89 DE 88 
261dc     95 88 4D 88 
261e0     06 88 C1 87 | 	byte	$bf, $89, $73, $89, $28, $89, $de, $88, $95, $88, $4d, $88, $06, $88, $c1, $87
261e4     7C 87 39 87 
261e8     F7 86 B6 86 
261ec     77 86 38 86 
261f0     FB 85 BF 85 | 	byte	$7c, $87, $39, $87, $f7, $86, $b6, $86, $77, $86, $38, $86, $fb, $85, $bf, $85
261f4     84 85 4A 85 
261f8     12 85 DA 84 
261fc     A4 84 6F 84 
26200     3B 84 08 84 | 	byte	$84, $85, $4a, $85, $12, $85, $da, $84, $a4, $84, $6f, $84, $3b, $84, $08, $84
26204     D7 83 A7 83 
26208     78 83 4A 83 
2620c     1D 83 F2 82 
26210     C7 82 9E 82 | 	byte	$d7, $83, $a7, $83, $78, $83, $4a, $83, $1d, $83, $f2, $82, $c7, $82, $9e, $82
26214     77 82 50 82 
26218     2B 82 06 82 
2621c     E3 81 C2 81 
26220     A1 81 82 81 | 	byte	$77, $82, $50, $82, $2b, $82, $06, $82, $e3, $81, $c2, $81, $a1, $81, $82, $81
26224     64 81 47 81 
26228     2B 81 11 81 
2622c     F7 80 DF 80 
26230     C9 80 B3 80 | 	byte	$64, $81, $47, $81, $2b, $81, $11, $81, $f7, $80, $df, $80, $c9, $80, $b3, $80
26234     9F 80 8C 80 
26238     7A 80 69 80 
2623c     5A 80 4C 80 
26240     3F 80 33 80 | 	byte	$9f, $80, $8c, $80, $7a, $80, $69, $80, $5a, $80, $4c, $80, $3f, $80, $33, $80
26244     28 80 1F 80 
26248     17 80 10 80 
2624c     0B 80 07 80 
26250     03 80 02 80 | 	byte	$28, $80, $1f, $80, $17, $80, $10, $80, $0b, $80, $07, $80, $03, $80, $02, $80
26254     01 80 02 80 
26258     03 80 07 80 
2625c     0B 80 10 80 
26260     17 80 1F 80 | 	byte	$01, $80, $02, $80, $03, $80, $07, $80, $0b, $80, $10, $80, $17, $80, $1f, $80
26264     28 80 33 80 
26268     3F 80 4C 80 
2626c     5A 80 69 80 
26270     7A 80 8C 80 | 	byte	$28, $80, $33, $80, $3f, $80, $4c, $80, $5a, $80, $69, $80, $7a, $80, $8c, $80
26274     9F 80 B3 80 
26278     C9 80 DF 80 
2627c     F7 80 11 81 
26280     2B 81 47 81 | 	byte	$9f, $80, $b3, $80, $c9, $80, $df, $80, $f7, $80, $11, $81, $2b, $81, $47, $81
26284     64 81 82 81 
26288     A1 81 C2 81 
2628c     E3 81 06 82 
26290     2B 82 50 82 | 	byte	$64, $81, $82, $81, $a1, $81, $c2, $81, $e3, $81, $06, $82, $2b, $82, $50, $82
26294     77 82 9E 82 
26298     C7 82 F2 82 
2629c     1D 83 4A 83 
262a0     78 83 A7 83 | 	byte	$77, $82, $9e, $82, $c7, $82, $f2, $82, $1d, $83, $4a, $83, $78, $83, $a7, $83
262a4     D7 83 08 84 
262a8     3B 84 6F 84 
262ac     A4 84 DA 84 
262b0     12 85 4A 85 | 	byte	$d7, $83, $08, $84, $3b, $84, $6f, $84, $a4, $84, $da, $84, $12, $85, $4a, $85
262b4     84 85 BF 85 
262b8     FB 85 38 86 
262bc     77 86 B6 86 
262c0     F7 86 39 87 | 	byte	$84, $85, $bf, $85, $fb, $85, $38, $86, $77, $86, $b6, $86, $f7, $86, $39, $87
262c4     7C 87 C1 87 
262c8     06 88 4D 88 
262cc     95 88 DE 88 
262d0     28 89 73 89 | 	byte	$7c, $87, $c1, $87, $06, $88, $4d, $88, $95, $88, $de, $88, $28, $89, $73, $89
262d4     BF 89 0D 8A 
262d8     5B 8A AB 8A 
262dc     FC 8A 4E 8B 
262e0     A1 8B F6 8B | 	byte	$bf, $89, $0d, $8a, $5b, $8a, $ab, $8a, $fc, $8a, $4e, $8b, $a1, $8b, $f6, $8b
262e4     4B 8C A2 8C 
262e8     F9 8C 52 8D 
262ec     AC 8D 07 8E 
262f0     63 8E C0 8E | 	byte	$4b, $8c, $a2, $8c, $f9, $8c, $52, $8d, $ac, $8d, $07, $8e, $63, $8e, $c0, $8e
262f4     1E 8F 7D 8F 
262f8     DE 8F 3F 90 
262fc     A2 90 05 91 
26300     6A 91 D0 91 | 	byte	$1e, $8f, $7d, $8f, $de, $8f, $3f, $90, $a2, $90, $05, $91, $6a, $91, $d0, $91
26304     37 92 9F 92 
26308     08 93 72 93 
2630c     DD 93 49 94 
26310     B6 94 24 95 | 	byte	$37, $92, $9f, $92, $08, $93, $72, $93, $dd, $93, $49, $94, $b6, $94, $24, $95
26314     93 95 03 96 
26318     75 96 E7 96 
2631c     5A 97 CE 97 
26320     44 98 BA 98 | 	byte	$93, $95, $03, $96, $75, $96, $e7, $96, $5a, $97, $ce, $97, $44, $98, $ba, $98
26324     31 99 AA 99 
26328     23 9A 9D 9A 
2632c     18 9B 94 9B 
26330     12 9C 90 9C | 	byte	$31, $99, $aa, $99, $23, $9a, $9d, $9a, $18, $9b, $94, $9b, $12, $9c, $90, $9c
26334     0F 9D 8F 9D 
26338     10 9E 92 9E 
2633c     15 9F 98 9F 
26340     1D A0 A3 A0 | 	byte	$0f, $9d, $8f, $9d, $10, $9e, $92, $9e, $15, $9f, $98, $9f, $1d, $a0, $a3, $a0
26344     29 A1 B1 A1 
26348     39 A2 C2 A2 
2634c     4D A3 D8 A3 
26350     64 A4 F1 A4 | 	byte	$29, $a1, $b1, $a1, $39, $a2, $c2, $a2, $4d, $a3, $d8, $a3, $64, $a4, $f1, $a4
26354     7E A5 0D A6 
26358     9C A6 2D A7 
2635c     BE A7 50 A8 
26360     E3 A8 76 A9 | 	byte	$7e, $a5, $0d, $a6, $9c, $a6, $2d, $a7, $be, $a7, $50, $a8, $e3, $a8, $76, $a9
26364     0B AA A0 AA 
26368     37 AB CE AB 
2636c     65 AC FE AC 
26370     98 AD 32 AE | 	byte	$0b, $aa, $a0, $aa, $37, $ab, $ce, $ab, $65, $ac, $fe, $ac, $98, $ad, $32, $ae
26374     CD AE 69 AF 
26378     05 B0 A3 B0 
2637c     41 B1 E0 B1 
26380     7F B2 20 B3 | 	byte	$cd, $ae, $69, $af, $05, $b0, $a3, $b0, $41, $b1, $e0, $b1, $7f, $b2, $20, $b3
26384     C1 B3 63 B4 
26388     05 B5 A8 B5 
2638c     4C B6 F1 B6 
26390     97 B7 3D B8 | 	byte	$c1, $b3, $63, $b4, $05, $b5, $a8, $b5, $4c, $b6, $f1, $b6, $97, $b7, $3d, $b8
26394     E4 B8 8B B9 
26398     33 BA DC BA 
2639c     86 BB 30 BC 
263a0     DB BC 86 BD | 	byte	$e4, $b8, $8b, $b9, $33, $ba, $dc, $ba, $86, $bb, $30, $bc, $db, $bc, $86, $bd
263a4     32 BE DF BE 
263a8     8D BF 3B C0 
263ac     E9 C0 98 C1 
263b0     48 C2 F9 C2 | 	byte	$32, $be, $df, $be, $8d, $bf, $3b, $c0, $e9, $c0, $98, $c1, $48, $c2, $f9, $c2
263b4     AA C3 5B C4 
263b8     0E C5 C0 C5 
263bc     74 C6 27 C7 
263c0     DC C7 91 C8 | 	byte	$aa, $c3, $5b, $c4, $0e, $c5, $c0, $c5, $74, $c6, $27, $c7, $dc, $c7, $91, $c8
263c4     46 C9 FC C9 
263c8     B3 CA 6A CB 
263cc     21 CC DA CC 
263d0     92 CD 4B CE | 	byte	$46, $c9, $fc, $c9, $b3, $ca, $6a, $cb, $21, $cc, $da, $cc, $92, $cd, $4b, $ce
263d4     05 CF BF CF 
263d8     79 D0 34 D1 
263dc     EF D1 AB D2 
263e0     67 D3 24 D4 | 	byte	$05, $cf, $bf, $cf, $79, $d0, $34, $d1, $ef, $d1, $ab, $d2, $67, $d3, $24, $d4
263e4     E1 D4 9F D5 
263e8     5D D6 1B D7 
263ec     DA D7 99 D8 
263f0     58 D9 18 DA | 	byte	$e1, $d4, $9f, $d5, $5d, $d6, $1b, $d7, $da, $d7, $99, $d8, $58, $d9, $18, $da
263f4     D8 DA 99 DB 
263f8     5A DC 1B DD 
263fc     DD DD 9F DE 
26400     61 DF 23 E0 | 	byte	$d8, $da, $99, $db, $5a, $dc, $1b, $dd, $dd, $dd, $9f, $de, $61, $df, $23, $e0
26404     E6 E0 A9 E1 
26408     6D E2 31 E3 
2640c     F5 E3 B9 E4 
26410     7E E5 42 E6 | 	byte	$e6, $e0, $a9, $e1, $6d, $e2, $31, $e3, $f5, $e3, $b9, $e4, $7e, $e5, $42, $e6
26414     07 E7 CD E7 
26418     92 E8 58 E9 
2641c     1E EA E4 EA 
26420     AB EB 71 EC | 	byte	$07, $e7, $cd, $e7, $92, $e8, $58, $e9, $1e, $ea, $e4, $ea, $ab, $eb, $71, $ec
26424     38 ED FF ED 
26428     C6 EE 8E EF 
2642c     55 F0 1D F1 
26430     E4 F1 AC F2 | 	byte	$38, $ed, $ff, $ed, $c6, $ee, $8e, $ef, $55, $f0, $1d, $f1, $e4, $f1, $ac, $f2
26434     74 F3 3C F4 
26438     05 F5 CD F5 
2643c     96 F6 5E F7 
26440     27 F8 EF F8 | 	byte	$74, $f3, $3c, $f4, $05, $f5, $cd, $f5, $96, $f6, $5e, $f7, $27, $f8, $ef, $f8
26444     B8 F9 81 FA 
26448     4A FB 13 FC 
2644c     DC FC A5 FD 
26450     6E FE 37 FF | 	byte	$b8, $f9, $81, $fa, $4a, $fb, $13, $fc, $dc, $fc, $a5, $fd, $6e, $fe, $37, $ff
26454                 | 	alignl
26454                 | __system__dat_
26454     00 00 00 00 
26458     00 00 00 00 | 	byte	$00[8]
2645c     03 00 00 00 
26460     00 00 00 00 
26464     00 00 00 00 
26468     00 00 00 00 | 	byte	$03, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2646c     00 00 00 00 
26470     00 00 00 00 
26474     00 00 00 00 | 	byte	$00[12]
26478     05 00 00 00 
2647c     00 00 00 00 
26480     00 00 00 00 
26484     00 00 00 00 | 	byte	$05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
26488     50 66 02 00 | 	long	@@@__system__dat_ + 508
2648c     58 66 02 00 | 	long	@@@__system__dat_ + 516
26490     00 00 00 00 | 	byte	$00, $00, $00, $00
26494     60 66 02 00 | 	long	@@@__system__dat_ + 524
26498     68 66 02 00 | 	long	@@@__system__dat_ + 532
2649c     00 00 00 00 
264a0     00 00 00 00 | 	byte	$00[8]
264a4     01 00 00 00 
264a8     06 00 00 00 
264ac     00 00 00 00 
264b0     00 00 00 00 | 	byte	$01, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
264b4     00 00 00 00 | 	byte	$00, $00, $00, $00
264b8     70 66 02 00 | 	long	@@@__system__dat_ + 540
264bc     78 66 02 00 | 	long	@@@__system__dat_ + 548
264c0     00 00 00 00 | 	byte	$00, $00, $00, $00
264c4     80 66 02 00 | 	long	@@@__system__dat_ + 556
264c8     88 66 02 00 | 	long	@@@__system__dat_ + 564
264cc     00 00 00 00 
264d0     00 00 00 00 | 	byte	$00[8]
264d4     01 00 00 00 
264d8     06 00 00 00 
264dc     00 00 00 00 
264e0     00 00 00 00 | 	byte	$01, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
264e4     00 00 00 00 | 	byte	$00, $00, $00, $00
264e8     90 66 02 00 | 	long	@@@__system__dat_ + 572
264ec     98 66 02 00 | 	long	@@@__system__dat_ + 580
264f0     00 00 00 00 | 	byte	$00, $00, $00, $00
264f4     A0 66 02 00 | 	long	@@@__system__dat_ + 588
264f8     A8 66 02 00 | 	long	@@@__system__dat_ + 596
264fc     00 00 00 00 
      ...             
2664c     00 00 00 00 
26650     00 00 00 00 | 	byte	$00[344]
26654     5C 4F 00 00 | 	long	@@@__system___tx
26658     00 00 00 00 | 	byte	$00, $00, $00, $00
2665c     A4 4F 00 00 | 	long	@@@__system___rx
26660     00 00 00 00 | 	byte	$00, $00, $00, $00
26664     6C 61 00 00 | 	long	@@@__system___rxtxioctl_0174
26668     00 00 00 00 | 	byte	$00, $00, $00, $00
2666c     E4 61 00 00 | 	long	@@@__system____dummy_flush_0175
26670     00 00 00 00 | 	byte	$00, $00, $00, $00
26674     5C 4F 00 00 | 	long	@@@__system___tx
26678     00 00 00 00 | 	byte	$00, $00, $00, $00
2667c     A4 4F 00 00 | 	long	@@@__system___rx
26680     00 00 00 00 | 	byte	$00, $00, $00, $00
26684     6C 61 00 00 | 	long	@@@__system___rxtxioctl_0174
26688     00 00 00 00 | 	byte	$00, $00, $00, $00
2668c     E4 61 00 00 | 	long	@@@__system____dummy_flush_0175
26690     00 00 00 00 | 	byte	$00, $00, $00, $00
26694     5C 4F 00 00 | 	long	@@@__system___tx
26698     00 00 00 00 | 	byte	$00, $00, $00, $00
2669c     A4 4F 00 00 | 	long	@@@__system___rx
266a0     00 00 00 00 | 	byte	$00, $00, $00, $00
266a4     6C 61 00 00 | 	long	@@@__system___rxtxioctl_0174
266a8     00 00 00 00 | 	byte	$00, $00, $00, $00
266ac     E4 61 00 00 | 	long	@@@__system____dummy_flush_0175
266b0     00 00 00 00 | 	byte	$00, $00, $00, $00
266b4                 | __heap_base
266b4     00 00 00 00 
      ...             
276b4     00 00 00 00 
276b8     00 00 00 00 | 	long	0[1026]
276bc                 | objmem
276bc     00 00 00 00 | 	long	0[1]
276c0 117             | 	org	COG_BSS_START
276c0 117             | _var01
276c0 117             | 	res	1
276c0 118             | _var02
276c0 118             | 	res	1
276c0 119             | _var03
276c0 119             | 	res	1
276c0 11a             | _var04
276c0 11a             | 	res	1
276c0 11b             | _var05
276c0 11b             | 	res	1
276c0 11c             | _var06
276c0 11c             | 	res	1
276c0 11d             | _var07
276c0 11d             | 	res	1
276c0 11e             | _var08
276c0 11e             | 	res	1
276c0 11f             | _var09
276c0 11f             | 	res	1
276c0 120             | _var10
276c0 120             | 	res	1
276c0 121             | _var11
276c0 121             | 	res	1
276c0 122             | _var12
276c0 122             | 	res	1
276c0 123             | _var13
276c0 123             | 	res	1
276c0 124             | _var14
276c0 124             | 	res	1
276c0 125             | _var15
276c0 125             | 	res	1
276c0 126             | _var16
276c0 126             | 	res	1
276c0 127             | _var17
276c0 127             | 	res	1
276c0 128             | _var18
276c0 128             | 	res	1
276c0 129             | _var19
276c0 129             | 	res	1
276c0 12a             | _var20
276c0 12a             | 	res	1
276c0 12b             | _var21
276c0 12b             | 	res	1
276c0 12c             | _var22
276c0 12c             | 	res	1
276c0 12d             | arg01
276c0 12d             | 	res	1
276c0 12e             | arg02
276c0 12e             | 	res	1
276c0 12f             | arg03
276c0 12f             | 	res	1
276c0 130             | arg04
276c0 130             | 	res	1
276c0 131             | arg05
276c0 131             | 	res	1
276c0 132             | arg06
276c0 132             | 	res	1
276c0 133             | arg07
276c0 133             | 	res	1
276c0 134             | local01
276c0 134             | 	res	1
276c0 135             | local02
276c0 135             | 	res	1
276c0 136             | local03
276c0 136             | 	res	1
276c0 137             | local04
276c0 137             | 	res	1
276c0 138             | local05
276c0 138             | 	res	1
276c0 139             | local06
276c0 139             | 	res	1
276c0 13a             | local07
276c0 13a             | 	res	1
276c0 13b             | local08
276c0 13b             | 	res	1
276c0 13c             | local09
276c0 13c             | 	res	1
276c0 13d             | local10
276c0 13d             | 	res	1
276c0 13e             | local11
276c0 13e             | 	res	1
276c0 13f             | local12
276c0 13f             | 	res	1
276c0 140             | local13
276c0 140             | 	res	1
276c0 141             | local14
276c0 141             | 	res	1
276c0 142             | local15
276c0 142             | 	res	1
276c0 143             | local16
276c0 143             | 	res	1
276c0 144             | local17
276c0 144             | 	res	1
276c0 145             | local18
276c0 145             | 	res	1
276c0 146             | local19
276c0 146             | 	res	1
276c0 147             | local20
276c0 147             | 	res	1
276c0 148             | local21
276c0 148             | 	res	1
276c0 149             | local22
276c0 149             | 	res	1
276c0 14a             | local23
276c0 14a             | 	res	1
276c0 14b             | local24
276c0 14b             | 	res	1
276c0 14c             | local25
276c0 14c             | 	res	1
276c0 14d             | local26
276c0 14d             | 	res	1
276c0 14e             | local27
276c0 14e             | 	res	1
276c0 14f             | local28
276c0 14f             | 	res	1
276c0 150             | local29
276c0 150             | 	res	1
276c0 151             | local30
276c0 151             | 	res	1
276c0 152             | local31
276c0 152             | 	res	1
276c0 153             | local32
276c0 153             | 	res	1
276c0 154             | local33
276c0 154             | 	res	1
276c0 155             | local34
276c0 155             | 	res	1
276c0 156             | local35
276c0 156             | 	res	1
276c0 157             | local36
276c0 157             | 	res	1
276c0 158             | local37
276c0 158             | 	res	1
276c0 159             | local38
276c0 159             | 	res	1
276c0 15a             | local39
276c0 15a             | 	res	1
276c0 15b             | local40
276c0 15b             | 	res	1
276c0 15c             | local41
276c0 15c             | 	res	1
276c0 15d             | local42
276c0 15d             | 	res	1
276c0 15e             | local43
276c0 15e             | 	res	1
276c0 15f             | local44
276c0 15f             | 	res	1
276c0 160             | local45
276c0 160             | 	res	1
276c0 161             | local46
276c0 161             | 	res	1
276c0 162             | local47
276c0 162             | 	res	1
276c0 163             | local48
276c0 163             | 	res	1
276c0 164             | local49
276c0 164             | 	res	1
276c0 165             | local50
276c0 165             | 	res	1
276c0 166             | local51
276c0 166             | 	res	1
276c0 167             | local52
276c0 167             | 	res	1
276c0 168             | local53
276c0 168             | 	res	1
276c0 169             | local54
276c0 169             | 	res	1
276c0 16a             | local55
276c0 16a             | 	res	1
276c0 16b             | local56
276c0 16b             | 	res	1
276c0 16c             | local57
276c0 16c             | 	res	1
276c0 16d             | local58
276c0 16d             | 	res	1
276c0 16e             | local59
276c0 16e             | 	res	1
276c0 16f             | local60
276c0 16f             | 	res	1
276c0 170             | local61
276c0 170             | 	res	1
276c0 171             | local62
276c0 171             | 	res	1
276c0 172             | local63
276c0 172             | 	res	1
276c0 173             | local64
276c0 173             | 	res	1
276c0 174             | local65
276c0 174             | 	res	1
276c0 175             | local66
276c0 175             | 	res	1
276c0 176             | local67
276c0 176             | 	res	1
276c0 177             | local68
276c0 177             | 	res	1
276c0 178             | local69
276c0 178             | 	res	1
276c0 179             | local70
276c0 179             | 	res	1
276c0 17a             | local71
276c0 17a             | 	res	1
276c0 17b             | local72
276c0 17b             | 	res	1
276c0 17c             | local73
276c0 17c             | 	res	1
276c0 17d             | local74
276c0 17d             | 	res	1
276c0 17e             | local75
276c0 17e             | 	res	1
276c0 17f             | local76
276c0 17f             | 	res	1
276c0 180             | local77
276c0 180             | 	res	1
276c0 181             | local78
276c0 181             | 	res	1
276c0 182             | local79
276c0 182             | 	res	1
276c0 183             | local80
276c0 183             | 	res	1
276c0 184             | muldiva_
276c0 184             | 	res	1
276c0 185             | muldivb_
276c0 185             | 	res	1
276c0 186             | 	fit	480
276c0 186             | 
